
Timer0_delay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000834  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000007  00800060  00800060  000008a8  2**0
                  ALLOC
  2 .stab         00000bac  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000945  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a7 36       	cpi	r26, 0x67	; 103
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 4c 03 	call	0x698	; 0x698 <main>
  74:	0c 94 18 04 	jmp	0x830	; 0x830 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <Dio_vidSetPinDir>:
#include"../Lib/Std_types.h"
#include"../Lib/Bit_math.h"
#include"Dio_int.h"
#include<avr/io.h>

void Dio_vidSetPinDir(u8 Pin, u8 Dir){
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	00 d0       	rcall	.+0      	; 0x82 <Dio_vidSetPinDir+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <Dio_vidSetPinDir+0x8>
  84:	00 d0       	rcall	.+0      	; 0x86 <Dio_vidSetPinDir+0xa>
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	8b 83       	std	Y+3, r24	; 0x03
  8c:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
  8e:	8b 81       	ldd	r24, Y+3	; 0x03
  90:	86 95       	lsr	r24
  92:	86 95       	lsr	r24
  94:	86 95       	lsr	r24
  96:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
  98:	8b 81       	ldd	r24, Y+3	; 0x03
  9a:	87 70       	andi	r24, 0x07	; 7
  9c:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
  9e:	8a 81       	ldd	r24, Y+2	; 0x02
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3e 83       	std	Y+6, r19	; 0x06
  a6:	2d 83       	std	Y+5, r18	; 0x05
  a8:	8d 81       	ldd	r24, Y+5	; 0x05
  aa:	9e 81       	ldd	r25, Y+6	; 0x06
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	09 f4       	brne	.+2      	; 0xb4 <Dio_vidSetPinDir+0x38>
  b2:	43 c0       	rjmp	.+134    	; 0x13a <Dio_vidSetPinDir+0xbe>
  b4:	2d 81       	ldd	r18, Y+5	; 0x05
  b6:	3e 81       	ldd	r19, Y+6	; 0x06
  b8:	22 30       	cpi	r18, 0x02	; 2
  ba:	31 05       	cpc	r19, r1
  bc:	2c f4       	brge	.+10     	; 0xc8 <Dio_vidSetPinDir+0x4c>
  be:	8d 81       	ldd	r24, Y+5	; 0x05
  c0:	9e 81       	ldd	r25, Y+6	; 0x06
  c2:	00 97       	sbiw	r24, 0x00	; 0
  c4:	71 f0       	breq	.+28     	; 0xe2 <Dio_vidSetPinDir+0x66>
  c6:	bc c0       	rjmp	.+376    	; 0x240 <Dio_vidSetPinDir+0x1c4>
  c8:	2d 81       	ldd	r18, Y+5	; 0x05
  ca:	3e 81       	ldd	r19, Y+6	; 0x06
  cc:	22 30       	cpi	r18, 0x02	; 2
  ce:	31 05       	cpc	r19, r1
  d0:	09 f4       	brne	.+2      	; 0xd4 <Dio_vidSetPinDir+0x58>
  d2:	5f c0       	rjmp	.+190    	; 0x192 <Dio_vidSetPinDir+0x116>
  d4:	8d 81       	ldd	r24, Y+5	; 0x05
  d6:	9e 81       	ldd	r25, Y+6	; 0x06
  d8:	83 30       	cpi	r24, 0x03	; 3
  da:	91 05       	cpc	r25, r1
  dc:	09 f4       	brne	.+2      	; 0xe0 <Dio_vidSetPinDir+0x64>
  de:	85 c0       	rjmp	.+266    	; 0x1ea <Dio_vidSetPinDir+0x16e>
  e0:	af c0       	rjmp	.+350    	; 0x240 <Dio_vidSetPinDir+0x1c4>
	case 0:
		if(Dir==1){
  e2:	8c 81       	ldd	r24, Y+4	; 0x04
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	a1 f4       	brne	.+40     	; 0x110 <Dio_vidSetPinDir+0x94>
			SET_BIT(DDRA,PinLoc);
  e8:	aa e3       	ldi	r26, 0x3A	; 58
  ea:	b0 e0       	ldi	r27, 0x00	; 0
  ec:	ea e3       	ldi	r30, 0x3A	; 58
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	48 2f       	mov	r20, r24
  f4:	89 81       	ldd	r24, Y+1	; 0x01
  f6:	28 2f       	mov	r18, r24
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 2e       	mov	r0, r18
 100:	02 c0       	rjmp	.+4      	; 0x106 <Dio_vidSetPinDir+0x8a>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	0a 94       	dec	r0
 108:	e2 f7       	brpl	.-8      	; 0x102 <Dio_vidSetPinDir+0x86>
 10a:	84 2b       	or	r24, r20
 10c:	8c 93       	st	X, r24
 10e:	98 c0       	rjmp	.+304    	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRA,PinLoc);
 110:	aa e3       	ldi	r26, 0x3A	; 58
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	ea e3       	ldi	r30, 0x3A	; 58
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	48 2f       	mov	r20, r24
 11c:	89 81       	ldd	r24, Y+1	; 0x01
 11e:	28 2f       	mov	r18, r24
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 2e       	mov	r0, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <Dio_vidSetPinDir+0xb2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <Dio_vidSetPinDir+0xae>
 132:	80 95       	com	r24
 134:	84 23       	and	r24, r20
 136:	8c 93       	st	X, r24
 138:	83 c0       	rjmp	.+262    	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 1:
		if(Dir==1){
 13a:	8c 81       	ldd	r24, Y+4	; 0x04
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	a1 f4       	brne	.+40     	; 0x168 <Dio_vidSetPinDir+0xec>
			SET_BIT(DDRB,PinLoc);
 140:	a7 e3       	ldi	r26, 0x37	; 55
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	e7 e3       	ldi	r30, 0x37	; 55
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	48 2f       	mov	r20, r24
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 14e:	28 2f       	mov	r18, r24
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <Dio_vidSetPinDir+0xe2>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <Dio_vidSetPinDir+0xde>
 162:	84 2b       	or	r24, r20
 164:	8c 93       	st	X, r24
 166:	6c c0       	rjmp	.+216    	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRB,PinLoc);
 168:	a7 e3       	ldi	r26, 0x37	; 55
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	e7 e3       	ldi	r30, 0x37	; 55
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	89 81       	ldd	r24, Y+1	; 0x01
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <Dio_vidSetPinDir+0x10a>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <Dio_vidSetPinDir+0x106>
 18a:	80 95       	com	r24
 18c:	84 23       	and	r24, r20
 18e:	8c 93       	st	X, r24
 190:	57 c0       	rjmp	.+174    	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 2:
		if(Dir==1){
 192:	8c 81       	ldd	r24, Y+4	; 0x04
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	a1 f4       	brne	.+40     	; 0x1c0 <Dio_vidSetPinDir+0x144>
			SET_BIT(DDRC,PinLoc);
 198:	a4 e3       	ldi	r26, 0x34	; 52
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	e4 e3       	ldi	r30, 0x34	; 52
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	48 2f       	mov	r20, r24
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 2e       	mov	r0, r18
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <Dio_vidSetPinDir+0x13a>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	0a 94       	dec	r0
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <Dio_vidSetPinDir+0x136>
 1ba:	84 2b       	or	r24, r20
 1bc:	8c 93       	st	X, r24
 1be:	40 c0       	rjmp	.+128    	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRC,PinLoc);
 1c0:	a4 e3       	ldi	r26, 0x34	; 52
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	e4 e3       	ldi	r30, 0x34	; 52
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	48 2f       	mov	r20, r24
 1cc:	89 81       	ldd	r24, Y+1	; 0x01
 1ce:	28 2f       	mov	r18, r24
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 2e       	mov	r0, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <Dio_vidSetPinDir+0x162>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <Dio_vidSetPinDir+0x15e>
 1e2:	80 95       	com	r24
 1e4:	84 23       	and	r24, r20
 1e6:	8c 93       	st	X, r24
 1e8:	2b c0       	rjmp	.+86     	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 3:
		if(Dir==1){
 1ea:	8c 81       	ldd	r24, Y+4	; 0x04
 1ec:	81 30       	cpi	r24, 0x01	; 1
 1ee:	a1 f4       	brne	.+40     	; 0x218 <Dio_vidSetPinDir+0x19c>
			SET_BIT(DDRD,PinLoc);
 1f0:	a1 e3       	ldi	r26, 0x31	; 49
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	e1 e3       	ldi	r30, 0x31	; 49
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	48 2f       	mov	r20, r24
 1fc:	89 81       	ldd	r24, Y+1	; 0x01
 1fe:	28 2f       	mov	r18, r24
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 2e       	mov	r0, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <Dio_vidSetPinDir+0x192>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <Dio_vidSetPinDir+0x18e>
 212:	84 2b       	or	r24, r20
 214:	8c 93       	st	X, r24
 216:	14 c0       	rjmp	.+40     	; 0x240 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRD,PinLoc);
 218:	a1 e3       	ldi	r26, 0x31	; 49
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e1 e3       	ldi	r30, 0x31	; 49
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <Dio_vidSetPinDir+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <Dio_vidSetPinDir+0x1b6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
		}
		break;
	}
}
 240:	26 96       	adiw	r28, 0x06	; 6
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	de bf       	out	0x3e, r29	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	cd bf       	out	0x3d, r28	; 61
 24c:	cf 91       	pop	r28
 24e:	df 91       	pop	r29
 250:	08 95       	ret

00000252 <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin, u8 Val){
 252:	df 93       	push	r29
 254:	cf 93       	push	r28
 256:	00 d0       	rcall	.+0      	; 0x258 <Dio_vidSetPinVal+0x6>
 258:	00 d0       	rcall	.+0      	; 0x25a <Dio_vidSetPinVal+0x8>
 25a:	00 d0       	rcall	.+0      	; 0x25c <Dio_vidSetPinVal+0xa>
 25c:	cd b7       	in	r28, 0x3d	; 61
 25e:	de b7       	in	r29, 0x3e	; 62
 260:	8b 83       	std	Y+3, r24	; 0x03
 262:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
 264:	8b 81       	ldd	r24, Y+3	; 0x03
 266:	86 95       	lsr	r24
 268:	86 95       	lsr	r24
 26a:	86 95       	lsr	r24
 26c:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
 26e:	8b 81       	ldd	r24, Y+3	; 0x03
 270:	87 70       	andi	r24, 0x07	; 7
 272:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
 274:	8a 81       	ldd	r24, Y+2	; 0x02
 276:	28 2f       	mov	r18, r24
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	3e 83       	std	Y+6, r19	; 0x06
 27c:	2d 83       	std	Y+5, r18	; 0x05
 27e:	8d 81       	ldd	r24, Y+5	; 0x05
 280:	9e 81       	ldd	r25, Y+6	; 0x06
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	91 05       	cpc	r25, r1
 286:	09 f4       	brne	.+2      	; 0x28a <Dio_vidSetPinVal+0x38>
 288:	43 c0       	rjmp	.+134    	; 0x310 <Dio_vidSetPinVal+0xbe>
 28a:	2d 81       	ldd	r18, Y+5	; 0x05
 28c:	3e 81       	ldd	r19, Y+6	; 0x06
 28e:	22 30       	cpi	r18, 0x02	; 2
 290:	31 05       	cpc	r19, r1
 292:	2c f4       	brge	.+10     	; 0x29e <Dio_vidSetPinVal+0x4c>
 294:	8d 81       	ldd	r24, Y+5	; 0x05
 296:	9e 81       	ldd	r25, Y+6	; 0x06
 298:	00 97       	sbiw	r24, 0x00	; 0
 29a:	71 f0       	breq	.+28     	; 0x2b8 <Dio_vidSetPinVal+0x66>
 29c:	bc c0       	rjmp	.+376    	; 0x416 <Dio_vidSetPinVal+0x1c4>
 29e:	2d 81       	ldd	r18, Y+5	; 0x05
 2a0:	3e 81       	ldd	r19, Y+6	; 0x06
 2a2:	22 30       	cpi	r18, 0x02	; 2
 2a4:	31 05       	cpc	r19, r1
 2a6:	09 f4       	brne	.+2      	; 0x2aa <Dio_vidSetPinVal+0x58>
 2a8:	5f c0       	rjmp	.+190    	; 0x368 <Dio_vidSetPinVal+0x116>
 2aa:	8d 81       	ldd	r24, Y+5	; 0x05
 2ac:	9e 81       	ldd	r25, Y+6	; 0x06
 2ae:	83 30       	cpi	r24, 0x03	; 3
 2b0:	91 05       	cpc	r25, r1
 2b2:	09 f4       	brne	.+2      	; 0x2b6 <Dio_vidSetPinVal+0x64>
 2b4:	85 c0       	rjmp	.+266    	; 0x3c0 <Dio_vidSetPinVal+0x16e>
 2b6:	af c0       	rjmp	.+350    	; 0x416 <Dio_vidSetPinVal+0x1c4>
	case 0:
		if(Val==1){
 2b8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	a1 f4       	brne	.+40     	; 0x2e6 <Dio_vidSetPinVal+0x94>
			SET_BIT(PORTA,PinLoc);
 2be:	ab e3       	ldi	r26, 0x3B	; 59
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	eb e3       	ldi	r30, 0x3B	; 59
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	48 2f       	mov	r20, r24
 2ca:	89 81       	ldd	r24, Y+1	; 0x01
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 2e       	mov	r0, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <Dio_vidSetPinVal+0x8a>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <Dio_vidSetPinVal+0x86>
 2e0:	84 2b       	or	r24, r20
 2e2:	8c 93       	st	X, r24
 2e4:	98 c0       	rjmp	.+304    	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTA,PinLoc);
 2e6:	ab e3       	ldi	r26, 0x3B	; 59
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	eb e3       	ldi	r30, 0x3B	; 59
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	48 2f       	mov	r20, r24
 2f2:	89 81       	ldd	r24, Y+1	; 0x01
 2f4:	28 2f       	mov	r18, r24
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 2e       	mov	r0, r18
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <Dio_vidSetPinVal+0xb2>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	0a 94       	dec	r0
 306:	e2 f7       	brpl	.-8      	; 0x300 <Dio_vidSetPinVal+0xae>
 308:	80 95       	com	r24
 30a:	84 23       	and	r24, r20
 30c:	8c 93       	st	X, r24
 30e:	83 c0       	rjmp	.+262    	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 1:
		if(Val==1){
 310:	8c 81       	ldd	r24, Y+4	; 0x04
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	a1 f4       	brne	.+40     	; 0x33e <Dio_vidSetPinVal+0xec>
			SET_BIT(PORTB,PinLoc);
 316:	a8 e3       	ldi	r26, 0x38	; 56
 318:	b0 e0       	ldi	r27, 0x00	; 0
 31a:	e8 e3       	ldi	r30, 0x38	; 56
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	48 2f       	mov	r20, r24
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	28 2f       	mov	r18, r24
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	02 2e       	mov	r0, r18
 32e:	02 c0       	rjmp	.+4      	; 0x334 <Dio_vidSetPinVal+0xe2>
 330:	88 0f       	add	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	0a 94       	dec	r0
 336:	e2 f7       	brpl	.-8      	; 0x330 <Dio_vidSetPinVal+0xde>
 338:	84 2b       	or	r24, r20
 33a:	8c 93       	st	X, r24
 33c:	6c c0       	rjmp	.+216    	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTB,PinLoc);
 33e:	a8 e3       	ldi	r26, 0x38	; 56
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	e8 e3       	ldi	r30, 0x38	; 56
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	48 2f       	mov	r20, r24
 34a:	89 81       	ldd	r24, Y+1	; 0x01
 34c:	28 2f       	mov	r18, r24
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 2e       	mov	r0, r18
 356:	02 c0       	rjmp	.+4      	; 0x35c <Dio_vidSetPinVal+0x10a>
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	0a 94       	dec	r0
 35e:	e2 f7       	brpl	.-8      	; 0x358 <Dio_vidSetPinVal+0x106>
 360:	80 95       	com	r24
 362:	84 23       	and	r24, r20
 364:	8c 93       	st	X, r24
 366:	57 c0       	rjmp	.+174    	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 2:
		if(Val==1){
 368:	8c 81       	ldd	r24, Y+4	; 0x04
 36a:	81 30       	cpi	r24, 0x01	; 1
 36c:	a1 f4       	brne	.+40     	; 0x396 <Dio_vidSetPinVal+0x144>
			SET_BIT(PORTC,PinLoc);
 36e:	a5 e3       	ldi	r26, 0x35	; 53
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	e5 e3       	ldi	r30, 0x35	; 53
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	48 2f       	mov	r20, r24
 37a:	89 81       	ldd	r24, Y+1	; 0x01
 37c:	28 2f       	mov	r18, r24
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	02 2e       	mov	r0, r18
 386:	02 c0       	rjmp	.+4      	; 0x38c <Dio_vidSetPinVal+0x13a>
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	0a 94       	dec	r0
 38e:	e2 f7       	brpl	.-8      	; 0x388 <Dio_vidSetPinVal+0x136>
 390:	84 2b       	or	r24, r20
 392:	8c 93       	st	X, r24
 394:	40 c0       	rjmp	.+128    	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTC,PinLoc);
 396:	a5 e3       	ldi	r26, 0x35	; 53
 398:	b0 e0       	ldi	r27, 0x00	; 0
 39a:	e5 e3       	ldi	r30, 0x35	; 53
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	80 81       	ld	r24, Z
 3a0:	48 2f       	mov	r20, r24
 3a2:	89 81       	ldd	r24, Y+1	; 0x01
 3a4:	28 2f       	mov	r18, r24
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	02 2e       	mov	r0, r18
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <Dio_vidSetPinVal+0x162>
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	0a 94       	dec	r0
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <Dio_vidSetPinVal+0x15e>
 3b8:	80 95       	com	r24
 3ba:	84 23       	and	r24, r20
 3bc:	8c 93       	st	X, r24
 3be:	2b c0       	rjmp	.+86     	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 3:
		if(Val==1){
 3c0:	8c 81       	ldd	r24, Y+4	; 0x04
 3c2:	81 30       	cpi	r24, 0x01	; 1
 3c4:	a1 f4       	brne	.+40     	; 0x3ee <Dio_vidSetPinVal+0x19c>
			SET_BIT(PORTD,PinLoc);
 3c6:	a2 e3       	ldi	r26, 0x32	; 50
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	e2 e3       	ldi	r30, 0x32	; 50
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	48 2f       	mov	r20, r24
 3d2:	89 81       	ldd	r24, Y+1	; 0x01
 3d4:	28 2f       	mov	r18, r24
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	02 2e       	mov	r0, r18
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <Dio_vidSetPinVal+0x192>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	0a 94       	dec	r0
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <Dio_vidSetPinVal+0x18e>
 3e8:	84 2b       	or	r24, r20
 3ea:	8c 93       	st	X, r24
 3ec:	14 c0       	rjmp	.+40     	; 0x416 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTD,PinLoc);
 3ee:	a2 e3       	ldi	r26, 0x32	; 50
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e2 e3       	ldi	r30, 0x32	; 50
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	89 81       	ldd	r24, Y+1	; 0x01
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <Dio_vidSetPinVal+0x1ba>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <Dio_vidSetPinVal+0x1b6>
 410:	80 95       	com	r24
 412:	84 23       	and	r24, r20
 414:	8c 93       	st	X, r24
		}
		break;
	}
}
 416:	26 96       	adiw	r28, 0x06	; 6
 418:	0f b6       	in	r0, 0x3f	; 63
 41a:	f8 94       	cli
 41c:	de bf       	out	0x3e, r29	; 62
 41e:	0f be       	out	0x3f, r0	; 63
 420:	cd bf       	out	0x3d, r28	; 61
 422:	cf 91       	pop	r28
 424:	df 91       	pop	r29
 426:	08 95       	ret

00000428 <Led_vidInit>:
#include"Dio_int.h"
#include"LED_cfg.h"
#include"LED_int.h"
#include<avr/io.h>

void Led_vidInit(u8 LedID){
 428:	df 93       	push	r29
 42a:	cf 93       	push	r28
 42c:	00 d0       	rcall	.+0      	; 0x42e <Led_vidInit+0x6>
 42e:	0f 92       	push	r0
 430:	cd b7       	in	r28, 0x3d	; 61
 432:	de b7       	in	r29, 0x3e	; 62
 434:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID){
 436:	89 81       	ldd	r24, Y+1	; 0x01
 438:	28 2f       	mov	r18, r24
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	3b 83       	std	Y+3, r19	; 0x03
 43e:	2a 83       	std	Y+2, r18	; 0x02
 440:	8a 81       	ldd	r24, Y+2	; 0x02
 442:	9b 81       	ldd	r25, Y+3	; 0x03
 444:	84 30       	cpi	r24, 0x04	; 4
 446:	91 05       	cpc	r25, r1
 448:	c9 f1       	breq	.+114    	; 0x4bc <Led_vidInit+0x94>
 44a:	2a 81       	ldd	r18, Y+2	; 0x02
 44c:	3b 81       	ldd	r19, Y+3	; 0x03
 44e:	25 30       	cpi	r18, 0x05	; 5
 450:	31 05       	cpc	r19, r1
 452:	84 f4       	brge	.+32     	; 0x474 <Led_vidInit+0x4c>
 454:	8a 81       	ldd	r24, Y+2	; 0x02
 456:	9b 81       	ldd	r25, Y+3	; 0x03
 458:	82 30       	cpi	r24, 0x02	; 2
 45a:	91 05       	cpc	r25, r1
 45c:	29 f1       	breq	.+74     	; 0x4a8 <Led_vidInit+0x80>
 45e:	2a 81       	ldd	r18, Y+2	; 0x02
 460:	3b 81       	ldd	r19, Y+3	; 0x03
 462:	23 30       	cpi	r18, 0x03	; 3
 464:	31 05       	cpc	r19, r1
 466:	2c f5       	brge	.+74     	; 0x4b2 <Led_vidInit+0x8a>
 468:	8a 81       	ldd	r24, Y+2	; 0x02
 46a:	9b 81       	ldd	r25, Y+3	; 0x03
 46c:	81 30       	cpi	r24, 0x01	; 1
 46e:	91 05       	cpc	r25, r1
 470:	b1 f0       	breq	.+44     	; 0x49e <Led_vidInit+0x76>
 472:	3c c0       	rjmp	.+120    	; 0x4ec <Led_vidInit+0xc4>
 474:	2a 81       	ldd	r18, Y+2	; 0x02
 476:	3b 81       	ldd	r19, Y+3	; 0x03
 478:	26 30       	cpi	r18, 0x06	; 6
 47a:	31 05       	cpc	r19, r1
 47c:	49 f1       	breq	.+82     	; 0x4d0 <Led_vidInit+0xa8>
 47e:	8a 81       	ldd	r24, Y+2	; 0x02
 480:	9b 81       	ldd	r25, Y+3	; 0x03
 482:	86 30       	cpi	r24, 0x06	; 6
 484:	91 05       	cpc	r25, r1
 486:	fc f0       	brlt	.+62     	; 0x4c6 <Led_vidInit+0x9e>
 488:	2a 81       	ldd	r18, Y+2	; 0x02
 48a:	3b 81       	ldd	r19, Y+3	; 0x03
 48c:	27 30       	cpi	r18, 0x07	; 7
 48e:	31 05       	cpc	r19, r1
 490:	21 f1       	breq	.+72     	; 0x4da <Led_vidInit+0xb2>
 492:	8a 81       	ldd	r24, Y+2	; 0x02
 494:	9b 81       	ldd	r25, Y+3	; 0x03
 496:	88 30       	cpi	r24, 0x08	; 8
 498:	91 05       	cpc	r25, r1
 49a:	21 f1       	breq	.+72     	; 0x4e4 <Led_vidInit+0xbc>
 49c:	27 c0       	rjmp	.+78     	; 0x4ec <Led_vidInit+0xc4>
	case 1:
		Dio_vidSetPinDir(LED_u8ID1,DIO_u8HIGH);	//Setting 1st 2 pins
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	61 e0       	ldi	r22, 0x01	; 1
 4a2:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4a6:	22 c0       	rjmp	.+68     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 2:
		Dio_vidSetPinDir(LED_u8ID2,DIO_u8HIGH);	//of PORTA to output
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	61 e0       	ldi	r22, 0x01	; 1
 4ac:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4b0:	1d c0       	rjmp	.+58     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 3:
		Dio_vidSetPinDir(LED_u8ID3,DIO_u8HIGH);	//Setting 2nd 2 pins
 4b2:	8a e0       	ldi	r24, 0x0A	; 10
 4b4:	61 e0       	ldi	r22, 0x01	; 1
 4b6:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4ba:	18 c0       	rjmp	.+48     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 4:
		Dio_vidSetPinDir(LED_u8ID4,DIO_u8HIGH);	//of PORTB to output
 4bc:	8b e0       	ldi	r24, 0x0B	; 11
 4be:	61 e0       	ldi	r22, 0x01	; 1
 4c0:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4c4:	13 c0       	rjmp	.+38     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 5:
		Dio_vidSetPinDir(LED_u8ID5,DIO_u8HIGH);	//Setting 3rd 2 pins
 4c6:	84 e1       	ldi	r24, 0x14	; 20
 4c8:	61 e0       	ldi	r22, 0x01	; 1
 4ca:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4ce:	0e c0       	rjmp	.+28     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 6:
		Dio_vidSetPinDir(LED_u8ID6,DIO_u8HIGH);	//of PORTC to output
 4d0:	85 e1       	ldi	r24, 0x15	; 21
 4d2:	61 e0       	ldi	r22, 0x01	; 1
 4d4:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 7:
		Dio_vidSetPinDir(LED_u8ID7,DIO_u8HIGH);	//Setting 4th 2 pins
 4da:	8e e1       	ldi	r24, 0x1E	; 30
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <Led_vidInit+0xc4>
		break;
	case 8:
		Dio_vidSetPinDir(LED_u8ID8,DIO_u8HIGH);	//of PORTD to output
 4e4:	8f e1       	ldi	r24, 0x1F	; 31
 4e6:	61 e0       	ldi	r22, 0x01	; 1
 4e8:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_vidSetPinDir>
		break;
	}
}
 4ec:	0f 90       	pop	r0
 4ee:	0f 90       	pop	r0
 4f0:	0f 90       	pop	r0
 4f2:	cf 91       	pop	r28
 4f4:	df 91       	pop	r29
 4f6:	08 95       	ret

000004f8 <Led_u8TurnON>:
void Led_u8TurnON(u8 LedID){
 4f8:	df 93       	push	r29
 4fa:	cf 93       	push	r28
 4fc:	00 d0       	rcall	.+0      	; 0x4fe <Led_u8TurnON+0x6>
 4fe:	0f 92       	push	r0
 500:	cd b7       	in	r28, 0x3d	; 61
 502:	de b7       	in	r29, 0x3e	; 62
 504:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID){
 506:	89 81       	ldd	r24, Y+1	; 0x01
 508:	28 2f       	mov	r18, r24
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	3b 83       	std	Y+3, r19	; 0x03
 50e:	2a 83       	std	Y+2, r18	; 0x02
 510:	8a 81       	ldd	r24, Y+2	; 0x02
 512:	9b 81       	ldd	r25, Y+3	; 0x03
 514:	84 30       	cpi	r24, 0x04	; 4
 516:	91 05       	cpc	r25, r1
 518:	c9 f1       	breq	.+114    	; 0x58c <Led_u8TurnON+0x94>
 51a:	2a 81       	ldd	r18, Y+2	; 0x02
 51c:	3b 81       	ldd	r19, Y+3	; 0x03
 51e:	25 30       	cpi	r18, 0x05	; 5
 520:	31 05       	cpc	r19, r1
 522:	84 f4       	brge	.+32     	; 0x544 <Led_u8TurnON+0x4c>
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	9b 81       	ldd	r25, Y+3	; 0x03
 528:	82 30       	cpi	r24, 0x02	; 2
 52a:	91 05       	cpc	r25, r1
 52c:	29 f1       	breq	.+74     	; 0x578 <Led_u8TurnON+0x80>
 52e:	2a 81       	ldd	r18, Y+2	; 0x02
 530:	3b 81       	ldd	r19, Y+3	; 0x03
 532:	23 30       	cpi	r18, 0x03	; 3
 534:	31 05       	cpc	r19, r1
 536:	2c f5       	brge	.+74     	; 0x582 <Led_u8TurnON+0x8a>
 538:	8a 81       	ldd	r24, Y+2	; 0x02
 53a:	9b 81       	ldd	r25, Y+3	; 0x03
 53c:	81 30       	cpi	r24, 0x01	; 1
 53e:	91 05       	cpc	r25, r1
 540:	b1 f0       	breq	.+44     	; 0x56e <Led_u8TurnON+0x76>
 542:	3c c0       	rjmp	.+120    	; 0x5bc <Led_u8TurnON+0xc4>
 544:	2a 81       	ldd	r18, Y+2	; 0x02
 546:	3b 81       	ldd	r19, Y+3	; 0x03
 548:	26 30       	cpi	r18, 0x06	; 6
 54a:	31 05       	cpc	r19, r1
 54c:	49 f1       	breq	.+82     	; 0x5a0 <Led_u8TurnON+0xa8>
 54e:	8a 81       	ldd	r24, Y+2	; 0x02
 550:	9b 81       	ldd	r25, Y+3	; 0x03
 552:	86 30       	cpi	r24, 0x06	; 6
 554:	91 05       	cpc	r25, r1
 556:	fc f0       	brlt	.+62     	; 0x596 <Led_u8TurnON+0x9e>
 558:	2a 81       	ldd	r18, Y+2	; 0x02
 55a:	3b 81       	ldd	r19, Y+3	; 0x03
 55c:	27 30       	cpi	r18, 0x07	; 7
 55e:	31 05       	cpc	r19, r1
 560:	21 f1       	breq	.+72     	; 0x5aa <Led_u8TurnON+0xb2>
 562:	8a 81       	ldd	r24, Y+2	; 0x02
 564:	9b 81       	ldd	r25, Y+3	; 0x03
 566:	88 30       	cpi	r24, 0x08	; 8
 568:	91 05       	cpc	r25, r1
 56a:	21 f1       	breq	.+72     	; 0x5b4 <Led_u8TurnON+0xbc>
 56c:	27 c0       	rjmp	.+78     	; 0x5bc <Led_u8TurnON+0xc4>
	case 1:
		Dio_vidSetPinVal(LED_u8ID1,DIO_u8HIGH);
 56e:	80 e0       	ldi	r24, 0x00	; 0
 570:	61 e0       	ldi	r22, 0x01	; 1
 572:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 576:	22 c0       	rjmp	.+68     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 2:
		Dio_vidSetPinVal(LED_u8ID2,DIO_u8HIGH);
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	61 e0       	ldi	r22, 0x01	; 1
 57c:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 580:	1d c0       	rjmp	.+58     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 3:
		Dio_vidSetPinVal(LED_u8ID3,DIO_u8HIGH);
 582:	8a e0       	ldi	r24, 0x0A	; 10
 584:	61 e0       	ldi	r22, 0x01	; 1
 586:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 58a:	18 c0       	rjmp	.+48     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 4:
		Dio_vidSetPinVal(LED_u8ID4,DIO_u8HIGH);
 58c:	8b e0       	ldi	r24, 0x0B	; 11
 58e:	61 e0       	ldi	r22, 0x01	; 1
 590:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 594:	13 c0       	rjmp	.+38     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 5:
		Dio_vidSetPinVal(LED_u8ID5,DIO_u8HIGH);
 596:	84 e1       	ldi	r24, 0x14	; 20
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 59e:	0e c0       	rjmp	.+28     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 6:
		Dio_vidSetPinVal(LED_u8ID6,DIO_u8HIGH);
 5a0:	85 e1       	ldi	r24, 0x15	; 21
 5a2:	61 e0       	ldi	r22, 0x01	; 1
 5a4:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 7:
		Dio_vidSetPinVal(LED_u8ID7,DIO_u8HIGH);
 5aa:	8e e1       	ldi	r24, 0x1E	; 30
 5ac:	61 e0       	ldi	r22, 0x01	; 1
 5ae:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <Led_u8TurnON+0xc4>
		break;
	case 8:
		Dio_vidSetPinVal(LED_u8ID8,DIO_u8HIGH);
 5b4:	8f e1       	ldi	r24, 0x1F	; 31
 5b6:	61 e0       	ldi	r22, 0x01	; 1
 5b8:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
		break;
	}
}
 5bc:	0f 90       	pop	r0
 5be:	0f 90       	pop	r0
 5c0:	0f 90       	pop	r0
 5c2:	cf 91       	pop	r28
 5c4:	df 91       	pop	r29
 5c6:	08 95       	ret

000005c8 <Led_u8TurnOFF>:

void Led_u8TurnOFF(u8 LedID){
 5c8:	df 93       	push	r29
 5ca:	cf 93       	push	r28
 5cc:	00 d0       	rcall	.+0      	; 0x5ce <Led_u8TurnOFF+0x6>
 5ce:	0f 92       	push	r0
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID){
 5d6:	89 81       	ldd	r24, Y+1	; 0x01
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	3b 83       	std	Y+3, r19	; 0x03
 5de:	2a 83       	std	Y+2, r18	; 0x02
 5e0:	8a 81       	ldd	r24, Y+2	; 0x02
 5e2:	9b 81       	ldd	r25, Y+3	; 0x03
 5e4:	84 30       	cpi	r24, 0x04	; 4
 5e6:	91 05       	cpc	r25, r1
 5e8:	c9 f1       	breq	.+114    	; 0x65c <Led_u8TurnOFF+0x94>
 5ea:	2a 81       	ldd	r18, Y+2	; 0x02
 5ec:	3b 81       	ldd	r19, Y+3	; 0x03
 5ee:	25 30       	cpi	r18, 0x05	; 5
 5f0:	31 05       	cpc	r19, r1
 5f2:	84 f4       	brge	.+32     	; 0x614 <Led_u8TurnOFF+0x4c>
 5f4:	8a 81       	ldd	r24, Y+2	; 0x02
 5f6:	9b 81       	ldd	r25, Y+3	; 0x03
 5f8:	82 30       	cpi	r24, 0x02	; 2
 5fa:	91 05       	cpc	r25, r1
 5fc:	29 f1       	breq	.+74     	; 0x648 <Led_u8TurnOFF+0x80>
 5fe:	2a 81       	ldd	r18, Y+2	; 0x02
 600:	3b 81       	ldd	r19, Y+3	; 0x03
 602:	23 30       	cpi	r18, 0x03	; 3
 604:	31 05       	cpc	r19, r1
 606:	2c f5       	brge	.+74     	; 0x652 <Led_u8TurnOFF+0x8a>
 608:	8a 81       	ldd	r24, Y+2	; 0x02
 60a:	9b 81       	ldd	r25, Y+3	; 0x03
 60c:	81 30       	cpi	r24, 0x01	; 1
 60e:	91 05       	cpc	r25, r1
 610:	b1 f0       	breq	.+44     	; 0x63e <Led_u8TurnOFF+0x76>
 612:	3c c0       	rjmp	.+120    	; 0x68c <Led_u8TurnOFF+0xc4>
 614:	2a 81       	ldd	r18, Y+2	; 0x02
 616:	3b 81       	ldd	r19, Y+3	; 0x03
 618:	26 30       	cpi	r18, 0x06	; 6
 61a:	31 05       	cpc	r19, r1
 61c:	49 f1       	breq	.+82     	; 0x670 <Led_u8TurnOFF+0xa8>
 61e:	8a 81       	ldd	r24, Y+2	; 0x02
 620:	9b 81       	ldd	r25, Y+3	; 0x03
 622:	86 30       	cpi	r24, 0x06	; 6
 624:	91 05       	cpc	r25, r1
 626:	fc f0       	brlt	.+62     	; 0x666 <Led_u8TurnOFF+0x9e>
 628:	2a 81       	ldd	r18, Y+2	; 0x02
 62a:	3b 81       	ldd	r19, Y+3	; 0x03
 62c:	27 30       	cpi	r18, 0x07	; 7
 62e:	31 05       	cpc	r19, r1
 630:	21 f1       	breq	.+72     	; 0x67a <Led_u8TurnOFF+0xb2>
 632:	8a 81       	ldd	r24, Y+2	; 0x02
 634:	9b 81       	ldd	r25, Y+3	; 0x03
 636:	88 30       	cpi	r24, 0x08	; 8
 638:	91 05       	cpc	r25, r1
 63a:	21 f1       	breq	.+72     	; 0x684 <Led_u8TurnOFF+0xbc>
 63c:	27 c0       	rjmp	.+78     	; 0x68c <Led_u8TurnOFF+0xc4>
	case 1:
		Dio_vidSetPinVal(LED_u8ID1,DIO_u8LOW);
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 646:	22 c0       	rjmp	.+68     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 2:
		Dio_vidSetPinVal(LED_u8ID2,DIO_u8LOW);
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 650:	1d c0       	rjmp	.+58     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 3:
		Dio_vidSetPinVal(LED_u8ID3,DIO_u8LOW);
 652:	8a e0       	ldi	r24, 0x0A	; 10
 654:	60 e0       	ldi	r22, 0x00	; 0
 656:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 65a:	18 c0       	rjmp	.+48     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 4:
		Dio_vidSetPinVal(LED_u8ID4,DIO_u8LOW);
 65c:	8b e0       	ldi	r24, 0x0B	; 11
 65e:	60 e0       	ldi	r22, 0x00	; 0
 660:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 664:	13 c0       	rjmp	.+38     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 5:
		Dio_vidSetPinVal(LED_u8ID5,DIO_u8LOW);
 666:	84 e1       	ldi	r24, 0x14	; 20
 668:	60 e0       	ldi	r22, 0x00	; 0
 66a:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 66e:	0e c0       	rjmp	.+28     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 6:
		Dio_vidSetPinVal(LED_u8ID6,DIO_u8LOW);
 670:	85 e1       	ldi	r24, 0x15	; 21
 672:	60 e0       	ldi	r22, 0x00	; 0
 674:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 678:	09 c0       	rjmp	.+18     	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 7:
		Dio_vidSetPinVal(LED_u8ID7,DIO_u8LOW);
 67a:	8e e1       	ldi	r24, 0x1E	; 30
 67c:	60 e0       	ldi	r22, 0x00	; 0
 67e:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
 682:	04 c0       	rjmp	.+8      	; 0x68c <Led_u8TurnOFF+0xc4>
		break;
	case 8:
		Dio_vidSetPinVal(LED_u8ID8,DIO_u8LOW);
 684:	8f e1       	ldi	r24, 0x1F	; 31
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	0e 94 29 01 	call	0x252	; 0x252 <Dio_vidSetPinVal>
		break;
	}
}
 68c:	0f 90       	pop	r0
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	cf 91       	pop	r28
 694:	df 91       	pop	r29
 696:	08 95       	ret

00000698 <main>:
void MyDelay_ms(u32 Time);
u32 OVF_Counts;
u32 ms_counts;
u32 T_desired;
u8 End;
int main(void){
 698:	df 93       	push	r29
 69a:	cf 93       	push	r28
 69c:	cd b7       	in	r28, 0x3d	; 61
 69e:	de b7       	in	r29, 0x3e	; 62


	while(1){
		Led_vidInit(Led_1);
 6a0:	81 e0       	ldi	r24, 0x01	; 1
 6a2:	0e 94 14 02 	call	0x428	; 0x428 <Led_vidInit>
		PORTA=0xFF;
 6a6:	eb e3       	ldi	r30, 0x3B	; 59
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	8f ef       	ldi	r24, 0xFF	; 255
 6ac:	80 83       	st	Z, r24
	//	Led_u8TurnON(Led_1);
		MyDelay_ms(500);
 6ae:	84 ef       	ldi	r24, 0xF4	; 244
 6b0:	91 e0       	ldi	r25, 0x01	; 1
 6b2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <MyDelay_ms>
	//	Led_u8TurnOFF(Led_1);
		PORTA=0x00;
 6b6:	eb e3       	ldi	r30, 0x3B	; 59
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	10 82       	st	Z, r1
		MyDelay_ms(500);
 6bc:	84 ef       	ldi	r24, 0xF4	; 244
 6be:	91 e0       	ldi	r25, 0x01	; 1
 6c0:	0e 94 63 03 	call	0x6c6	; 0x6c6 <MyDelay_ms>
 6c4:	ed cf       	rjmp	.-38     	; 0x6a0 <main+0x8>

000006c6 <MyDelay_ms>:
	}
	return 0;
}


void MyDelay_ms(u32 Time){
 6c6:	df 93       	push	r29
 6c8:	cf 93       	push	r28
 6ca:	00 d0       	rcall	.+0      	; 0x6cc <MyDelay_ms+0x6>
 6cc:	cd b7       	in	r28, 0x3d	; 61
 6ce:	de b7       	in	r29, 0x3e	; 62
 6d0:	9a 83       	std	Y+2, r25	; 0x02
 6d2:	89 83       	std	Y+1, r24	; 0x01
	ms_counts=0;
 6d4:	10 92 65 00 	sts	0x0065, r1
 6d8:	10 92 64 00 	sts	0x0064, r1
	OVF_Counts=0;
 6dc:	10 92 61 00 	sts	0x0061, r1
 6e0:	10 92 60 00 	sts	0x0060, r1
	T_desired=Time;
 6e4:	89 81       	ldd	r24, Y+1	; 0x01
 6e6:	9a 81       	ldd	r25, Y+2	; 0x02
 6e8:	90 93 63 00 	sts	0x0063, r25
 6ec:	80 93 62 00 	sts	0x0062, r24
	End=0;
 6f0:	10 92 66 00 	sts	0x0066, r1
	CLR_BIT(TCCR0,6);//TIMER NORMAL
 6f4:	a3 e5       	ldi	r26, 0x53	; 83
 6f6:	b0 e0       	ldi	r27, 0x00	; 0
 6f8:	e3 e5       	ldi	r30, 0x53	; 83
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	80 81       	ld	r24, Z
 6fe:	8f 7b       	andi	r24, 0xBF	; 191
 700:	8c 93       	st	X, r24
	CLR_BIT(TCCR0,3);//		 MODE
 702:	a3 e5       	ldi	r26, 0x53	; 83
 704:	b0 e0       	ldi	r27, 0x00	; 0
 706:	e3 e5       	ldi	r30, 0x53	; 83
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	87 7f       	andi	r24, 0xF7	; 247
 70e:	8c 93       	st	X, r24

	CLR_BIT(TCCR0,2);//	NO
 710:	a3 e5       	ldi	r26, 0x53	; 83
 712:	b0 e0       	ldi	r27, 0x00	; 0
 714:	e3 e5       	ldi	r30, 0x53	; 83
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	80 81       	ld	r24, Z
 71a:	8b 7f       	andi	r24, 0xFB	; 251
 71c:	8c 93       	st	X, r24
	CLR_BIT(TCCR0,1);//	PRESCALER
 71e:	a3 e5       	ldi	r26, 0x53	; 83
 720:	b0 e0       	ldi	r27, 0x00	; 0
 722:	e3 e5       	ldi	r30, 0x53	; 83
 724:	f0 e0       	ldi	r31, 0x00	; 0
 726:	80 81       	ld	r24, Z
 728:	8d 7f       	andi	r24, 0xFD	; 253
 72a:	8c 93       	st	X, r24
	SET_BIT(TCCR0,0);//	USED
 72c:	a3 e5       	ldi	r26, 0x53	; 83
 72e:	b0 e0       	ldi	r27, 0x00	; 0
 730:	e3 e5       	ldi	r30, 0x53	; 83
 732:	f0 e0       	ldi	r31, 0x00	; 0
 734:	80 81       	ld	r24, Z
 736:	81 60       	ori	r24, 0x01	; 1
 738:	8c 93       	st	X, r24

	SET_BIT(SREG,7);// GIE
 73a:	af e5       	ldi	r26, 0x5F	; 95
 73c:	b0 e0       	ldi	r27, 0x00	; 0
 73e:	ef e5       	ldi	r30, 0x5F	; 95
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	80 81       	ld	r24, Z
 744:	80 68       	ori	r24, 0x80	; 128
 746:	8c 93       	st	X, r24
	SET_BIT(TIMSK,0);// PIE OVERFLOW INTERRUPT
 748:	a9 e5       	ldi	r26, 0x59	; 89
 74a:	b0 e0       	ldi	r27, 0x00	; 0
 74c:	e9 e5       	ldi	r30, 0x59	; 89
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	80 81       	ld	r24, Z
 752:	81 60       	ori	r24, 0x01	; 1
 754:	8c 93       	st	X, r24
	TCNT0=192;       // INITIAL VALUE (0.25%)
 756:	e2 e5       	ldi	r30, 0x52	; 82
 758:	f0 e0       	ldi	r31, 0x00	; 0
 75a:	80 ec       	ldi	r24, 0xC0	; 192
 75c:	80 83       	st	Z, r24

	while(End==0);
 75e:	80 91 66 00 	lds	r24, 0x0066
 762:	88 23       	and	r24, r24
 764:	e1 f3       	breq	.-8      	; 0x75e <MyDelay_ms+0x98>
	CLR_BIT(TCCR0,2);
 766:	a3 e5       	ldi	r26, 0x53	; 83
 768:	b0 e0       	ldi	r27, 0x00	; 0
 76a:	e3 e5       	ldi	r30, 0x53	; 83
 76c:	f0 e0       	ldi	r31, 0x00	; 0
 76e:	80 81       	ld	r24, Z
 770:	8b 7f       	andi	r24, 0xFB	; 251
 772:	8c 93       	st	X, r24
	CLR_BIT(TCCR0,1);
 774:	a3 e5       	ldi	r26, 0x53	; 83
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	e3 e5       	ldi	r30, 0x53	; 83
 77a:	f0 e0       	ldi	r31, 0x00	; 0
 77c:	80 81       	ld	r24, Z
 77e:	8d 7f       	andi	r24, 0xFD	; 253
 780:	8c 93       	st	X, r24
	CLR_BIT(TCCR0,0);
 782:	a3 e5       	ldi	r26, 0x53	; 83
 784:	b0 e0       	ldi	r27, 0x00	; 0
 786:	e3 e5       	ldi	r30, 0x53	; 83
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	80 81       	ld	r24, Z
 78c:	8e 7f       	andi	r24, 0xFE	; 254
 78e:	8c 93       	st	X, r24

}
 790:	0f 90       	pop	r0
 792:	0f 90       	pop	r0
 794:	cf 91       	pop	r28
 796:	df 91       	pop	r29
 798:	08 95       	ret

0000079a <__vector_11>:

ISR(TIMER0_OVF_vect){
 79a:	1f 92       	push	r1
 79c:	0f 92       	push	r0
 79e:	0f b6       	in	r0, 0x3f	; 63
 7a0:	0f 92       	push	r0
 7a2:	11 24       	eor	r1, r1
 7a4:	2f 93       	push	r18
 7a6:	3f 93       	push	r19
 7a8:	8f 93       	push	r24
 7aa:	9f 93       	push	r25
 7ac:	ef 93       	push	r30
 7ae:	ff 93       	push	r31
 7b0:	df 93       	push	r29
 7b2:	cf 93       	push	r28
 7b4:	cd b7       	in	r28, 0x3d	; 61
 7b6:	de b7       	in	r29, 0x3e	; 62
	OVF_Counts++;
 7b8:	80 91 60 00 	lds	r24, 0x0060
 7bc:	90 91 61 00 	lds	r25, 0x0061
 7c0:	01 96       	adiw	r24, 0x01	; 1
 7c2:	90 93 61 00 	sts	0x0061, r25
 7c6:	80 93 60 00 	sts	0x0060, r24
	if(OVF_Counts==32){
 7ca:	80 91 60 00 	lds	r24, 0x0060
 7ce:	90 91 61 00 	lds	r25, 0x0061
 7d2:	80 32       	cpi	r24, 0x20	; 32
 7d4:	91 05       	cpc	r25, r1
 7d6:	f9 f4       	brne	.+62     	; 0x816 <__vector_11+0x7c>
		TCNT0=192;
 7d8:	e2 e5       	ldi	r30, 0x52	; 82
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 ec       	ldi	r24, 0xC0	; 192
 7de:	80 83       	st	Z, r24
		OVF_Counts=0;
 7e0:	10 92 61 00 	sts	0x0061, r1
 7e4:	10 92 60 00 	sts	0x0060, r1
		ms_counts++;
 7e8:	80 91 64 00 	lds	r24, 0x0064
 7ec:	90 91 65 00 	lds	r25, 0x0065
 7f0:	01 96       	adiw	r24, 0x01	; 1
 7f2:	90 93 65 00 	sts	0x0065, r25
 7f6:	80 93 64 00 	sts	0x0064, r24
		if(ms_counts==T_desired){
 7fa:	20 91 64 00 	lds	r18, 0x0064
 7fe:	30 91 65 00 	lds	r19, 0x0065
 802:	80 91 62 00 	lds	r24, 0x0062
 806:	90 91 63 00 	lds	r25, 0x0063
 80a:	28 17       	cp	r18, r24
 80c:	39 07       	cpc	r19, r25
 80e:	19 f4       	brne	.+6      	; 0x816 <__vector_11+0x7c>
			End=1;
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	80 93 66 00 	sts	0x0066, r24
		}
	}
}
 816:	cf 91       	pop	r28
 818:	df 91       	pop	r29
 81a:	ff 91       	pop	r31
 81c:	ef 91       	pop	r30
 81e:	9f 91       	pop	r25
 820:	8f 91       	pop	r24
 822:	3f 91       	pop	r19
 824:	2f 91       	pop	r18
 826:	0f 90       	pop	r0
 828:	0f be       	out	0x3f, r0	; 63
 82a:	0f 90       	pop	r0
 82c:	1f 90       	pop	r1
 82e:	18 95       	reti

00000830 <_exit>:
 830:	f8 94       	cli

00000832 <__stop_program>:
 832:	ff cf       	rjmp	.-2      	; 0x832 <__stop_program>

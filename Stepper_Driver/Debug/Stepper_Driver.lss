
Stepper_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000385c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000385c  000038d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001f14  00000000  00000000  000038d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000009a4  00000000  00000000  000057ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00006190  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  000062f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  0000647f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  000084c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  000095c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000a548  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000a6c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000a98a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b218  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e5       	ldi	r30, 0x5C	; 92
      68:	f8 e3       	ldi	r31, 0x38	; 56
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <main>
      7a:	0c 94 2c 1c 	jmp	0x3858	; 0x3858 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 f5 1b 	jmp	0x37ea	; 0x37ea <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 11 1c 	jmp	0x3822	; 0x3822 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 f5 1b 	jmp	0x37ea	; 0x37ea <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 11 1c 	jmp	0x3822	; 0x3822 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 fd 1b 	jmp	0x37fa	; 0x37fa <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 19 1c 	jmp	0x3832	; 0x3832 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 1d 1c 	jmp	0x383a	; 0x383a <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 05 1c 	jmp	0x380a	; 0x380a <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 21 1c 	jmp	0x3842	; 0x3842 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <Dio_vidSetPinDir>:
#include"../Lib/Std_types.h"
#include"../Lib/Bit_math.h"
#include"Dio_int.h"
#include<avr/io.h>

void Dio_vidSetPinDir(u8 Pin, u8 Dir){
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	00 d0       	rcall	.+0      	; 0xc94 <Dio_vidSetPinDir+0x6>
     c94:	00 d0       	rcall	.+0      	; 0xc96 <Dio_vidSetPinDir+0x8>
     c96:	00 d0       	rcall	.+0      	; 0xc98 <Dio_vidSetPinDir+0xa>
     c98:	cd b7       	in	r28, 0x3d	; 61
     c9a:	de b7       	in	r29, 0x3e	; 62
     c9c:	8b 83       	std	Y+3, r24	; 0x03
     c9e:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
     ca0:	8b 81       	ldd	r24, Y+3	; 0x03
     ca2:	86 95       	lsr	r24
     ca4:	86 95       	lsr	r24
     ca6:	86 95       	lsr	r24
     ca8:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
     caa:	8b 81       	ldd	r24, Y+3	; 0x03
     cac:	87 70       	andi	r24, 0x07	; 7
     cae:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
     cb0:	8a 81       	ldd	r24, Y+2	; 0x02
     cb2:	28 2f       	mov	r18, r24
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	3e 83       	std	Y+6, r19	; 0x06
     cb8:	2d 83       	std	Y+5, r18	; 0x05
     cba:	8d 81       	ldd	r24, Y+5	; 0x05
     cbc:	9e 81       	ldd	r25, Y+6	; 0x06
     cbe:	81 30       	cpi	r24, 0x01	; 1
     cc0:	91 05       	cpc	r25, r1
     cc2:	09 f4       	brne	.+2      	; 0xcc6 <Dio_vidSetPinDir+0x38>
     cc4:	43 c0       	rjmp	.+134    	; 0xd4c <Dio_vidSetPinDir+0xbe>
     cc6:	2d 81       	ldd	r18, Y+5	; 0x05
     cc8:	3e 81       	ldd	r19, Y+6	; 0x06
     cca:	22 30       	cpi	r18, 0x02	; 2
     ccc:	31 05       	cpc	r19, r1
     cce:	2c f4       	brge	.+10     	; 0xcda <Dio_vidSetPinDir+0x4c>
     cd0:	8d 81       	ldd	r24, Y+5	; 0x05
     cd2:	9e 81       	ldd	r25, Y+6	; 0x06
     cd4:	00 97       	sbiw	r24, 0x00	; 0
     cd6:	71 f0       	breq	.+28     	; 0xcf4 <Dio_vidSetPinDir+0x66>
     cd8:	bc c0       	rjmp	.+376    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
     cda:	2d 81       	ldd	r18, Y+5	; 0x05
     cdc:	3e 81       	ldd	r19, Y+6	; 0x06
     cde:	22 30       	cpi	r18, 0x02	; 2
     ce0:	31 05       	cpc	r19, r1
     ce2:	09 f4       	brne	.+2      	; 0xce6 <Dio_vidSetPinDir+0x58>
     ce4:	5f c0       	rjmp	.+190    	; 0xda4 <Dio_vidSetPinDir+0x116>
     ce6:	8d 81       	ldd	r24, Y+5	; 0x05
     ce8:	9e 81       	ldd	r25, Y+6	; 0x06
     cea:	83 30       	cpi	r24, 0x03	; 3
     cec:	91 05       	cpc	r25, r1
     cee:	09 f4       	brne	.+2      	; 0xcf2 <Dio_vidSetPinDir+0x64>
     cf0:	85 c0       	rjmp	.+266    	; 0xdfc <Dio_vidSetPinDir+0x16e>
     cf2:	af c0       	rjmp	.+350    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
	case 0:
		if(Dir==1){
     cf4:	8c 81       	ldd	r24, Y+4	; 0x04
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	a1 f4       	brne	.+40     	; 0xd22 <Dio_vidSetPinDir+0x94>
			SET_BIT(DDRA,PinLoc);
     cfa:	aa e3       	ldi	r26, 0x3A	; 58
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	ea e3       	ldi	r30, 0x3A	; 58
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	48 2f       	mov	r20, r24
     d06:	89 81       	ldd	r24, Y+1	; 0x01
     d08:	28 2f       	mov	r18, r24
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	02 2e       	mov	r0, r18
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <Dio_vidSetPinDir+0x8a>
     d14:	88 0f       	add	r24, r24
     d16:	99 1f       	adc	r25, r25
     d18:	0a 94       	dec	r0
     d1a:	e2 f7       	brpl	.-8      	; 0xd14 <Dio_vidSetPinDir+0x86>
     d1c:	84 2b       	or	r24, r20
     d1e:	8c 93       	st	X, r24
     d20:	98 c0       	rjmp	.+304    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRA,PinLoc);
     d22:	aa e3       	ldi	r26, 0x3A	; 58
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	ea e3       	ldi	r30, 0x3A	; 58
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	48 2f       	mov	r20, r24
     d2e:	89 81       	ldd	r24, Y+1	; 0x01
     d30:	28 2f       	mov	r18, r24
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	02 2e       	mov	r0, r18
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <Dio_vidSetPinDir+0xb2>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <Dio_vidSetPinDir+0xae>
     d44:	80 95       	com	r24
     d46:	84 23       	and	r24, r20
     d48:	8c 93       	st	X, r24
     d4a:	83 c0       	rjmp	.+262    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 1:
		if(Dir==1){
     d4c:	8c 81       	ldd	r24, Y+4	; 0x04
     d4e:	81 30       	cpi	r24, 0x01	; 1
     d50:	a1 f4       	brne	.+40     	; 0xd7a <Dio_vidSetPinDir+0xec>
			SET_BIT(DDRB,PinLoc);
     d52:	a7 e3       	ldi	r26, 0x37	; 55
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	e7 e3       	ldi	r30, 0x37	; 55
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	80 81       	ld	r24, Z
     d5c:	48 2f       	mov	r20, r24
     d5e:	89 81       	ldd	r24, Y+1	; 0x01
     d60:	28 2f       	mov	r18, r24
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	81 e0       	ldi	r24, 0x01	; 1
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	02 2e       	mov	r0, r18
     d6a:	02 c0       	rjmp	.+4      	; 0xd70 <Dio_vidSetPinDir+0xe2>
     d6c:	88 0f       	add	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	0a 94       	dec	r0
     d72:	e2 f7       	brpl	.-8      	; 0xd6c <Dio_vidSetPinDir+0xde>
     d74:	84 2b       	or	r24, r20
     d76:	8c 93       	st	X, r24
     d78:	6c c0       	rjmp	.+216    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRB,PinLoc);
     d7a:	a7 e3       	ldi	r26, 0x37	; 55
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	e7 e3       	ldi	r30, 0x37	; 55
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	80 81       	ld	r24, Z
     d84:	48 2f       	mov	r20, r24
     d86:	89 81       	ldd	r24, Y+1	; 0x01
     d88:	28 2f       	mov	r18, r24
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	02 2e       	mov	r0, r18
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <Dio_vidSetPinDir+0x10a>
     d94:	88 0f       	add	r24, r24
     d96:	99 1f       	adc	r25, r25
     d98:	0a 94       	dec	r0
     d9a:	e2 f7       	brpl	.-8      	; 0xd94 <Dio_vidSetPinDir+0x106>
     d9c:	80 95       	com	r24
     d9e:	84 23       	and	r24, r20
     da0:	8c 93       	st	X, r24
     da2:	57 c0       	rjmp	.+174    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 2:
		if(Dir==1){
     da4:	8c 81       	ldd	r24, Y+4	; 0x04
     da6:	81 30       	cpi	r24, 0x01	; 1
     da8:	a1 f4       	brne	.+40     	; 0xdd2 <Dio_vidSetPinDir+0x144>
			SET_BIT(DDRC,PinLoc);
     daa:	a4 e3       	ldi	r26, 0x34	; 52
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	e4 e3       	ldi	r30, 0x34	; 52
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	80 81       	ld	r24, Z
     db4:	48 2f       	mov	r20, r24
     db6:	89 81       	ldd	r24, Y+1	; 0x01
     db8:	28 2f       	mov	r18, r24
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	02 2e       	mov	r0, r18
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <Dio_vidSetPinDir+0x13a>
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	0a 94       	dec	r0
     dca:	e2 f7       	brpl	.-8      	; 0xdc4 <Dio_vidSetPinDir+0x136>
     dcc:	84 2b       	or	r24, r20
     dce:	8c 93       	st	X, r24
     dd0:	40 c0       	rjmp	.+128    	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRC,PinLoc);
     dd2:	a4 e3       	ldi	r26, 0x34	; 52
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	e4 e3       	ldi	r30, 0x34	; 52
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 81       	ld	r24, Z
     ddc:	48 2f       	mov	r20, r24
     dde:	89 81       	ldd	r24, Y+1	; 0x01
     de0:	28 2f       	mov	r18, r24
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	02 2e       	mov	r0, r18
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <Dio_vidSetPinDir+0x162>
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	0a 94       	dec	r0
     df2:	e2 f7       	brpl	.-8      	; 0xdec <Dio_vidSetPinDir+0x15e>
     df4:	80 95       	com	r24
     df6:	84 23       	and	r24, r20
     df8:	8c 93       	st	X, r24
     dfa:	2b c0       	rjmp	.+86     	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 3:
		if(Dir==1){
     dfc:	8c 81       	ldd	r24, Y+4	; 0x04
     dfe:	81 30       	cpi	r24, 0x01	; 1
     e00:	a1 f4       	brne	.+40     	; 0xe2a <Dio_vidSetPinDir+0x19c>
			SET_BIT(DDRD,PinLoc);
     e02:	a1 e3       	ldi	r26, 0x31	; 49
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	e1 e3       	ldi	r30, 0x31	; 49
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	80 81       	ld	r24, Z
     e0c:	48 2f       	mov	r20, r24
     e0e:	89 81       	ldd	r24, Y+1	; 0x01
     e10:	28 2f       	mov	r18, r24
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	02 2e       	mov	r0, r18
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <Dio_vidSetPinDir+0x192>
     e1c:	88 0f       	add	r24, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	0a 94       	dec	r0
     e22:	e2 f7       	brpl	.-8      	; 0xe1c <Dio_vidSetPinDir+0x18e>
     e24:	84 2b       	or	r24, r20
     e26:	8c 93       	st	X, r24
     e28:	14 c0       	rjmp	.+40     	; 0xe52 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRD,PinLoc);
     e2a:	a1 e3       	ldi	r26, 0x31	; 49
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	e1 e3       	ldi	r30, 0x31	; 49
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	80 81       	ld	r24, Z
     e34:	48 2f       	mov	r20, r24
     e36:	89 81       	ldd	r24, Y+1	; 0x01
     e38:	28 2f       	mov	r18, r24
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	02 2e       	mov	r0, r18
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <Dio_vidSetPinDir+0x1ba>
     e44:	88 0f       	add	r24, r24
     e46:	99 1f       	adc	r25, r25
     e48:	0a 94       	dec	r0
     e4a:	e2 f7       	brpl	.-8      	; 0xe44 <Dio_vidSetPinDir+0x1b6>
     e4c:	80 95       	com	r24
     e4e:	84 23       	and	r24, r20
     e50:	8c 93       	st	X, r24
		}
		break;
	}
}
     e52:	26 96       	adiw	r28, 0x06	; 6
     e54:	0f b6       	in	r0, 0x3f	; 63
     e56:	f8 94       	cli
     e58:	de bf       	out	0x3e, r29	; 62
     e5a:	0f be       	out	0x3f, r0	; 63
     e5c:	cd bf       	out	0x3d, r28	; 61
     e5e:	cf 91       	pop	r28
     e60:	df 91       	pop	r29
     e62:	08 95       	ret

00000e64 <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin, u8 Val){
     e64:	df 93       	push	r29
     e66:	cf 93       	push	r28
     e68:	00 d0       	rcall	.+0      	; 0xe6a <Dio_vidSetPinVal+0x6>
     e6a:	00 d0       	rcall	.+0      	; 0xe6c <Dio_vidSetPinVal+0x8>
     e6c:	00 d0       	rcall	.+0      	; 0xe6e <Dio_vidSetPinVal+0xa>
     e6e:	cd b7       	in	r28, 0x3d	; 61
     e70:	de b7       	in	r29, 0x3e	; 62
     e72:	8b 83       	std	Y+3, r24	; 0x03
     e74:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
     e76:	8b 81       	ldd	r24, Y+3	; 0x03
     e78:	86 95       	lsr	r24
     e7a:	86 95       	lsr	r24
     e7c:	86 95       	lsr	r24
     e7e:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
     e80:	8b 81       	ldd	r24, Y+3	; 0x03
     e82:	87 70       	andi	r24, 0x07	; 7
     e84:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
     e86:	8a 81       	ldd	r24, Y+2	; 0x02
     e88:	28 2f       	mov	r18, r24
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	3e 83       	std	Y+6, r19	; 0x06
     e8e:	2d 83       	std	Y+5, r18	; 0x05
     e90:	8d 81       	ldd	r24, Y+5	; 0x05
     e92:	9e 81       	ldd	r25, Y+6	; 0x06
     e94:	81 30       	cpi	r24, 0x01	; 1
     e96:	91 05       	cpc	r25, r1
     e98:	09 f4       	brne	.+2      	; 0xe9c <Dio_vidSetPinVal+0x38>
     e9a:	43 c0       	rjmp	.+134    	; 0xf22 <Dio_vidSetPinVal+0xbe>
     e9c:	2d 81       	ldd	r18, Y+5	; 0x05
     e9e:	3e 81       	ldd	r19, Y+6	; 0x06
     ea0:	22 30       	cpi	r18, 0x02	; 2
     ea2:	31 05       	cpc	r19, r1
     ea4:	2c f4       	brge	.+10     	; 0xeb0 <Dio_vidSetPinVal+0x4c>
     ea6:	8d 81       	ldd	r24, Y+5	; 0x05
     ea8:	9e 81       	ldd	r25, Y+6	; 0x06
     eaa:	00 97       	sbiw	r24, 0x00	; 0
     eac:	71 f0       	breq	.+28     	; 0xeca <Dio_vidSetPinVal+0x66>
     eae:	bc c0       	rjmp	.+376    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
     eb0:	2d 81       	ldd	r18, Y+5	; 0x05
     eb2:	3e 81       	ldd	r19, Y+6	; 0x06
     eb4:	22 30       	cpi	r18, 0x02	; 2
     eb6:	31 05       	cpc	r19, r1
     eb8:	09 f4       	brne	.+2      	; 0xebc <Dio_vidSetPinVal+0x58>
     eba:	5f c0       	rjmp	.+190    	; 0xf7a <Dio_vidSetPinVal+0x116>
     ebc:	8d 81       	ldd	r24, Y+5	; 0x05
     ebe:	9e 81       	ldd	r25, Y+6	; 0x06
     ec0:	83 30       	cpi	r24, 0x03	; 3
     ec2:	91 05       	cpc	r25, r1
     ec4:	09 f4       	brne	.+2      	; 0xec8 <Dio_vidSetPinVal+0x64>
     ec6:	85 c0       	rjmp	.+266    	; 0xfd2 <Dio_vidSetPinVal+0x16e>
     ec8:	af c0       	rjmp	.+350    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
	case 0:
		if(Val==1){
     eca:	8c 81       	ldd	r24, Y+4	; 0x04
     ecc:	81 30       	cpi	r24, 0x01	; 1
     ece:	a1 f4       	brne	.+40     	; 0xef8 <Dio_vidSetPinVal+0x94>
			SET_BIT(PORTA,PinLoc);
     ed0:	ab e3       	ldi	r26, 0x3B	; 59
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	eb e3       	ldi	r30, 0x3B	; 59
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	48 2f       	mov	r20, r24
     edc:	89 81       	ldd	r24, Y+1	; 0x01
     ede:	28 2f       	mov	r18, r24
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	02 2e       	mov	r0, r18
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <Dio_vidSetPinVal+0x8a>
     eea:	88 0f       	add	r24, r24
     eec:	99 1f       	adc	r25, r25
     eee:	0a 94       	dec	r0
     ef0:	e2 f7       	brpl	.-8      	; 0xeea <Dio_vidSetPinVal+0x86>
     ef2:	84 2b       	or	r24, r20
     ef4:	8c 93       	st	X, r24
     ef6:	98 c0       	rjmp	.+304    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTA,PinLoc);
     ef8:	ab e3       	ldi	r26, 0x3B	; 59
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	eb e3       	ldi	r30, 0x3B	; 59
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	48 2f       	mov	r20, r24
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	28 2f       	mov	r18, r24
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	81 e0       	ldi	r24, 0x01	; 1
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	02 2e       	mov	r0, r18
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <Dio_vidSetPinVal+0xb2>
     f12:	88 0f       	add	r24, r24
     f14:	99 1f       	adc	r25, r25
     f16:	0a 94       	dec	r0
     f18:	e2 f7       	brpl	.-8      	; 0xf12 <Dio_vidSetPinVal+0xae>
     f1a:	80 95       	com	r24
     f1c:	84 23       	and	r24, r20
     f1e:	8c 93       	st	X, r24
     f20:	83 c0       	rjmp	.+262    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 1:
		if(Val==1){
     f22:	8c 81       	ldd	r24, Y+4	; 0x04
     f24:	81 30       	cpi	r24, 0x01	; 1
     f26:	a1 f4       	brne	.+40     	; 0xf50 <Dio_vidSetPinVal+0xec>
			SET_BIT(PORTB,PinLoc);
     f28:	a8 e3       	ldi	r26, 0x38	; 56
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	e8 e3       	ldi	r30, 0x38	; 56
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z
     f32:	48 2f       	mov	r20, r24
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	28 2f       	mov	r18, r24
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	02 2e       	mov	r0, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <Dio_vidSetPinVal+0xe2>
     f42:	88 0f       	add	r24, r24
     f44:	99 1f       	adc	r25, r25
     f46:	0a 94       	dec	r0
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <Dio_vidSetPinVal+0xde>
     f4a:	84 2b       	or	r24, r20
     f4c:	8c 93       	st	X, r24
     f4e:	6c c0       	rjmp	.+216    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTB,PinLoc);
     f50:	a8 e3       	ldi	r26, 0x38	; 56
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	e8 e3       	ldi	r30, 0x38	; 56
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	48 2f       	mov	r20, r24
     f5c:	89 81       	ldd	r24, Y+1	; 0x01
     f5e:	28 2f       	mov	r18, r24
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	02 2e       	mov	r0, r18
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <Dio_vidSetPinVal+0x10a>
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	0a 94       	dec	r0
     f70:	e2 f7       	brpl	.-8      	; 0xf6a <Dio_vidSetPinVal+0x106>
     f72:	80 95       	com	r24
     f74:	84 23       	and	r24, r20
     f76:	8c 93       	st	X, r24
     f78:	57 c0       	rjmp	.+174    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 2:
		if(Val==1){
     f7a:	8c 81       	ldd	r24, Y+4	; 0x04
     f7c:	81 30       	cpi	r24, 0x01	; 1
     f7e:	a1 f4       	brne	.+40     	; 0xfa8 <Dio_vidSetPinVal+0x144>
			SET_BIT(PORTC,PinLoc);
     f80:	a5 e3       	ldi	r26, 0x35	; 53
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	e5 e3       	ldi	r30, 0x35	; 53
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	48 2f       	mov	r20, r24
     f8c:	89 81       	ldd	r24, Y+1	; 0x01
     f8e:	28 2f       	mov	r18, r24
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	02 2e       	mov	r0, r18
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <Dio_vidSetPinVal+0x13a>
     f9a:	88 0f       	add	r24, r24
     f9c:	99 1f       	adc	r25, r25
     f9e:	0a 94       	dec	r0
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <Dio_vidSetPinVal+0x136>
     fa2:	84 2b       	or	r24, r20
     fa4:	8c 93       	st	X, r24
     fa6:	40 c0       	rjmp	.+128    	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTC,PinLoc);
     fa8:	a5 e3       	ldi	r26, 0x35	; 53
     faa:	b0 e0       	ldi	r27, 0x00	; 0
     fac:	e5 e3       	ldi	r30, 0x35	; 53
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	48 2f       	mov	r20, r24
     fb4:	89 81       	ldd	r24, Y+1	; 0x01
     fb6:	28 2f       	mov	r18, r24
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	02 2e       	mov	r0, r18
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <Dio_vidSetPinVal+0x162>
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	0a 94       	dec	r0
     fc8:	e2 f7       	brpl	.-8      	; 0xfc2 <Dio_vidSetPinVal+0x15e>
     fca:	80 95       	com	r24
     fcc:	84 23       	and	r24, r20
     fce:	8c 93       	st	X, r24
     fd0:	2b c0       	rjmp	.+86     	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 3:
		if(Val==1){
     fd2:	8c 81       	ldd	r24, Y+4	; 0x04
     fd4:	81 30       	cpi	r24, 0x01	; 1
     fd6:	a1 f4       	brne	.+40     	; 0x1000 <Dio_vidSetPinVal+0x19c>
			SET_BIT(PORTD,PinLoc);
     fd8:	a2 e3       	ldi	r26, 0x32	; 50
     fda:	b0 e0       	ldi	r27, 0x00	; 0
     fdc:	e2 e3       	ldi	r30, 0x32	; 50
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	80 81       	ld	r24, Z
     fe2:	48 2f       	mov	r20, r24
     fe4:	89 81       	ldd	r24, Y+1	; 0x01
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	02 2e       	mov	r0, r18
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <Dio_vidSetPinVal+0x192>
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	0a 94       	dec	r0
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <Dio_vidSetPinVal+0x18e>
     ffa:	84 2b       	or	r24, r20
     ffc:	8c 93       	st	X, r24
     ffe:	14 c0       	rjmp	.+40     	; 0x1028 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTD,PinLoc);
    1000:	a2 e3       	ldi	r26, 0x32	; 50
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e2 e3       	ldi	r30, 0x32	; 50
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	48 2f       	mov	r20, r24
    100c:	89 81       	ldd	r24, Y+1	; 0x01
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 2e       	mov	r0, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <Dio_vidSetPinVal+0x1ba>
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	0a 94       	dec	r0
    1020:	e2 f7       	brpl	.-8      	; 0x101a <Dio_vidSetPinVal+0x1b6>
    1022:	80 95       	com	r24
    1024:	84 23       	and	r24, r20
    1026:	8c 93       	st	X, r24
		}
		break;
	}
}
    1028:	26 96       	adiw	r28, 0x06	; 6
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
    1034:	cf 91       	pop	r28
    1036:	df 91       	pop	r29
    1038:	08 95       	ret

0000103a <Stepper_vidInit>:
#include"Dio_int.h"
#include"Stepper_cfg.h"
#include"Stepper_int.h"
#include<avr/io.h>

void Stepper_vidInit(void){
    103a:	df 93       	push	r29
    103c:	cf 93       	push	r28
    103e:	cd b7       	in	r28, 0x3d	; 61
    1040:	de b7       	in	r29, 0x3e	; 62
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_A,DIO_u8OUTPUT);
    1042:	89 e0       	ldi	r24, 0x09	; 9
    1044:	61 e0       	ldi	r22, 0x01	; 1
    1046:	0e 94 47 06 	call	0xc8e	; 0xc8e <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_B,DIO_u8OUTPUT);
    104a:	8a e0       	ldi	r24, 0x0A	; 10
    104c:	61 e0       	ldi	r22, 0x01	; 1
    104e:	0e 94 47 06 	call	0xc8e	; 0xc8e <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_C,DIO_u8OUTPUT);
    1052:	8b e0       	ldi	r24, 0x0B	; 11
    1054:	61 e0       	ldi	r22, 0x01	; 1
    1056:	0e 94 47 06 	call	0xc8e	; 0xc8e <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_D,DIO_u8OUTPUT);
    105a:	8c e0       	ldi	r24, 0x0C	; 12
    105c:	61 e0       	ldi	r22, 0x01	; 1
    105e:	0e 94 47 06 	call	0xc8e	; 0xc8e <Dio_vidSetPinDir>
}
    1062:	cf 91       	pop	r28
    1064:	df 91       	pop	r29
    1066:	08 95       	ret

00001068 <Stepper_vidDirection>:

void Stepper_vidDirection(char direction, u8 angle){
    1068:	0f 93       	push	r16
    106a:	1f 93       	push	r17
    106c:	df 93       	push	r29
    106e:	cf 93       	push	r28
    1070:	cd b7       	in	r28, 0x3d	; 61
    1072:	de b7       	in	r29, 0x3e	; 62
    1074:	c7 58       	subi	r28, 0x87	; 135
    1076:	d1 40       	sbci	r29, 0x01	; 1
    1078:	0f b6       	in	r0, 0x3f	; 63
    107a:	f8 94       	cli
    107c:	de bf       	out	0x3e, r29	; 62
    107e:	0f be       	out	0x3f, r0	; 63
    1080:	cd bf       	out	0x3d, r28	; 61
    1082:	fe 01       	movw	r30, r28
    1084:	ee 57       	subi	r30, 0x7E	; 126
    1086:	fe 4f       	sbci	r31, 0xFE	; 254
    1088:	80 83       	st	Z, r24
    108a:	fe 01       	movw	r30, r28
    108c:	ed 57       	subi	r30, 0x7D	; 125
    108e:	fe 4f       	sbci	r31, 0xFE	; 254
    1090:	60 83       	st	Z, r22
	u8 x;
	if(direction=='L'){
    1092:	fe 01       	movw	r30, r28
    1094:	ee 57       	subi	r30, 0x7E	; 126
    1096:	fe 4f       	sbci	r31, 0xFE	; 254
    1098:	80 81       	ld	r24, Z
    109a:	8c 34       	cpi	r24, 0x4C	; 76
    109c:	11 f0       	breq	.+4      	; 0x10a2 <Stepper_vidDirection+0x3a>
    109e:	0c 94 68 12 	jmp	0x24d0	; 0x24d0 <Stepper_vidDirection+0x1468>
		switch(angle){
    10a2:	fe 01       	movw	r30, r28
    10a4:	ed 57       	subi	r30, 0x7D	; 125
    10a6:	fe 4f       	sbci	r31, 0xFE	; 254
    10a8:	80 81       	ld	r24, Z
    10aa:	28 2f       	mov	r18, r24
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	ca 57       	subi	r28, 0x7A	; 122
    10b0:	de 4f       	sbci	r29, 0xFE	; 254
    10b2:	39 83       	std	Y+1, r19	; 0x01
    10b4:	28 83       	st	Y, r18
    10b6:	c6 58       	subi	r28, 0x86	; 134
    10b8:	d1 40       	sbci	r29, 0x01	; 1
    10ba:	ca 57       	subi	r28, 0x7A	; 122
    10bc:	de 4f       	sbci	r29, 0xFE	; 254
    10be:	88 81       	ld	r24, Y
    10c0:	99 81       	ldd	r25, Y+1	; 0x01
    10c2:	c6 58       	subi	r28, 0x86	; 134
    10c4:	d1 40       	sbci	r29, 0x01	; 1
    10c6:	8a 35       	cpi	r24, 0x5A	; 90
    10c8:	91 05       	cpc	r25, r1
    10ca:	61 f0       	breq	.+24     	; 0x10e4 <Stepper_vidDirection+0x7c>
    10cc:	ca 57       	subi	r28, 0x7A	; 122
    10ce:	de 4f       	sbci	r29, 0xFE	; 254
    10d0:	e8 81       	ld	r30, Y
    10d2:	f9 81       	ldd	r31, Y+1	; 0x01
    10d4:	c6 58       	subi	r28, 0x86	; 134
    10d6:	d1 40       	sbci	r29, 0x01	; 1
    10d8:	e4 3b       	cpi	r30, 0xB4	; 180
    10da:	f1 05       	cpc	r31, r1
    10dc:	09 f4       	brne	.+2      	; 0x10e0 <Stepper_vidDirection+0x78>
    10de:	fd c4       	rjmp	.+2554   	; 0x1ada <Stepper_vidDirection+0xa72>
    10e0:	0c 94 62 1b 	jmp	0x36c4	; 0x36c4 <Stepper_vidDirection+0x265c>
		case 90:
			for(x=0; x<135; x++){
    10e4:	fe 01       	movw	r30, r28
    10e6:	ef 57       	subi	r30, 0x7F	; 127
    10e8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ea:	10 82       	st	Z, r1
    10ec:	ed c4       	rjmp	.+2522   	; 0x1ac8 <Stepper_vidDirection+0xa60>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    10ee:	89 e0       	ldi	r24, 0x09	; 9
    10f0:	60 e0       	ldi	r22, 0x00	; 0
    10f2:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    10f6:	8a e0       	ldi	r24, 0x0A	; 10
    10f8:	60 e0       	ldi	r22, 0x00	; 0
    10fa:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    10fe:	8b e0       	ldi	r24, 0x0B	; 11
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    1106:	8c e0       	ldi	r24, 0x0C	; 12
    1108:	61 e0       	ldi	r22, 0x01	; 1
    110a:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    110e:	fe 01       	movw	r30, r28
    1110:	e3 58       	subi	r30, 0x83	; 131
    1112:	fe 4f       	sbci	r31, 0xFE	; 254
    1114:	80 e0       	ldi	r24, 0x00	; 0
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	aa e7       	ldi	r26, 0x7A	; 122
    111a:	b4 e4       	ldi	r27, 0x44	; 68
    111c:	80 83       	st	Z, r24
    111e:	91 83       	std	Z+1, r25	; 0x01
    1120:	a2 83       	std	Z+2, r26	; 0x02
    1122:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1124:	8e 01       	movw	r16, r28
    1126:	07 58       	subi	r16, 0x87	; 135
    1128:	1e 4f       	sbci	r17, 0xFE	; 254
    112a:	fe 01       	movw	r30, r28
    112c:	e3 58       	subi	r30, 0x83	; 131
    112e:	fe 4f       	sbci	r31, 0xFE	; 254
    1130:	60 81       	ld	r22, Z
    1132:	71 81       	ldd	r23, Z+1	; 0x01
    1134:	82 81       	ldd	r24, Z+2	; 0x02
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	2b ea       	ldi	r18, 0xAB	; 171
    113a:	3a ea       	ldi	r19, 0xAA	; 170
    113c:	4a e2       	ldi	r20, 0x2A	; 42
    113e:	50 e4       	ldi	r21, 0x40	; 64
    1140:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1144:	dc 01       	movw	r26, r24
    1146:	cb 01       	movw	r24, r22
    1148:	f8 01       	movw	r30, r16
    114a:	80 83       	st	Z, r24
    114c:	91 83       	std	Z+1, r25	; 0x01
    114e:	a2 83       	std	Z+2, r26	; 0x02
    1150:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1152:	fe 01       	movw	r30, r28
    1154:	e7 58       	subi	r30, 0x87	; 135
    1156:	fe 4f       	sbci	r31, 0xFE	; 254
    1158:	60 81       	ld	r22, Z
    115a:	71 81       	ldd	r23, Z+1	; 0x01
    115c:	82 81       	ldd	r24, Z+2	; 0x02
    115e:	93 81       	ldd	r25, Z+3	; 0x03
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	40 e8       	ldi	r20, 0x80	; 128
    1166:	5f e3       	ldi	r21, 0x3F	; 63
    1168:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    116c:	88 23       	and	r24, r24
    116e:	34 f4       	brge	.+12     	; 0x117c <Stepper_vidDirection+0x114>
		__ticks = 1;
    1170:	fe 01       	movw	r30, r28
    1172:	e8 58       	subi	r30, 0x88	; 136
    1174:	fe 4f       	sbci	r31, 0xFE	; 254
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	80 83       	st	Z, r24
    117a:	e0 c0       	rjmp	.+448    	; 0x133c <Stepper_vidDirection+0x2d4>
	else if (__tmp > 255)
    117c:	fe 01       	movw	r30, r28
    117e:	e7 58       	subi	r30, 0x87	; 135
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	82 81       	ldd	r24, Z+2	; 0x02
    1188:	93 81       	ldd	r25, Z+3	; 0x03
    118a:	20 e0       	ldi	r18, 0x00	; 0
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	4f e7       	ldi	r20, 0x7F	; 127
    1190:	53 e4       	ldi	r21, 0x43	; 67
    1192:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1196:	18 16       	cp	r1, r24
    1198:	0c f0       	brlt	.+2      	; 0x119c <Stepper_vidDirection+0x134>
    119a:	c0 c0       	rjmp	.+384    	; 0x131c <Stepper_vidDirection+0x2b4>
	{
		_delay_ms(__us / 1000.0);
    119c:	fe 01       	movw	r30, r28
    119e:	e3 58       	subi	r30, 0x83	; 131
    11a0:	fe 4f       	sbci	r31, 0xFE	; 254
    11a2:	60 81       	ld	r22, Z
    11a4:	71 81       	ldd	r23, Z+1	; 0x01
    11a6:	82 81       	ldd	r24, Z+2	; 0x02
    11a8:	93 81       	ldd	r25, Z+3	; 0x03
    11aa:	20 e0       	ldi	r18, 0x00	; 0
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	4a e7       	ldi	r20, 0x7A	; 122
    11b0:	54 e4       	ldi	r21, 0x44	; 68
    11b2:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    11b6:	dc 01       	movw	r26, r24
    11b8:	cb 01       	movw	r24, r22
    11ba:	fe 01       	movw	r30, r28
    11bc:	ec 58       	subi	r30, 0x8C	; 140
    11be:	fe 4f       	sbci	r31, 0xFE	; 254
    11c0:	80 83       	st	Z, r24
    11c2:	91 83       	std	Z+1, r25	; 0x01
    11c4:	a2 83       	std	Z+2, r26	; 0x02
    11c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c8:	8e 01       	movw	r16, r28
    11ca:	00 59       	subi	r16, 0x90	; 144
    11cc:	1e 4f       	sbci	r17, 0xFE	; 254
    11ce:	fe 01       	movw	r30, r28
    11d0:	ec 58       	subi	r30, 0x8C	; 140
    11d2:	fe 4f       	sbci	r31, 0xFE	; 254
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	4a ef       	ldi	r20, 0xFA	; 250
    11e2:	54 e4       	ldi	r21, 0x44	; 68
    11e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	f8 01       	movw	r30, r16
    11ee:	80 83       	st	Z, r24
    11f0:	91 83       	std	Z+1, r25	; 0x01
    11f2:	a2 83       	std	Z+2, r26	; 0x02
    11f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11f6:	fe 01       	movw	r30, r28
    11f8:	e0 59       	subi	r30, 0x90	; 144
    11fa:	fe 4f       	sbci	r31, 0xFE	; 254
    11fc:	60 81       	ld	r22, Z
    11fe:	71 81       	ldd	r23, Z+1	; 0x01
    1200:	82 81       	ldd	r24, Z+2	; 0x02
    1202:	93 81       	ldd	r25, Z+3	; 0x03
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	40 e8       	ldi	r20, 0x80	; 128
    120a:	5f e3       	ldi	r21, 0x3F	; 63
    120c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1210:	88 23       	and	r24, r24
    1212:	44 f4       	brge	.+16     	; 0x1224 <Stepper_vidDirection+0x1bc>
		__ticks = 1;
    1214:	fe 01       	movw	r30, r28
    1216:	e2 59       	subi	r30, 0x92	; 146
    1218:	fe 4f       	sbci	r31, 0xFE	; 254
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	91 83       	std	Z+1, r25	; 0x01
    1220:	80 83       	st	Z, r24
    1222:	64 c0       	rjmp	.+200    	; 0x12ec <Stepper_vidDirection+0x284>
	else if (__tmp > 65535)
    1224:	fe 01       	movw	r30, r28
    1226:	e0 59       	subi	r30, 0x90	; 144
    1228:	fe 4f       	sbci	r31, 0xFE	; 254
    122a:	60 81       	ld	r22, Z
    122c:	71 81       	ldd	r23, Z+1	; 0x01
    122e:	82 81       	ldd	r24, Z+2	; 0x02
    1230:	93 81       	ldd	r25, Z+3	; 0x03
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	3f ef       	ldi	r19, 0xFF	; 255
    1236:	4f e7       	ldi	r20, 0x7F	; 127
    1238:	57 e4       	ldi	r21, 0x47	; 71
    123a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    123e:	18 16       	cp	r1, r24
    1240:	0c f0       	brlt	.+2      	; 0x1244 <Stepper_vidDirection+0x1dc>
    1242:	43 c0       	rjmp	.+134    	; 0x12ca <Stepper_vidDirection+0x262>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1244:	fe 01       	movw	r30, r28
    1246:	ec 58       	subi	r30, 0x8C	; 140
    1248:	fe 4f       	sbci	r31, 0xFE	; 254
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	82 81       	ldd	r24, Z+2	; 0x02
    1250:	93 81       	ldd	r25, Z+3	; 0x03
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	40 e2       	ldi	r20, 0x20	; 32
    1258:	51 e4       	ldi	r21, 0x41	; 65
    125a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    125e:	dc 01       	movw	r26, r24
    1260:	cb 01       	movw	r24, r22
    1262:	8e 01       	movw	r16, r28
    1264:	02 59       	subi	r16, 0x92	; 146
    1266:	1e 4f       	sbci	r17, 0xFE	; 254
    1268:	bc 01       	movw	r22, r24
    126a:	cd 01       	movw	r24, r26
    126c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	f8 01       	movw	r30, r16
    1276:	91 83       	std	Z+1, r25	; 0x01
    1278:	80 83       	st	Z, r24
    127a:	1f c0       	rjmp	.+62     	; 0x12ba <Stepper_vidDirection+0x252>
    127c:	fe 01       	movw	r30, r28
    127e:	e4 59       	subi	r30, 0x94	; 148
    1280:	fe 4f       	sbci	r31, 0xFE	; 254
    1282:	88 ec       	ldi	r24, 0xC8	; 200
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	91 83       	std	Z+1, r25	; 0x01
    1288:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    128a:	fe 01       	movw	r30, r28
    128c:	e4 59       	subi	r30, 0x94	; 148
    128e:	fe 4f       	sbci	r31, 0xFE	; 254
    1290:	80 81       	ld	r24, Z
    1292:	91 81       	ldd	r25, Z+1	; 0x01
    1294:	01 97       	sbiw	r24, 0x01	; 1
    1296:	f1 f7       	brne	.-4      	; 0x1294 <Stepper_vidDirection+0x22c>
    1298:	fe 01       	movw	r30, r28
    129a:	e4 59       	subi	r30, 0x94	; 148
    129c:	fe 4f       	sbci	r31, 0xFE	; 254
    129e:	91 83       	std	Z+1, r25	; 0x01
    12a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a2:	de 01       	movw	r26, r28
    12a4:	a2 59       	subi	r26, 0x92	; 146
    12a6:	be 4f       	sbci	r27, 0xFE	; 254
    12a8:	fe 01       	movw	r30, r28
    12aa:	e2 59       	subi	r30, 0x92	; 146
    12ac:	fe 4f       	sbci	r31, 0xFE	; 254
    12ae:	80 81       	ld	r24, Z
    12b0:	91 81       	ldd	r25, Z+1	; 0x01
    12b2:	01 97       	sbiw	r24, 0x01	; 1
    12b4:	11 96       	adiw	r26, 0x01	; 1
    12b6:	9c 93       	st	X, r25
    12b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ba:	fe 01       	movw	r30, r28
    12bc:	e2 59       	subi	r30, 0x92	; 146
    12be:	fe 4f       	sbci	r31, 0xFE	; 254
    12c0:	80 81       	ld	r24, Z
    12c2:	91 81       	ldd	r25, Z+1	; 0x01
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	d1 f6       	brne	.-76     	; 0x127c <Stepper_vidDirection+0x214>
    12c8:	4b c0       	rjmp	.+150    	; 0x1360 <Stepper_vidDirection+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ca:	8e 01       	movw	r16, r28
    12cc:	02 59       	subi	r16, 0x92	; 146
    12ce:	1e 4f       	sbci	r17, 0xFE	; 254
    12d0:	fe 01       	movw	r30, r28
    12d2:	e0 59       	subi	r30, 0x90	; 144
    12d4:	fe 4f       	sbci	r31, 0xFE	; 254
    12d6:	60 81       	ld	r22, Z
    12d8:	71 81       	ldd	r23, Z+1	; 0x01
    12da:	82 81       	ldd	r24, Z+2	; 0x02
    12dc:	93 81       	ldd	r25, Z+3	; 0x03
    12de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12e2:	dc 01       	movw	r26, r24
    12e4:	cb 01       	movw	r24, r22
    12e6:	f8 01       	movw	r30, r16
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	80 83       	st	Z, r24
    12ec:	de 01       	movw	r26, r28
    12ee:	a6 59       	subi	r26, 0x96	; 150
    12f0:	be 4f       	sbci	r27, 0xFE	; 254
    12f2:	fe 01       	movw	r30, r28
    12f4:	e2 59       	subi	r30, 0x92	; 146
    12f6:	fe 4f       	sbci	r31, 0xFE	; 254
    12f8:	80 81       	ld	r24, Z
    12fa:	91 81       	ldd	r25, Z+1	; 0x01
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	9c 93       	st	X, r25
    1300:	8e 93       	st	-X, r24
    1302:	fe 01       	movw	r30, r28
    1304:	e6 59       	subi	r30, 0x96	; 150
    1306:	fe 4f       	sbci	r31, 0xFE	; 254
    1308:	80 81       	ld	r24, Z
    130a:	91 81       	ldd	r25, Z+1	; 0x01
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	f1 f7       	brne	.-4      	; 0x130c <Stepper_vidDirection+0x2a4>
    1310:	fe 01       	movw	r30, r28
    1312:	e6 59       	subi	r30, 0x96	; 150
    1314:	fe 4f       	sbci	r31, 0xFE	; 254
    1316:	91 83       	std	Z+1, r25	; 0x01
    1318:	80 83       	st	Z, r24
    131a:	22 c0       	rjmp	.+68     	; 0x1360 <Stepper_vidDirection+0x2f8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    131c:	8e 01       	movw	r16, r28
    131e:	08 58       	subi	r16, 0x88	; 136
    1320:	1e 4f       	sbci	r17, 0xFE	; 254
    1322:	fe 01       	movw	r30, r28
    1324:	e7 58       	subi	r30, 0x87	; 135
    1326:	fe 4f       	sbci	r31, 0xFE	; 254
    1328:	60 81       	ld	r22, Z
    132a:	71 81       	ldd	r23, Z+1	; 0x01
    132c:	82 81       	ldd	r24, Z+2	; 0x02
    132e:	93 81       	ldd	r25, Z+3	; 0x03
    1330:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1334:	dc 01       	movw	r26, r24
    1336:	cb 01       	movw	r24, r22
    1338:	f8 01       	movw	r30, r16
    133a:	80 83       	st	Z, r24
    133c:	de 01       	movw	r26, r28
    133e:	a7 59       	subi	r26, 0x97	; 151
    1340:	be 4f       	sbci	r27, 0xFE	; 254
    1342:	fe 01       	movw	r30, r28
    1344:	e8 58       	subi	r30, 0x88	; 136
    1346:	fe 4f       	sbci	r31, 0xFE	; 254
    1348:	80 81       	ld	r24, Z
    134a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    134c:	fe 01       	movw	r30, r28
    134e:	e7 59       	subi	r30, 0x97	; 151
    1350:	fe 4f       	sbci	r31, 0xFE	; 254
    1352:	80 81       	ld	r24, Z
    1354:	8a 95       	dec	r24
    1356:	f1 f7       	brne	.-4      	; 0x1354 <Stepper_vidDirection+0x2ec>
    1358:	fe 01       	movw	r30, r28
    135a:	e7 59       	subi	r30, 0x97	; 151
    135c:	fe 4f       	sbci	r31, 0xFE	; 254
    135e:	80 83       	st	Z, r24
				_delay_us(1000);

				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1360:	89 e0       	ldi	r24, 0x09	; 9
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    1368:	8a e0       	ldi	r24, 0x0A	; 10
    136a:	60 e0       	ldi	r22, 0x00	; 0
    136c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    1370:	8b e0       	ldi	r24, 0x0B	; 11
    1372:	61 e0       	ldi	r22, 0x01	; 1
    1374:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    1378:	8c e0       	ldi	r24, 0x0C	; 12
    137a:	60 e0       	ldi	r22, 0x00	; 0
    137c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    1380:	fe 01       	movw	r30, r28
    1382:	eb 59       	subi	r30, 0x9B	; 155
    1384:	fe 4f       	sbci	r31, 0xFE	; 254
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	aa e7       	ldi	r26, 0x7A	; 122
    138c:	b4 e4       	ldi	r27, 0x44	; 68
    138e:	80 83       	st	Z, r24
    1390:	91 83       	std	Z+1, r25	; 0x01
    1392:	a2 83       	std	Z+2, r26	; 0x02
    1394:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1396:	8e 01       	movw	r16, r28
    1398:	0f 59       	subi	r16, 0x9F	; 159
    139a:	1e 4f       	sbci	r17, 0xFE	; 254
    139c:	fe 01       	movw	r30, r28
    139e:	eb 59       	subi	r30, 0x9B	; 155
    13a0:	fe 4f       	sbci	r31, 0xFE	; 254
    13a2:	60 81       	ld	r22, Z
    13a4:	71 81       	ldd	r23, Z+1	; 0x01
    13a6:	82 81       	ldd	r24, Z+2	; 0x02
    13a8:	93 81       	ldd	r25, Z+3	; 0x03
    13aa:	2b ea       	ldi	r18, 0xAB	; 171
    13ac:	3a ea       	ldi	r19, 0xAA	; 170
    13ae:	4a e2       	ldi	r20, 0x2A	; 42
    13b0:	50 e4       	ldi	r21, 0x40	; 64
    13b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13b6:	dc 01       	movw	r26, r24
    13b8:	cb 01       	movw	r24, r22
    13ba:	f8 01       	movw	r30, r16
    13bc:	80 83       	st	Z, r24
    13be:	91 83       	std	Z+1, r25	; 0x01
    13c0:	a2 83       	std	Z+2, r26	; 0x02
    13c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13c4:	fe 01       	movw	r30, r28
    13c6:	ef 59       	subi	r30, 0x9F	; 159
    13c8:	fe 4f       	sbci	r31, 0xFE	; 254
    13ca:	60 81       	ld	r22, Z
    13cc:	71 81       	ldd	r23, Z+1	; 0x01
    13ce:	82 81       	ldd	r24, Z+2	; 0x02
    13d0:	93 81       	ldd	r25, Z+3	; 0x03
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	40 e8       	ldi	r20, 0x80	; 128
    13d8:	5f e3       	ldi	r21, 0x3F	; 63
    13da:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    13de:	88 23       	and	r24, r24
    13e0:	34 f4       	brge	.+12     	; 0x13ee <Stepper_vidDirection+0x386>
		__ticks = 1;
    13e2:	fe 01       	movw	r30, r28
    13e4:	e0 5a       	subi	r30, 0xA0	; 160
    13e6:	fe 4f       	sbci	r31, 0xFE	; 254
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	80 83       	st	Z, r24
    13ec:	e0 c0       	rjmp	.+448    	; 0x15ae <Stepper_vidDirection+0x546>
	else if (__tmp > 255)
    13ee:	fe 01       	movw	r30, r28
    13f0:	ef 59       	subi	r30, 0x9F	; 159
    13f2:	fe 4f       	sbci	r31, 0xFE	; 254
    13f4:	60 81       	ld	r22, Z
    13f6:	71 81       	ldd	r23, Z+1	; 0x01
    13f8:	82 81       	ldd	r24, Z+2	; 0x02
    13fa:	93 81       	ldd	r25, Z+3	; 0x03
    13fc:	20 e0       	ldi	r18, 0x00	; 0
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	4f e7       	ldi	r20, 0x7F	; 127
    1402:	53 e4       	ldi	r21, 0x43	; 67
    1404:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1408:	18 16       	cp	r1, r24
    140a:	0c f0       	brlt	.+2      	; 0x140e <Stepper_vidDirection+0x3a6>
    140c:	c0 c0       	rjmp	.+384    	; 0x158e <Stepper_vidDirection+0x526>
	{
		_delay_ms(__us / 1000.0);
    140e:	fe 01       	movw	r30, r28
    1410:	eb 59       	subi	r30, 0x9B	; 155
    1412:	fe 4f       	sbci	r31, 0xFE	; 254
    1414:	60 81       	ld	r22, Z
    1416:	71 81       	ldd	r23, Z+1	; 0x01
    1418:	82 81       	ldd	r24, Z+2	; 0x02
    141a:	93 81       	ldd	r25, Z+3	; 0x03
    141c:	20 e0       	ldi	r18, 0x00	; 0
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	4a e7       	ldi	r20, 0x7A	; 122
    1422:	54 e4       	ldi	r21, 0x44	; 68
    1424:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1428:	dc 01       	movw	r26, r24
    142a:	cb 01       	movw	r24, r22
    142c:	fe 01       	movw	r30, r28
    142e:	e4 5a       	subi	r30, 0xA4	; 164
    1430:	fe 4f       	sbci	r31, 0xFE	; 254
    1432:	80 83       	st	Z, r24
    1434:	91 83       	std	Z+1, r25	; 0x01
    1436:	a2 83       	std	Z+2, r26	; 0x02
    1438:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    143a:	8e 01       	movw	r16, r28
    143c:	08 5a       	subi	r16, 0xA8	; 168
    143e:	1e 4f       	sbci	r17, 0xFE	; 254
    1440:	fe 01       	movw	r30, r28
    1442:	e4 5a       	subi	r30, 0xA4	; 164
    1444:	fe 4f       	sbci	r31, 0xFE	; 254
    1446:	60 81       	ld	r22, Z
    1448:	71 81       	ldd	r23, Z+1	; 0x01
    144a:	82 81       	ldd	r24, Z+2	; 0x02
    144c:	93 81       	ldd	r25, Z+3	; 0x03
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	4a ef       	ldi	r20, 0xFA	; 250
    1454:	54 e4       	ldi	r21, 0x44	; 68
    1456:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    145a:	dc 01       	movw	r26, r24
    145c:	cb 01       	movw	r24, r22
    145e:	f8 01       	movw	r30, r16
    1460:	80 83       	st	Z, r24
    1462:	91 83       	std	Z+1, r25	; 0x01
    1464:	a2 83       	std	Z+2, r26	; 0x02
    1466:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1468:	fe 01       	movw	r30, r28
    146a:	e8 5a       	subi	r30, 0xA8	; 168
    146c:	fe 4f       	sbci	r31, 0xFE	; 254
    146e:	60 81       	ld	r22, Z
    1470:	71 81       	ldd	r23, Z+1	; 0x01
    1472:	82 81       	ldd	r24, Z+2	; 0x02
    1474:	93 81       	ldd	r25, Z+3	; 0x03
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	40 e8       	ldi	r20, 0x80	; 128
    147c:	5f e3       	ldi	r21, 0x3F	; 63
    147e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1482:	88 23       	and	r24, r24
    1484:	44 f4       	brge	.+16     	; 0x1496 <Stepper_vidDirection+0x42e>
		__ticks = 1;
    1486:	fe 01       	movw	r30, r28
    1488:	ea 5a       	subi	r30, 0xAA	; 170
    148a:	fe 4f       	sbci	r31, 0xFE	; 254
    148c:	81 e0       	ldi	r24, 0x01	; 1
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	91 83       	std	Z+1, r25	; 0x01
    1492:	80 83       	st	Z, r24
    1494:	64 c0       	rjmp	.+200    	; 0x155e <Stepper_vidDirection+0x4f6>
	else if (__tmp > 65535)
    1496:	fe 01       	movw	r30, r28
    1498:	e8 5a       	subi	r30, 0xA8	; 168
    149a:	fe 4f       	sbci	r31, 0xFE	; 254
    149c:	60 81       	ld	r22, Z
    149e:	71 81       	ldd	r23, Z+1	; 0x01
    14a0:	82 81       	ldd	r24, Z+2	; 0x02
    14a2:	93 81       	ldd	r25, Z+3	; 0x03
    14a4:	20 e0       	ldi	r18, 0x00	; 0
    14a6:	3f ef       	ldi	r19, 0xFF	; 255
    14a8:	4f e7       	ldi	r20, 0x7F	; 127
    14aa:	57 e4       	ldi	r21, 0x47	; 71
    14ac:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    14b0:	18 16       	cp	r1, r24
    14b2:	0c f0       	brlt	.+2      	; 0x14b6 <Stepper_vidDirection+0x44e>
    14b4:	43 c0       	rjmp	.+134    	; 0x153c <Stepper_vidDirection+0x4d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14b6:	fe 01       	movw	r30, r28
    14b8:	e4 5a       	subi	r30, 0xA4	; 164
    14ba:	fe 4f       	sbci	r31, 0xFE	; 254
    14bc:	60 81       	ld	r22, Z
    14be:	71 81       	ldd	r23, Z+1	; 0x01
    14c0:	82 81       	ldd	r24, Z+2	; 0x02
    14c2:	93 81       	ldd	r25, Z+3	; 0x03
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	40 e2       	ldi	r20, 0x20	; 32
    14ca:	51 e4       	ldi	r21, 0x41	; 65
    14cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	8e 01       	movw	r16, r28
    14d6:	0a 5a       	subi	r16, 0xAA	; 170
    14d8:	1e 4f       	sbci	r17, 0xFE	; 254
    14da:	bc 01       	movw	r22, r24
    14dc:	cd 01       	movw	r24, r26
    14de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	f8 01       	movw	r30, r16
    14e8:	91 83       	std	Z+1, r25	; 0x01
    14ea:	80 83       	st	Z, r24
    14ec:	1f c0       	rjmp	.+62     	; 0x152c <Stepper_vidDirection+0x4c4>
    14ee:	fe 01       	movw	r30, r28
    14f0:	ec 5a       	subi	r30, 0xAC	; 172
    14f2:	fe 4f       	sbci	r31, 0xFE	; 254
    14f4:	88 ec       	ldi	r24, 0xC8	; 200
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	91 83       	std	Z+1, r25	; 0x01
    14fa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14fc:	fe 01       	movw	r30, r28
    14fe:	ec 5a       	subi	r30, 0xAC	; 172
    1500:	fe 4f       	sbci	r31, 0xFE	; 254
    1502:	80 81       	ld	r24, Z
    1504:	91 81       	ldd	r25, Z+1	; 0x01
    1506:	01 97       	sbiw	r24, 0x01	; 1
    1508:	f1 f7       	brne	.-4      	; 0x1506 <Stepper_vidDirection+0x49e>
    150a:	fe 01       	movw	r30, r28
    150c:	ec 5a       	subi	r30, 0xAC	; 172
    150e:	fe 4f       	sbci	r31, 0xFE	; 254
    1510:	91 83       	std	Z+1, r25	; 0x01
    1512:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1514:	de 01       	movw	r26, r28
    1516:	aa 5a       	subi	r26, 0xAA	; 170
    1518:	be 4f       	sbci	r27, 0xFE	; 254
    151a:	fe 01       	movw	r30, r28
    151c:	ea 5a       	subi	r30, 0xAA	; 170
    151e:	fe 4f       	sbci	r31, 0xFE	; 254
    1520:	80 81       	ld	r24, Z
    1522:	91 81       	ldd	r25, Z+1	; 0x01
    1524:	01 97       	sbiw	r24, 0x01	; 1
    1526:	11 96       	adiw	r26, 0x01	; 1
    1528:	9c 93       	st	X, r25
    152a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    152c:	fe 01       	movw	r30, r28
    152e:	ea 5a       	subi	r30, 0xAA	; 170
    1530:	fe 4f       	sbci	r31, 0xFE	; 254
    1532:	80 81       	ld	r24, Z
    1534:	91 81       	ldd	r25, Z+1	; 0x01
    1536:	00 97       	sbiw	r24, 0x00	; 0
    1538:	d1 f6       	brne	.-76     	; 0x14ee <Stepper_vidDirection+0x486>
    153a:	4b c0       	rjmp	.+150    	; 0x15d2 <Stepper_vidDirection+0x56a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    153c:	8e 01       	movw	r16, r28
    153e:	0a 5a       	subi	r16, 0xAA	; 170
    1540:	1e 4f       	sbci	r17, 0xFE	; 254
    1542:	fe 01       	movw	r30, r28
    1544:	e8 5a       	subi	r30, 0xA8	; 168
    1546:	fe 4f       	sbci	r31, 0xFE	; 254
    1548:	60 81       	ld	r22, Z
    154a:	71 81       	ldd	r23, Z+1	; 0x01
    154c:	82 81       	ldd	r24, Z+2	; 0x02
    154e:	93 81       	ldd	r25, Z+3	; 0x03
    1550:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1554:	dc 01       	movw	r26, r24
    1556:	cb 01       	movw	r24, r22
    1558:	f8 01       	movw	r30, r16
    155a:	91 83       	std	Z+1, r25	; 0x01
    155c:	80 83       	st	Z, r24
    155e:	de 01       	movw	r26, r28
    1560:	ae 5a       	subi	r26, 0xAE	; 174
    1562:	be 4f       	sbci	r27, 0xFE	; 254
    1564:	fe 01       	movw	r30, r28
    1566:	ea 5a       	subi	r30, 0xAA	; 170
    1568:	fe 4f       	sbci	r31, 0xFE	; 254
    156a:	80 81       	ld	r24, Z
    156c:	91 81       	ldd	r25, Z+1	; 0x01
    156e:	11 96       	adiw	r26, 0x01	; 1
    1570:	9c 93       	st	X, r25
    1572:	8e 93       	st	-X, r24
    1574:	fe 01       	movw	r30, r28
    1576:	ee 5a       	subi	r30, 0xAE	; 174
    1578:	fe 4f       	sbci	r31, 0xFE	; 254
    157a:	80 81       	ld	r24, Z
    157c:	91 81       	ldd	r25, Z+1	; 0x01
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	f1 f7       	brne	.-4      	; 0x157e <Stepper_vidDirection+0x516>
    1582:	fe 01       	movw	r30, r28
    1584:	ee 5a       	subi	r30, 0xAE	; 174
    1586:	fe 4f       	sbci	r31, 0xFE	; 254
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	80 83       	st	Z, r24
    158c:	22 c0       	rjmp	.+68     	; 0x15d2 <Stepper_vidDirection+0x56a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    158e:	8e 01       	movw	r16, r28
    1590:	00 5a       	subi	r16, 0xA0	; 160
    1592:	1e 4f       	sbci	r17, 0xFE	; 254
    1594:	fe 01       	movw	r30, r28
    1596:	ef 59       	subi	r30, 0x9F	; 159
    1598:	fe 4f       	sbci	r31, 0xFE	; 254
    159a:	60 81       	ld	r22, Z
    159c:	71 81       	ldd	r23, Z+1	; 0x01
    159e:	82 81       	ldd	r24, Z+2	; 0x02
    15a0:	93 81       	ldd	r25, Z+3	; 0x03
    15a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15a6:	dc 01       	movw	r26, r24
    15a8:	cb 01       	movw	r24, r22
    15aa:	f8 01       	movw	r30, r16
    15ac:	80 83       	st	Z, r24
    15ae:	de 01       	movw	r26, r28
    15b0:	af 5a       	subi	r26, 0xAF	; 175
    15b2:	be 4f       	sbci	r27, 0xFE	; 254
    15b4:	fe 01       	movw	r30, r28
    15b6:	e0 5a       	subi	r30, 0xA0	; 160
    15b8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ba:	80 81       	ld	r24, Z
    15bc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    15be:	fe 01       	movw	r30, r28
    15c0:	ef 5a       	subi	r30, 0xAF	; 175
    15c2:	fe 4f       	sbci	r31, 0xFE	; 254
    15c4:	80 81       	ld	r24, Z
    15c6:	8a 95       	dec	r24
    15c8:	f1 f7       	brne	.-4      	; 0x15c6 <Stepper_vidDirection+0x55e>
    15ca:	fe 01       	movw	r30, r28
    15cc:	ef 5a       	subi	r30, 0xAF	; 175
    15ce:	fe 4f       	sbci	r31, 0xFE	; 254
    15d0:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    15d2:	89 e0       	ldi	r24, 0x09	; 9
    15d4:	60 e0       	ldi	r22, 0x00	; 0
    15d6:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    15da:	8a e0       	ldi	r24, 0x0A	; 10
    15dc:	61 e0       	ldi	r22, 0x01	; 1
    15de:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    15e2:	8b e0       	ldi	r24, 0x0B	; 11
    15e4:	60 e0       	ldi	r22, 0x00	; 0
    15e6:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    15ea:	8c e0       	ldi	r24, 0x0C	; 12
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    15f2:	fe 01       	movw	r30, r28
    15f4:	e3 5b       	subi	r30, 0xB3	; 179
    15f6:	fe 4f       	sbci	r31, 0xFE	; 254
    15f8:	80 e0       	ldi	r24, 0x00	; 0
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	aa e7       	ldi	r26, 0x7A	; 122
    15fe:	b4 e4       	ldi	r27, 0x44	; 68
    1600:	80 83       	st	Z, r24
    1602:	91 83       	std	Z+1, r25	; 0x01
    1604:	a2 83       	std	Z+2, r26	; 0x02
    1606:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1608:	8e 01       	movw	r16, r28
    160a:	07 5b       	subi	r16, 0xB7	; 183
    160c:	1e 4f       	sbci	r17, 0xFE	; 254
    160e:	fe 01       	movw	r30, r28
    1610:	e3 5b       	subi	r30, 0xB3	; 179
    1612:	fe 4f       	sbci	r31, 0xFE	; 254
    1614:	60 81       	ld	r22, Z
    1616:	71 81       	ldd	r23, Z+1	; 0x01
    1618:	82 81       	ldd	r24, Z+2	; 0x02
    161a:	93 81       	ldd	r25, Z+3	; 0x03
    161c:	2b ea       	ldi	r18, 0xAB	; 171
    161e:	3a ea       	ldi	r19, 0xAA	; 170
    1620:	4a e2       	ldi	r20, 0x2A	; 42
    1622:	50 e4       	ldi	r21, 0x40	; 64
    1624:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1628:	dc 01       	movw	r26, r24
    162a:	cb 01       	movw	r24, r22
    162c:	f8 01       	movw	r30, r16
    162e:	80 83       	st	Z, r24
    1630:	91 83       	std	Z+1, r25	; 0x01
    1632:	a2 83       	std	Z+2, r26	; 0x02
    1634:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1636:	fe 01       	movw	r30, r28
    1638:	e7 5b       	subi	r30, 0xB7	; 183
    163a:	fe 4f       	sbci	r31, 0xFE	; 254
    163c:	60 81       	ld	r22, Z
    163e:	71 81       	ldd	r23, Z+1	; 0x01
    1640:	82 81       	ldd	r24, Z+2	; 0x02
    1642:	93 81       	ldd	r25, Z+3	; 0x03
    1644:	20 e0       	ldi	r18, 0x00	; 0
    1646:	30 e0       	ldi	r19, 0x00	; 0
    1648:	40 e8       	ldi	r20, 0x80	; 128
    164a:	5f e3       	ldi	r21, 0x3F	; 63
    164c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1650:	88 23       	and	r24, r24
    1652:	34 f4       	brge	.+12     	; 0x1660 <Stepper_vidDirection+0x5f8>
		__ticks = 1;
    1654:	fe 01       	movw	r30, r28
    1656:	e8 5b       	subi	r30, 0xB8	; 184
    1658:	fe 4f       	sbci	r31, 0xFE	; 254
    165a:	81 e0       	ldi	r24, 0x01	; 1
    165c:	80 83       	st	Z, r24
    165e:	e0 c0       	rjmp	.+448    	; 0x1820 <Stepper_vidDirection+0x7b8>
	else if (__tmp > 255)
    1660:	fe 01       	movw	r30, r28
    1662:	e7 5b       	subi	r30, 0xB7	; 183
    1664:	fe 4f       	sbci	r31, 0xFE	; 254
    1666:	60 81       	ld	r22, Z
    1668:	71 81       	ldd	r23, Z+1	; 0x01
    166a:	82 81       	ldd	r24, Z+2	; 0x02
    166c:	93 81       	ldd	r25, Z+3	; 0x03
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	4f e7       	ldi	r20, 0x7F	; 127
    1674:	53 e4       	ldi	r21, 0x43	; 67
    1676:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    167a:	18 16       	cp	r1, r24
    167c:	0c f0       	brlt	.+2      	; 0x1680 <Stepper_vidDirection+0x618>
    167e:	c0 c0       	rjmp	.+384    	; 0x1800 <Stepper_vidDirection+0x798>
	{
		_delay_ms(__us / 1000.0);
    1680:	fe 01       	movw	r30, r28
    1682:	e3 5b       	subi	r30, 0xB3	; 179
    1684:	fe 4f       	sbci	r31, 0xFE	; 254
    1686:	60 81       	ld	r22, Z
    1688:	71 81       	ldd	r23, Z+1	; 0x01
    168a:	82 81       	ldd	r24, Z+2	; 0x02
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	4a e7       	ldi	r20, 0x7A	; 122
    1694:	54 e4       	ldi	r21, 0x44	; 68
    1696:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	fe 01       	movw	r30, r28
    16a0:	ec 5b       	subi	r30, 0xBC	; 188
    16a2:	fe 4f       	sbci	r31, 0xFE	; 254
    16a4:	80 83       	st	Z, r24
    16a6:	91 83       	std	Z+1, r25	; 0x01
    16a8:	a2 83       	std	Z+2, r26	; 0x02
    16aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16ac:	8e 01       	movw	r16, r28
    16ae:	00 5c       	subi	r16, 0xC0	; 192
    16b0:	1e 4f       	sbci	r17, 0xFE	; 254
    16b2:	fe 01       	movw	r30, r28
    16b4:	ec 5b       	subi	r30, 0xBC	; 188
    16b6:	fe 4f       	sbci	r31, 0xFE	; 254
    16b8:	60 81       	ld	r22, Z
    16ba:	71 81       	ldd	r23, Z+1	; 0x01
    16bc:	82 81       	ldd	r24, Z+2	; 0x02
    16be:	93 81       	ldd	r25, Z+3	; 0x03
    16c0:	20 e0       	ldi	r18, 0x00	; 0
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	4a ef       	ldi	r20, 0xFA	; 250
    16c6:	54 e4       	ldi	r21, 0x44	; 68
    16c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16cc:	dc 01       	movw	r26, r24
    16ce:	cb 01       	movw	r24, r22
    16d0:	f8 01       	movw	r30, r16
    16d2:	80 83       	st	Z, r24
    16d4:	91 83       	std	Z+1, r25	; 0x01
    16d6:	a2 83       	std	Z+2, r26	; 0x02
    16d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16da:	fe 01       	movw	r30, r28
    16dc:	e0 5c       	subi	r30, 0xC0	; 192
    16de:	fe 4f       	sbci	r31, 0xFE	; 254
    16e0:	60 81       	ld	r22, Z
    16e2:	71 81       	ldd	r23, Z+1	; 0x01
    16e4:	82 81       	ldd	r24, Z+2	; 0x02
    16e6:	93 81       	ldd	r25, Z+3	; 0x03
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	40 e8       	ldi	r20, 0x80	; 128
    16ee:	5f e3       	ldi	r21, 0x3F	; 63
    16f0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    16f4:	88 23       	and	r24, r24
    16f6:	44 f4       	brge	.+16     	; 0x1708 <Stepper_vidDirection+0x6a0>
		__ticks = 1;
    16f8:	fe 01       	movw	r30, r28
    16fa:	e2 5c       	subi	r30, 0xC2	; 194
    16fc:	fe 4f       	sbci	r31, 0xFE	; 254
    16fe:	81 e0       	ldi	r24, 0x01	; 1
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	91 83       	std	Z+1, r25	; 0x01
    1704:	80 83       	st	Z, r24
    1706:	64 c0       	rjmp	.+200    	; 0x17d0 <Stepper_vidDirection+0x768>
	else if (__tmp > 65535)
    1708:	fe 01       	movw	r30, r28
    170a:	e0 5c       	subi	r30, 0xC0	; 192
    170c:	fe 4f       	sbci	r31, 0xFE	; 254
    170e:	60 81       	ld	r22, Z
    1710:	71 81       	ldd	r23, Z+1	; 0x01
    1712:	82 81       	ldd	r24, Z+2	; 0x02
    1714:	93 81       	ldd	r25, Z+3	; 0x03
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	3f ef       	ldi	r19, 0xFF	; 255
    171a:	4f e7       	ldi	r20, 0x7F	; 127
    171c:	57 e4       	ldi	r21, 0x47	; 71
    171e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1722:	18 16       	cp	r1, r24
    1724:	0c f0       	brlt	.+2      	; 0x1728 <Stepper_vidDirection+0x6c0>
    1726:	43 c0       	rjmp	.+134    	; 0x17ae <Stepper_vidDirection+0x746>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1728:	fe 01       	movw	r30, r28
    172a:	ec 5b       	subi	r30, 0xBC	; 188
    172c:	fe 4f       	sbci	r31, 0xFE	; 254
    172e:	60 81       	ld	r22, Z
    1730:	71 81       	ldd	r23, Z+1	; 0x01
    1732:	82 81       	ldd	r24, Z+2	; 0x02
    1734:	93 81       	ldd	r25, Z+3	; 0x03
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	40 e2       	ldi	r20, 0x20	; 32
    173c:	51 e4       	ldi	r21, 0x41	; 65
    173e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	8e 01       	movw	r16, r28
    1748:	02 5c       	subi	r16, 0xC2	; 194
    174a:	1e 4f       	sbci	r17, 0xFE	; 254
    174c:	bc 01       	movw	r22, r24
    174e:	cd 01       	movw	r24, r26
    1750:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	f8 01       	movw	r30, r16
    175a:	91 83       	std	Z+1, r25	; 0x01
    175c:	80 83       	st	Z, r24
    175e:	1f c0       	rjmp	.+62     	; 0x179e <Stepper_vidDirection+0x736>
    1760:	fe 01       	movw	r30, r28
    1762:	e4 5c       	subi	r30, 0xC4	; 196
    1764:	fe 4f       	sbci	r31, 0xFE	; 254
    1766:	88 ec       	ldi	r24, 0xC8	; 200
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	91 83       	std	Z+1, r25	; 0x01
    176c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    176e:	fe 01       	movw	r30, r28
    1770:	e4 5c       	subi	r30, 0xC4	; 196
    1772:	fe 4f       	sbci	r31, 0xFE	; 254
    1774:	80 81       	ld	r24, Z
    1776:	91 81       	ldd	r25, Z+1	; 0x01
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	f1 f7       	brne	.-4      	; 0x1778 <Stepper_vidDirection+0x710>
    177c:	fe 01       	movw	r30, r28
    177e:	e4 5c       	subi	r30, 0xC4	; 196
    1780:	fe 4f       	sbci	r31, 0xFE	; 254
    1782:	91 83       	std	Z+1, r25	; 0x01
    1784:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1786:	de 01       	movw	r26, r28
    1788:	a2 5c       	subi	r26, 0xC2	; 194
    178a:	be 4f       	sbci	r27, 0xFE	; 254
    178c:	fe 01       	movw	r30, r28
    178e:	e2 5c       	subi	r30, 0xC2	; 194
    1790:	fe 4f       	sbci	r31, 0xFE	; 254
    1792:	80 81       	ld	r24, Z
    1794:	91 81       	ldd	r25, Z+1	; 0x01
    1796:	01 97       	sbiw	r24, 0x01	; 1
    1798:	11 96       	adiw	r26, 0x01	; 1
    179a:	9c 93       	st	X, r25
    179c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    179e:	fe 01       	movw	r30, r28
    17a0:	e2 5c       	subi	r30, 0xC2	; 194
    17a2:	fe 4f       	sbci	r31, 0xFE	; 254
    17a4:	80 81       	ld	r24, Z
    17a6:	91 81       	ldd	r25, Z+1	; 0x01
    17a8:	00 97       	sbiw	r24, 0x00	; 0
    17aa:	d1 f6       	brne	.-76     	; 0x1760 <Stepper_vidDirection+0x6f8>
    17ac:	4b c0       	rjmp	.+150    	; 0x1844 <Stepper_vidDirection+0x7dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ae:	8e 01       	movw	r16, r28
    17b0:	02 5c       	subi	r16, 0xC2	; 194
    17b2:	1e 4f       	sbci	r17, 0xFE	; 254
    17b4:	fe 01       	movw	r30, r28
    17b6:	e0 5c       	subi	r30, 0xC0	; 192
    17b8:	fe 4f       	sbci	r31, 0xFE	; 254
    17ba:	60 81       	ld	r22, Z
    17bc:	71 81       	ldd	r23, Z+1	; 0x01
    17be:	82 81       	ldd	r24, Z+2	; 0x02
    17c0:	93 81       	ldd	r25, Z+3	; 0x03
    17c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	f8 01       	movw	r30, r16
    17cc:	91 83       	std	Z+1, r25	; 0x01
    17ce:	80 83       	st	Z, r24
    17d0:	de 01       	movw	r26, r28
    17d2:	a6 5c       	subi	r26, 0xC6	; 198
    17d4:	be 4f       	sbci	r27, 0xFE	; 254
    17d6:	fe 01       	movw	r30, r28
    17d8:	e2 5c       	subi	r30, 0xC2	; 194
    17da:	fe 4f       	sbci	r31, 0xFE	; 254
    17dc:	80 81       	ld	r24, Z
    17de:	91 81       	ldd	r25, Z+1	; 0x01
    17e0:	11 96       	adiw	r26, 0x01	; 1
    17e2:	9c 93       	st	X, r25
    17e4:	8e 93       	st	-X, r24
    17e6:	fe 01       	movw	r30, r28
    17e8:	e6 5c       	subi	r30, 0xC6	; 198
    17ea:	fe 4f       	sbci	r31, 0xFE	; 254
    17ec:	80 81       	ld	r24, Z
    17ee:	91 81       	ldd	r25, Z+1	; 0x01
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	f1 f7       	brne	.-4      	; 0x17f0 <Stepper_vidDirection+0x788>
    17f4:	fe 01       	movw	r30, r28
    17f6:	e6 5c       	subi	r30, 0xC6	; 198
    17f8:	fe 4f       	sbci	r31, 0xFE	; 254
    17fa:	91 83       	std	Z+1, r25	; 0x01
    17fc:	80 83       	st	Z, r24
    17fe:	22 c0       	rjmp	.+68     	; 0x1844 <Stepper_vidDirection+0x7dc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1800:	8e 01       	movw	r16, r28
    1802:	08 5b       	subi	r16, 0xB8	; 184
    1804:	1e 4f       	sbci	r17, 0xFE	; 254
    1806:	fe 01       	movw	r30, r28
    1808:	e7 5b       	subi	r30, 0xB7	; 183
    180a:	fe 4f       	sbci	r31, 0xFE	; 254
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1818:	dc 01       	movw	r26, r24
    181a:	cb 01       	movw	r24, r22
    181c:	f8 01       	movw	r30, r16
    181e:	80 83       	st	Z, r24
    1820:	de 01       	movw	r26, r28
    1822:	a7 5c       	subi	r26, 0xC7	; 199
    1824:	be 4f       	sbci	r27, 0xFE	; 254
    1826:	fe 01       	movw	r30, r28
    1828:	e8 5b       	subi	r30, 0xB8	; 184
    182a:	fe 4f       	sbci	r31, 0xFE	; 254
    182c:	80 81       	ld	r24, Z
    182e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1830:	fe 01       	movw	r30, r28
    1832:	e7 5c       	subi	r30, 0xC7	; 199
    1834:	fe 4f       	sbci	r31, 0xFE	; 254
    1836:	80 81       	ld	r24, Z
    1838:	8a 95       	dec	r24
    183a:	f1 f7       	brne	.-4      	; 0x1838 <Stepper_vidDirection+0x7d0>
    183c:	fe 01       	movw	r30, r28
    183e:	e7 5c       	subi	r30, 0xC7	; 199
    1840:	fe 4f       	sbci	r31, 0xFE	; 254
    1842:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    1844:	89 e0       	ldi	r24, 0x09	; 9
    1846:	61 e0       	ldi	r22, 0x01	; 1
    1848:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    184c:	8a e0       	ldi	r24, 0x0A	; 10
    184e:	60 e0       	ldi	r22, 0x00	; 0
    1850:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    1854:	8b e0       	ldi	r24, 0x0B	; 11
    1856:	60 e0       	ldi	r22, 0x00	; 0
    1858:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    185c:	8c e0       	ldi	r24, 0x0C	; 12
    185e:	60 e0       	ldi	r22, 0x00	; 0
    1860:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    1864:	fe 01       	movw	r30, r28
    1866:	eb 5c       	subi	r30, 0xCB	; 203
    1868:	fe 4f       	sbci	r31, 0xFE	; 254
    186a:	80 e0       	ldi	r24, 0x00	; 0
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	aa e7       	ldi	r26, 0x7A	; 122
    1870:	b4 e4       	ldi	r27, 0x44	; 68
    1872:	80 83       	st	Z, r24
    1874:	91 83       	std	Z+1, r25	; 0x01
    1876:	a2 83       	std	Z+2, r26	; 0x02
    1878:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    187a:	8e 01       	movw	r16, r28
    187c:	0f 5c       	subi	r16, 0xCF	; 207
    187e:	1e 4f       	sbci	r17, 0xFE	; 254
    1880:	fe 01       	movw	r30, r28
    1882:	eb 5c       	subi	r30, 0xCB	; 203
    1884:	fe 4f       	sbci	r31, 0xFE	; 254
    1886:	60 81       	ld	r22, Z
    1888:	71 81       	ldd	r23, Z+1	; 0x01
    188a:	82 81       	ldd	r24, Z+2	; 0x02
    188c:	93 81       	ldd	r25, Z+3	; 0x03
    188e:	2b ea       	ldi	r18, 0xAB	; 171
    1890:	3a ea       	ldi	r19, 0xAA	; 170
    1892:	4a e2       	ldi	r20, 0x2A	; 42
    1894:	50 e4       	ldi	r21, 0x40	; 64
    1896:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    189a:	dc 01       	movw	r26, r24
    189c:	cb 01       	movw	r24, r22
    189e:	f8 01       	movw	r30, r16
    18a0:	80 83       	st	Z, r24
    18a2:	91 83       	std	Z+1, r25	; 0x01
    18a4:	a2 83       	std	Z+2, r26	; 0x02
    18a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18a8:	fe 01       	movw	r30, r28
    18aa:	ef 5c       	subi	r30, 0xCF	; 207
    18ac:	fe 4f       	sbci	r31, 0xFE	; 254
    18ae:	60 81       	ld	r22, Z
    18b0:	71 81       	ldd	r23, Z+1	; 0x01
    18b2:	82 81       	ldd	r24, Z+2	; 0x02
    18b4:	93 81       	ldd	r25, Z+3	; 0x03
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	40 e8       	ldi	r20, 0x80	; 128
    18bc:	5f e3       	ldi	r21, 0x3F	; 63
    18be:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    18c2:	88 23       	and	r24, r24
    18c4:	34 f4       	brge	.+12     	; 0x18d2 <Stepper_vidDirection+0x86a>
		__ticks = 1;
    18c6:	fe 01       	movw	r30, r28
    18c8:	e0 5d       	subi	r30, 0xD0	; 208
    18ca:	fe 4f       	sbci	r31, 0xFE	; 254
    18cc:	81 e0       	ldi	r24, 0x01	; 1
    18ce:	80 83       	st	Z, r24
    18d0:	e0 c0       	rjmp	.+448    	; 0x1a92 <Stepper_vidDirection+0xa2a>
	else if (__tmp > 255)
    18d2:	fe 01       	movw	r30, r28
    18d4:	ef 5c       	subi	r30, 0xCF	; 207
    18d6:	fe 4f       	sbci	r31, 0xFE	; 254
    18d8:	60 81       	ld	r22, Z
    18da:	71 81       	ldd	r23, Z+1	; 0x01
    18dc:	82 81       	ldd	r24, Z+2	; 0x02
    18de:	93 81       	ldd	r25, Z+3	; 0x03
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	4f e7       	ldi	r20, 0x7F	; 127
    18e6:	53 e4       	ldi	r21, 0x43	; 67
    18e8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    18ec:	18 16       	cp	r1, r24
    18ee:	0c f0       	brlt	.+2      	; 0x18f2 <Stepper_vidDirection+0x88a>
    18f0:	c0 c0       	rjmp	.+384    	; 0x1a72 <Stepper_vidDirection+0xa0a>
	{
		_delay_ms(__us / 1000.0);
    18f2:	fe 01       	movw	r30, r28
    18f4:	eb 5c       	subi	r30, 0xCB	; 203
    18f6:	fe 4f       	sbci	r31, 0xFE	; 254
    18f8:	60 81       	ld	r22, Z
    18fa:	71 81       	ldd	r23, Z+1	; 0x01
    18fc:	82 81       	ldd	r24, Z+2	; 0x02
    18fe:	93 81       	ldd	r25, Z+3	; 0x03
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	4a e7       	ldi	r20, 0x7A	; 122
    1906:	54 e4       	ldi	r21, 0x44	; 68
    1908:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    190c:	dc 01       	movw	r26, r24
    190e:	cb 01       	movw	r24, r22
    1910:	fe 01       	movw	r30, r28
    1912:	e4 5d       	subi	r30, 0xD4	; 212
    1914:	fe 4f       	sbci	r31, 0xFE	; 254
    1916:	80 83       	st	Z, r24
    1918:	91 83       	std	Z+1, r25	; 0x01
    191a:	a2 83       	std	Z+2, r26	; 0x02
    191c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    191e:	8e 01       	movw	r16, r28
    1920:	08 5d       	subi	r16, 0xD8	; 216
    1922:	1e 4f       	sbci	r17, 0xFE	; 254
    1924:	fe 01       	movw	r30, r28
    1926:	e4 5d       	subi	r30, 0xD4	; 212
    1928:	fe 4f       	sbci	r31, 0xFE	; 254
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	4a ef       	ldi	r20, 0xFA	; 250
    1938:	54 e4       	ldi	r21, 0x44	; 68
    193a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    193e:	dc 01       	movw	r26, r24
    1940:	cb 01       	movw	r24, r22
    1942:	f8 01       	movw	r30, r16
    1944:	80 83       	st	Z, r24
    1946:	91 83       	std	Z+1, r25	; 0x01
    1948:	a2 83       	std	Z+2, r26	; 0x02
    194a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    194c:	fe 01       	movw	r30, r28
    194e:	e8 5d       	subi	r30, 0xD8	; 216
    1950:	fe 4f       	sbci	r31, 0xFE	; 254
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e8       	ldi	r20, 0x80	; 128
    1960:	5f e3       	ldi	r21, 0x3F	; 63
    1962:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1966:	88 23       	and	r24, r24
    1968:	44 f4       	brge	.+16     	; 0x197a <Stepper_vidDirection+0x912>
		__ticks = 1;
    196a:	fe 01       	movw	r30, r28
    196c:	ea 5d       	subi	r30, 0xDA	; 218
    196e:	fe 4f       	sbci	r31, 0xFE	; 254
    1970:	81 e0       	ldi	r24, 0x01	; 1
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	91 83       	std	Z+1, r25	; 0x01
    1976:	80 83       	st	Z, r24
    1978:	64 c0       	rjmp	.+200    	; 0x1a42 <Stepper_vidDirection+0x9da>
	else if (__tmp > 65535)
    197a:	fe 01       	movw	r30, r28
    197c:	e8 5d       	subi	r30, 0xD8	; 216
    197e:	fe 4f       	sbci	r31, 0xFE	; 254
    1980:	60 81       	ld	r22, Z
    1982:	71 81       	ldd	r23, Z+1	; 0x01
    1984:	82 81       	ldd	r24, Z+2	; 0x02
    1986:	93 81       	ldd	r25, Z+3	; 0x03
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	3f ef       	ldi	r19, 0xFF	; 255
    198c:	4f e7       	ldi	r20, 0x7F	; 127
    198e:	57 e4       	ldi	r21, 0x47	; 71
    1990:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1994:	18 16       	cp	r1, r24
    1996:	0c f0       	brlt	.+2      	; 0x199a <Stepper_vidDirection+0x932>
    1998:	43 c0       	rjmp	.+134    	; 0x1a20 <Stepper_vidDirection+0x9b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    199a:	fe 01       	movw	r30, r28
    199c:	e4 5d       	subi	r30, 0xD4	; 212
    199e:	fe 4f       	sbci	r31, 0xFE	; 254
    19a0:	60 81       	ld	r22, Z
    19a2:	71 81       	ldd	r23, Z+1	; 0x01
    19a4:	82 81       	ldd	r24, Z+2	; 0x02
    19a6:	93 81       	ldd	r25, Z+3	; 0x03
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	40 e2       	ldi	r20, 0x20	; 32
    19ae:	51 e4       	ldi	r21, 0x41	; 65
    19b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19b4:	dc 01       	movw	r26, r24
    19b6:	cb 01       	movw	r24, r22
    19b8:	8e 01       	movw	r16, r28
    19ba:	0a 5d       	subi	r16, 0xDA	; 218
    19bc:	1e 4f       	sbci	r17, 0xFE	; 254
    19be:	bc 01       	movw	r22, r24
    19c0:	cd 01       	movw	r24, r26
    19c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19c6:	dc 01       	movw	r26, r24
    19c8:	cb 01       	movw	r24, r22
    19ca:	f8 01       	movw	r30, r16
    19cc:	91 83       	std	Z+1, r25	; 0x01
    19ce:	80 83       	st	Z, r24
    19d0:	1f c0       	rjmp	.+62     	; 0x1a10 <Stepper_vidDirection+0x9a8>
    19d2:	fe 01       	movw	r30, r28
    19d4:	ec 5d       	subi	r30, 0xDC	; 220
    19d6:	fe 4f       	sbci	r31, 0xFE	; 254
    19d8:	88 ec       	ldi	r24, 0xC8	; 200
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	91 83       	std	Z+1, r25	; 0x01
    19de:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    19e0:	fe 01       	movw	r30, r28
    19e2:	ec 5d       	subi	r30, 0xDC	; 220
    19e4:	fe 4f       	sbci	r31, 0xFE	; 254
    19e6:	80 81       	ld	r24, Z
    19e8:	91 81       	ldd	r25, Z+1	; 0x01
    19ea:	01 97       	sbiw	r24, 0x01	; 1
    19ec:	f1 f7       	brne	.-4      	; 0x19ea <Stepper_vidDirection+0x982>
    19ee:	fe 01       	movw	r30, r28
    19f0:	ec 5d       	subi	r30, 0xDC	; 220
    19f2:	fe 4f       	sbci	r31, 0xFE	; 254
    19f4:	91 83       	std	Z+1, r25	; 0x01
    19f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19f8:	de 01       	movw	r26, r28
    19fa:	aa 5d       	subi	r26, 0xDA	; 218
    19fc:	be 4f       	sbci	r27, 0xFE	; 254
    19fe:	fe 01       	movw	r30, r28
    1a00:	ea 5d       	subi	r30, 0xDA	; 218
    1a02:	fe 4f       	sbci	r31, 0xFE	; 254
    1a04:	80 81       	ld	r24, Z
    1a06:	91 81       	ldd	r25, Z+1	; 0x01
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	11 96       	adiw	r26, 0x01	; 1
    1a0c:	9c 93       	st	X, r25
    1a0e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a10:	fe 01       	movw	r30, r28
    1a12:	ea 5d       	subi	r30, 0xDA	; 218
    1a14:	fe 4f       	sbci	r31, 0xFE	; 254
    1a16:	80 81       	ld	r24, Z
    1a18:	91 81       	ldd	r25, Z+1	; 0x01
    1a1a:	00 97       	sbiw	r24, 0x00	; 0
    1a1c:	d1 f6       	brne	.-76     	; 0x19d2 <Stepper_vidDirection+0x96a>
    1a1e:	4b c0       	rjmp	.+150    	; 0x1ab6 <Stepper_vidDirection+0xa4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a20:	8e 01       	movw	r16, r28
    1a22:	0a 5d       	subi	r16, 0xDA	; 218
    1a24:	1e 4f       	sbci	r17, 0xFE	; 254
    1a26:	fe 01       	movw	r30, r28
    1a28:	e8 5d       	subi	r30, 0xD8	; 216
    1a2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a2c:	60 81       	ld	r22, Z
    1a2e:	71 81       	ldd	r23, Z+1	; 0x01
    1a30:	82 81       	ldd	r24, Z+2	; 0x02
    1a32:	93 81       	ldd	r25, Z+3	; 0x03
    1a34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a38:	dc 01       	movw	r26, r24
    1a3a:	cb 01       	movw	r24, r22
    1a3c:	f8 01       	movw	r30, r16
    1a3e:	91 83       	std	Z+1, r25	; 0x01
    1a40:	80 83       	st	Z, r24
    1a42:	de 01       	movw	r26, r28
    1a44:	ae 5d       	subi	r26, 0xDE	; 222
    1a46:	be 4f       	sbci	r27, 0xFE	; 254
    1a48:	fe 01       	movw	r30, r28
    1a4a:	ea 5d       	subi	r30, 0xDA	; 218
    1a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a4e:	80 81       	ld	r24, Z
    1a50:	91 81       	ldd	r25, Z+1	; 0x01
    1a52:	11 96       	adiw	r26, 0x01	; 1
    1a54:	9c 93       	st	X, r25
    1a56:	8e 93       	st	-X, r24
    1a58:	fe 01       	movw	r30, r28
    1a5a:	ee 5d       	subi	r30, 0xDE	; 222
    1a5c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a5e:	80 81       	ld	r24, Z
    1a60:	91 81       	ldd	r25, Z+1	; 0x01
    1a62:	01 97       	sbiw	r24, 0x01	; 1
    1a64:	f1 f7       	brne	.-4      	; 0x1a62 <Stepper_vidDirection+0x9fa>
    1a66:	fe 01       	movw	r30, r28
    1a68:	ee 5d       	subi	r30, 0xDE	; 222
    1a6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a6c:	91 83       	std	Z+1, r25	; 0x01
    1a6e:	80 83       	st	Z, r24
    1a70:	22 c0       	rjmp	.+68     	; 0x1ab6 <Stepper_vidDirection+0xa4e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1a72:	8e 01       	movw	r16, r28
    1a74:	00 5d       	subi	r16, 0xD0	; 208
    1a76:	1e 4f       	sbci	r17, 0xFE	; 254
    1a78:	fe 01       	movw	r30, r28
    1a7a:	ef 5c       	subi	r30, 0xCF	; 207
    1a7c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a7e:	60 81       	ld	r22, Z
    1a80:	71 81       	ldd	r23, Z+1	; 0x01
    1a82:	82 81       	ldd	r24, Z+2	; 0x02
    1a84:	93 81       	ldd	r25, Z+3	; 0x03
    1a86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a8a:	dc 01       	movw	r26, r24
    1a8c:	cb 01       	movw	r24, r22
    1a8e:	f8 01       	movw	r30, r16
    1a90:	80 83       	st	Z, r24
    1a92:	de 01       	movw	r26, r28
    1a94:	af 5d       	subi	r26, 0xDF	; 223
    1a96:	be 4f       	sbci	r27, 0xFE	; 254
    1a98:	fe 01       	movw	r30, r28
    1a9a:	e0 5d       	subi	r30, 0xD0	; 208
    1a9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a9e:	80 81       	ld	r24, Z
    1aa0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	ef 5d       	subi	r30, 0xDF	; 223
    1aa6:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa8:	80 81       	ld	r24, Z
    1aaa:	8a 95       	dec	r24
    1aac:	f1 f7       	brne	.-4      	; 0x1aaa <Stepper_vidDirection+0xa42>
    1aae:	fe 01       	movw	r30, r28
    1ab0:	ef 5d       	subi	r30, 0xDF	; 223
    1ab2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ab4:	80 83       	st	Z, r24
void Stepper_vidDirection(char direction, u8 angle){
	u8 x;
	if(direction=='L'){
		switch(angle){
		case 90:
			for(x=0; x<135; x++){
    1ab6:	de 01       	movw	r26, r28
    1ab8:	af 57       	subi	r26, 0x7F	; 127
    1aba:	be 4f       	sbci	r27, 0xFE	; 254
    1abc:	fe 01       	movw	r30, r28
    1abe:	ef 57       	subi	r30, 0x7F	; 127
    1ac0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ac2:	80 81       	ld	r24, Z
    1ac4:	8f 5f       	subi	r24, 0xFF	; 255
    1ac6:	8c 93       	st	X, r24
    1ac8:	fe 01       	movw	r30, r28
    1aca:	ef 57       	subi	r30, 0x7F	; 127
    1acc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ace:	80 81       	ld	r24, Z
    1ad0:	87 38       	cpi	r24, 0x87	; 135
    1ad2:	08 f4       	brcc	.+2      	; 0x1ad6 <Stepper_vidDirection+0xa6e>
    1ad4:	0c cb       	rjmp	.-2536   	; 0x10ee <Stepper_vidDirection+0x86>
    1ad6:	0c 94 62 1b 	jmp	0x36c4	; 0x36c4 <Stepper_vidDirection+0x265c>
				_delay_us(1000);
			}
			break;

		case 180:
			for(x=0; x<250; x++){
    1ada:	fe 01       	movw	r30, r28
    1adc:	ef 57       	subi	r30, 0x7F	; 127
    1ade:	fe 4f       	sbci	r31, 0xFE	; 254
    1ae0:	10 82       	st	Z, r1
    1ae2:	ed c4       	rjmp	.+2522   	; 0x24be <Stepper_vidDirection+0x1456>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1ae4:	89 e0       	ldi	r24, 0x09	; 9
    1ae6:	60 e0       	ldi	r22, 0x00	; 0
    1ae8:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    1aec:	8a e0       	ldi	r24, 0x0A	; 10
    1aee:	60 e0       	ldi	r22, 0x00	; 0
    1af0:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    1af4:	8b e0       	ldi	r24, 0x0B	; 11
    1af6:	60 e0       	ldi	r22, 0x00	; 0
    1af8:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    1afc:	8c e0       	ldi	r24, 0x0C	; 12
    1afe:	61 e0       	ldi	r22, 0x01	; 1
    1b00:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    1b04:	fe 01       	movw	r30, r28
    1b06:	e3 5e       	subi	r30, 0xE3	; 227
    1b08:	fe 4f       	sbci	r31, 0xFE	; 254
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	aa e7       	ldi	r26, 0x7A	; 122
    1b10:	b4 e4       	ldi	r27, 0x44	; 68
    1b12:	80 83       	st	Z, r24
    1b14:	91 83       	std	Z+1, r25	; 0x01
    1b16:	a2 83       	std	Z+2, r26	; 0x02
    1b18:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1b1a:	8e 01       	movw	r16, r28
    1b1c:	07 5e       	subi	r16, 0xE7	; 231
    1b1e:	1e 4f       	sbci	r17, 0xFE	; 254
    1b20:	fe 01       	movw	r30, r28
    1b22:	e3 5e       	subi	r30, 0xE3	; 227
    1b24:	fe 4f       	sbci	r31, 0xFE	; 254
    1b26:	60 81       	ld	r22, Z
    1b28:	71 81       	ldd	r23, Z+1	; 0x01
    1b2a:	82 81       	ldd	r24, Z+2	; 0x02
    1b2c:	93 81       	ldd	r25, Z+3	; 0x03
    1b2e:	2b ea       	ldi	r18, 0xAB	; 171
    1b30:	3a ea       	ldi	r19, 0xAA	; 170
    1b32:	4a e2       	ldi	r20, 0x2A	; 42
    1b34:	50 e4       	ldi	r21, 0x40	; 64
    1b36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b3a:	dc 01       	movw	r26, r24
    1b3c:	cb 01       	movw	r24, r22
    1b3e:	f8 01       	movw	r30, r16
    1b40:	80 83       	st	Z, r24
    1b42:	91 83       	std	Z+1, r25	; 0x01
    1b44:	a2 83       	std	Z+2, r26	; 0x02
    1b46:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b48:	fe 01       	movw	r30, r28
    1b4a:	e7 5e       	subi	r30, 0xE7	; 231
    1b4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b4e:	60 81       	ld	r22, Z
    1b50:	71 81       	ldd	r23, Z+1	; 0x01
    1b52:	82 81       	ldd	r24, Z+2	; 0x02
    1b54:	93 81       	ldd	r25, Z+3	; 0x03
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	40 e8       	ldi	r20, 0x80	; 128
    1b5c:	5f e3       	ldi	r21, 0x3F	; 63
    1b5e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b62:	88 23       	and	r24, r24
    1b64:	34 f4       	brge	.+12     	; 0x1b72 <Stepper_vidDirection+0xb0a>
		__ticks = 1;
    1b66:	fe 01       	movw	r30, r28
    1b68:	e8 5e       	subi	r30, 0xE8	; 232
    1b6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b6c:	81 e0       	ldi	r24, 0x01	; 1
    1b6e:	80 83       	st	Z, r24
    1b70:	e0 c0       	rjmp	.+448    	; 0x1d32 <Stepper_vidDirection+0xcca>
	else if (__tmp > 255)
    1b72:	fe 01       	movw	r30, r28
    1b74:	e7 5e       	subi	r30, 0xE7	; 231
    1b76:	fe 4f       	sbci	r31, 0xFE	; 254
    1b78:	60 81       	ld	r22, Z
    1b7a:	71 81       	ldd	r23, Z+1	; 0x01
    1b7c:	82 81       	ldd	r24, Z+2	; 0x02
    1b7e:	93 81       	ldd	r25, Z+3	; 0x03
    1b80:	20 e0       	ldi	r18, 0x00	; 0
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	4f e7       	ldi	r20, 0x7F	; 127
    1b86:	53 e4       	ldi	r21, 0x43	; 67
    1b88:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1b8c:	18 16       	cp	r1, r24
    1b8e:	0c f0       	brlt	.+2      	; 0x1b92 <Stepper_vidDirection+0xb2a>
    1b90:	c0 c0       	rjmp	.+384    	; 0x1d12 <Stepper_vidDirection+0xcaa>
	{
		_delay_ms(__us / 1000.0);
    1b92:	fe 01       	movw	r30, r28
    1b94:	e3 5e       	subi	r30, 0xE3	; 227
    1b96:	fe 4f       	sbci	r31, 0xFE	; 254
    1b98:	60 81       	ld	r22, Z
    1b9a:	71 81       	ldd	r23, Z+1	; 0x01
    1b9c:	82 81       	ldd	r24, Z+2	; 0x02
    1b9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	30 e0       	ldi	r19, 0x00	; 0
    1ba4:	4a e7       	ldi	r20, 0x7A	; 122
    1ba6:	54 e4       	ldi	r21, 0x44	; 68
    1ba8:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1bac:	dc 01       	movw	r26, r24
    1bae:	cb 01       	movw	r24, r22
    1bb0:	fe 01       	movw	r30, r28
    1bb2:	ec 5e       	subi	r30, 0xEC	; 236
    1bb4:	fe 4f       	sbci	r31, 0xFE	; 254
    1bb6:	80 83       	st	Z, r24
    1bb8:	91 83       	std	Z+1, r25	; 0x01
    1bba:	a2 83       	std	Z+2, r26	; 0x02
    1bbc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bbe:	8e 01       	movw	r16, r28
    1bc0:	00 5f       	subi	r16, 0xF0	; 240
    1bc2:	1e 4f       	sbci	r17, 0xFE	; 254
    1bc4:	fe 01       	movw	r30, r28
    1bc6:	ec 5e       	subi	r30, 0xEC	; 236
    1bc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1bca:	60 81       	ld	r22, Z
    1bcc:	71 81       	ldd	r23, Z+1	; 0x01
    1bce:	82 81       	ldd	r24, Z+2	; 0x02
    1bd0:	93 81       	ldd	r25, Z+3	; 0x03
    1bd2:	20 e0       	ldi	r18, 0x00	; 0
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	4a ef       	ldi	r20, 0xFA	; 250
    1bd8:	54 e4       	ldi	r21, 0x44	; 68
    1bda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bde:	dc 01       	movw	r26, r24
    1be0:	cb 01       	movw	r24, r22
    1be2:	f8 01       	movw	r30, r16
    1be4:	80 83       	st	Z, r24
    1be6:	91 83       	std	Z+1, r25	; 0x01
    1be8:	a2 83       	std	Z+2, r26	; 0x02
    1bea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bec:	fe 01       	movw	r30, r28
    1bee:	e0 5f       	subi	r30, 0xF0	; 240
    1bf0:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf2:	60 81       	ld	r22, Z
    1bf4:	71 81       	ldd	r23, Z+1	; 0x01
    1bf6:	82 81       	ldd	r24, Z+2	; 0x02
    1bf8:	93 81       	ldd	r25, Z+3	; 0x03
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	40 e8       	ldi	r20, 0x80	; 128
    1c00:	5f e3       	ldi	r21, 0x3F	; 63
    1c02:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c06:	88 23       	and	r24, r24
    1c08:	44 f4       	brge	.+16     	; 0x1c1a <Stepper_vidDirection+0xbb2>
		__ticks = 1;
    1c0a:	fe 01       	movw	r30, r28
    1c0c:	e2 5f       	subi	r30, 0xF2	; 242
    1c0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	91 83       	std	Z+1, r25	; 0x01
    1c16:	80 83       	st	Z, r24
    1c18:	64 c0       	rjmp	.+200    	; 0x1ce2 <Stepper_vidDirection+0xc7a>
	else if (__tmp > 65535)
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	e0 5f       	subi	r30, 0xF0	; 240
    1c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c20:	60 81       	ld	r22, Z
    1c22:	71 81       	ldd	r23, Z+1	; 0x01
    1c24:	82 81       	ldd	r24, Z+2	; 0x02
    1c26:	93 81       	ldd	r25, Z+3	; 0x03
    1c28:	20 e0       	ldi	r18, 0x00	; 0
    1c2a:	3f ef       	ldi	r19, 0xFF	; 255
    1c2c:	4f e7       	ldi	r20, 0x7F	; 127
    1c2e:	57 e4       	ldi	r21, 0x47	; 71
    1c30:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c34:	18 16       	cp	r1, r24
    1c36:	0c f0       	brlt	.+2      	; 0x1c3a <Stepper_vidDirection+0xbd2>
    1c38:	43 c0       	rjmp	.+134    	; 0x1cc0 <Stepper_vidDirection+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c3a:	fe 01       	movw	r30, r28
    1c3c:	ec 5e       	subi	r30, 0xEC	; 236
    1c3e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c40:	60 81       	ld	r22, Z
    1c42:	71 81       	ldd	r23, Z+1	; 0x01
    1c44:	82 81       	ldd	r24, Z+2	; 0x02
    1c46:	93 81       	ldd	r25, Z+3	; 0x03
    1c48:	20 e0       	ldi	r18, 0x00	; 0
    1c4a:	30 e0       	ldi	r19, 0x00	; 0
    1c4c:	40 e2       	ldi	r20, 0x20	; 32
    1c4e:	51 e4       	ldi	r21, 0x41	; 65
    1c50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c54:	dc 01       	movw	r26, r24
    1c56:	cb 01       	movw	r24, r22
    1c58:	8e 01       	movw	r16, r28
    1c5a:	02 5f       	subi	r16, 0xF2	; 242
    1c5c:	1e 4f       	sbci	r17, 0xFE	; 254
    1c5e:	bc 01       	movw	r22, r24
    1c60:	cd 01       	movw	r24, r26
    1c62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c66:	dc 01       	movw	r26, r24
    1c68:	cb 01       	movw	r24, r22
    1c6a:	f8 01       	movw	r30, r16
    1c6c:	91 83       	std	Z+1, r25	; 0x01
    1c6e:	80 83       	st	Z, r24
    1c70:	1f c0       	rjmp	.+62     	; 0x1cb0 <Stepper_vidDirection+0xc48>
    1c72:	fe 01       	movw	r30, r28
    1c74:	e4 5f       	subi	r30, 0xF4	; 244
    1c76:	fe 4f       	sbci	r31, 0xFE	; 254
    1c78:	88 ec       	ldi	r24, 0xC8	; 200
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	91 83       	std	Z+1, r25	; 0x01
    1c7e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1c80:	fe 01       	movw	r30, r28
    1c82:	e4 5f       	subi	r30, 0xF4	; 244
    1c84:	fe 4f       	sbci	r31, 0xFE	; 254
    1c86:	80 81       	ld	r24, Z
    1c88:	91 81       	ldd	r25, Z+1	; 0x01
    1c8a:	01 97       	sbiw	r24, 0x01	; 1
    1c8c:	f1 f7       	brne	.-4      	; 0x1c8a <Stepper_vidDirection+0xc22>
    1c8e:	fe 01       	movw	r30, r28
    1c90:	e4 5f       	subi	r30, 0xF4	; 244
    1c92:	fe 4f       	sbci	r31, 0xFE	; 254
    1c94:	91 83       	std	Z+1, r25	; 0x01
    1c96:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c98:	de 01       	movw	r26, r28
    1c9a:	a2 5f       	subi	r26, 0xF2	; 242
    1c9c:	be 4f       	sbci	r27, 0xFE	; 254
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	e2 5f       	subi	r30, 0xF2	; 242
    1ca2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca4:	80 81       	ld	r24, Z
    1ca6:	91 81       	ldd	r25, Z+1	; 0x01
    1ca8:	01 97       	sbiw	r24, 0x01	; 1
    1caa:	11 96       	adiw	r26, 0x01	; 1
    1cac:	9c 93       	st	X, r25
    1cae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cb0:	fe 01       	movw	r30, r28
    1cb2:	e2 5f       	subi	r30, 0xF2	; 242
    1cb4:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb6:	80 81       	ld	r24, Z
    1cb8:	91 81       	ldd	r25, Z+1	; 0x01
    1cba:	00 97       	sbiw	r24, 0x00	; 0
    1cbc:	d1 f6       	brne	.-76     	; 0x1c72 <Stepper_vidDirection+0xc0a>
    1cbe:	4b c0       	rjmp	.+150    	; 0x1d56 <Stepper_vidDirection+0xcee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cc0:	8e 01       	movw	r16, r28
    1cc2:	02 5f       	subi	r16, 0xF2	; 242
    1cc4:	1e 4f       	sbci	r17, 0xFE	; 254
    1cc6:	fe 01       	movw	r30, r28
    1cc8:	e0 5f       	subi	r30, 0xF0	; 240
    1cca:	fe 4f       	sbci	r31, 0xFE	; 254
    1ccc:	60 81       	ld	r22, Z
    1cce:	71 81       	ldd	r23, Z+1	; 0x01
    1cd0:	82 81       	ldd	r24, Z+2	; 0x02
    1cd2:	93 81       	ldd	r25, Z+3	; 0x03
    1cd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd8:	dc 01       	movw	r26, r24
    1cda:	cb 01       	movw	r24, r22
    1cdc:	f8 01       	movw	r30, r16
    1cde:	91 83       	std	Z+1, r25	; 0x01
    1ce0:	80 83       	st	Z, r24
    1ce2:	de 01       	movw	r26, r28
    1ce4:	a6 5f       	subi	r26, 0xF6	; 246
    1ce6:	be 4f       	sbci	r27, 0xFE	; 254
    1ce8:	fe 01       	movw	r30, r28
    1cea:	e2 5f       	subi	r30, 0xF2	; 242
    1cec:	fe 4f       	sbci	r31, 0xFE	; 254
    1cee:	80 81       	ld	r24, Z
    1cf0:	91 81       	ldd	r25, Z+1	; 0x01
    1cf2:	11 96       	adiw	r26, 0x01	; 1
    1cf4:	9c 93       	st	X, r25
    1cf6:	8e 93       	st	-X, r24
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	e6 5f       	subi	r30, 0xF6	; 246
    1cfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfe:	80 81       	ld	r24, Z
    1d00:	91 81       	ldd	r25, Z+1	; 0x01
    1d02:	01 97       	sbiw	r24, 0x01	; 1
    1d04:	f1 f7       	brne	.-4      	; 0x1d02 <Stepper_vidDirection+0xc9a>
    1d06:	fe 01       	movw	r30, r28
    1d08:	e6 5f       	subi	r30, 0xF6	; 246
    1d0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d0c:	91 83       	std	Z+1, r25	; 0x01
    1d0e:	80 83       	st	Z, r24
    1d10:	22 c0       	rjmp	.+68     	; 0x1d56 <Stepper_vidDirection+0xcee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1d12:	8e 01       	movw	r16, r28
    1d14:	08 5e       	subi	r16, 0xE8	; 232
    1d16:	1e 4f       	sbci	r17, 0xFE	; 254
    1d18:	fe 01       	movw	r30, r28
    1d1a:	e7 5e       	subi	r30, 0xE7	; 231
    1d1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d1e:	60 81       	ld	r22, Z
    1d20:	71 81       	ldd	r23, Z+1	; 0x01
    1d22:	82 81       	ldd	r24, Z+2	; 0x02
    1d24:	93 81       	ldd	r25, Z+3	; 0x03
    1d26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d2a:	dc 01       	movw	r26, r24
    1d2c:	cb 01       	movw	r24, r22
    1d2e:	f8 01       	movw	r30, r16
    1d30:	80 83       	st	Z, r24
    1d32:	de 01       	movw	r26, r28
    1d34:	a7 5f       	subi	r26, 0xF7	; 247
    1d36:	be 4f       	sbci	r27, 0xFE	; 254
    1d38:	fe 01       	movw	r30, r28
    1d3a:	e8 5e       	subi	r30, 0xE8	; 232
    1d3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d3e:	80 81       	ld	r24, Z
    1d40:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1d42:	fe 01       	movw	r30, r28
    1d44:	e7 5f       	subi	r30, 0xF7	; 247
    1d46:	fe 4f       	sbci	r31, 0xFE	; 254
    1d48:	80 81       	ld	r24, Z
    1d4a:	8a 95       	dec	r24
    1d4c:	f1 f7       	brne	.-4      	; 0x1d4a <Stepper_vidDirection+0xce2>
    1d4e:	fe 01       	movw	r30, r28
    1d50:	e7 5f       	subi	r30, 0xF7	; 247
    1d52:	fe 4f       	sbci	r31, 0xFE	; 254
    1d54:	80 83       	st	Z, r24
				_delay_us(1000);

				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1d56:	89 e0       	ldi	r24, 0x09	; 9
    1d58:	60 e0       	ldi	r22, 0x00	; 0
    1d5a:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    1d5e:	8a e0       	ldi	r24, 0x0A	; 10
    1d60:	60 e0       	ldi	r22, 0x00	; 0
    1d62:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    1d66:	8b e0       	ldi	r24, 0x0B	; 11
    1d68:	61 e0       	ldi	r22, 0x01	; 1
    1d6a:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    1d6e:	8c e0       	ldi	r24, 0x0C	; 12
    1d70:	60 e0       	ldi	r22, 0x00	; 0
    1d72:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    1d76:	fe 01       	movw	r30, r28
    1d78:	eb 5f       	subi	r30, 0xFB	; 251
    1d7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
    1d7e:	90 e0       	ldi	r25, 0x00	; 0
    1d80:	aa e7       	ldi	r26, 0x7A	; 122
    1d82:	b4 e4       	ldi	r27, 0x44	; 68
    1d84:	80 83       	st	Z, r24
    1d86:	91 83       	std	Z+1, r25	; 0x01
    1d88:	a2 83       	std	Z+2, r26	; 0x02
    1d8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1d8c:	8e 01       	movw	r16, r28
    1d8e:	0f 5f       	subi	r16, 0xFF	; 255
    1d90:	1e 4f       	sbci	r17, 0xFE	; 254
    1d92:	fe 01       	movw	r30, r28
    1d94:	eb 5f       	subi	r30, 0xFB	; 251
    1d96:	fe 4f       	sbci	r31, 0xFE	; 254
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	2b ea       	ldi	r18, 0xAB	; 171
    1da2:	3a ea       	ldi	r19, 0xAA	; 170
    1da4:	4a e2       	ldi	r20, 0x2A	; 42
    1da6:	50 e4       	ldi	r21, 0x40	; 64
    1da8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	f8 01       	movw	r30, r16
    1db2:	80 83       	st	Z, r24
    1db4:	91 83       	std	Z+1, r25	; 0x01
    1db6:	a2 83       	std	Z+2, r26	; 0x02
    1db8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dba:	fe 01       	movw	r30, r28
    1dbc:	ef 5f       	subi	r30, 0xFF	; 255
    1dbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc0:	60 81       	ld	r22, Z
    1dc2:	71 81       	ldd	r23, Z+1	; 0x01
    1dc4:	82 81       	ldd	r24, Z+2	; 0x02
    1dc6:	93 81       	ldd	r25, Z+3	; 0x03
    1dc8:	20 e0       	ldi	r18, 0x00	; 0
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	40 e8       	ldi	r20, 0x80	; 128
    1dce:	5f e3       	ldi	r21, 0x3F	; 63
    1dd0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1dd4:	88 23       	and	r24, r24
    1dd6:	34 f4       	brge	.+12     	; 0x1de4 <Stepper_vidDirection+0xd7c>
		__ticks = 1;
    1dd8:	fe 01       	movw	r30, r28
    1dda:	e0 50       	subi	r30, 0x00	; 0
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	81 e0       	ldi	r24, 0x01	; 1
    1de0:	80 83       	st	Z, r24
    1de2:	e0 c0       	rjmp	.+448    	; 0x1fa4 <Stepper_vidDirection+0xf3c>
	else if (__tmp > 255)
    1de4:	fe 01       	movw	r30, r28
    1de6:	ef 5f       	subi	r30, 0xFF	; 255
    1de8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dea:	60 81       	ld	r22, Z
    1dec:	71 81       	ldd	r23, Z+1	; 0x01
    1dee:	82 81       	ldd	r24, Z+2	; 0x02
    1df0:	93 81       	ldd	r25, Z+3	; 0x03
    1df2:	20 e0       	ldi	r18, 0x00	; 0
    1df4:	30 e0       	ldi	r19, 0x00	; 0
    1df6:	4f e7       	ldi	r20, 0x7F	; 127
    1df8:	53 e4       	ldi	r21, 0x43	; 67
    1dfa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1dfe:	18 16       	cp	r1, r24
    1e00:	0c f0       	brlt	.+2      	; 0x1e04 <Stepper_vidDirection+0xd9c>
    1e02:	c0 c0       	rjmp	.+384    	; 0x1f84 <Stepper_vidDirection+0xf1c>
	{
		_delay_ms(__us / 1000.0);
    1e04:	fe 01       	movw	r30, r28
    1e06:	eb 5f       	subi	r30, 0xFB	; 251
    1e08:	fe 4f       	sbci	r31, 0xFE	; 254
    1e0a:	60 81       	ld	r22, Z
    1e0c:	71 81       	ldd	r23, Z+1	; 0x01
    1e0e:	82 81       	ldd	r24, Z+2	; 0x02
    1e10:	93 81       	ldd	r25, Z+3	; 0x03
    1e12:	20 e0       	ldi	r18, 0x00	; 0
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	4a e7       	ldi	r20, 0x7A	; 122
    1e18:	54 e4       	ldi	r21, 0x44	; 68
    1e1a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	fe 01       	movw	r30, r28
    1e24:	e4 50       	subi	r30, 0x04	; 4
    1e26:	ff 4f       	sbci	r31, 0xFF	; 255
    1e28:	80 83       	st	Z, r24
    1e2a:	91 83       	std	Z+1, r25	; 0x01
    1e2c:	a2 83       	std	Z+2, r26	; 0x02
    1e2e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e30:	8e 01       	movw	r16, r28
    1e32:	08 50       	subi	r16, 0x08	; 8
    1e34:	1f 4f       	sbci	r17, 0xFF	; 255
    1e36:	fe 01       	movw	r30, r28
    1e38:	e4 50       	subi	r30, 0x04	; 4
    1e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3c:	60 81       	ld	r22, Z
    1e3e:	71 81       	ldd	r23, Z+1	; 0x01
    1e40:	82 81       	ldd	r24, Z+2	; 0x02
    1e42:	93 81       	ldd	r25, Z+3	; 0x03
    1e44:	20 e0       	ldi	r18, 0x00	; 0
    1e46:	30 e0       	ldi	r19, 0x00	; 0
    1e48:	4a ef       	ldi	r20, 0xFA	; 250
    1e4a:	54 e4       	ldi	r21, 0x44	; 68
    1e4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e50:	dc 01       	movw	r26, r24
    1e52:	cb 01       	movw	r24, r22
    1e54:	f8 01       	movw	r30, r16
    1e56:	80 83       	st	Z, r24
    1e58:	91 83       	std	Z+1, r25	; 0x01
    1e5a:	a2 83       	std	Z+2, r26	; 0x02
    1e5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e5e:	fe 01       	movw	r30, r28
    1e60:	e8 50       	subi	r30, 0x08	; 8
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	82 81       	ldd	r24, Z+2	; 0x02
    1e6a:	93 81       	ldd	r25, Z+3	; 0x03
    1e6c:	20 e0       	ldi	r18, 0x00	; 0
    1e6e:	30 e0       	ldi	r19, 0x00	; 0
    1e70:	40 e8       	ldi	r20, 0x80	; 128
    1e72:	5f e3       	ldi	r21, 0x3F	; 63
    1e74:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e78:	88 23       	and	r24, r24
    1e7a:	44 f4       	brge	.+16     	; 0x1e8c <Stepper_vidDirection+0xe24>
		__ticks = 1;
    1e7c:	fe 01       	movw	r30, r28
    1e7e:	ea 50       	subi	r30, 0x0A	; 10
    1e80:	ff 4f       	sbci	r31, 0xFF	; 255
    1e82:	81 e0       	ldi	r24, 0x01	; 1
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	91 83       	std	Z+1, r25	; 0x01
    1e88:	80 83       	st	Z, r24
    1e8a:	64 c0       	rjmp	.+200    	; 0x1f54 <Stepper_vidDirection+0xeec>
	else if (__tmp > 65535)
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	e8 50       	subi	r30, 0x08	; 8
    1e90:	ff 4f       	sbci	r31, 0xFF	; 255
    1e92:	60 81       	ld	r22, Z
    1e94:	71 81       	ldd	r23, Z+1	; 0x01
    1e96:	82 81       	ldd	r24, Z+2	; 0x02
    1e98:	93 81       	ldd	r25, Z+3	; 0x03
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	3f ef       	ldi	r19, 0xFF	; 255
    1e9e:	4f e7       	ldi	r20, 0x7F	; 127
    1ea0:	57 e4       	ldi	r21, 0x47	; 71
    1ea2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1ea6:	18 16       	cp	r1, r24
    1ea8:	0c f0       	brlt	.+2      	; 0x1eac <Stepper_vidDirection+0xe44>
    1eaa:	43 c0       	rjmp	.+134    	; 0x1f32 <Stepper_vidDirection+0xeca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eac:	fe 01       	movw	r30, r28
    1eae:	e4 50       	subi	r30, 0x04	; 4
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	60 81       	ld	r22, Z
    1eb4:	71 81       	ldd	r23, Z+1	; 0x01
    1eb6:	82 81       	ldd	r24, Z+2	; 0x02
    1eb8:	93 81       	ldd	r25, Z+3	; 0x03
    1eba:	20 e0       	ldi	r18, 0x00	; 0
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	40 e2       	ldi	r20, 0x20	; 32
    1ec0:	51 e4       	ldi	r21, 0x41	; 65
    1ec2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ec6:	dc 01       	movw	r26, r24
    1ec8:	cb 01       	movw	r24, r22
    1eca:	8e 01       	movw	r16, r28
    1ecc:	0a 50       	subi	r16, 0x0A	; 10
    1ece:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed0:	bc 01       	movw	r22, r24
    1ed2:	cd 01       	movw	r24, r26
    1ed4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ed8:	dc 01       	movw	r26, r24
    1eda:	cb 01       	movw	r24, r22
    1edc:	f8 01       	movw	r30, r16
    1ede:	91 83       	std	Z+1, r25	; 0x01
    1ee0:	80 83       	st	Z, r24
    1ee2:	1f c0       	rjmp	.+62     	; 0x1f22 <Stepper_vidDirection+0xeba>
    1ee4:	fe 01       	movw	r30, r28
    1ee6:	ec 50       	subi	r30, 0x0C	; 12
    1ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eea:	88 ec       	ldi	r24, 0xC8	; 200
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	91 83       	std	Z+1, r25	; 0x01
    1ef0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	ec 50       	subi	r30, 0x0C	; 12
    1ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef8:	80 81       	ld	r24, Z
    1efa:	91 81       	ldd	r25, Z+1	; 0x01
    1efc:	01 97       	sbiw	r24, 0x01	; 1
    1efe:	f1 f7       	brne	.-4      	; 0x1efc <Stepper_vidDirection+0xe94>
    1f00:	fe 01       	movw	r30, r28
    1f02:	ec 50       	subi	r30, 0x0C	; 12
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	91 83       	std	Z+1, r25	; 0x01
    1f08:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f0a:	de 01       	movw	r26, r28
    1f0c:	aa 50       	subi	r26, 0x0A	; 10
    1f0e:	bf 4f       	sbci	r27, 0xFF	; 255
    1f10:	fe 01       	movw	r30, r28
    1f12:	ea 50       	subi	r30, 0x0A	; 10
    1f14:	ff 4f       	sbci	r31, 0xFF	; 255
    1f16:	80 81       	ld	r24, Z
    1f18:	91 81       	ldd	r25, Z+1	; 0x01
    1f1a:	01 97       	sbiw	r24, 0x01	; 1
    1f1c:	11 96       	adiw	r26, 0x01	; 1
    1f1e:	9c 93       	st	X, r25
    1f20:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f22:	fe 01       	movw	r30, r28
    1f24:	ea 50       	subi	r30, 0x0A	; 10
    1f26:	ff 4f       	sbci	r31, 0xFF	; 255
    1f28:	80 81       	ld	r24, Z
    1f2a:	91 81       	ldd	r25, Z+1	; 0x01
    1f2c:	00 97       	sbiw	r24, 0x00	; 0
    1f2e:	d1 f6       	brne	.-76     	; 0x1ee4 <Stepper_vidDirection+0xe7c>
    1f30:	4b c0       	rjmp	.+150    	; 0x1fc8 <Stepper_vidDirection+0xf60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f32:	8e 01       	movw	r16, r28
    1f34:	0a 50       	subi	r16, 0x0A	; 10
    1f36:	1f 4f       	sbci	r17, 0xFF	; 255
    1f38:	fe 01       	movw	r30, r28
    1f3a:	e8 50       	subi	r30, 0x08	; 8
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	60 81       	ld	r22, Z
    1f40:	71 81       	ldd	r23, Z+1	; 0x01
    1f42:	82 81       	ldd	r24, Z+2	; 0x02
    1f44:	93 81       	ldd	r25, Z+3	; 0x03
    1f46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	f8 01       	movw	r30, r16
    1f50:	91 83       	std	Z+1, r25	; 0x01
    1f52:	80 83       	st	Z, r24
    1f54:	de 01       	movw	r26, r28
    1f56:	ae 50       	subi	r26, 0x0E	; 14
    1f58:	bf 4f       	sbci	r27, 0xFF	; 255
    1f5a:	fe 01       	movw	r30, r28
    1f5c:	ea 50       	subi	r30, 0x0A	; 10
    1f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f60:	80 81       	ld	r24, Z
    1f62:	91 81       	ldd	r25, Z+1	; 0x01
    1f64:	11 96       	adiw	r26, 0x01	; 1
    1f66:	9c 93       	st	X, r25
    1f68:	8e 93       	st	-X, r24
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	ee 50       	subi	r30, 0x0E	; 14
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	80 81       	ld	r24, Z
    1f72:	91 81       	ldd	r25, Z+1	; 0x01
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	f1 f7       	brne	.-4      	; 0x1f74 <Stepper_vidDirection+0xf0c>
    1f78:	fe 01       	movw	r30, r28
    1f7a:	ee 50       	subi	r30, 0x0E	; 14
    1f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7e:	91 83       	std	Z+1, r25	; 0x01
    1f80:	80 83       	st	Z, r24
    1f82:	22 c0       	rjmp	.+68     	; 0x1fc8 <Stepper_vidDirection+0xf60>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1f84:	8e 01       	movw	r16, r28
    1f86:	00 50       	subi	r16, 0x00	; 0
    1f88:	1f 4f       	sbci	r17, 0xFF	; 255
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	ef 5f       	subi	r30, 0xFF	; 255
    1f8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	80 83       	st	Z, r24
    1fa4:	de 01       	movw	r26, r28
    1fa6:	af 50       	subi	r26, 0x0F	; 15
    1fa8:	bf 4f       	sbci	r27, 0xFF	; 255
    1faa:	fe 01       	movw	r30, r28
    1fac:	e0 50       	subi	r30, 0x00	; 0
    1fae:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb0:	80 81       	ld	r24, Z
    1fb2:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1fb4:	fe 01       	movw	r30, r28
    1fb6:	ef 50       	subi	r30, 0x0F	; 15
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	80 81       	ld	r24, Z
    1fbc:	8a 95       	dec	r24
    1fbe:	f1 f7       	brne	.-4      	; 0x1fbc <Stepper_vidDirection+0xf54>
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	ef 50       	subi	r30, 0x0F	; 15
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1fc8:	89 e0       	ldi	r24, 0x09	; 9
    1fca:	60 e0       	ldi	r22, 0x00	; 0
    1fcc:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    1fd0:	8a e0       	ldi	r24, 0x0A	; 10
    1fd2:	61 e0       	ldi	r22, 0x01	; 1
    1fd4:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    1fd8:	8b e0       	ldi	r24, 0x0B	; 11
    1fda:	60 e0       	ldi	r22, 0x00	; 0
    1fdc:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    1fe0:	8c e0       	ldi	r24, 0x0C	; 12
    1fe2:	60 e0       	ldi	r22, 0x00	; 0
    1fe4:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    1fe8:	fe 01       	movw	r30, r28
    1fea:	e3 51       	subi	r30, 0x13	; 19
    1fec:	ff 4f       	sbci	r31, 0xFF	; 255
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	aa e7       	ldi	r26, 0x7A	; 122
    1ff4:	b4 e4       	ldi	r27, 0x44	; 68
    1ff6:	80 83       	st	Z, r24
    1ff8:	91 83       	std	Z+1, r25	; 0x01
    1ffa:	a2 83       	std	Z+2, r26	; 0x02
    1ffc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1ffe:	8e 01       	movw	r16, r28
    2000:	07 51       	subi	r16, 0x17	; 23
    2002:	1f 4f       	sbci	r17, 0xFF	; 255
    2004:	fe 01       	movw	r30, r28
    2006:	e3 51       	subi	r30, 0x13	; 19
    2008:	ff 4f       	sbci	r31, 0xFF	; 255
    200a:	60 81       	ld	r22, Z
    200c:	71 81       	ldd	r23, Z+1	; 0x01
    200e:	82 81       	ldd	r24, Z+2	; 0x02
    2010:	93 81       	ldd	r25, Z+3	; 0x03
    2012:	2b ea       	ldi	r18, 0xAB	; 171
    2014:	3a ea       	ldi	r19, 0xAA	; 170
    2016:	4a e2       	ldi	r20, 0x2A	; 42
    2018:	50 e4       	ldi	r21, 0x40	; 64
    201a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    201e:	dc 01       	movw	r26, r24
    2020:	cb 01       	movw	r24, r22
    2022:	f8 01       	movw	r30, r16
    2024:	80 83       	st	Z, r24
    2026:	91 83       	std	Z+1, r25	; 0x01
    2028:	a2 83       	std	Z+2, r26	; 0x02
    202a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    202c:	fe 01       	movw	r30, r28
    202e:	e7 51       	subi	r30, 0x17	; 23
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	60 81       	ld	r22, Z
    2034:	71 81       	ldd	r23, Z+1	; 0x01
    2036:	82 81       	ldd	r24, Z+2	; 0x02
    2038:	93 81       	ldd	r25, Z+3	; 0x03
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	40 e8       	ldi	r20, 0x80	; 128
    2040:	5f e3       	ldi	r21, 0x3F	; 63
    2042:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2046:	88 23       	and	r24, r24
    2048:	34 f4       	brge	.+12     	; 0x2056 <Stepper_vidDirection+0xfee>
		__ticks = 1;
    204a:	fe 01       	movw	r30, r28
    204c:	e8 51       	subi	r30, 0x18	; 24
    204e:	ff 4f       	sbci	r31, 0xFF	; 255
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	80 83       	st	Z, r24
    2054:	e0 c0       	rjmp	.+448    	; 0x2216 <Stepper_vidDirection+0x11ae>
	else if (__tmp > 255)
    2056:	fe 01       	movw	r30, r28
    2058:	e7 51       	subi	r30, 0x17	; 23
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	60 81       	ld	r22, Z
    205e:	71 81       	ldd	r23, Z+1	; 0x01
    2060:	82 81       	ldd	r24, Z+2	; 0x02
    2062:	93 81       	ldd	r25, Z+3	; 0x03
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	30 e0       	ldi	r19, 0x00	; 0
    2068:	4f e7       	ldi	r20, 0x7F	; 127
    206a:	53 e4       	ldi	r21, 0x43	; 67
    206c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2070:	18 16       	cp	r1, r24
    2072:	0c f0       	brlt	.+2      	; 0x2076 <Stepper_vidDirection+0x100e>
    2074:	c0 c0       	rjmp	.+384    	; 0x21f6 <Stepper_vidDirection+0x118e>
	{
		_delay_ms(__us / 1000.0);
    2076:	fe 01       	movw	r30, r28
    2078:	e3 51       	subi	r30, 0x13	; 19
    207a:	ff 4f       	sbci	r31, 0xFF	; 255
    207c:	60 81       	ld	r22, Z
    207e:	71 81       	ldd	r23, Z+1	; 0x01
    2080:	82 81       	ldd	r24, Z+2	; 0x02
    2082:	93 81       	ldd	r25, Z+3	; 0x03
    2084:	20 e0       	ldi	r18, 0x00	; 0
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	4a e7       	ldi	r20, 0x7A	; 122
    208a:	54 e4       	ldi	r21, 0x44	; 68
    208c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2090:	dc 01       	movw	r26, r24
    2092:	cb 01       	movw	r24, r22
    2094:	fe 01       	movw	r30, r28
    2096:	ec 51       	subi	r30, 0x1C	; 28
    2098:	ff 4f       	sbci	r31, 0xFF	; 255
    209a:	80 83       	st	Z, r24
    209c:	91 83       	std	Z+1, r25	; 0x01
    209e:	a2 83       	std	Z+2, r26	; 0x02
    20a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20a2:	8e 01       	movw	r16, r28
    20a4:	00 52       	subi	r16, 0x20	; 32
    20a6:	1f 4f       	sbci	r17, 0xFF	; 255
    20a8:	fe 01       	movw	r30, r28
    20aa:	ec 51       	subi	r30, 0x1C	; 28
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	60 81       	ld	r22, Z
    20b0:	71 81       	ldd	r23, Z+1	; 0x01
    20b2:	82 81       	ldd	r24, Z+2	; 0x02
    20b4:	93 81       	ldd	r25, Z+3	; 0x03
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	4a ef       	ldi	r20, 0xFA	; 250
    20bc:	54 e4       	ldi	r21, 0x44	; 68
    20be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20c2:	dc 01       	movw	r26, r24
    20c4:	cb 01       	movw	r24, r22
    20c6:	f8 01       	movw	r30, r16
    20c8:	80 83       	st	Z, r24
    20ca:	91 83       	std	Z+1, r25	; 0x01
    20cc:	a2 83       	std	Z+2, r26	; 0x02
    20ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20d0:	fe 01       	movw	r30, r28
    20d2:	e0 52       	subi	r30, 0x20	; 32
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	60 81       	ld	r22, Z
    20d8:	71 81       	ldd	r23, Z+1	; 0x01
    20da:	82 81       	ldd	r24, Z+2	; 0x02
    20dc:	93 81       	ldd	r25, Z+3	; 0x03
    20de:	20 e0       	ldi	r18, 0x00	; 0
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	40 e8       	ldi	r20, 0x80	; 128
    20e4:	5f e3       	ldi	r21, 0x3F	; 63
    20e6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    20ea:	88 23       	and	r24, r24
    20ec:	44 f4       	brge	.+16     	; 0x20fe <Stepper_vidDirection+0x1096>
		__ticks = 1;
    20ee:	fe 01       	movw	r30, r28
    20f0:	e2 52       	subi	r30, 0x22	; 34
    20f2:	ff 4f       	sbci	r31, 0xFF	; 255
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	91 83       	std	Z+1, r25	; 0x01
    20fa:	80 83       	st	Z, r24
    20fc:	64 c0       	rjmp	.+200    	; 0x21c6 <Stepper_vidDirection+0x115e>
	else if (__tmp > 65535)
    20fe:	fe 01       	movw	r30, r28
    2100:	e0 52       	subi	r30, 0x20	; 32
    2102:	ff 4f       	sbci	r31, 0xFF	; 255
    2104:	60 81       	ld	r22, Z
    2106:	71 81       	ldd	r23, Z+1	; 0x01
    2108:	82 81       	ldd	r24, Z+2	; 0x02
    210a:	93 81       	ldd	r25, Z+3	; 0x03
    210c:	20 e0       	ldi	r18, 0x00	; 0
    210e:	3f ef       	ldi	r19, 0xFF	; 255
    2110:	4f e7       	ldi	r20, 0x7F	; 127
    2112:	57 e4       	ldi	r21, 0x47	; 71
    2114:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2118:	18 16       	cp	r1, r24
    211a:	0c f0       	brlt	.+2      	; 0x211e <Stepper_vidDirection+0x10b6>
    211c:	43 c0       	rjmp	.+134    	; 0x21a4 <Stepper_vidDirection+0x113c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    211e:	fe 01       	movw	r30, r28
    2120:	ec 51       	subi	r30, 0x1C	; 28
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	60 81       	ld	r22, Z
    2126:	71 81       	ldd	r23, Z+1	; 0x01
    2128:	82 81       	ldd	r24, Z+2	; 0x02
    212a:	93 81       	ldd	r25, Z+3	; 0x03
    212c:	20 e0       	ldi	r18, 0x00	; 0
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e2       	ldi	r20, 0x20	; 32
    2132:	51 e4       	ldi	r21, 0x41	; 65
    2134:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2138:	dc 01       	movw	r26, r24
    213a:	cb 01       	movw	r24, r22
    213c:	8e 01       	movw	r16, r28
    213e:	02 52       	subi	r16, 0x22	; 34
    2140:	1f 4f       	sbci	r17, 0xFF	; 255
    2142:	bc 01       	movw	r22, r24
    2144:	cd 01       	movw	r24, r26
    2146:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214a:	dc 01       	movw	r26, r24
    214c:	cb 01       	movw	r24, r22
    214e:	f8 01       	movw	r30, r16
    2150:	91 83       	std	Z+1, r25	; 0x01
    2152:	80 83       	st	Z, r24
    2154:	1f c0       	rjmp	.+62     	; 0x2194 <Stepper_vidDirection+0x112c>
    2156:	fe 01       	movw	r30, r28
    2158:	e4 52       	subi	r30, 0x24	; 36
    215a:	ff 4f       	sbci	r31, 0xFF	; 255
    215c:	88 ec       	ldi	r24, 0xC8	; 200
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	91 83       	std	Z+1, r25	; 0x01
    2162:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2164:	fe 01       	movw	r30, r28
    2166:	e4 52       	subi	r30, 0x24	; 36
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	80 81       	ld	r24, Z
    216c:	91 81       	ldd	r25, Z+1	; 0x01
    216e:	01 97       	sbiw	r24, 0x01	; 1
    2170:	f1 f7       	brne	.-4      	; 0x216e <Stepper_vidDirection+0x1106>
    2172:	fe 01       	movw	r30, r28
    2174:	e4 52       	subi	r30, 0x24	; 36
    2176:	ff 4f       	sbci	r31, 0xFF	; 255
    2178:	91 83       	std	Z+1, r25	; 0x01
    217a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    217c:	de 01       	movw	r26, r28
    217e:	a2 52       	subi	r26, 0x22	; 34
    2180:	bf 4f       	sbci	r27, 0xFF	; 255
    2182:	fe 01       	movw	r30, r28
    2184:	e2 52       	subi	r30, 0x22	; 34
    2186:	ff 4f       	sbci	r31, 0xFF	; 255
    2188:	80 81       	ld	r24, Z
    218a:	91 81       	ldd	r25, Z+1	; 0x01
    218c:	01 97       	sbiw	r24, 0x01	; 1
    218e:	11 96       	adiw	r26, 0x01	; 1
    2190:	9c 93       	st	X, r25
    2192:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2194:	fe 01       	movw	r30, r28
    2196:	e2 52       	subi	r30, 0x22	; 34
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	80 81       	ld	r24, Z
    219c:	91 81       	ldd	r25, Z+1	; 0x01
    219e:	00 97       	sbiw	r24, 0x00	; 0
    21a0:	d1 f6       	brne	.-76     	; 0x2156 <Stepper_vidDirection+0x10ee>
    21a2:	4b c0       	rjmp	.+150    	; 0x223a <Stepper_vidDirection+0x11d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21a4:	8e 01       	movw	r16, r28
    21a6:	02 52       	subi	r16, 0x22	; 34
    21a8:	1f 4f       	sbci	r17, 0xFF	; 255
    21aa:	fe 01       	movw	r30, r28
    21ac:	e0 52       	subi	r30, 0x20	; 32
    21ae:	ff 4f       	sbci	r31, 0xFF	; 255
    21b0:	60 81       	ld	r22, Z
    21b2:	71 81       	ldd	r23, Z+1	; 0x01
    21b4:	82 81       	ldd	r24, Z+2	; 0x02
    21b6:	93 81       	ldd	r25, Z+3	; 0x03
    21b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21bc:	dc 01       	movw	r26, r24
    21be:	cb 01       	movw	r24, r22
    21c0:	f8 01       	movw	r30, r16
    21c2:	91 83       	std	Z+1, r25	; 0x01
    21c4:	80 83       	st	Z, r24
    21c6:	de 01       	movw	r26, r28
    21c8:	a6 52       	subi	r26, 0x26	; 38
    21ca:	bf 4f       	sbci	r27, 0xFF	; 255
    21cc:	fe 01       	movw	r30, r28
    21ce:	e2 52       	subi	r30, 0x22	; 34
    21d0:	ff 4f       	sbci	r31, 0xFF	; 255
    21d2:	80 81       	ld	r24, Z
    21d4:	91 81       	ldd	r25, Z+1	; 0x01
    21d6:	11 96       	adiw	r26, 0x01	; 1
    21d8:	9c 93       	st	X, r25
    21da:	8e 93       	st	-X, r24
    21dc:	fe 01       	movw	r30, r28
    21de:	e6 52       	subi	r30, 0x26	; 38
    21e0:	ff 4f       	sbci	r31, 0xFF	; 255
    21e2:	80 81       	ld	r24, Z
    21e4:	91 81       	ldd	r25, Z+1	; 0x01
    21e6:	01 97       	sbiw	r24, 0x01	; 1
    21e8:	f1 f7       	brne	.-4      	; 0x21e6 <Stepper_vidDirection+0x117e>
    21ea:	fe 01       	movw	r30, r28
    21ec:	e6 52       	subi	r30, 0x26	; 38
    21ee:	ff 4f       	sbci	r31, 0xFF	; 255
    21f0:	91 83       	std	Z+1, r25	; 0x01
    21f2:	80 83       	st	Z, r24
    21f4:	22 c0       	rjmp	.+68     	; 0x223a <Stepper_vidDirection+0x11d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    21f6:	8e 01       	movw	r16, r28
    21f8:	08 51       	subi	r16, 0x18	; 24
    21fa:	1f 4f       	sbci	r17, 0xFF	; 255
    21fc:	fe 01       	movw	r30, r28
    21fe:	e7 51       	subi	r30, 0x17	; 23
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	60 81       	ld	r22, Z
    2204:	71 81       	ldd	r23, Z+1	; 0x01
    2206:	82 81       	ldd	r24, Z+2	; 0x02
    2208:	93 81       	ldd	r25, Z+3	; 0x03
    220a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    220e:	dc 01       	movw	r26, r24
    2210:	cb 01       	movw	r24, r22
    2212:	f8 01       	movw	r30, r16
    2214:	80 83       	st	Z, r24
    2216:	de 01       	movw	r26, r28
    2218:	a7 52       	subi	r26, 0x27	; 39
    221a:	bf 4f       	sbci	r27, 0xFF	; 255
    221c:	fe 01       	movw	r30, r28
    221e:	e8 51       	subi	r30, 0x18	; 24
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 81       	ld	r24, Z
    2224:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2226:	fe 01       	movw	r30, r28
    2228:	e7 52       	subi	r30, 0x27	; 39
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	80 81       	ld	r24, Z
    222e:	8a 95       	dec	r24
    2230:	f1 f7       	brne	.-4      	; 0x222e <Stepper_vidDirection+0x11c6>
    2232:	fe 01       	movw	r30, r28
    2234:	e7 52       	subi	r30, 0x27	; 39
    2236:	ff 4f       	sbci	r31, 0xFF	; 255
    2238:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    223a:	89 e0       	ldi	r24, 0x09	; 9
    223c:	61 e0       	ldi	r22, 0x01	; 1
    223e:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2242:	8a e0       	ldi	r24, 0x0A	; 10
    2244:	60 e0       	ldi	r22, 0x00	; 0
    2246:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    224a:	8b e0       	ldi	r24, 0x0B	; 11
    224c:	60 e0       	ldi	r22, 0x00	; 0
    224e:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2252:	8c e0       	ldi	r24, 0x0C	; 12
    2254:	60 e0       	ldi	r22, 0x00	; 0
    2256:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    225a:	fe 01       	movw	r30, r28
    225c:	eb 52       	subi	r30, 0x2B	; 43
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	80 e0       	ldi	r24, 0x00	; 0
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	aa e7       	ldi	r26, 0x7A	; 122
    2266:	b4 e4       	ldi	r27, 0x44	; 68
    2268:	80 83       	st	Z, r24
    226a:	91 83       	std	Z+1, r25	; 0x01
    226c:	a2 83       	std	Z+2, r26	; 0x02
    226e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2270:	8e 01       	movw	r16, r28
    2272:	0f 52       	subi	r16, 0x2F	; 47
    2274:	1f 4f       	sbci	r17, 0xFF	; 255
    2276:	fe 01       	movw	r30, r28
    2278:	eb 52       	subi	r30, 0x2B	; 43
    227a:	ff 4f       	sbci	r31, 0xFF	; 255
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	82 81       	ldd	r24, Z+2	; 0x02
    2282:	93 81       	ldd	r25, Z+3	; 0x03
    2284:	2b ea       	ldi	r18, 0xAB	; 171
    2286:	3a ea       	ldi	r19, 0xAA	; 170
    2288:	4a e2       	ldi	r20, 0x2A	; 42
    228a:	50 e4       	ldi	r21, 0x40	; 64
    228c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2290:	dc 01       	movw	r26, r24
    2292:	cb 01       	movw	r24, r22
    2294:	f8 01       	movw	r30, r16
    2296:	80 83       	st	Z, r24
    2298:	91 83       	std	Z+1, r25	; 0x01
    229a:	a2 83       	std	Z+2, r26	; 0x02
    229c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    229e:	fe 01       	movw	r30, r28
    22a0:	ef 52       	subi	r30, 0x2F	; 47
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	82 81       	ldd	r24, Z+2	; 0x02
    22aa:	93 81       	ldd	r25, Z+3	; 0x03
    22ac:	20 e0       	ldi	r18, 0x00	; 0
    22ae:	30 e0       	ldi	r19, 0x00	; 0
    22b0:	40 e8       	ldi	r20, 0x80	; 128
    22b2:	5f e3       	ldi	r21, 0x3F	; 63
    22b4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    22b8:	88 23       	and	r24, r24
    22ba:	34 f4       	brge	.+12     	; 0x22c8 <Stepper_vidDirection+0x1260>
		__ticks = 1;
    22bc:	fe 01       	movw	r30, r28
    22be:	e0 53       	subi	r30, 0x30	; 48
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	81 e0       	ldi	r24, 0x01	; 1
    22c4:	80 83       	st	Z, r24
    22c6:	e0 c0       	rjmp	.+448    	; 0x2488 <Stepper_vidDirection+0x1420>
	else if (__tmp > 255)
    22c8:	fe 01       	movw	r30, r28
    22ca:	ef 52       	subi	r30, 0x2F	; 47
    22cc:	ff 4f       	sbci	r31, 0xFF	; 255
    22ce:	60 81       	ld	r22, Z
    22d0:	71 81       	ldd	r23, Z+1	; 0x01
    22d2:	82 81       	ldd	r24, Z+2	; 0x02
    22d4:	93 81       	ldd	r25, Z+3	; 0x03
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	4f e7       	ldi	r20, 0x7F	; 127
    22dc:	53 e4       	ldi	r21, 0x43	; 67
    22de:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    22e2:	18 16       	cp	r1, r24
    22e4:	0c f0       	brlt	.+2      	; 0x22e8 <Stepper_vidDirection+0x1280>
    22e6:	c0 c0       	rjmp	.+384    	; 0x2468 <Stepper_vidDirection+0x1400>
	{
		_delay_ms(__us / 1000.0);
    22e8:	fe 01       	movw	r30, r28
    22ea:	eb 52       	subi	r30, 0x2B	; 43
    22ec:	ff 4f       	sbci	r31, 0xFF	; 255
    22ee:	60 81       	ld	r22, Z
    22f0:	71 81       	ldd	r23, Z+1	; 0x01
    22f2:	82 81       	ldd	r24, Z+2	; 0x02
    22f4:	93 81       	ldd	r25, Z+3	; 0x03
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	4a e7       	ldi	r20, 0x7A	; 122
    22fc:	54 e4       	ldi	r21, 0x44	; 68
    22fe:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2302:	dc 01       	movw	r26, r24
    2304:	cb 01       	movw	r24, r22
    2306:	fe 01       	movw	r30, r28
    2308:	e4 53       	subi	r30, 0x34	; 52
    230a:	ff 4f       	sbci	r31, 0xFF	; 255
    230c:	80 83       	st	Z, r24
    230e:	91 83       	std	Z+1, r25	; 0x01
    2310:	a2 83       	std	Z+2, r26	; 0x02
    2312:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2314:	8e 01       	movw	r16, r28
    2316:	08 53       	subi	r16, 0x38	; 56
    2318:	1f 4f       	sbci	r17, 0xFF	; 255
    231a:	fe 01       	movw	r30, r28
    231c:	e4 53       	subi	r30, 0x34	; 52
    231e:	ff 4f       	sbci	r31, 0xFF	; 255
    2320:	60 81       	ld	r22, Z
    2322:	71 81       	ldd	r23, Z+1	; 0x01
    2324:	82 81       	ldd	r24, Z+2	; 0x02
    2326:	93 81       	ldd	r25, Z+3	; 0x03
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	30 e0       	ldi	r19, 0x00	; 0
    232c:	4a ef       	ldi	r20, 0xFA	; 250
    232e:	54 e4       	ldi	r21, 0x44	; 68
    2330:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2334:	dc 01       	movw	r26, r24
    2336:	cb 01       	movw	r24, r22
    2338:	f8 01       	movw	r30, r16
    233a:	80 83       	st	Z, r24
    233c:	91 83       	std	Z+1, r25	; 0x01
    233e:	a2 83       	std	Z+2, r26	; 0x02
    2340:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2342:	fe 01       	movw	r30, r28
    2344:	e8 53       	subi	r30, 0x38	; 56
    2346:	ff 4f       	sbci	r31, 0xFF	; 255
    2348:	60 81       	ld	r22, Z
    234a:	71 81       	ldd	r23, Z+1	; 0x01
    234c:	82 81       	ldd	r24, Z+2	; 0x02
    234e:	93 81       	ldd	r25, Z+3	; 0x03
    2350:	20 e0       	ldi	r18, 0x00	; 0
    2352:	30 e0       	ldi	r19, 0x00	; 0
    2354:	40 e8       	ldi	r20, 0x80	; 128
    2356:	5f e3       	ldi	r21, 0x3F	; 63
    2358:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    235c:	88 23       	and	r24, r24
    235e:	44 f4       	brge	.+16     	; 0x2370 <Stepper_vidDirection+0x1308>
		__ticks = 1;
    2360:	fe 01       	movw	r30, r28
    2362:	ea 53       	subi	r30, 0x3A	; 58
    2364:	ff 4f       	sbci	r31, 0xFF	; 255
    2366:	81 e0       	ldi	r24, 0x01	; 1
    2368:	90 e0       	ldi	r25, 0x00	; 0
    236a:	91 83       	std	Z+1, r25	; 0x01
    236c:	80 83       	st	Z, r24
    236e:	64 c0       	rjmp	.+200    	; 0x2438 <Stepper_vidDirection+0x13d0>
	else if (__tmp > 65535)
    2370:	fe 01       	movw	r30, r28
    2372:	e8 53       	subi	r30, 0x38	; 56
    2374:	ff 4f       	sbci	r31, 0xFF	; 255
    2376:	60 81       	ld	r22, Z
    2378:	71 81       	ldd	r23, Z+1	; 0x01
    237a:	82 81       	ldd	r24, Z+2	; 0x02
    237c:	93 81       	ldd	r25, Z+3	; 0x03
    237e:	20 e0       	ldi	r18, 0x00	; 0
    2380:	3f ef       	ldi	r19, 0xFF	; 255
    2382:	4f e7       	ldi	r20, 0x7F	; 127
    2384:	57 e4       	ldi	r21, 0x47	; 71
    2386:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    238a:	18 16       	cp	r1, r24
    238c:	0c f0       	brlt	.+2      	; 0x2390 <Stepper_vidDirection+0x1328>
    238e:	43 c0       	rjmp	.+134    	; 0x2416 <Stepper_vidDirection+0x13ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2390:	fe 01       	movw	r30, r28
    2392:	e4 53       	subi	r30, 0x34	; 52
    2394:	ff 4f       	sbci	r31, 0xFF	; 255
    2396:	60 81       	ld	r22, Z
    2398:	71 81       	ldd	r23, Z+1	; 0x01
    239a:	82 81       	ldd	r24, Z+2	; 0x02
    239c:	93 81       	ldd	r25, Z+3	; 0x03
    239e:	20 e0       	ldi	r18, 0x00	; 0
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	40 e2       	ldi	r20, 0x20	; 32
    23a4:	51 e4       	ldi	r21, 0x41	; 65
    23a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23aa:	dc 01       	movw	r26, r24
    23ac:	cb 01       	movw	r24, r22
    23ae:	8e 01       	movw	r16, r28
    23b0:	0a 53       	subi	r16, 0x3A	; 58
    23b2:	1f 4f       	sbci	r17, 0xFF	; 255
    23b4:	bc 01       	movw	r22, r24
    23b6:	cd 01       	movw	r24, r26
    23b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23bc:	dc 01       	movw	r26, r24
    23be:	cb 01       	movw	r24, r22
    23c0:	f8 01       	movw	r30, r16
    23c2:	91 83       	std	Z+1, r25	; 0x01
    23c4:	80 83       	st	Z, r24
    23c6:	1f c0       	rjmp	.+62     	; 0x2406 <Stepper_vidDirection+0x139e>
    23c8:	fe 01       	movw	r30, r28
    23ca:	ec 53       	subi	r30, 0x3C	; 60
    23cc:	ff 4f       	sbci	r31, 0xFF	; 255
    23ce:	88 ec       	ldi	r24, 0xC8	; 200
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	91 83       	std	Z+1, r25	; 0x01
    23d4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    23d6:	fe 01       	movw	r30, r28
    23d8:	ec 53       	subi	r30, 0x3C	; 60
    23da:	ff 4f       	sbci	r31, 0xFF	; 255
    23dc:	80 81       	ld	r24, Z
    23de:	91 81       	ldd	r25, Z+1	; 0x01
    23e0:	01 97       	sbiw	r24, 0x01	; 1
    23e2:	f1 f7       	brne	.-4      	; 0x23e0 <Stepper_vidDirection+0x1378>
    23e4:	fe 01       	movw	r30, r28
    23e6:	ec 53       	subi	r30, 0x3C	; 60
    23e8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ea:	91 83       	std	Z+1, r25	; 0x01
    23ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23ee:	de 01       	movw	r26, r28
    23f0:	aa 53       	subi	r26, 0x3A	; 58
    23f2:	bf 4f       	sbci	r27, 0xFF	; 255
    23f4:	fe 01       	movw	r30, r28
    23f6:	ea 53       	subi	r30, 0x3A	; 58
    23f8:	ff 4f       	sbci	r31, 0xFF	; 255
    23fa:	80 81       	ld	r24, Z
    23fc:	91 81       	ldd	r25, Z+1	; 0x01
    23fe:	01 97       	sbiw	r24, 0x01	; 1
    2400:	11 96       	adiw	r26, 0x01	; 1
    2402:	9c 93       	st	X, r25
    2404:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2406:	fe 01       	movw	r30, r28
    2408:	ea 53       	subi	r30, 0x3A	; 58
    240a:	ff 4f       	sbci	r31, 0xFF	; 255
    240c:	80 81       	ld	r24, Z
    240e:	91 81       	ldd	r25, Z+1	; 0x01
    2410:	00 97       	sbiw	r24, 0x00	; 0
    2412:	d1 f6       	brne	.-76     	; 0x23c8 <Stepper_vidDirection+0x1360>
    2414:	4b c0       	rjmp	.+150    	; 0x24ac <Stepper_vidDirection+0x1444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2416:	8e 01       	movw	r16, r28
    2418:	0a 53       	subi	r16, 0x3A	; 58
    241a:	1f 4f       	sbci	r17, 0xFF	; 255
    241c:	fe 01       	movw	r30, r28
    241e:	e8 53       	subi	r30, 0x38	; 56
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	60 81       	ld	r22, Z
    2424:	71 81       	ldd	r23, Z+1	; 0x01
    2426:	82 81       	ldd	r24, Z+2	; 0x02
    2428:	93 81       	ldd	r25, Z+3	; 0x03
    242a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    242e:	dc 01       	movw	r26, r24
    2430:	cb 01       	movw	r24, r22
    2432:	f8 01       	movw	r30, r16
    2434:	91 83       	std	Z+1, r25	; 0x01
    2436:	80 83       	st	Z, r24
    2438:	de 01       	movw	r26, r28
    243a:	ae 53       	subi	r26, 0x3E	; 62
    243c:	bf 4f       	sbci	r27, 0xFF	; 255
    243e:	fe 01       	movw	r30, r28
    2440:	ea 53       	subi	r30, 0x3A	; 58
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	80 81       	ld	r24, Z
    2446:	91 81       	ldd	r25, Z+1	; 0x01
    2448:	11 96       	adiw	r26, 0x01	; 1
    244a:	9c 93       	st	X, r25
    244c:	8e 93       	st	-X, r24
    244e:	fe 01       	movw	r30, r28
    2450:	ee 53       	subi	r30, 0x3E	; 62
    2452:	ff 4f       	sbci	r31, 0xFF	; 255
    2454:	80 81       	ld	r24, Z
    2456:	91 81       	ldd	r25, Z+1	; 0x01
    2458:	01 97       	sbiw	r24, 0x01	; 1
    245a:	f1 f7       	brne	.-4      	; 0x2458 <Stepper_vidDirection+0x13f0>
    245c:	fe 01       	movw	r30, r28
    245e:	ee 53       	subi	r30, 0x3E	; 62
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	91 83       	std	Z+1, r25	; 0x01
    2464:	80 83       	st	Z, r24
    2466:	22 c0       	rjmp	.+68     	; 0x24ac <Stepper_vidDirection+0x1444>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2468:	8e 01       	movw	r16, r28
    246a:	00 53       	subi	r16, 0x30	; 48
    246c:	1f 4f       	sbci	r17, 0xFF	; 255
    246e:	fe 01       	movw	r30, r28
    2470:	ef 52       	subi	r30, 0x2F	; 47
    2472:	ff 4f       	sbci	r31, 0xFF	; 255
    2474:	60 81       	ld	r22, Z
    2476:	71 81       	ldd	r23, Z+1	; 0x01
    2478:	82 81       	ldd	r24, Z+2	; 0x02
    247a:	93 81       	ldd	r25, Z+3	; 0x03
    247c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2480:	dc 01       	movw	r26, r24
    2482:	cb 01       	movw	r24, r22
    2484:	f8 01       	movw	r30, r16
    2486:	80 83       	st	Z, r24
    2488:	de 01       	movw	r26, r28
    248a:	af 53       	subi	r26, 0x3F	; 63
    248c:	bf 4f       	sbci	r27, 0xFF	; 255
    248e:	fe 01       	movw	r30, r28
    2490:	e0 53       	subi	r30, 0x30	; 48
    2492:	ff 4f       	sbci	r31, 0xFF	; 255
    2494:	80 81       	ld	r24, Z
    2496:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2498:	fe 01       	movw	r30, r28
    249a:	ef 53       	subi	r30, 0x3F	; 63
    249c:	ff 4f       	sbci	r31, 0xFF	; 255
    249e:	80 81       	ld	r24, Z
    24a0:	8a 95       	dec	r24
    24a2:	f1 f7       	brne	.-4      	; 0x24a0 <Stepper_vidDirection+0x1438>
    24a4:	fe 01       	movw	r30, r28
    24a6:	ef 53       	subi	r30, 0x3F	; 63
    24a8:	ff 4f       	sbci	r31, 0xFF	; 255
    24aa:	80 83       	st	Z, r24
				_delay_us(1000);
			}
			break;

		case 180:
			for(x=0; x<250; x++){
    24ac:	de 01       	movw	r26, r28
    24ae:	af 57       	subi	r26, 0x7F	; 127
    24b0:	be 4f       	sbci	r27, 0xFE	; 254
    24b2:	fe 01       	movw	r30, r28
    24b4:	ef 57       	subi	r30, 0x7F	; 127
    24b6:	fe 4f       	sbci	r31, 0xFE	; 254
    24b8:	80 81       	ld	r24, Z
    24ba:	8f 5f       	subi	r24, 0xFF	; 255
    24bc:	8c 93       	st	X, r24
    24be:	fe 01       	movw	r30, r28
    24c0:	ef 57       	subi	r30, 0x7F	; 127
    24c2:	fe 4f       	sbci	r31, 0xFE	; 254
    24c4:	80 81       	ld	r24, Z
    24c6:	8a 3f       	cpi	r24, 0xFA	; 250
    24c8:	08 f4       	brcc	.+2      	; 0x24cc <Stepper_vidDirection+0x1464>
    24ca:	0c cb       	rjmp	.-2536   	; 0x1ae4 <Stepper_vidDirection+0xa7c>
    24cc:	0c 94 62 1b 	jmp	0x36c4	; 0x36c4 <Stepper_vidDirection+0x265c>

		}
	}


		else if(direction=='R'){
    24d0:	fe 01       	movw	r30, r28
    24d2:	ee 57       	subi	r30, 0x7E	; 126
    24d4:	fe 4f       	sbci	r31, 0xFE	; 254
    24d6:	80 81       	ld	r24, Z
    24d8:	82 35       	cpi	r24, 0x52	; 82
    24da:	11 f0       	breq	.+4      	; 0x24e0 <Stepper_vidDirection+0x1478>
    24dc:	0c 94 62 1b 	jmp	0x36c4	; 0x36c4 <Stepper_vidDirection+0x265c>
			switch(angle){
    24e0:	fe 01       	movw	r30, r28
    24e2:	ed 57       	subi	r30, 0x7D	; 125
    24e4:	fe 4f       	sbci	r31, 0xFE	; 254
    24e6:	80 81       	ld	r24, Z
    24e8:	28 2f       	mov	r18, r24
    24ea:	30 e0       	ldi	r19, 0x00	; 0
    24ec:	cc 57       	subi	r28, 0x7C	; 124
    24ee:	de 4f       	sbci	r29, 0xFE	; 254
    24f0:	39 83       	std	Y+1, r19	; 0x01
    24f2:	28 83       	st	Y, r18
    24f4:	c4 58       	subi	r28, 0x84	; 132
    24f6:	d1 40       	sbci	r29, 0x01	; 1
    24f8:	cc 57       	subi	r28, 0x7C	; 124
    24fa:	de 4f       	sbci	r29, 0xFE	; 254
    24fc:	88 81       	ld	r24, Y
    24fe:	99 81       	ldd	r25, Y+1	; 0x01
    2500:	c4 58       	subi	r28, 0x84	; 132
    2502:	d1 40       	sbci	r29, 0x01	; 1
    2504:	8a 35       	cpi	r24, 0x5A	; 90
    2506:	91 05       	cpc	r25, r1
    2508:	61 f0       	breq	.+24     	; 0x2522 <Stepper_vidDirection+0x14ba>
    250a:	cc 57       	subi	r28, 0x7C	; 124
    250c:	de 4f       	sbci	r29, 0xFE	; 254
    250e:	e8 81       	ld	r30, Y
    2510:	f9 81       	ldd	r31, Y+1	; 0x01
    2512:	c4 58       	subi	r28, 0x84	; 132
    2514:	d1 40       	sbci	r29, 0x01	; 1
    2516:	e4 3b       	cpi	r30, 0xB4	; 180
    2518:	f1 05       	cpc	r31, r1
    251a:	09 f4       	brne	.+2      	; 0x251e <Stepper_vidDirection+0x14b6>
    251c:	fc c4       	rjmp	.+2552   	; 0x2f16 <Stepper_vidDirection+0x1eae>
    251e:	0c 94 62 1b 	jmp	0x36c4	; 0x36c4 <Stepper_vidDirection+0x265c>
			case 90:

				for(x=0; x<135; x++){
    2522:	fe 01       	movw	r30, r28
    2524:	ef 57       	subi	r30, 0x7F	; 127
    2526:	fe 4f       	sbci	r31, 0xFE	; 254
    2528:	10 82       	st	Z, r1
    252a:	ed c4       	rjmp	.+2522   	; 0x2f06 <Stepper_vidDirection+0x1e9e>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    252c:	89 e0       	ldi	r24, 0x09	; 9
    252e:	61 e0       	ldi	r22, 0x01	; 1
    2530:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2534:	8a e0       	ldi	r24, 0x0A	; 10
    2536:	60 e0       	ldi	r22, 0x00	; 0
    2538:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    253c:	8b e0       	ldi	r24, 0x0B	; 11
    253e:	60 e0       	ldi	r22, 0x00	; 0
    2540:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2544:	8c e0       	ldi	r24, 0x0C	; 12
    2546:	60 e0       	ldi	r22, 0x00	; 0
    2548:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    254c:	fe 01       	movw	r30, r28
    254e:	e3 54       	subi	r30, 0x43	; 67
    2550:	ff 4f       	sbci	r31, 0xFF	; 255
    2552:	80 e0       	ldi	r24, 0x00	; 0
    2554:	90 e8       	ldi	r25, 0x80	; 128
    2556:	a4 e5       	ldi	r26, 0x54	; 84
    2558:	b4 e4       	ldi	r27, 0x44	; 68
    255a:	80 83       	st	Z, r24
    255c:	91 83       	std	Z+1, r25	; 0x01
    255e:	a2 83       	std	Z+2, r26	; 0x02
    2560:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2562:	8e 01       	movw	r16, r28
    2564:	07 54       	subi	r16, 0x47	; 71
    2566:	1f 4f       	sbci	r17, 0xFF	; 255
    2568:	fe 01       	movw	r30, r28
    256a:	e3 54       	subi	r30, 0x43	; 67
    256c:	ff 4f       	sbci	r31, 0xFF	; 255
    256e:	60 81       	ld	r22, Z
    2570:	71 81       	ldd	r23, Z+1	; 0x01
    2572:	82 81       	ldd	r24, Z+2	; 0x02
    2574:	93 81       	ldd	r25, Z+3	; 0x03
    2576:	2b ea       	ldi	r18, 0xAB	; 171
    2578:	3a ea       	ldi	r19, 0xAA	; 170
    257a:	4a e2       	ldi	r20, 0x2A	; 42
    257c:	50 e4       	ldi	r21, 0x40	; 64
    257e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2582:	dc 01       	movw	r26, r24
    2584:	cb 01       	movw	r24, r22
    2586:	f8 01       	movw	r30, r16
    2588:	80 83       	st	Z, r24
    258a:	91 83       	std	Z+1, r25	; 0x01
    258c:	a2 83       	std	Z+2, r26	; 0x02
    258e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2590:	fe 01       	movw	r30, r28
    2592:	e7 54       	subi	r30, 0x47	; 71
    2594:	ff 4f       	sbci	r31, 0xFF	; 255
    2596:	60 81       	ld	r22, Z
    2598:	71 81       	ldd	r23, Z+1	; 0x01
    259a:	82 81       	ldd	r24, Z+2	; 0x02
    259c:	93 81       	ldd	r25, Z+3	; 0x03
    259e:	20 e0       	ldi	r18, 0x00	; 0
    25a0:	30 e0       	ldi	r19, 0x00	; 0
    25a2:	40 e8       	ldi	r20, 0x80	; 128
    25a4:	5f e3       	ldi	r21, 0x3F	; 63
    25a6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    25aa:	88 23       	and	r24, r24
    25ac:	34 f4       	brge	.+12     	; 0x25ba <Stepper_vidDirection+0x1552>
		__ticks = 1;
    25ae:	fe 01       	movw	r30, r28
    25b0:	e8 54       	subi	r30, 0x48	; 72
    25b2:	ff 4f       	sbci	r31, 0xFF	; 255
    25b4:	81 e0       	ldi	r24, 0x01	; 1
    25b6:	80 83       	st	Z, r24
    25b8:	e0 c0       	rjmp	.+448    	; 0x277a <Stepper_vidDirection+0x1712>
	else if (__tmp > 255)
    25ba:	fe 01       	movw	r30, r28
    25bc:	e7 54       	subi	r30, 0x47	; 71
    25be:	ff 4f       	sbci	r31, 0xFF	; 255
    25c0:	60 81       	ld	r22, Z
    25c2:	71 81       	ldd	r23, Z+1	; 0x01
    25c4:	82 81       	ldd	r24, Z+2	; 0x02
    25c6:	93 81       	ldd	r25, Z+3	; 0x03
    25c8:	20 e0       	ldi	r18, 0x00	; 0
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	4f e7       	ldi	r20, 0x7F	; 127
    25ce:	53 e4       	ldi	r21, 0x43	; 67
    25d0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    25d4:	18 16       	cp	r1, r24
    25d6:	0c f0       	brlt	.+2      	; 0x25da <Stepper_vidDirection+0x1572>
    25d8:	c0 c0       	rjmp	.+384    	; 0x275a <Stepper_vidDirection+0x16f2>
	{
		_delay_ms(__us / 1000.0);
    25da:	fe 01       	movw	r30, r28
    25dc:	e3 54       	subi	r30, 0x43	; 67
    25de:	ff 4f       	sbci	r31, 0xFF	; 255
    25e0:	60 81       	ld	r22, Z
    25e2:	71 81       	ldd	r23, Z+1	; 0x01
    25e4:	82 81       	ldd	r24, Z+2	; 0x02
    25e6:	93 81       	ldd	r25, Z+3	; 0x03
    25e8:	20 e0       	ldi	r18, 0x00	; 0
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	4a e7       	ldi	r20, 0x7A	; 122
    25ee:	54 e4       	ldi	r21, 0x44	; 68
    25f0:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    25f4:	dc 01       	movw	r26, r24
    25f6:	cb 01       	movw	r24, r22
    25f8:	fe 01       	movw	r30, r28
    25fa:	ec 54       	subi	r30, 0x4C	; 76
    25fc:	ff 4f       	sbci	r31, 0xFF	; 255
    25fe:	80 83       	st	Z, r24
    2600:	91 83       	std	Z+1, r25	; 0x01
    2602:	a2 83       	std	Z+2, r26	; 0x02
    2604:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2606:	8e 01       	movw	r16, r28
    2608:	00 55       	subi	r16, 0x50	; 80
    260a:	1f 4f       	sbci	r17, 0xFF	; 255
    260c:	fe 01       	movw	r30, r28
    260e:	ec 54       	subi	r30, 0x4C	; 76
    2610:	ff 4f       	sbci	r31, 0xFF	; 255
    2612:	60 81       	ld	r22, Z
    2614:	71 81       	ldd	r23, Z+1	; 0x01
    2616:	82 81       	ldd	r24, Z+2	; 0x02
    2618:	93 81       	ldd	r25, Z+3	; 0x03
    261a:	20 e0       	ldi	r18, 0x00	; 0
    261c:	30 e0       	ldi	r19, 0x00	; 0
    261e:	4a ef       	ldi	r20, 0xFA	; 250
    2620:	54 e4       	ldi	r21, 0x44	; 68
    2622:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2626:	dc 01       	movw	r26, r24
    2628:	cb 01       	movw	r24, r22
    262a:	f8 01       	movw	r30, r16
    262c:	80 83       	st	Z, r24
    262e:	91 83       	std	Z+1, r25	; 0x01
    2630:	a2 83       	std	Z+2, r26	; 0x02
    2632:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2634:	fe 01       	movw	r30, r28
    2636:	e0 55       	subi	r30, 0x50	; 80
    2638:	ff 4f       	sbci	r31, 0xFF	; 255
    263a:	60 81       	ld	r22, Z
    263c:	71 81       	ldd	r23, Z+1	; 0x01
    263e:	82 81       	ldd	r24, Z+2	; 0x02
    2640:	93 81       	ldd	r25, Z+3	; 0x03
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	40 e8       	ldi	r20, 0x80	; 128
    2648:	5f e3       	ldi	r21, 0x3F	; 63
    264a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    264e:	88 23       	and	r24, r24
    2650:	44 f4       	brge	.+16     	; 0x2662 <Stepper_vidDirection+0x15fa>
		__ticks = 1;
    2652:	fe 01       	movw	r30, r28
    2654:	e2 55       	subi	r30, 0x52	; 82
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	91 83       	std	Z+1, r25	; 0x01
    265e:	80 83       	st	Z, r24
    2660:	64 c0       	rjmp	.+200    	; 0x272a <Stepper_vidDirection+0x16c2>
	else if (__tmp > 65535)
    2662:	fe 01       	movw	r30, r28
    2664:	e0 55       	subi	r30, 0x50	; 80
    2666:	ff 4f       	sbci	r31, 0xFF	; 255
    2668:	60 81       	ld	r22, Z
    266a:	71 81       	ldd	r23, Z+1	; 0x01
    266c:	82 81       	ldd	r24, Z+2	; 0x02
    266e:	93 81       	ldd	r25, Z+3	; 0x03
    2670:	20 e0       	ldi	r18, 0x00	; 0
    2672:	3f ef       	ldi	r19, 0xFF	; 255
    2674:	4f e7       	ldi	r20, 0x7F	; 127
    2676:	57 e4       	ldi	r21, 0x47	; 71
    2678:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    267c:	18 16       	cp	r1, r24
    267e:	0c f0       	brlt	.+2      	; 0x2682 <Stepper_vidDirection+0x161a>
    2680:	43 c0       	rjmp	.+134    	; 0x2708 <Stepper_vidDirection+0x16a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2682:	fe 01       	movw	r30, r28
    2684:	ec 54       	subi	r30, 0x4C	; 76
    2686:	ff 4f       	sbci	r31, 0xFF	; 255
    2688:	60 81       	ld	r22, Z
    268a:	71 81       	ldd	r23, Z+1	; 0x01
    268c:	82 81       	ldd	r24, Z+2	; 0x02
    268e:	93 81       	ldd	r25, Z+3	; 0x03
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	40 e2       	ldi	r20, 0x20	; 32
    2696:	51 e4       	ldi	r21, 0x41	; 65
    2698:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    269c:	dc 01       	movw	r26, r24
    269e:	cb 01       	movw	r24, r22
    26a0:	8e 01       	movw	r16, r28
    26a2:	02 55       	subi	r16, 0x52	; 82
    26a4:	1f 4f       	sbci	r17, 0xFF	; 255
    26a6:	bc 01       	movw	r22, r24
    26a8:	cd 01       	movw	r24, r26
    26aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ae:	dc 01       	movw	r26, r24
    26b0:	cb 01       	movw	r24, r22
    26b2:	f8 01       	movw	r30, r16
    26b4:	91 83       	std	Z+1, r25	; 0x01
    26b6:	80 83       	st	Z, r24
    26b8:	1f c0       	rjmp	.+62     	; 0x26f8 <Stepper_vidDirection+0x1690>
    26ba:	fe 01       	movw	r30, r28
    26bc:	e4 55       	subi	r30, 0x54	; 84
    26be:	ff 4f       	sbci	r31, 0xFF	; 255
    26c0:	88 ec       	ldi	r24, 0xC8	; 200
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	91 83       	std	Z+1, r25	; 0x01
    26c6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26c8:	fe 01       	movw	r30, r28
    26ca:	e4 55       	subi	r30, 0x54	; 84
    26cc:	ff 4f       	sbci	r31, 0xFF	; 255
    26ce:	80 81       	ld	r24, Z
    26d0:	91 81       	ldd	r25, Z+1	; 0x01
    26d2:	01 97       	sbiw	r24, 0x01	; 1
    26d4:	f1 f7       	brne	.-4      	; 0x26d2 <Stepper_vidDirection+0x166a>
    26d6:	fe 01       	movw	r30, r28
    26d8:	e4 55       	subi	r30, 0x54	; 84
    26da:	ff 4f       	sbci	r31, 0xFF	; 255
    26dc:	91 83       	std	Z+1, r25	; 0x01
    26de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26e0:	de 01       	movw	r26, r28
    26e2:	a2 55       	subi	r26, 0x52	; 82
    26e4:	bf 4f       	sbci	r27, 0xFF	; 255
    26e6:	fe 01       	movw	r30, r28
    26e8:	e2 55       	subi	r30, 0x52	; 82
    26ea:	ff 4f       	sbci	r31, 0xFF	; 255
    26ec:	80 81       	ld	r24, Z
    26ee:	91 81       	ldd	r25, Z+1	; 0x01
    26f0:	01 97       	sbiw	r24, 0x01	; 1
    26f2:	11 96       	adiw	r26, 0x01	; 1
    26f4:	9c 93       	st	X, r25
    26f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26f8:	fe 01       	movw	r30, r28
    26fa:	e2 55       	subi	r30, 0x52	; 82
    26fc:	ff 4f       	sbci	r31, 0xFF	; 255
    26fe:	80 81       	ld	r24, Z
    2700:	91 81       	ldd	r25, Z+1	; 0x01
    2702:	00 97       	sbiw	r24, 0x00	; 0
    2704:	d1 f6       	brne	.-76     	; 0x26ba <Stepper_vidDirection+0x1652>
    2706:	4b c0       	rjmp	.+150    	; 0x279e <Stepper_vidDirection+0x1736>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2708:	8e 01       	movw	r16, r28
    270a:	02 55       	subi	r16, 0x52	; 82
    270c:	1f 4f       	sbci	r17, 0xFF	; 255
    270e:	fe 01       	movw	r30, r28
    2710:	e0 55       	subi	r30, 0x50	; 80
    2712:	ff 4f       	sbci	r31, 0xFF	; 255
    2714:	60 81       	ld	r22, Z
    2716:	71 81       	ldd	r23, Z+1	; 0x01
    2718:	82 81       	ldd	r24, Z+2	; 0x02
    271a:	93 81       	ldd	r25, Z+3	; 0x03
    271c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2720:	dc 01       	movw	r26, r24
    2722:	cb 01       	movw	r24, r22
    2724:	f8 01       	movw	r30, r16
    2726:	91 83       	std	Z+1, r25	; 0x01
    2728:	80 83       	st	Z, r24
    272a:	de 01       	movw	r26, r28
    272c:	a6 55       	subi	r26, 0x56	; 86
    272e:	bf 4f       	sbci	r27, 0xFF	; 255
    2730:	fe 01       	movw	r30, r28
    2732:	e2 55       	subi	r30, 0x52	; 82
    2734:	ff 4f       	sbci	r31, 0xFF	; 255
    2736:	80 81       	ld	r24, Z
    2738:	91 81       	ldd	r25, Z+1	; 0x01
    273a:	11 96       	adiw	r26, 0x01	; 1
    273c:	9c 93       	st	X, r25
    273e:	8e 93       	st	-X, r24
    2740:	fe 01       	movw	r30, r28
    2742:	e6 55       	subi	r30, 0x56	; 86
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	80 81       	ld	r24, Z
    2748:	91 81       	ldd	r25, Z+1	; 0x01
    274a:	01 97       	sbiw	r24, 0x01	; 1
    274c:	f1 f7       	brne	.-4      	; 0x274a <Stepper_vidDirection+0x16e2>
    274e:	fe 01       	movw	r30, r28
    2750:	e6 55       	subi	r30, 0x56	; 86
    2752:	ff 4f       	sbci	r31, 0xFF	; 255
    2754:	91 83       	std	Z+1, r25	; 0x01
    2756:	80 83       	st	Z, r24
    2758:	22 c0       	rjmp	.+68     	; 0x279e <Stepper_vidDirection+0x1736>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    275a:	8e 01       	movw	r16, r28
    275c:	08 54       	subi	r16, 0x48	; 72
    275e:	1f 4f       	sbci	r17, 0xFF	; 255
    2760:	fe 01       	movw	r30, r28
    2762:	e7 54       	subi	r30, 0x47	; 71
    2764:	ff 4f       	sbci	r31, 0xFF	; 255
    2766:	60 81       	ld	r22, Z
    2768:	71 81       	ldd	r23, Z+1	; 0x01
    276a:	82 81       	ldd	r24, Z+2	; 0x02
    276c:	93 81       	ldd	r25, Z+3	; 0x03
    276e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2772:	dc 01       	movw	r26, r24
    2774:	cb 01       	movw	r24, r22
    2776:	f8 01       	movw	r30, r16
    2778:	80 83       	st	Z, r24
    277a:	de 01       	movw	r26, r28
    277c:	a7 55       	subi	r26, 0x57	; 87
    277e:	bf 4f       	sbci	r27, 0xFF	; 255
    2780:	fe 01       	movw	r30, r28
    2782:	e8 54       	subi	r30, 0x48	; 72
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	80 81       	ld	r24, Z
    2788:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    278a:	fe 01       	movw	r30, r28
    278c:	e7 55       	subi	r30, 0x57	; 87
    278e:	ff 4f       	sbci	r31, 0xFF	; 255
    2790:	80 81       	ld	r24, Z
    2792:	8a 95       	dec	r24
    2794:	f1 f7       	brne	.-4      	; 0x2792 <Stepper_vidDirection+0x172a>
    2796:	fe 01       	movw	r30, r28
    2798:	e7 55       	subi	r30, 0x57	; 87
    279a:	ff 4f       	sbci	r31, 0xFF	; 255
    279c:	80 83       	st	Z, r24
					_delay_us(850);

					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    279e:	89 e0       	ldi	r24, 0x09	; 9
    27a0:	60 e0       	ldi	r22, 0x00	; 0
    27a2:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    27a6:	8a e0       	ldi	r24, 0x0A	; 10
    27a8:	61 e0       	ldi	r22, 0x01	; 1
    27aa:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    27ae:	8b e0       	ldi	r24, 0x0B	; 11
    27b0:	60 e0       	ldi	r22, 0x00	; 0
    27b2:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    27b6:	8c e0       	ldi	r24, 0x0C	; 12
    27b8:	60 e0       	ldi	r22, 0x00	; 0
    27ba:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    27be:	fe 01       	movw	r30, r28
    27c0:	eb 55       	subi	r30, 0x5B	; 91
    27c2:	ff 4f       	sbci	r31, 0xFF	; 255
    27c4:	80 e0       	ldi	r24, 0x00	; 0
    27c6:	90 e8       	ldi	r25, 0x80	; 128
    27c8:	a4 e5       	ldi	r26, 0x54	; 84
    27ca:	b4 e4       	ldi	r27, 0x44	; 68
    27cc:	80 83       	st	Z, r24
    27ce:	91 83       	std	Z+1, r25	; 0x01
    27d0:	a2 83       	std	Z+2, r26	; 0x02
    27d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    27d4:	8e 01       	movw	r16, r28
    27d6:	0f 55       	subi	r16, 0x5F	; 95
    27d8:	1f 4f       	sbci	r17, 0xFF	; 255
    27da:	fe 01       	movw	r30, r28
    27dc:	eb 55       	subi	r30, 0x5B	; 91
    27de:	ff 4f       	sbci	r31, 0xFF	; 255
    27e0:	60 81       	ld	r22, Z
    27e2:	71 81       	ldd	r23, Z+1	; 0x01
    27e4:	82 81       	ldd	r24, Z+2	; 0x02
    27e6:	93 81       	ldd	r25, Z+3	; 0x03
    27e8:	2b ea       	ldi	r18, 0xAB	; 171
    27ea:	3a ea       	ldi	r19, 0xAA	; 170
    27ec:	4a e2       	ldi	r20, 0x2A	; 42
    27ee:	50 e4       	ldi	r21, 0x40	; 64
    27f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f4:	dc 01       	movw	r26, r24
    27f6:	cb 01       	movw	r24, r22
    27f8:	f8 01       	movw	r30, r16
    27fa:	80 83       	st	Z, r24
    27fc:	91 83       	std	Z+1, r25	; 0x01
    27fe:	a2 83       	std	Z+2, r26	; 0x02
    2800:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2802:	fe 01       	movw	r30, r28
    2804:	ef 55       	subi	r30, 0x5F	; 95
    2806:	ff 4f       	sbci	r31, 0xFF	; 255
    2808:	60 81       	ld	r22, Z
    280a:	71 81       	ldd	r23, Z+1	; 0x01
    280c:	82 81       	ldd	r24, Z+2	; 0x02
    280e:	93 81       	ldd	r25, Z+3	; 0x03
    2810:	20 e0       	ldi	r18, 0x00	; 0
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	40 e8       	ldi	r20, 0x80	; 128
    2816:	5f e3       	ldi	r21, 0x3F	; 63
    2818:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    281c:	88 23       	and	r24, r24
    281e:	34 f4       	brge	.+12     	; 0x282c <Stepper_vidDirection+0x17c4>
		__ticks = 1;
    2820:	fe 01       	movw	r30, r28
    2822:	e0 56       	subi	r30, 0x60	; 96
    2824:	ff 4f       	sbci	r31, 0xFF	; 255
    2826:	81 e0       	ldi	r24, 0x01	; 1
    2828:	80 83       	st	Z, r24
    282a:	e0 c0       	rjmp	.+448    	; 0x29ec <Stepper_vidDirection+0x1984>
	else if (__tmp > 255)
    282c:	fe 01       	movw	r30, r28
    282e:	ef 55       	subi	r30, 0x5F	; 95
    2830:	ff 4f       	sbci	r31, 0xFF	; 255
    2832:	60 81       	ld	r22, Z
    2834:	71 81       	ldd	r23, Z+1	; 0x01
    2836:	82 81       	ldd	r24, Z+2	; 0x02
    2838:	93 81       	ldd	r25, Z+3	; 0x03
    283a:	20 e0       	ldi	r18, 0x00	; 0
    283c:	30 e0       	ldi	r19, 0x00	; 0
    283e:	4f e7       	ldi	r20, 0x7F	; 127
    2840:	53 e4       	ldi	r21, 0x43	; 67
    2842:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2846:	18 16       	cp	r1, r24
    2848:	0c f0       	brlt	.+2      	; 0x284c <Stepper_vidDirection+0x17e4>
    284a:	c0 c0       	rjmp	.+384    	; 0x29cc <Stepper_vidDirection+0x1964>
	{
		_delay_ms(__us / 1000.0);
    284c:	fe 01       	movw	r30, r28
    284e:	eb 55       	subi	r30, 0x5B	; 91
    2850:	ff 4f       	sbci	r31, 0xFF	; 255
    2852:	60 81       	ld	r22, Z
    2854:	71 81       	ldd	r23, Z+1	; 0x01
    2856:	82 81       	ldd	r24, Z+2	; 0x02
    2858:	93 81       	ldd	r25, Z+3	; 0x03
    285a:	20 e0       	ldi	r18, 0x00	; 0
    285c:	30 e0       	ldi	r19, 0x00	; 0
    285e:	4a e7       	ldi	r20, 0x7A	; 122
    2860:	54 e4       	ldi	r21, 0x44	; 68
    2862:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2866:	dc 01       	movw	r26, r24
    2868:	cb 01       	movw	r24, r22
    286a:	fe 01       	movw	r30, r28
    286c:	e4 56       	subi	r30, 0x64	; 100
    286e:	ff 4f       	sbci	r31, 0xFF	; 255
    2870:	80 83       	st	Z, r24
    2872:	91 83       	std	Z+1, r25	; 0x01
    2874:	a2 83       	std	Z+2, r26	; 0x02
    2876:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2878:	8e 01       	movw	r16, r28
    287a:	08 56       	subi	r16, 0x68	; 104
    287c:	1f 4f       	sbci	r17, 0xFF	; 255
    287e:	fe 01       	movw	r30, r28
    2880:	e4 56       	subi	r30, 0x64	; 100
    2882:	ff 4f       	sbci	r31, 0xFF	; 255
    2884:	60 81       	ld	r22, Z
    2886:	71 81       	ldd	r23, Z+1	; 0x01
    2888:	82 81       	ldd	r24, Z+2	; 0x02
    288a:	93 81       	ldd	r25, Z+3	; 0x03
    288c:	20 e0       	ldi	r18, 0x00	; 0
    288e:	30 e0       	ldi	r19, 0x00	; 0
    2890:	4a ef       	ldi	r20, 0xFA	; 250
    2892:	54 e4       	ldi	r21, 0x44	; 68
    2894:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2898:	dc 01       	movw	r26, r24
    289a:	cb 01       	movw	r24, r22
    289c:	f8 01       	movw	r30, r16
    289e:	80 83       	st	Z, r24
    28a0:	91 83       	std	Z+1, r25	; 0x01
    28a2:	a2 83       	std	Z+2, r26	; 0x02
    28a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28a6:	fe 01       	movw	r30, r28
    28a8:	e8 56       	subi	r30, 0x68	; 104
    28aa:	ff 4f       	sbci	r31, 0xFF	; 255
    28ac:	60 81       	ld	r22, Z
    28ae:	71 81       	ldd	r23, Z+1	; 0x01
    28b0:	82 81       	ldd	r24, Z+2	; 0x02
    28b2:	93 81       	ldd	r25, Z+3	; 0x03
    28b4:	20 e0       	ldi	r18, 0x00	; 0
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	40 e8       	ldi	r20, 0x80	; 128
    28ba:	5f e3       	ldi	r21, 0x3F	; 63
    28bc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    28c0:	88 23       	and	r24, r24
    28c2:	44 f4       	brge	.+16     	; 0x28d4 <Stepper_vidDirection+0x186c>
		__ticks = 1;
    28c4:	fe 01       	movw	r30, r28
    28c6:	ea 56       	subi	r30, 0x6A	; 106
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	81 e0       	ldi	r24, 0x01	; 1
    28cc:	90 e0       	ldi	r25, 0x00	; 0
    28ce:	91 83       	std	Z+1, r25	; 0x01
    28d0:	80 83       	st	Z, r24
    28d2:	64 c0       	rjmp	.+200    	; 0x299c <Stepper_vidDirection+0x1934>
	else if (__tmp > 65535)
    28d4:	fe 01       	movw	r30, r28
    28d6:	e8 56       	subi	r30, 0x68	; 104
    28d8:	ff 4f       	sbci	r31, 0xFF	; 255
    28da:	60 81       	ld	r22, Z
    28dc:	71 81       	ldd	r23, Z+1	; 0x01
    28de:	82 81       	ldd	r24, Z+2	; 0x02
    28e0:	93 81       	ldd	r25, Z+3	; 0x03
    28e2:	20 e0       	ldi	r18, 0x00	; 0
    28e4:	3f ef       	ldi	r19, 0xFF	; 255
    28e6:	4f e7       	ldi	r20, 0x7F	; 127
    28e8:	57 e4       	ldi	r21, 0x47	; 71
    28ea:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    28ee:	18 16       	cp	r1, r24
    28f0:	0c f0       	brlt	.+2      	; 0x28f4 <Stepper_vidDirection+0x188c>
    28f2:	43 c0       	rjmp	.+134    	; 0x297a <Stepper_vidDirection+0x1912>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28f4:	fe 01       	movw	r30, r28
    28f6:	e4 56       	subi	r30, 0x64	; 100
    28f8:	ff 4f       	sbci	r31, 0xFF	; 255
    28fa:	60 81       	ld	r22, Z
    28fc:	71 81       	ldd	r23, Z+1	; 0x01
    28fe:	82 81       	ldd	r24, Z+2	; 0x02
    2900:	93 81       	ldd	r25, Z+3	; 0x03
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e2       	ldi	r20, 0x20	; 32
    2908:	51 e4       	ldi	r21, 0x41	; 65
    290a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    290e:	dc 01       	movw	r26, r24
    2910:	cb 01       	movw	r24, r22
    2912:	8e 01       	movw	r16, r28
    2914:	0a 56       	subi	r16, 0x6A	; 106
    2916:	1f 4f       	sbci	r17, 0xFF	; 255
    2918:	bc 01       	movw	r22, r24
    291a:	cd 01       	movw	r24, r26
    291c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2920:	dc 01       	movw	r26, r24
    2922:	cb 01       	movw	r24, r22
    2924:	f8 01       	movw	r30, r16
    2926:	91 83       	std	Z+1, r25	; 0x01
    2928:	80 83       	st	Z, r24
    292a:	1f c0       	rjmp	.+62     	; 0x296a <Stepper_vidDirection+0x1902>
    292c:	fe 01       	movw	r30, r28
    292e:	ec 56       	subi	r30, 0x6C	; 108
    2930:	ff 4f       	sbci	r31, 0xFF	; 255
    2932:	88 ec       	ldi	r24, 0xC8	; 200
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	91 83       	std	Z+1, r25	; 0x01
    2938:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    293a:	fe 01       	movw	r30, r28
    293c:	ec 56       	subi	r30, 0x6C	; 108
    293e:	ff 4f       	sbci	r31, 0xFF	; 255
    2940:	80 81       	ld	r24, Z
    2942:	91 81       	ldd	r25, Z+1	; 0x01
    2944:	01 97       	sbiw	r24, 0x01	; 1
    2946:	f1 f7       	brne	.-4      	; 0x2944 <Stepper_vidDirection+0x18dc>
    2948:	fe 01       	movw	r30, r28
    294a:	ec 56       	subi	r30, 0x6C	; 108
    294c:	ff 4f       	sbci	r31, 0xFF	; 255
    294e:	91 83       	std	Z+1, r25	; 0x01
    2950:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2952:	de 01       	movw	r26, r28
    2954:	aa 56       	subi	r26, 0x6A	; 106
    2956:	bf 4f       	sbci	r27, 0xFF	; 255
    2958:	fe 01       	movw	r30, r28
    295a:	ea 56       	subi	r30, 0x6A	; 106
    295c:	ff 4f       	sbci	r31, 0xFF	; 255
    295e:	80 81       	ld	r24, Z
    2960:	91 81       	ldd	r25, Z+1	; 0x01
    2962:	01 97       	sbiw	r24, 0x01	; 1
    2964:	11 96       	adiw	r26, 0x01	; 1
    2966:	9c 93       	st	X, r25
    2968:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    296a:	fe 01       	movw	r30, r28
    296c:	ea 56       	subi	r30, 0x6A	; 106
    296e:	ff 4f       	sbci	r31, 0xFF	; 255
    2970:	80 81       	ld	r24, Z
    2972:	91 81       	ldd	r25, Z+1	; 0x01
    2974:	00 97       	sbiw	r24, 0x00	; 0
    2976:	d1 f6       	brne	.-76     	; 0x292c <Stepper_vidDirection+0x18c4>
    2978:	4b c0       	rjmp	.+150    	; 0x2a10 <Stepper_vidDirection+0x19a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    297a:	8e 01       	movw	r16, r28
    297c:	0a 56       	subi	r16, 0x6A	; 106
    297e:	1f 4f       	sbci	r17, 0xFF	; 255
    2980:	fe 01       	movw	r30, r28
    2982:	e8 56       	subi	r30, 0x68	; 104
    2984:	ff 4f       	sbci	r31, 0xFF	; 255
    2986:	60 81       	ld	r22, Z
    2988:	71 81       	ldd	r23, Z+1	; 0x01
    298a:	82 81       	ldd	r24, Z+2	; 0x02
    298c:	93 81       	ldd	r25, Z+3	; 0x03
    298e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2992:	dc 01       	movw	r26, r24
    2994:	cb 01       	movw	r24, r22
    2996:	f8 01       	movw	r30, r16
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	80 83       	st	Z, r24
    299c:	de 01       	movw	r26, r28
    299e:	ae 56       	subi	r26, 0x6E	; 110
    29a0:	bf 4f       	sbci	r27, 0xFF	; 255
    29a2:	fe 01       	movw	r30, r28
    29a4:	ea 56       	subi	r30, 0x6A	; 106
    29a6:	ff 4f       	sbci	r31, 0xFF	; 255
    29a8:	80 81       	ld	r24, Z
    29aa:	91 81       	ldd	r25, Z+1	; 0x01
    29ac:	11 96       	adiw	r26, 0x01	; 1
    29ae:	9c 93       	st	X, r25
    29b0:	8e 93       	st	-X, r24
    29b2:	fe 01       	movw	r30, r28
    29b4:	ee 56       	subi	r30, 0x6E	; 110
    29b6:	ff 4f       	sbci	r31, 0xFF	; 255
    29b8:	80 81       	ld	r24, Z
    29ba:	91 81       	ldd	r25, Z+1	; 0x01
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	f1 f7       	brne	.-4      	; 0x29bc <Stepper_vidDirection+0x1954>
    29c0:	fe 01       	movw	r30, r28
    29c2:	ee 56       	subi	r30, 0x6E	; 110
    29c4:	ff 4f       	sbci	r31, 0xFF	; 255
    29c6:	91 83       	std	Z+1, r25	; 0x01
    29c8:	80 83       	st	Z, r24
    29ca:	22 c0       	rjmp	.+68     	; 0x2a10 <Stepper_vidDirection+0x19a8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29cc:	8e 01       	movw	r16, r28
    29ce:	00 56       	subi	r16, 0x60	; 96
    29d0:	1f 4f       	sbci	r17, 0xFF	; 255
    29d2:	fe 01       	movw	r30, r28
    29d4:	ef 55       	subi	r30, 0x5F	; 95
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	60 81       	ld	r22, Z
    29da:	71 81       	ldd	r23, Z+1	; 0x01
    29dc:	82 81       	ldd	r24, Z+2	; 0x02
    29de:	93 81       	ldd	r25, Z+3	; 0x03
    29e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	f8 01       	movw	r30, r16
    29ea:	80 83       	st	Z, r24
    29ec:	de 01       	movw	r26, r28
    29ee:	af 56       	subi	r26, 0x6F	; 111
    29f0:	bf 4f       	sbci	r27, 0xFF	; 255
    29f2:	fe 01       	movw	r30, r28
    29f4:	e0 56       	subi	r30, 0x60	; 96
    29f6:	ff 4f       	sbci	r31, 0xFF	; 255
    29f8:	80 81       	ld	r24, Z
    29fa:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    29fc:	fe 01       	movw	r30, r28
    29fe:	ef 56       	subi	r30, 0x6F	; 111
    2a00:	ff 4f       	sbci	r31, 0xFF	; 255
    2a02:	80 81       	ld	r24, Z
    2a04:	8a 95       	dec	r24
    2a06:	f1 f7       	brne	.-4      	; 0x2a04 <Stepper_vidDirection+0x199c>
    2a08:	fe 01       	movw	r30, r28
    2a0a:	ef 56       	subi	r30, 0x6F	; 111
    2a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0e:	80 83       	st	Z, r24
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    2a10:	89 e0       	ldi	r24, 0x09	; 9
    2a12:	60 e0       	ldi	r22, 0x00	; 0
    2a14:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2a18:	8a e0       	ldi	r24, 0x0A	; 10
    2a1a:	60 e0       	ldi	r22, 0x00	; 0
    2a1c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    2a20:	8b e0       	ldi	r24, 0x0B	; 11
    2a22:	61 e0       	ldi	r22, 0x01	; 1
    2a24:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2a28:	8c e0       	ldi	r24, 0x0C	; 12
    2a2a:	60 e0       	ldi	r22, 0x00	; 0
    2a2c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    2a30:	fe 01       	movw	r30, r28
    2a32:	e3 57       	subi	r30, 0x73	; 115
    2a34:	ff 4f       	sbci	r31, 0xFF	; 255
    2a36:	80 e0       	ldi	r24, 0x00	; 0
    2a38:	90 e8       	ldi	r25, 0x80	; 128
    2a3a:	a4 e5       	ldi	r26, 0x54	; 84
    2a3c:	b4 e4       	ldi	r27, 0x44	; 68
    2a3e:	80 83       	st	Z, r24
    2a40:	91 83       	std	Z+1, r25	; 0x01
    2a42:	a2 83       	std	Z+2, r26	; 0x02
    2a44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2a46:	8e 01       	movw	r16, r28
    2a48:	07 57       	subi	r16, 0x77	; 119
    2a4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	e3 57       	subi	r30, 0x73	; 115
    2a50:	ff 4f       	sbci	r31, 0xFF	; 255
    2a52:	60 81       	ld	r22, Z
    2a54:	71 81       	ldd	r23, Z+1	; 0x01
    2a56:	82 81       	ldd	r24, Z+2	; 0x02
    2a58:	93 81       	ldd	r25, Z+3	; 0x03
    2a5a:	2b ea       	ldi	r18, 0xAB	; 171
    2a5c:	3a ea       	ldi	r19, 0xAA	; 170
    2a5e:	4a e2       	ldi	r20, 0x2A	; 42
    2a60:	50 e4       	ldi	r21, 0x40	; 64
    2a62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a66:	dc 01       	movw	r26, r24
    2a68:	cb 01       	movw	r24, r22
    2a6a:	f8 01       	movw	r30, r16
    2a6c:	80 83       	st	Z, r24
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	a2 83       	std	Z+2, r26	; 0x02
    2a72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a74:	fe 01       	movw	r30, r28
    2a76:	e7 57       	subi	r30, 0x77	; 119
    2a78:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7a:	60 81       	ld	r22, Z
    2a7c:	71 81       	ldd	r23, Z+1	; 0x01
    2a7e:	82 81       	ldd	r24, Z+2	; 0x02
    2a80:	93 81       	ldd	r25, Z+3	; 0x03
    2a82:	20 e0       	ldi	r18, 0x00	; 0
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	40 e8       	ldi	r20, 0x80	; 128
    2a88:	5f e3       	ldi	r21, 0x3F	; 63
    2a8a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2a8e:	88 23       	and	r24, r24
    2a90:	34 f4       	brge	.+12     	; 0x2a9e <Stepper_vidDirection+0x1a36>
		__ticks = 1;
    2a92:	fe 01       	movw	r30, r28
    2a94:	e8 57       	subi	r30, 0x78	; 120
    2a96:	ff 4f       	sbci	r31, 0xFF	; 255
    2a98:	81 e0       	ldi	r24, 0x01	; 1
    2a9a:	80 83       	st	Z, r24
    2a9c:	e0 c0       	rjmp	.+448    	; 0x2c5e <Stepper_vidDirection+0x1bf6>
	else if (__tmp > 255)
    2a9e:	fe 01       	movw	r30, r28
    2aa0:	e7 57       	subi	r30, 0x77	; 119
    2aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa4:	60 81       	ld	r22, Z
    2aa6:	71 81       	ldd	r23, Z+1	; 0x01
    2aa8:	82 81       	ldd	r24, Z+2	; 0x02
    2aaa:	93 81       	ldd	r25, Z+3	; 0x03
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	4f e7       	ldi	r20, 0x7F	; 127
    2ab2:	53 e4       	ldi	r21, 0x43	; 67
    2ab4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2ab8:	18 16       	cp	r1, r24
    2aba:	0c f0       	brlt	.+2      	; 0x2abe <Stepper_vidDirection+0x1a56>
    2abc:	c0 c0       	rjmp	.+384    	; 0x2c3e <Stepper_vidDirection+0x1bd6>
	{
		_delay_ms(__us / 1000.0);
    2abe:	fe 01       	movw	r30, r28
    2ac0:	e3 57       	subi	r30, 0x73	; 115
    2ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac4:	60 81       	ld	r22, Z
    2ac6:	71 81       	ldd	r23, Z+1	; 0x01
    2ac8:	82 81       	ldd	r24, Z+2	; 0x02
    2aca:	93 81       	ldd	r25, Z+3	; 0x03
    2acc:	20 e0       	ldi	r18, 0x00	; 0
    2ace:	30 e0       	ldi	r19, 0x00	; 0
    2ad0:	4a e7       	ldi	r20, 0x7A	; 122
    2ad2:	54 e4       	ldi	r21, 0x44	; 68
    2ad4:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2ad8:	dc 01       	movw	r26, r24
    2ada:	cb 01       	movw	r24, r22
    2adc:	fe 01       	movw	r30, r28
    2ade:	ec 57       	subi	r30, 0x7C	; 124
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	80 83       	st	Z, r24
    2ae4:	91 83       	std	Z+1, r25	; 0x01
    2ae6:	a2 83       	std	Z+2, r26	; 0x02
    2ae8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aea:	8e 01       	movw	r16, r28
    2aec:	00 58       	subi	r16, 0x80	; 128
    2aee:	1f 4f       	sbci	r17, 0xFF	; 255
    2af0:	fe 01       	movw	r30, r28
    2af2:	ec 57       	subi	r30, 0x7C	; 124
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	60 81       	ld	r22, Z
    2af8:	71 81       	ldd	r23, Z+1	; 0x01
    2afa:	82 81       	ldd	r24, Z+2	; 0x02
    2afc:	93 81       	ldd	r25, Z+3	; 0x03
    2afe:	20 e0       	ldi	r18, 0x00	; 0
    2b00:	30 e0       	ldi	r19, 0x00	; 0
    2b02:	4a ef       	ldi	r20, 0xFA	; 250
    2b04:	54 e4       	ldi	r21, 0x44	; 68
    2b06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b0a:	dc 01       	movw	r26, r24
    2b0c:	cb 01       	movw	r24, r22
    2b0e:	f8 01       	movw	r30, r16
    2b10:	80 83       	st	Z, r24
    2b12:	91 83       	std	Z+1, r25	; 0x01
    2b14:	a2 83       	std	Z+2, r26	; 0x02
    2b16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b18:	fe 01       	movw	r30, r28
    2b1a:	e0 58       	subi	r30, 0x80	; 128
    2b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	20 e0       	ldi	r18, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	40 e8       	ldi	r20, 0x80	; 128
    2b2c:	5f e3       	ldi	r21, 0x3F	; 63
    2b2e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b32:	88 23       	and	r24, r24
    2b34:	44 f4       	brge	.+16     	; 0x2b46 <Stepper_vidDirection+0x1ade>
		__ticks = 1;
    2b36:	fe 01       	movw	r30, r28
    2b38:	e2 58       	subi	r30, 0x82	; 130
    2b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	91 83       	std	Z+1, r25	; 0x01
    2b42:	80 83       	st	Z, r24
    2b44:	64 c0       	rjmp	.+200    	; 0x2c0e <Stepper_vidDirection+0x1ba6>
	else if (__tmp > 65535)
    2b46:	fe 01       	movw	r30, r28
    2b48:	e0 58       	subi	r30, 0x80	; 128
    2b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4c:	60 81       	ld	r22, Z
    2b4e:	71 81       	ldd	r23, Z+1	; 0x01
    2b50:	82 81       	ldd	r24, Z+2	; 0x02
    2b52:	93 81       	ldd	r25, Z+3	; 0x03
    2b54:	20 e0       	ldi	r18, 0x00	; 0
    2b56:	3f ef       	ldi	r19, 0xFF	; 255
    2b58:	4f e7       	ldi	r20, 0x7F	; 127
    2b5a:	57 e4       	ldi	r21, 0x47	; 71
    2b5c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2b60:	18 16       	cp	r1, r24
    2b62:	0c f0       	brlt	.+2      	; 0x2b66 <Stepper_vidDirection+0x1afe>
    2b64:	43 c0       	rjmp	.+134    	; 0x2bec <Stepper_vidDirection+0x1b84>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b66:	fe 01       	movw	r30, r28
    2b68:	ec 57       	subi	r30, 0x7C	; 124
    2b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6c:	60 81       	ld	r22, Z
    2b6e:	71 81       	ldd	r23, Z+1	; 0x01
    2b70:	82 81       	ldd	r24, Z+2	; 0x02
    2b72:	93 81       	ldd	r25, Z+3	; 0x03
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	40 e2       	ldi	r20, 0x20	; 32
    2b7a:	51 e4       	ldi	r21, 0x41	; 65
    2b7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b80:	dc 01       	movw	r26, r24
    2b82:	cb 01       	movw	r24, r22
    2b84:	8e 01       	movw	r16, r28
    2b86:	02 58       	subi	r16, 0x82	; 130
    2b88:	1f 4f       	sbci	r17, 0xFF	; 255
    2b8a:	bc 01       	movw	r22, r24
    2b8c:	cd 01       	movw	r24, r26
    2b8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b92:	dc 01       	movw	r26, r24
    2b94:	cb 01       	movw	r24, r22
    2b96:	f8 01       	movw	r30, r16
    2b98:	91 83       	std	Z+1, r25	; 0x01
    2b9a:	80 83       	st	Z, r24
    2b9c:	1f c0       	rjmp	.+62     	; 0x2bdc <Stepper_vidDirection+0x1b74>
    2b9e:	fe 01       	movw	r30, r28
    2ba0:	e4 58       	subi	r30, 0x84	; 132
    2ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba4:	88 ec       	ldi	r24, 0xC8	; 200
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	91 83       	std	Z+1, r25	; 0x01
    2baa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2bac:	fe 01       	movw	r30, r28
    2bae:	e4 58       	subi	r30, 0x84	; 132
    2bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb2:	80 81       	ld	r24, Z
    2bb4:	91 81       	ldd	r25, Z+1	; 0x01
    2bb6:	01 97       	sbiw	r24, 0x01	; 1
    2bb8:	f1 f7       	brne	.-4      	; 0x2bb6 <Stepper_vidDirection+0x1b4e>
    2bba:	fe 01       	movw	r30, r28
    2bbc:	e4 58       	subi	r30, 0x84	; 132
    2bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc0:	91 83       	std	Z+1, r25	; 0x01
    2bc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bc4:	de 01       	movw	r26, r28
    2bc6:	a2 58       	subi	r26, 0x82	; 130
    2bc8:	bf 4f       	sbci	r27, 0xFF	; 255
    2bca:	fe 01       	movw	r30, r28
    2bcc:	e2 58       	subi	r30, 0x82	; 130
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	80 81       	ld	r24, Z
    2bd2:	91 81       	ldd	r25, Z+1	; 0x01
    2bd4:	01 97       	sbiw	r24, 0x01	; 1
    2bd6:	11 96       	adiw	r26, 0x01	; 1
    2bd8:	9c 93       	st	X, r25
    2bda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bdc:	fe 01       	movw	r30, r28
    2bde:	e2 58       	subi	r30, 0x82	; 130
    2be0:	ff 4f       	sbci	r31, 0xFF	; 255
    2be2:	80 81       	ld	r24, Z
    2be4:	91 81       	ldd	r25, Z+1	; 0x01
    2be6:	00 97       	sbiw	r24, 0x00	; 0
    2be8:	d1 f6       	brne	.-76     	; 0x2b9e <Stepper_vidDirection+0x1b36>
    2bea:	4b c0       	rjmp	.+150    	; 0x2c82 <Stepper_vidDirection+0x1c1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bec:	8e 01       	movw	r16, r28
    2bee:	02 58       	subi	r16, 0x82	; 130
    2bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e0 58       	subi	r30, 0x80	; 128
    2bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	82 81       	ldd	r24, Z+2	; 0x02
    2bfe:	93 81       	ldd	r25, Z+3	; 0x03
    2c00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c04:	dc 01       	movw	r26, r24
    2c06:	cb 01       	movw	r24, r22
    2c08:	f8 01       	movw	r30, r16
    2c0a:	91 83       	std	Z+1, r25	; 0x01
    2c0c:	80 83       	st	Z, r24
    2c0e:	de 01       	movw	r26, r28
    2c10:	a6 58       	subi	r26, 0x86	; 134
    2c12:	bf 4f       	sbci	r27, 0xFF	; 255
    2c14:	fe 01       	movw	r30, r28
    2c16:	e2 58       	subi	r30, 0x82	; 130
    2c18:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1a:	80 81       	ld	r24, Z
    2c1c:	91 81       	ldd	r25, Z+1	; 0x01
    2c1e:	11 96       	adiw	r26, 0x01	; 1
    2c20:	9c 93       	st	X, r25
    2c22:	8e 93       	st	-X, r24
    2c24:	fe 01       	movw	r30, r28
    2c26:	e6 58       	subi	r30, 0x86	; 134
    2c28:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2a:	80 81       	ld	r24, Z
    2c2c:	91 81       	ldd	r25, Z+1	; 0x01
    2c2e:	01 97       	sbiw	r24, 0x01	; 1
    2c30:	f1 f7       	brne	.-4      	; 0x2c2e <Stepper_vidDirection+0x1bc6>
    2c32:	fe 01       	movw	r30, r28
    2c34:	e6 58       	subi	r30, 0x86	; 134
    2c36:	ff 4f       	sbci	r31, 0xFF	; 255
    2c38:	91 83       	std	Z+1, r25	; 0x01
    2c3a:	80 83       	st	Z, r24
    2c3c:	22 c0       	rjmp	.+68     	; 0x2c82 <Stepper_vidDirection+0x1c1a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2c3e:	8e 01       	movw	r16, r28
    2c40:	08 57       	subi	r16, 0x78	; 120
    2c42:	1f 4f       	sbci	r17, 0xFF	; 255
    2c44:	fe 01       	movw	r30, r28
    2c46:	e7 57       	subi	r30, 0x77	; 119
    2c48:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4a:	60 81       	ld	r22, Z
    2c4c:	71 81       	ldd	r23, Z+1	; 0x01
    2c4e:	82 81       	ldd	r24, Z+2	; 0x02
    2c50:	93 81       	ldd	r25, Z+3	; 0x03
    2c52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c56:	dc 01       	movw	r26, r24
    2c58:	cb 01       	movw	r24, r22
    2c5a:	f8 01       	movw	r30, r16
    2c5c:	80 83       	st	Z, r24
    2c5e:	de 01       	movw	r26, r28
    2c60:	a7 58       	subi	r26, 0x87	; 135
    2c62:	bf 4f       	sbci	r27, 0xFF	; 255
    2c64:	fe 01       	movw	r30, r28
    2c66:	e8 57       	subi	r30, 0x78	; 120
    2c68:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6a:	80 81       	ld	r24, Z
    2c6c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2c6e:	fe 01       	movw	r30, r28
    2c70:	e7 58       	subi	r30, 0x87	; 135
    2c72:	ff 4f       	sbci	r31, 0xFF	; 255
    2c74:	80 81       	ld	r24, Z
    2c76:	8a 95       	dec	r24
    2c78:	f1 f7       	brne	.-4      	; 0x2c76 <Stepper_vidDirection+0x1c0e>
    2c7a:	fe 01       	movw	r30, r28
    2c7c:	e7 58       	subi	r30, 0x87	; 135
    2c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c80:	80 83       	st	Z, r24
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    2c82:	89 e0       	ldi	r24, 0x09	; 9
    2c84:	60 e0       	ldi	r22, 0x00	; 0
    2c86:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2c8a:	8a e0       	ldi	r24, 0x0A	; 10
    2c8c:	60 e0       	ldi	r22, 0x00	; 0
    2c8e:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2c92:	8b e0       	ldi	r24, 0x0B	; 11
    2c94:	60 e0       	ldi	r22, 0x00	; 0
    2c96:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    2c9a:	8c e0       	ldi	r24, 0x0C	; 12
    2c9c:	61 e0       	ldi	r22, 0x01	; 1
    2c9e:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	eb 58       	subi	r30, 0x8B	; 139
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	80 e0       	ldi	r24, 0x00	; 0
    2caa:	90 e8       	ldi	r25, 0x80	; 128
    2cac:	a4 e5       	ldi	r26, 0x54	; 84
    2cae:	b4 e4       	ldi	r27, 0x44	; 68
    2cb0:	80 83       	st	Z, r24
    2cb2:	91 83       	std	Z+1, r25	; 0x01
    2cb4:	a2 83       	std	Z+2, r26	; 0x02
    2cb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2cb8:	8e 01       	movw	r16, r28
    2cba:	0f 58       	subi	r16, 0x8F	; 143
    2cbc:	1f 4f       	sbci	r17, 0xFF	; 255
    2cbe:	fe 01       	movw	r30, r28
    2cc0:	eb 58       	subi	r30, 0x8B	; 139
    2cc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc4:	60 81       	ld	r22, Z
    2cc6:	71 81       	ldd	r23, Z+1	; 0x01
    2cc8:	82 81       	ldd	r24, Z+2	; 0x02
    2cca:	93 81       	ldd	r25, Z+3	; 0x03
    2ccc:	2b ea       	ldi	r18, 0xAB	; 171
    2cce:	3a ea       	ldi	r19, 0xAA	; 170
    2cd0:	4a e2       	ldi	r20, 0x2A	; 42
    2cd2:	50 e4       	ldi	r21, 0x40	; 64
    2cd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cd8:	dc 01       	movw	r26, r24
    2cda:	cb 01       	movw	r24, r22
    2cdc:	f8 01       	movw	r30, r16
    2cde:	80 83       	st	Z, r24
    2ce0:	91 83       	std	Z+1, r25	; 0x01
    2ce2:	a2 83       	std	Z+2, r26	; 0x02
    2ce4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ce6:	fe 01       	movw	r30, r28
    2ce8:	ef 58       	subi	r30, 0x8F	; 143
    2cea:	ff 4f       	sbci	r31, 0xFF	; 255
    2cec:	60 81       	ld	r22, Z
    2cee:	71 81       	ldd	r23, Z+1	; 0x01
    2cf0:	82 81       	ldd	r24, Z+2	; 0x02
    2cf2:	93 81       	ldd	r25, Z+3	; 0x03
    2cf4:	20 e0       	ldi	r18, 0x00	; 0
    2cf6:	30 e0       	ldi	r19, 0x00	; 0
    2cf8:	40 e8       	ldi	r20, 0x80	; 128
    2cfa:	5f e3       	ldi	r21, 0x3F	; 63
    2cfc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2d00:	88 23       	and	r24, r24
    2d02:	34 f4       	brge	.+12     	; 0x2d10 <Stepper_vidDirection+0x1ca8>
		__ticks = 1;
    2d04:	fe 01       	movw	r30, r28
    2d06:	e0 59       	subi	r30, 0x90	; 144
    2d08:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0a:	81 e0       	ldi	r24, 0x01	; 1
    2d0c:	80 83       	st	Z, r24
    2d0e:	e0 c0       	rjmp	.+448    	; 0x2ed0 <Stepper_vidDirection+0x1e68>
	else if (__tmp > 255)
    2d10:	fe 01       	movw	r30, r28
    2d12:	ef 58       	subi	r30, 0x8F	; 143
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	60 81       	ld	r22, Z
    2d18:	71 81       	ldd	r23, Z+1	; 0x01
    2d1a:	82 81       	ldd	r24, Z+2	; 0x02
    2d1c:	93 81       	ldd	r25, Z+3	; 0x03
    2d1e:	20 e0       	ldi	r18, 0x00	; 0
    2d20:	30 e0       	ldi	r19, 0x00	; 0
    2d22:	4f e7       	ldi	r20, 0x7F	; 127
    2d24:	53 e4       	ldi	r21, 0x43	; 67
    2d26:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2d2a:	18 16       	cp	r1, r24
    2d2c:	0c f0       	brlt	.+2      	; 0x2d30 <Stepper_vidDirection+0x1cc8>
    2d2e:	c0 c0       	rjmp	.+384    	; 0x2eb0 <Stepper_vidDirection+0x1e48>
	{
		_delay_ms(__us / 1000.0);
    2d30:	fe 01       	movw	r30, r28
    2d32:	eb 58       	subi	r30, 0x8B	; 139
    2d34:	ff 4f       	sbci	r31, 0xFF	; 255
    2d36:	60 81       	ld	r22, Z
    2d38:	71 81       	ldd	r23, Z+1	; 0x01
    2d3a:	82 81       	ldd	r24, Z+2	; 0x02
    2d3c:	93 81       	ldd	r25, Z+3	; 0x03
    2d3e:	20 e0       	ldi	r18, 0x00	; 0
    2d40:	30 e0       	ldi	r19, 0x00	; 0
    2d42:	4a e7       	ldi	r20, 0x7A	; 122
    2d44:	54 e4       	ldi	r21, 0x44	; 68
    2d46:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2d4a:	dc 01       	movw	r26, r24
    2d4c:	cb 01       	movw	r24, r22
    2d4e:	fe 01       	movw	r30, r28
    2d50:	e4 59       	subi	r30, 0x94	; 148
    2d52:	ff 4f       	sbci	r31, 0xFF	; 255
    2d54:	80 83       	st	Z, r24
    2d56:	91 83       	std	Z+1, r25	; 0x01
    2d58:	a2 83       	std	Z+2, r26	; 0x02
    2d5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d5c:	8e 01       	movw	r16, r28
    2d5e:	08 59       	subi	r16, 0x98	; 152
    2d60:	1f 4f       	sbci	r17, 0xFF	; 255
    2d62:	fe 01       	movw	r30, r28
    2d64:	e4 59       	subi	r30, 0x94	; 148
    2d66:	ff 4f       	sbci	r31, 0xFF	; 255
    2d68:	60 81       	ld	r22, Z
    2d6a:	71 81       	ldd	r23, Z+1	; 0x01
    2d6c:	82 81       	ldd	r24, Z+2	; 0x02
    2d6e:	93 81       	ldd	r25, Z+3	; 0x03
    2d70:	20 e0       	ldi	r18, 0x00	; 0
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	4a ef       	ldi	r20, 0xFA	; 250
    2d76:	54 e4       	ldi	r21, 0x44	; 68
    2d78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d7c:	dc 01       	movw	r26, r24
    2d7e:	cb 01       	movw	r24, r22
    2d80:	f8 01       	movw	r30, r16
    2d82:	80 83       	st	Z, r24
    2d84:	91 83       	std	Z+1, r25	; 0x01
    2d86:	a2 83       	std	Z+2, r26	; 0x02
    2d88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	e8 59       	subi	r30, 0x98	; 152
    2d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	20 e0       	ldi	r18, 0x00	; 0
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	40 e8       	ldi	r20, 0x80	; 128
    2d9e:	5f e3       	ldi	r21, 0x3F	; 63
    2da0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2da4:	88 23       	and	r24, r24
    2da6:	44 f4       	brge	.+16     	; 0x2db8 <Stepper_vidDirection+0x1d50>
		__ticks = 1;
    2da8:	fe 01       	movw	r30, r28
    2daa:	ea 59       	subi	r30, 0x9A	; 154
    2dac:	ff 4f       	sbci	r31, 0xFF	; 255
    2dae:	81 e0       	ldi	r24, 0x01	; 1
    2db0:	90 e0       	ldi	r25, 0x00	; 0
    2db2:	91 83       	std	Z+1, r25	; 0x01
    2db4:	80 83       	st	Z, r24
    2db6:	64 c0       	rjmp	.+200    	; 0x2e80 <Stepper_vidDirection+0x1e18>
	else if (__tmp > 65535)
    2db8:	fe 01       	movw	r30, r28
    2dba:	e8 59       	subi	r30, 0x98	; 152
    2dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dbe:	60 81       	ld	r22, Z
    2dc0:	71 81       	ldd	r23, Z+1	; 0x01
    2dc2:	82 81       	ldd	r24, Z+2	; 0x02
    2dc4:	93 81       	ldd	r25, Z+3	; 0x03
    2dc6:	20 e0       	ldi	r18, 0x00	; 0
    2dc8:	3f ef       	ldi	r19, 0xFF	; 255
    2dca:	4f e7       	ldi	r20, 0x7F	; 127
    2dcc:	57 e4       	ldi	r21, 0x47	; 71
    2dce:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2dd2:	18 16       	cp	r1, r24
    2dd4:	0c f0       	brlt	.+2      	; 0x2dd8 <Stepper_vidDirection+0x1d70>
    2dd6:	43 c0       	rjmp	.+134    	; 0x2e5e <Stepper_vidDirection+0x1df6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dd8:	fe 01       	movw	r30, r28
    2dda:	e4 59       	subi	r30, 0x94	; 148
    2ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dde:	60 81       	ld	r22, Z
    2de0:	71 81       	ldd	r23, Z+1	; 0x01
    2de2:	82 81       	ldd	r24, Z+2	; 0x02
    2de4:	93 81       	ldd	r25, Z+3	; 0x03
    2de6:	20 e0       	ldi	r18, 0x00	; 0
    2de8:	30 e0       	ldi	r19, 0x00	; 0
    2dea:	40 e2       	ldi	r20, 0x20	; 32
    2dec:	51 e4       	ldi	r21, 0x41	; 65
    2dee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2df2:	dc 01       	movw	r26, r24
    2df4:	cb 01       	movw	r24, r22
    2df6:	8e 01       	movw	r16, r28
    2df8:	0a 59       	subi	r16, 0x9A	; 154
    2dfa:	1f 4f       	sbci	r17, 0xFF	; 255
    2dfc:	bc 01       	movw	r22, r24
    2dfe:	cd 01       	movw	r24, r26
    2e00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e04:	dc 01       	movw	r26, r24
    2e06:	cb 01       	movw	r24, r22
    2e08:	f8 01       	movw	r30, r16
    2e0a:	91 83       	std	Z+1, r25	; 0x01
    2e0c:	80 83       	st	Z, r24
    2e0e:	1f c0       	rjmp	.+62     	; 0x2e4e <Stepper_vidDirection+0x1de6>
    2e10:	fe 01       	movw	r30, r28
    2e12:	ec 59       	subi	r30, 0x9C	; 156
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	88 ec       	ldi	r24, 0xC8	; 200
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	91 83       	std	Z+1, r25	; 0x01
    2e1c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2e1e:	fe 01       	movw	r30, r28
    2e20:	ec 59       	subi	r30, 0x9C	; 156
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	80 81       	ld	r24, Z
    2e26:	91 81       	ldd	r25, Z+1	; 0x01
    2e28:	01 97       	sbiw	r24, 0x01	; 1
    2e2a:	f1 f7       	brne	.-4      	; 0x2e28 <Stepper_vidDirection+0x1dc0>
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	ec 59       	subi	r30, 0x9C	; 156
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	91 83       	std	Z+1, r25	; 0x01
    2e34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e36:	de 01       	movw	r26, r28
    2e38:	aa 59       	subi	r26, 0x9A	; 154
    2e3a:	bf 4f       	sbci	r27, 0xFF	; 255
    2e3c:	fe 01       	movw	r30, r28
    2e3e:	ea 59       	subi	r30, 0x9A	; 154
    2e40:	ff 4f       	sbci	r31, 0xFF	; 255
    2e42:	80 81       	ld	r24, Z
    2e44:	91 81       	ldd	r25, Z+1	; 0x01
    2e46:	01 97       	sbiw	r24, 0x01	; 1
    2e48:	11 96       	adiw	r26, 0x01	; 1
    2e4a:	9c 93       	st	X, r25
    2e4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e4e:	fe 01       	movw	r30, r28
    2e50:	ea 59       	subi	r30, 0x9A	; 154
    2e52:	ff 4f       	sbci	r31, 0xFF	; 255
    2e54:	80 81       	ld	r24, Z
    2e56:	91 81       	ldd	r25, Z+1	; 0x01
    2e58:	00 97       	sbiw	r24, 0x00	; 0
    2e5a:	d1 f6       	brne	.-76     	; 0x2e10 <Stepper_vidDirection+0x1da8>
    2e5c:	4b c0       	rjmp	.+150    	; 0x2ef4 <Stepper_vidDirection+0x1e8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e5e:	8e 01       	movw	r16, r28
    2e60:	0a 59       	subi	r16, 0x9A	; 154
    2e62:	1f 4f       	sbci	r17, 0xFF	; 255
    2e64:	fe 01       	movw	r30, r28
    2e66:	e8 59       	subi	r30, 0x98	; 152
    2e68:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6a:	60 81       	ld	r22, Z
    2e6c:	71 81       	ldd	r23, Z+1	; 0x01
    2e6e:	82 81       	ldd	r24, Z+2	; 0x02
    2e70:	93 81       	ldd	r25, Z+3	; 0x03
    2e72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e76:	dc 01       	movw	r26, r24
    2e78:	cb 01       	movw	r24, r22
    2e7a:	f8 01       	movw	r30, r16
    2e7c:	91 83       	std	Z+1, r25	; 0x01
    2e7e:	80 83       	st	Z, r24
    2e80:	de 01       	movw	r26, r28
    2e82:	ae 59       	subi	r26, 0x9E	; 158
    2e84:	bf 4f       	sbci	r27, 0xFF	; 255
    2e86:	fe 01       	movw	r30, r28
    2e88:	ea 59       	subi	r30, 0x9A	; 154
    2e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8c:	80 81       	ld	r24, Z
    2e8e:	91 81       	ldd	r25, Z+1	; 0x01
    2e90:	11 96       	adiw	r26, 0x01	; 1
    2e92:	9c 93       	st	X, r25
    2e94:	8e 93       	st	-X, r24
    2e96:	fe 01       	movw	r30, r28
    2e98:	ee 59       	subi	r30, 0x9E	; 158
    2e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9c:	80 81       	ld	r24, Z
    2e9e:	91 81       	ldd	r25, Z+1	; 0x01
    2ea0:	01 97       	sbiw	r24, 0x01	; 1
    2ea2:	f1 f7       	brne	.-4      	; 0x2ea0 <Stepper_vidDirection+0x1e38>
    2ea4:	fe 01       	movw	r30, r28
    2ea6:	ee 59       	subi	r30, 0x9E	; 158
    2ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eaa:	91 83       	std	Z+1, r25	; 0x01
    2eac:	80 83       	st	Z, r24
    2eae:	22 c0       	rjmp	.+68     	; 0x2ef4 <Stepper_vidDirection+0x1e8c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2eb0:	8e 01       	movw	r16, r28
    2eb2:	00 59       	subi	r16, 0x90	; 144
    2eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    2eb6:	fe 01       	movw	r30, r28
    2eb8:	ef 58       	subi	r30, 0x8F	; 143
    2eba:	ff 4f       	sbci	r31, 0xFF	; 255
    2ebc:	60 81       	ld	r22, Z
    2ebe:	71 81       	ldd	r23, Z+1	; 0x01
    2ec0:	82 81       	ldd	r24, Z+2	; 0x02
    2ec2:	93 81       	ldd	r25, Z+3	; 0x03
    2ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ec8:	dc 01       	movw	r26, r24
    2eca:	cb 01       	movw	r24, r22
    2ecc:	f8 01       	movw	r30, r16
    2ece:	80 83       	st	Z, r24
    2ed0:	de 01       	movw	r26, r28
    2ed2:	af 59       	subi	r26, 0x9F	; 159
    2ed4:	bf 4f       	sbci	r27, 0xFF	; 255
    2ed6:	fe 01       	movw	r30, r28
    2ed8:	e0 59       	subi	r30, 0x90	; 144
    2eda:	ff 4f       	sbci	r31, 0xFF	; 255
    2edc:	80 81       	ld	r24, Z
    2ede:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2ee0:	fe 01       	movw	r30, r28
    2ee2:	ef 59       	subi	r30, 0x9F	; 159
    2ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee6:	80 81       	ld	r24, Z
    2ee8:	8a 95       	dec	r24
    2eea:	f1 f7       	brne	.-4      	; 0x2ee8 <Stepper_vidDirection+0x1e80>
    2eec:	fe 01       	movw	r30, r28
    2eee:	ef 59       	subi	r30, 0x9F	; 159
    2ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef2:	80 83       	st	Z, r24

		else if(direction=='R'){
			switch(angle){
			case 90:

				for(x=0; x<135; x++){
    2ef4:	de 01       	movw	r26, r28
    2ef6:	af 57       	subi	r26, 0x7F	; 127
    2ef8:	be 4f       	sbci	r27, 0xFE	; 254
    2efa:	fe 01       	movw	r30, r28
    2efc:	ef 57       	subi	r30, 0x7F	; 127
    2efe:	fe 4f       	sbci	r31, 0xFE	; 254
    2f00:	80 81       	ld	r24, Z
    2f02:	8f 5f       	subi	r24, 0xFF	; 255
    2f04:	8c 93       	st	X, r24
    2f06:	fe 01       	movw	r30, r28
    2f08:	ef 57       	subi	r30, 0x7F	; 127
    2f0a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f0c:	80 81       	ld	r24, Z
    2f0e:	87 38       	cpi	r24, 0x87	; 135
    2f10:	08 f4       	brcc	.+2      	; 0x2f14 <Stepper_vidDirection+0x1eac>
    2f12:	0c cb       	rjmp	.-2536   	; 0x252c <Stepper_vidDirection+0x14c4>
    2f14:	d7 c3       	rjmp	.+1966   	; 0x36c4 <Stepper_vidDirection+0x265c>
					_delay_us(850);
				}
				break;

			case 180:
				for(x=0; x<250; x++){
    2f16:	fe 01       	movw	r30, r28
    2f18:	ef 57       	subi	r30, 0x7F	; 127
    2f1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f1c:	10 82       	st	Z, r1
    2f1e:	cb c3       	rjmp	.+1942   	; 0x36b6 <Stepper_vidDirection+0x264e>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    2f20:	89 e0       	ldi	r24, 0x09	; 9
    2f22:	61 e0       	ldi	r22, 0x01	; 1
    2f24:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2f28:	8a e0       	ldi	r24, 0x0A	; 10
    2f2a:	60 e0       	ldi	r22, 0x00	; 0
    2f2c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2f30:	8b e0       	ldi	r24, 0x0B	; 11
    2f32:	60 e0       	ldi	r22, 0x00	; 0
    2f34:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2f38:	8c e0       	ldi	r24, 0x0C	; 12
    2f3a:	60 e0       	ldi	r22, 0x00	; 0
    2f3c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    2f40:	fe 01       	movw	r30, r28
    2f42:	e3 5a       	subi	r30, 0xA3	; 163
    2f44:	ff 4f       	sbci	r31, 0xFF	; 255
    2f46:	80 e0       	ldi	r24, 0x00	; 0
    2f48:	90 e8       	ldi	r25, 0x80	; 128
    2f4a:	a4 e5       	ldi	r26, 0x54	; 84
    2f4c:	b4 e4       	ldi	r27, 0x44	; 68
    2f4e:	80 83       	st	Z, r24
    2f50:	91 83       	std	Z+1, r25	; 0x01
    2f52:	a2 83       	std	Z+2, r26	; 0x02
    2f54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2f56:	8e 01       	movw	r16, r28
    2f58:	07 5a       	subi	r16, 0xA7	; 167
    2f5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2f5c:	fe 01       	movw	r30, r28
    2f5e:	e3 5a       	subi	r30, 0xA3	; 163
    2f60:	ff 4f       	sbci	r31, 0xFF	; 255
    2f62:	60 81       	ld	r22, Z
    2f64:	71 81       	ldd	r23, Z+1	; 0x01
    2f66:	82 81       	ldd	r24, Z+2	; 0x02
    2f68:	93 81       	ldd	r25, Z+3	; 0x03
    2f6a:	2b ea       	ldi	r18, 0xAB	; 171
    2f6c:	3a ea       	ldi	r19, 0xAA	; 170
    2f6e:	4a e2       	ldi	r20, 0x2A	; 42
    2f70:	50 e4       	ldi	r21, 0x40	; 64
    2f72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f76:	dc 01       	movw	r26, r24
    2f78:	cb 01       	movw	r24, r22
    2f7a:	f8 01       	movw	r30, r16
    2f7c:	80 83       	st	Z, r24
    2f7e:	91 83       	std	Z+1, r25	; 0x01
    2f80:	a2 83       	std	Z+2, r26	; 0x02
    2f82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f84:	fe 01       	movw	r30, r28
    2f86:	e7 5a       	subi	r30, 0xA7	; 167
    2f88:	ff 4f       	sbci	r31, 0xFF	; 255
    2f8a:	60 81       	ld	r22, Z
    2f8c:	71 81       	ldd	r23, Z+1	; 0x01
    2f8e:	82 81       	ldd	r24, Z+2	; 0x02
    2f90:	93 81       	ldd	r25, Z+3	; 0x03
    2f92:	20 e0       	ldi	r18, 0x00	; 0
    2f94:	30 e0       	ldi	r19, 0x00	; 0
    2f96:	40 e8       	ldi	r20, 0x80	; 128
    2f98:	5f e3       	ldi	r21, 0x3F	; 63
    2f9a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f9e:	88 23       	and	r24, r24
    2fa0:	34 f4       	brge	.+12     	; 0x2fae <Stepper_vidDirection+0x1f46>
		__ticks = 1;
    2fa2:	fe 01       	movw	r30, r28
    2fa4:	e8 5a       	subi	r30, 0xA8	; 168
    2fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa8:	81 e0       	ldi	r24, 0x01	; 1
    2faa:	80 83       	st	Z, r24
    2fac:	e0 c0       	rjmp	.+448    	; 0x316e <Stepper_vidDirection+0x2106>
	else if (__tmp > 255)
    2fae:	fe 01       	movw	r30, r28
    2fb0:	e7 5a       	subi	r30, 0xA7	; 167
    2fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb4:	60 81       	ld	r22, Z
    2fb6:	71 81       	ldd	r23, Z+1	; 0x01
    2fb8:	82 81       	ldd	r24, Z+2	; 0x02
    2fba:	93 81       	ldd	r25, Z+3	; 0x03
    2fbc:	20 e0       	ldi	r18, 0x00	; 0
    2fbe:	30 e0       	ldi	r19, 0x00	; 0
    2fc0:	4f e7       	ldi	r20, 0x7F	; 127
    2fc2:	53 e4       	ldi	r21, 0x43	; 67
    2fc4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2fc8:	18 16       	cp	r1, r24
    2fca:	0c f0       	brlt	.+2      	; 0x2fce <Stepper_vidDirection+0x1f66>
    2fcc:	c0 c0       	rjmp	.+384    	; 0x314e <Stepper_vidDirection+0x20e6>
	{
		_delay_ms(__us / 1000.0);
    2fce:	fe 01       	movw	r30, r28
    2fd0:	e3 5a       	subi	r30, 0xA3	; 163
    2fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd4:	60 81       	ld	r22, Z
    2fd6:	71 81       	ldd	r23, Z+1	; 0x01
    2fd8:	82 81       	ldd	r24, Z+2	; 0x02
    2fda:	93 81       	ldd	r25, Z+3	; 0x03
    2fdc:	20 e0       	ldi	r18, 0x00	; 0
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	4a e7       	ldi	r20, 0x7A	; 122
    2fe2:	54 e4       	ldi	r21, 0x44	; 68
    2fe4:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2fe8:	dc 01       	movw	r26, r24
    2fea:	cb 01       	movw	r24, r22
    2fec:	fe 01       	movw	r30, r28
    2fee:	ec 5a       	subi	r30, 0xAC	; 172
    2ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff2:	80 83       	st	Z, r24
    2ff4:	91 83       	std	Z+1, r25	; 0x01
    2ff6:	a2 83       	std	Z+2, r26	; 0x02
    2ff8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ffa:	8e 01       	movw	r16, r28
    2ffc:	00 5b       	subi	r16, 0xB0	; 176
    2ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    3000:	fe 01       	movw	r30, r28
    3002:	ec 5a       	subi	r30, 0xAC	; 172
    3004:	ff 4f       	sbci	r31, 0xFF	; 255
    3006:	60 81       	ld	r22, Z
    3008:	71 81       	ldd	r23, Z+1	; 0x01
    300a:	82 81       	ldd	r24, Z+2	; 0x02
    300c:	93 81       	ldd	r25, Z+3	; 0x03
    300e:	20 e0       	ldi	r18, 0x00	; 0
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	4a ef       	ldi	r20, 0xFA	; 250
    3014:	54 e4       	ldi	r21, 0x44	; 68
    3016:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    301a:	dc 01       	movw	r26, r24
    301c:	cb 01       	movw	r24, r22
    301e:	f8 01       	movw	r30, r16
    3020:	80 83       	st	Z, r24
    3022:	91 83       	std	Z+1, r25	; 0x01
    3024:	a2 83       	std	Z+2, r26	; 0x02
    3026:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3028:	fe 01       	movw	r30, r28
    302a:	e0 5b       	subi	r30, 0xB0	; 176
    302c:	ff 4f       	sbci	r31, 0xFF	; 255
    302e:	60 81       	ld	r22, Z
    3030:	71 81       	ldd	r23, Z+1	; 0x01
    3032:	82 81       	ldd	r24, Z+2	; 0x02
    3034:	93 81       	ldd	r25, Z+3	; 0x03
    3036:	20 e0       	ldi	r18, 0x00	; 0
    3038:	30 e0       	ldi	r19, 0x00	; 0
    303a:	40 e8       	ldi	r20, 0x80	; 128
    303c:	5f e3       	ldi	r21, 0x3F	; 63
    303e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3042:	88 23       	and	r24, r24
    3044:	44 f4       	brge	.+16     	; 0x3056 <Stepper_vidDirection+0x1fee>
		__ticks = 1;
    3046:	fe 01       	movw	r30, r28
    3048:	e2 5b       	subi	r30, 0xB2	; 178
    304a:	ff 4f       	sbci	r31, 0xFF	; 255
    304c:	81 e0       	ldi	r24, 0x01	; 1
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	91 83       	std	Z+1, r25	; 0x01
    3052:	80 83       	st	Z, r24
    3054:	64 c0       	rjmp	.+200    	; 0x311e <Stepper_vidDirection+0x20b6>
	else if (__tmp > 65535)
    3056:	fe 01       	movw	r30, r28
    3058:	e0 5b       	subi	r30, 0xB0	; 176
    305a:	ff 4f       	sbci	r31, 0xFF	; 255
    305c:	60 81       	ld	r22, Z
    305e:	71 81       	ldd	r23, Z+1	; 0x01
    3060:	82 81       	ldd	r24, Z+2	; 0x02
    3062:	93 81       	ldd	r25, Z+3	; 0x03
    3064:	20 e0       	ldi	r18, 0x00	; 0
    3066:	3f ef       	ldi	r19, 0xFF	; 255
    3068:	4f e7       	ldi	r20, 0x7F	; 127
    306a:	57 e4       	ldi	r21, 0x47	; 71
    306c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3070:	18 16       	cp	r1, r24
    3072:	0c f0       	brlt	.+2      	; 0x3076 <Stepper_vidDirection+0x200e>
    3074:	43 c0       	rjmp	.+134    	; 0x30fc <Stepper_vidDirection+0x2094>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3076:	fe 01       	movw	r30, r28
    3078:	ec 5a       	subi	r30, 0xAC	; 172
    307a:	ff 4f       	sbci	r31, 0xFF	; 255
    307c:	60 81       	ld	r22, Z
    307e:	71 81       	ldd	r23, Z+1	; 0x01
    3080:	82 81       	ldd	r24, Z+2	; 0x02
    3082:	93 81       	ldd	r25, Z+3	; 0x03
    3084:	20 e0       	ldi	r18, 0x00	; 0
    3086:	30 e0       	ldi	r19, 0x00	; 0
    3088:	40 e2       	ldi	r20, 0x20	; 32
    308a:	51 e4       	ldi	r21, 0x41	; 65
    308c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3090:	dc 01       	movw	r26, r24
    3092:	cb 01       	movw	r24, r22
    3094:	8e 01       	movw	r16, r28
    3096:	02 5b       	subi	r16, 0xB2	; 178
    3098:	1f 4f       	sbci	r17, 0xFF	; 255
    309a:	bc 01       	movw	r22, r24
    309c:	cd 01       	movw	r24, r26
    309e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30a2:	dc 01       	movw	r26, r24
    30a4:	cb 01       	movw	r24, r22
    30a6:	f8 01       	movw	r30, r16
    30a8:	91 83       	std	Z+1, r25	; 0x01
    30aa:	80 83       	st	Z, r24
    30ac:	1f c0       	rjmp	.+62     	; 0x30ec <Stepper_vidDirection+0x2084>
    30ae:	fe 01       	movw	r30, r28
    30b0:	e4 5b       	subi	r30, 0xB4	; 180
    30b2:	ff 4f       	sbci	r31, 0xFF	; 255
    30b4:	88 ec       	ldi	r24, 0xC8	; 200
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	91 83       	std	Z+1, r25	; 0x01
    30ba:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    30bc:	fe 01       	movw	r30, r28
    30be:	e4 5b       	subi	r30, 0xB4	; 180
    30c0:	ff 4f       	sbci	r31, 0xFF	; 255
    30c2:	80 81       	ld	r24, Z
    30c4:	91 81       	ldd	r25, Z+1	; 0x01
    30c6:	01 97       	sbiw	r24, 0x01	; 1
    30c8:	f1 f7       	brne	.-4      	; 0x30c6 <Stepper_vidDirection+0x205e>
    30ca:	fe 01       	movw	r30, r28
    30cc:	e4 5b       	subi	r30, 0xB4	; 180
    30ce:	ff 4f       	sbci	r31, 0xFF	; 255
    30d0:	91 83       	std	Z+1, r25	; 0x01
    30d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30d4:	de 01       	movw	r26, r28
    30d6:	a2 5b       	subi	r26, 0xB2	; 178
    30d8:	bf 4f       	sbci	r27, 0xFF	; 255
    30da:	fe 01       	movw	r30, r28
    30dc:	e2 5b       	subi	r30, 0xB2	; 178
    30de:	ff 4f       	sbci	r31, 0xFF	; 255
    30e0:	80 81       	ld	r24, Z
    30e2:	91 81       	ldd	r25, Z+1	; 0x01
    30e4:	01 97       	sbiw	r24, 0x01	; 1
    30e6:	11 96       	adiw	r26, 0x01	; 1
    30e8:	9c 93       	st	X, r25
    30ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30ec:	fe 01       	movw	r30, r28
    30ee:	e2 5b       	subi	r30, 0xB2	; 178
    30f0:	ff 4f       	sbci	r31, 0xFF	; 255
    30f2:	80 81       	ld	r24, Z
    30f4:	91 81       	ldd	r25, Z+1	; 0x01
    30f6:	00 97       	sbiw	r24, 0x00	; 0
    30f8:	d1 f6       	brne	.-76     	; 0x30ae <Stepper_vidDirection+0x2046>
    30fa:	4b c0       	rjmp	.+150    	; 0x3192 <Stepper_vidDirection+0x212a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30fc:	8e 01       	movw	r16, r28
    30fe:	02 5b       	subi	r16, 0xB2	; 178
    3100:	1f 4f       	sbci	r17, 0xFF	; 255
    3102:	fe 01       	movw	r30, r28
    3104:	e0 5b       	subi	r30, 0xB0	; 176
    3106:	ff 4f       	sbci	r31, 0xFF	; 255
    3108:	60 81       	ld	r22, Z
    310a:	71 81       	ldd	r23, Z+1	; 0x01
    310c:	82 81       	ldd	r24, Z+2	; 0x02
    310e:	93 81       	ldd	r25, Z+3	; 0x03
    3110:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3114:	dc 01       	movw	r26, r24
    3116:	cb 01       	movw	r24, r22
    3118:	f8 01       	movw	r30, r16
    311a:	91 83       	std	Z+1, r25	; 0x01
    311c:	80 83       	st	Z, r24
    311e:	de 01       	movw	r26, r28
    3120:	a6 5b       	subi	r26, 0xB6	; 182
    3122:	bf 4f       	sbci	r27, 0xFF	; 255
    3124:	fe 01       	movw	r30, r28
    3126:	e2 5b       	subi	r30, 0xB2	; 178
    3128:	ff 4f       	sbci	r31, 0xFF	; 255
    312a:	80 81       	ld	r24, Z
    312c:	91 81       	ldd	r25, Z+1	; 0x01
    312e:	11 96       	adiw	r26, 0x01	; 1
    3130:	9c 93       	st	X, r25
    3132:	8e 93       	st	-X, r24
    3134:	fe 01       	movw	r30, r28
    3136:	e6 5b       	subi	r30, 0xB6	; 182
    3138:	ff 4f       	sbci	r31, 0xFF	; 255
    313a:	80 81       	ld	r24, Z
    313c:	91 81       	ldd	r25, Z+1	; 0x01
    313e:	01 97       	sbiw	r24, 0x01	; 1
    3140:	f1 f7       	brne	.-4      	; 0x313e <Stepper_vidDirection+0x20d6>
    3142:	fe 01       	movw	r30, r28
    3144:	e6 5b       	subi	r30, 0xB6	; 182
    3146:	ff 4f       	sbci	r31, 0xFF	; 255
    3148:	91 83       	std	Z+1, r25	; 0x01
    314a:	80 83       	st	Z, r24
    314c:	22 c0       	rjmp	.+68     	; 0x3192 <Stepper_vidDirection+0x212a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    314e:	8e 01       	movw	r16, r28
    3150:	08 5a       	subi	r16, 0xA8	; 168
    3152:	1f 4f       	sbci	r17, 0xFF	; 255
    3154:	fe 01       	movw	r30, r28
    3156:	e7 5a       	subi	r30, 0xA7	; 167
    3158:	ff 4f       	sbci	r31, 0xFF	; 255
    315a:	60 81       	ld	r22, Z
    315c:	71 81       	ldd	r23, Z+1	; 0x01
    315e:	82 81       	ldd	r24, Z+2	; 0x02
    3160:	93 81       	ldd	r25, Z+3	; 0x03
    3162:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3166:	dc 01       	movw	r26, r24
    3168:	cb 01       	movw	r24, r22
    316a:	f8 01       	movw	r30, r16
    316c:	80 83       	st	Z, r24
    316e:	de 01       	movw	r26, r28
    3170:	a7 5b       	subi	r26, 0xB7	; 183
    3172:	bf 4f       	sbci	r27, 0xFF	; 255
    3174:	fe 01       	movw	r30, r28
    3176:	e8 5a       	subi	r30, 0xA8	; 168
    3178:	ff 4f       	sbci	r31, 0xFF	; 255
    317a:	80 81       	ld	r24, Z
    317c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    317e:	fe 01       	movw	r30, r28
    3180:	e7 5b       	subi	r30, 0xB7	; 183
    3182:	ff 4f       	sbci	r31, 0xFF	; 255
    3184:	80 81       	ld	r24, Z
    3186:	8a 95       	dec	r24
    3188:	f1 f7       	brne	.-4      	; 0x3186 <Stepper_vidDirection+0x211e>
    318a:	fe 01       	movw	r30, r28
    318c:	e7 5b       	subi	r30, 0xB7	; 183
    318e:	ff 4f       	sbci	r31, 0xFF	; 255
    3190:	80 83       	st	Z, r24
					_delay_us(850);

					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    3192:	89 e0       	ldi	r24, 0x09	; 9
    3194:	60 e0       	ldi	r22, 0x00	; 0
    3196:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    319a:	8a e0       	ldi	r24, 0x0A	; 10
    319c:	61 e0       	ldi	r22, 0x01	; 1
    319e:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    31a2:	8b e0       	ldi	r24, 0x0B	; 11
    31a4:	60 e0       	ldi	r22, 0x00	; 0
    31a6:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    31aa:	8c e0       	ldi	r24, 0x0C	; 12
    31ac:	60 e0       	ldi	r22, 0x00	; 0
    31ae:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    31b2:	fe 01       	movw	r30, r28
    31b4:	eb 5b       	subi	r30, 0xBB	; 187
    31b6:	ff 4f       	sbci	r31, 0xFF	; 255
    31b8:	80 e0       	ldi	r24, 0x00	; 0
    31ba:	90 e8       	ldi	r25, 0x80	; 128
    31bc:	a4 e5       	ldi	r26, 0x54	; 84
    31be:	b4 e4       	ldi	r27, 0x44	; 68
    31c0:	80 83       	st	Z, r24
    31c2:	91 83       	std	Z+1, r25	; 0x01
    31c4:	a2 83       	std	Z+2, r26	; 0x02
    31c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    31c8:	8e 01       	movw	r16, r28
    31ca:	0f 5b       	subi	r16, 0xBF	; 191
    31cc:	1f 4f       	sbci	r17, 0xFF	; 255
    31ce:	fe 01       	movw	r30, r28
    31d0:	eb 5b       	subi	r30, 0xBB	; 187
    31d2:	ff 4f       	sbci	r31, 0xFF	; 255
    31d4:	60 81       	ld	r22, Z
    31d6:	71 81       	ldd	r23, Z+1	; 0x01
    31d8:	82 81       	ldd	r24, Z+2	; 0x02
    31da:	93 81       	ldd	r25, Z+3	; 0x03
    31dc:	2b ea       	ldi	r18, 0xAB	; 171
    31de:	3a ea       	ldi	r19, 0xAA	; 170
    31e0:	4a e2       	ldi	r20, 0x2A	; 42
    31e2:	50 e4       	ldi	r21, 0x40	; 64
    31e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31e8:	dc 01       	movw	r26, r24
    31ea:	cb 01       	movw	r24, r22
    31ec:	f8 01       	movw	r30, r16
    31ee:	80 83       	st	Z, r24
    31f0:	91 83       	std	Z+1, r25	; 0x01
    31f2:	a2 83       	std	Z+2, r26	; 0x02
    31f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31f6:	fe 01       	movw	r30, r28
    31f8:	ef 5b       	subi	r30, 0xBF	; 191
    31fa:	ff 4f       	sbci	r31, 0xFF	; 255
    31fc:	60 81       	ld	r22, Z
    31fe:	71 81       	ldd	r23, Z+1	; 0x01
    3200:	82 81       	ldd	r24, Z+2	; 0x02
    3202:	93 81       	ldd	r25, Z+3	; 0x03
    3204:	20 e0       	ldi	r18, 0x00	; 0
    3206:	30 e0       	ldi	r19, 0x00	; 0
    3208:	40 e8       	ldi	r20, 0x80	; 128
    320a:	5f e3       	ldi	r21, 0x3F	; 63
    320c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3210:	88 23       	and	r24, r24
    3212:	34 f4       	brge	.+12     	; 0x3220 <Stepper_vidDirection+0x21b8>
		__ticks = 1;
    3214:	81 e0       	ldi	r24, 0x01	; 1
    3216:	fe 01       	movw	r30, r28
    3218:	e0 5c       	subi	r30, 0xC0	; 192
    321a:	ff 4f       	sbci	r31, 0xFF	; 255
    321c:	80 83       	st	Z, r24
    321e:	9d c0       	rjmp	.+314    	; 0x335a <Stepper_vidDirection+0x22f2>
	else if (__tmp > 255)
    3220:	fe 01       	movw	r30, r28
    3222:	ef 5b       	subi	r30, 0xBF	; 191
    3224:	ff 4f       	sbci	r31, 0xFF	; 255
    3226:	60 81       	ld	r22, Z
    3228:	71 81       	ldd	r23, Z+1	; 0x01
    322a:	82 81       	ldd	r24, Z+2	; 0x02
    322c:	93 81       	ldd	r25, Z+3	; 0x03
    322e:	20 e0       	ldi	r18, 0x00	; 0
    3230:	30 e0       	ldi	r19, 0x00	; 0
    3232:	4f e7       	ldi	r20, 0x7F	; 127
    3234:	53 e4       	ldi	r21, 0x43	; 67
    3236:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    323a:	18 16       	cp	r1, r24
    323c:	0c f0       	brlt	.+2      	; 0x3240 <Stepper_vidDirection+0x21d8>
    323e:	7e c0       	rjmp	.+252    	; 0x333c <Stepper_vidDirection+0x22d4>
	{
		_delay_ms(__us / 1000.0);
    3240:	fe 01       	movw	r30, r28
    3242:	eb 5b       	subi	r30, 0xBB	; 187
    3244:	ff 4f       	sbci	r31, 0xFF	; 255
    3246:	60 81       	ld	r22, Z
    3248:	71 81       	ldd	r23, Z+1	; 0x01
    324a:	82 81       	ldd	r24, Z+2	; 0x02
    324c:	93 81       	ldd	r25, Z+3	; 0x03
    324e:	20 e0       	ldi	r18, 0x00	; 0
    3250:	30 e0       	ldi	r19, 0x00	; 0
    3252:	4a e7       	ldi	r20, 0x7A	; 122
    3254:	54 e4       	ldi	r21, 0x44	; 68
    3256:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    325a:	dc 01       	movw	r26, r24
    325c:	cb 01       	movw	r24, r22
    325e:	8c af       	std	Y+60, r24	; 0x3c
    3260:	9d af       	std	Y+61, r25	; 0x3d
    3262:	ae af       	std	Y+62, r26	; 0x3e
    3264:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3266:	6c ad       	ldd	r22, Y+60	; 0x3c
    3268:	7d ad       	ldd	r23, Y+61	; 0x3d
    326a:	8e ad       	ldd	r24, Y+62	; 0x3e
    326c:	9f ad       	ldd	r25, Y+63	; 0x3f
    326e:	20 e0       	ldi	r18, 0x00	; 0
    3270:	30 e0       	ldi	r19, 0x00	; 0
    3272:	4a ef       	ldi	r20, 0xFA	; 250
    3274:	54 e4       	ldi	r21, 0x44	; 68
    3276:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    327a:	dc 01       	movw	r26, r24
    327c:	cb 01       	movw	r24, r22
    327e:	88 af       	std	Y+56, r24	; 0x38
    3280:	99 af       	std	Y+57, r25	; 0x39
    3282:	aa af       	std	Y+58, r26	; 0x3a
    3284:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    3286:	68 ad       	ldd	r22, Y+56	; 0x38
    3288:	79 ad       	ldd	r23, Y+57	; 0x39
    328a:	8a ad       	ldd	r24, Y+58	; 0x3a
    328c:	9b ad       	ldd	r25, Y+59	; 0x3b
    328e:	20 e0       	ldi	r18, 0x00	; 0
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	40 e8       	ldi	r20, 0x80	; 128
    3294:	5f e3       	ldi	r21, 0x3F	; 63
    3296:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    329a:	88 23       	and	r24, r24
    329c:	2c f4       	brge	.+10     	; 0x32a8 <Stepper_vidDirection+0x2240>
		__ticks = 1;
    329e:	81 e0       	ldi	r24, 0x01	; 1
    32a0:	90 e0       	ldi	r25, 0x00	; 0
    32a2:	9f ab       	std	Y+55, r25	; 0x37
    32a4:	8e ab       	std	Y+54, r24	; 0x36
    32a6:	3f c0       	rjmp	.+126    	; 0x3326 <Stepper_vidDirection+0x22be>
	else if (__tmp > 65535)
    32a8:	68 ad       	ldd	r22, Y+56	; 0x38
    32aa:	79 ad       	ldd	r23, Y+57	; 0x39
    32ac:	8a ad       	ldd	r24, Y+58	; 0x3a
    32ae:	9b ad       	ldd	r25, Y+59	; 0x3b
    32b0:	20 e0       	ldi	r18, 0x00	; 0
    32b2:	3f ef       	ldi	r19, 0xFF	; 255
    32b4:	4f e7       	ldi	r20, 0x7F	; 127
    32b6:	57 e4       	ldi	r21, 0x47	; 71
    32b8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    32bc:	18 16       	cp	r1, r24
    32be:	4c f5       	brge	.+82     	; 0x3312 <Stepper_vidDirection+0x22aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32c0:	6c ad       	ldd	r22, Y+60	; 0x3c
    32c2:	7d ad       	ldd	r23, Y+61	; 0x3d
    32c4:	8e ad       	ldd	r24, Y+62	; 0x3e
    32c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	40 e2       	ldi	r20, 0x20	; 32
    32ce:	51 e4       	ldi	r21, 0x41	; 65
    32d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32d4:	dc 01       	movw	r26, r24
    32d6:	cb 01       	movw	r24, r22
    32d8:	bc 01       	movw	r22, r24
    32da:	cd 01       	movw	r24, r26
    32dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32e0:	dc 01       	movw	r26, r24
    32e2:	cb 01       	movw	r24, r22
    32e4:	9f ab       	std	Y+55, r25	; 0x37
    32e6:	8e ab       	std	Y+54, r24	; 0x36
    32e8:	0f c0       	rjmp	.+30     	; 0x3308 <Stepper_vidDirection+0x22a0>
    32ea:	88 ec       	ldi	r24, 0xC8	; 200
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	9d ab       	std	Y+53, r25	; 0x35
    32f0:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    32f2:	8c a9       	ldd	r24, Y+52	; 0x34
    32f4:	9d a9       	ldd	r25, Y+53	; 0x35
    32f6:	01 97       	sbiw	r24, 0x01	; 1
    32f8:	f1 f7       	brne	.-4      	; 0x32f6 <Stepper_vidDirection+0x228e>
    32fa:	9d ab       	std	Y+53, r25	; 0x35
    32fc:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32fe:	8e a9       	ldd	r24, Y+54	; 0x36
    3300:	9f a9       	ldd	r25, Y+55	; 0x37
    3302:	01 97       	sbiw	r24, 0x01	; 1
    3304:	9f ab       	std	Y+55, r25	; 0x37
    3306:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3308:	8e a9       	ldd	r24, Y+54	; 0x36
    330a:	9f a9       	ldd	r25, Y+55	; 0x37
    330c:	00 97       	sbiw	r24, 0x00	; 0
    330e:	69 f7       	brne	.-38     	; 0x32ea <Stepper_vidDirection+0x2282>
    3310:	2d c0       	rjmp	.+90     	; 0x336c <Stepper_vidDirection+0x2304>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3312:	68 ad       	ldd	r22, Y+56	; 0x38
    3314:	79 ad       	ldd	r23, Y+57	; 0x39
    3316:	8a ad       	ldd	r24, Y+58	; 0x3a
    3318:	9b ad       	ldd	r25, Y+59	; 0x3b
    331a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    331e:	dc 01       	movw	r26, r24
    3320:	cb 01       	movw	r24, r22
    3322:	9f ab       	std	Y+55, r25	; 0x37
    3324:	8e ab       	std	Y+54, r24	; 0x36
    3326:	8e a9       	ldd	r24, Y+54	; 0x36
    3328:	9f a9       	ldd	r25, Y+55	; 0x37
    332a:	9b ab       	std	Y+51, r25	; 0x33
    332c:	8a ab       	std	Y+50, r24	; 0x32
    332e:	8a a9       	ldd	r24, Y+50	; 0x32
    3330:	9b a9       	ldd	r25, Y+51	; 0x33
    3332:	01 97       	sbiw	r24, 0x01	; 1
    3334:	f1 f7       	brne	.-4      	; 0x3332 <Stepper_vidDirection+0x22ca>
    3336:	9b ab       	std	Y+51, r25	; 0x33
    3338:	8a ab       	std	Y+50, r24	; 0x32
    333a:	18 c0       	rjmp	.+48     	; 0x336c <Stepper_vidDirection+0x2304>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    333c:	fe 01       	movw	r30, r28
    333e:	ef 5b       	subi	r30, 0xBF	; 191
    3340:	ff 4f       	sbci	r31, 0xFF	; 255
    3342:	60 81       	ld	r22, Z
    3344:	71 81       	ldd	r23, Z+1	; 0x01
    3346:	82 81       	ldd	r24, Z+2	; 0x02
    3348:	93 81       	ldd	r25, Z+3	; 0x03
    334a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    334e:	dc 01       	movw	r26, r24
    3350:	cb 01       	movw	r24, r22
    3352:	fe 01       	movw	r30, r28
    3354:	e0 5c       	subi	r30, 0xC0	; 192
    3356:	ff 4f       	sbci	r31, 0xFF	; 255
    3358:	80 83       	st	Z, r24
    335a:	fe 01       	movw	r30, r28
    335c:	e0 5c       	subi	r30, 0xC0	; 192
    335e:	ff 4f       	sbci	r31, 0xFF	; 255
    3360:	80 81       	ld	r24, Z
    3362:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3364:	89 a9       	ldd	r24, Y+49	; 0x31
    3366:	8a 95       	dec	r24
    3368:	f1 f7       	brne	.-4      	; 0x3366 <Stepper_vidDirection+0x22fe>
    336a:	89 ab       	std	Y+49, r24	; 0x31
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    336c:	89 e0       	ldi	r24, 0x09	; 9
    336e:	60 e0       	ldi	r22, 0x00	; 0
    3370:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    3374:	8a e0       	ldi	r24, 0x0A	; 10
    3376:	60 e0       	ldi	r22, 0x00	; 0
    3378:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    337c:	8b e0       	ldi	r24, 0x0B	; 11
    337e:	61 e0       	ldi	r22, 0x01	; 1
    3380:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    3384:	8c e0       	ldi	r24, 0x0C	; 12
    3386:	60 e0       	ldi	r22, 0x00	; 0
    3388:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    338c:	80 e0       	ldi	r24, 0x00	; 0
    338e:	90 e8       	ldi	r25, 0x80	; 128
    3390:	a4 e5       	ldi	r26, 0x54	; 84
    3392:	b4 e4       	ldi	r27, 0x44	; 68
    3394:	8d a7       	std	Y+45, r24	; 0x2d
    3396:	9e a7       	std	Y+46, r25	; 0x2e
    3398:	af a7       	std	Y+47, r26	; 0x2f
    339a:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    339c:	6d a5       	ldd	r22, Y+45	; 0x2d
    339e:	7e a5       	ldd	r23, Y+46	; 0x2e
    33a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    33a2:	98 a9       	ldd	r25, Y+48	; 0x30
    33a4:	2b ea       	ldi	r18, 0xAB	; 171
    33a6:	3a ea       	ldi	r19, 0xAA	; 170
    33a8:	4a e2       	ldi	r20, 0x2A	; 42
    33aa:	50 e4       	ldi	r21, 0x40	; 64
    33ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33b0:	dc 01       	movw	r26, r24
    33b2:	cb 01       	movw	r24, r22
    33b4:	89 a7       	std	Y+41, r24	; 0x29
    33b6:	9a a7       	std	Y+42, r25	; 0x2a
    33b8:	ab a7       	std	Y+43, r26	; 0x2b
    33ba:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    33bc:	69 a5       	ldd	r22, Y+41	; 0x29
    33be:	7a a5       	ldd	r23, Y+42	; 0x2a
    33c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    33c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    33c4:	20 e0       	ldi	r18, 0x00	; 0
    33c6:	30 e0       	ldi	r19, 0x00	; 0
    33c8:	40 e8       	ldi	r20, 0x80	; 128
    33ca:	5f e3       	ldi	r21, 0x3F	; 63
    33cc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    33d0:	88 23       	and	r24, r24
    33d2:	1c f4       	brge	.+6      	; 0x33da <Stepper_vidDirection+0x2372>
		__ticks = 1;
    33d4:	81 e0       	ldi	r24, 0x01	; 1
    33d6:	88 a7       	std	Y+40, r24	; 0x28
    33d8:	91 c0       	rjmp	.+290    	; 0x34fc <Stepper_vidDirection+0x2494>
	else if (__tmp > 255)
    33da:	69 a5       	ldd	r22, Y+41	; 0x29
    33dc:	7a a5       	ldd	r23, Y+42	; 0x2a
    33de:	8b a5       	ldd	r24, Y+43	; 0x2b
    33e0:	9c a5       	ldd	r25, Y+44	; 0x2c
    33e2:	20 e0       	ldi	r18, 0x00	; 0
    33e4:	30 e0       	ldi	r19, 0x00	; 0
    33e6:	4f e7       	ldi	r20, 0x7F	; 127
    33e8:	53 e4       	ldi	r21, 0x43	; 67
    33ea:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    33ee:	18 16       	cp	r1, r24
    33f0:	0c f0       	brlt	.+2      	; 0x33f4 <Stepper_vidDirection+0x238c>
    33f2:	7b c0       	rjmp	.+246    	; 0x34ea <Stepper_vidDirection+0x2482>
	{
		_delay_ms(__us / 1000.0);
    33f4:	6d a5       	ldd	r22, Y+45	; 0x2d
    33f6:	7e a5       	ldd	r23, Y+46	; 0x2e
    33f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    33fa:	98 a9       	ldd	r25, Y+48	; 0x30
    33fc:	20 e0       	ldi	r18, 0x00	; 0
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	4a e7       	ldi	r20, 0x7A	; 122
    3402:	54 e4       	ldi	r21, 0x44	; 68
    3404:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3408:	dc 01       	movw	r26, r24
    340a:	cb 01       	movw	r24, r22
    340c:	8c a3       	std	Y+36, r24	; 0x24
    340e:	9d a3       	std	Y+37, r25	; 0x25
    3410:	ae a3       	std	Y+38, r26	; 0x26
    3412:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3414:	6c a1       	ldd	r22, Y+36	; 0x24
    3416:	7d a1       	ldd	r23, Y+37	; 0x25
    3418:	8e a1       	ldd	r24, Y+38	; 0x26
    341a:	9f a1       	ldd	r25, Y+39	; 0x27
    341c:	20 e0       	ldi	r18, 0x00	; 0
    341e:	30 e0       	ldi	r19, 0x00	; 0
    3420:	4a ef       	ldi	r20, 0xFA	; 250
    3422:	54 e4       	ldi	r21, 0x44	; 68
    3424:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3428:	dc 01       	movw	r26, r24
    342a:	cb 01       	movw	r24, r22
    342c:	88 a3       	std	Y+32, r24	; 0x20
    342e:	99 a3       	std	Y+33, r25	; 0x21
    3430:	aa a3       	std	Y+34, r26	; 0x22
    3432:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3434:	68 a1       	ldd	r22, Y+32	; 0x20
    3436:	79 a1       	ldd	r23, Y+33	; 0x21
    3438:	8a a1       	ldd	r24, Y+34	; 0x22
    343a:	9b a1       	ldd	r25, Y+35	; 0x23
    343c:	20 e0       	ldi	r18, 0x00	; 0
    343e:	30 e0       	ldi	r19, 0x00	; 0
    3440:	40 e8       	ldi	r20, 0x80	; 128
    3442:	5f e3       	ldi	r21, 0x3F	; 63
    3444:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3448:	88 23       	and	r24, r24
    344a:	2c f4       	brge	.+10     	; 0x3456 <Stepper_vidDirection+0x23ee>
		__ticks = 1;
    344c:	81 e0       	ldi	r24, 0x01	; 1
    344e:	90 e0       	ldi	r25, 0x00	; 0
    3450:	9f 8f       	std	Y+31, r25	; 0x1f
    3452:	8e 8f       	std	Y+30, r24	; 0x1e
    3454:	3f c0       	rjmp	.+126    	; 0x34d4 <Stepper_vidDirection+0x246c>
	else if (__tmp > 65535)
    3456:	68 a1       	ldd	r22, Y+32	; 0x20
    3458:	79 a1       	ldd	r23, Y+33	; 0x21
    345a:	8a a1       	ldd	r24, Y+34	; 0x22
    345c:	9b a1       	ldd	r25, Y+35	; 0x23
    345e:	20 e0       	ldi	r18, 0x00	; 0
    3460:	3f ef       	ldi	r19, 0xFF	; 255
    3462:	4f e7       	ldi	r20, 0x7F	; 127
    3464:	57 e4       	ldi	r21, 0x47	; 71
    3466:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    346a:	18 16       	cp	r1, r24
    346c:	4c f5       	brge	.+82     	; 0x34c0 <Stepper_vidDirection+0x2458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    346e:	6c a1       	ldd	r22, Y+36	; 0x24
    3470:	7d a1       	ldd	r23, Y+37	; 0x25
    3472:	8e a1       	ldd	r24, Y+38	; 0x26
    3474:	9f a1       	ldd	r25, Y+39	; 0x27
    3476:	20 e0       	ldi	r18, 0x00	; 0
    3478:	30 e0       	ldi	r19, 0x00	; 0
    347a:	40 e2       	ldi	r20, 0x20	; 32
    347c:	51 e4       	ldi	r21, 0x41	; 65
    347e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3482:	dc 01       	movw	r26, r24
    3484:	cb 01       	movw	r24, r22
    3486:	bc 01       	movw	r22, r24
    3488:	cd 01       	movw	r24, r26
    348a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    348e:	dc 01       	movw	r26, r24
    3490:	cb 01       	movw	r24, r22
    3492:	9f 8f       	std	Y+31, r25	; 0x1f
    3494:	8e 8f       	std	Y+30, r24	; 0x1e
    3496:	0f c0       	rjmp	.+30     	; 0x34b6 <Stepper_vidDirection+0x244e>
    3498:	88 ec       	ldi	r24, 0xC8	; 200
    349a:	90 e0       	ldi	r25, 0x00	; 0
    349c:	9d 8f       	std	Y+29, r25	; 0x1d
    349e:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    34a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    34a2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    34a4:	01 97       	sbiw	r24, 0x01	; 1
    34a6:	f1 f7       	brne	.-4      	; 0x34a4 <Stepper_vidDirection+0x243c>
    34a8:	9d 8f       	std	Y+29, r25	; 0x1d
    34aa:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
    34ae:	9f 8d       	ldd	r25, Y+31	; 0x1f
    34b0:	01 97       	sbiw	r24, 0x01	; 1
    34b2:	9f 8f       	std	Y+31, r25	; 0x1f
    34b4:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34b6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    34b8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    34ba:	00 97       	sbiw	r24, 0x00	; 0
    34bc:	69 f7       	brne	.-38     	; 0x3498 <Stepper_vidDirection+0x2430>
    34be:	24 c0       	rjmp	.+72     	; 0x3508 <Stepper_vidDirection+0x24a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34c0:	68 a1       	ldd	r22, Y+32	; 0x20
    34c2:	79 a1       	ldd	r23, Y+33	; 0x21
    34c4:	8a a1       	ldd	r24, Y+34	; 0x22
    34c6:	9b a1       	ldd	r25, Y+35	; 0x23
    34c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34cc:	dc 01       	movw	r26, r24
    34ce:	cb 01       	movw	r24, r22
    34d0:	9f 8f       	std	Y+31, r25	; 0x1f
    34d2:	8e 8f       	std	Y+30, r24	; 0x1e
    34d4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    34d6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    34d8:	9b 8f       	std	Y+27, r25	; 0x1b
    34da:	8a 8f       	std	Y+26, r24	; 0x1a
    34dc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    34de:	9b 8d       	ldd	r25, Y+27	; 0x1b
    34e0:	01 97       	sbiw	r24, 0x01	; 1
    34e2:	f1 f7       	brne	.-4      	; 0x34e0 <Stepper_vidDirection+0x2478>
    34e4:	9b 8f       	std	Y+27, r25	; 0x1b
    34e6:	8a 8f       	std	Y+26, r24	; 0x1a
    34e8:	0f c0       	rjmp	.+30     	; 0x3508 <Stepper_vidDirection+0x24a0>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    34ea:	69 a5       	ldd	r22, Y+41	; 0x29
    34ec:	7a a5       	ldd	r23, Y+42	; 0x2a
    34ee:	8b a5       	ldd	r24, Y+43	; 0x2b
    34f0:	9c a5       	ldd	r25, Y+44	; 0x2c
    34f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34f6:	dc 01       	movw	r26, r24
    34f8:	cb 01       	movw	r24, r22
    34fa:	88 a7       	std	Y+40, r24	; 0x28
    34fc:	88 a5       	ldd	r24, Y+40	; 0x28
    34fe:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3500:	89 8d       	ldd	r24, Y+25	; 0x19
    3502:	8a 95       	dec	r24
    3504:	f1 f7       	brne	.-4      	; 0x3502 <Stepper_vidDirection+0x249a>
    3506:	89 8f       	std	Y+25, r24	; 0x19
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    3508:	89 e0       	ldi	r24, 0x09	; 9
    350a:	60 e0       	ldi	r22, 0x00	; 0
    350c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    3510:	8a e0       	ldi	r24, 0x0A	; 10
    3512:	60 e0       	ldi	r22, 0x00	; 0
    3514:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    3518:	8b e0       	ldi	r24, 0x0B	; 11
    351a:	60 e0       	ldi	r22, 0x00	; 0
    351c:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    3520:	8c e0       	ldi	r24, 0x0C	; 12
    3522:	61 e0       	ldi	r22, 0x01	; 1
    3524:	0e 94 32 07 	call	0xe64	; 0xe64 <Dio_vidSetPinVal>
    3528:	80 e0       	ldi	r24, 0x00	; 0
    352a:	90 e8       	ldi	r25, 0x80	; 128
    352c:	a4 e5       	ldi	r26, 0x54	; 84
    352e:	b4 e4       	ldi	r27, 0x44	; 68
    3530:	8d 8b       	std	Y+21, r24	; 0x15
    3532:	9e 8b       	std	Y+22, r25	; 0x16
    3534:	af 8b       	std	Y+23, r26	; 0x17
    3536:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3538:	6d 89       	ldd	r22, Y+21	; 0x15
    353a:	7e 89       	ldd	r23, Y+22	; 0x16
    353c:	8f 89       	ldd	r24, Y+23	; 0x17
    353e:	98 8d       	ldd	r25, Y+24	; 0x18
    3540:	2b ea       	ldi	r18, 0xAB	; 171
    3542:	3a ea       	ldi	r19, 0xAA	; 170
    3544:	4a e2       	ldi	r20, 0x2A	; 42
    3546:	50 e4       	ldi	r21, 0x40	; 64
    3548:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    354c:	dc 01       	movw	r26, r24
    354e:	cb 01       	movw	r24, r22
    3550:	89 8b       	std	Y+17, r24	; 0x11
    3552:	9a 8b       	std	Y+18, r25	; 0x12
    3554:	ab 8b       	std	Y+19, r26	; 0x13
    3556:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3558:	69 89       	ldd	r22, Y+17	; 0x11
    355a:	7a 89       	ldd	r23, Y+18	; 0x12
    355c:	8b 89       	ldd	r24, Y+19	; 0x13
    355e:	9c 89       	ldd	r25, Y+20	; 0x14
    3560:	20 e0       	ldi	r18, 0x00	; 0
    3562:	30 e0       	ldi	r19, 0x00	; 0
    3564:	40 e8       	ldi	r20, 0x80	; 128
    3566:	5f e3       	ldi	r21, 0x3F	; 63
    3568:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    356c:	88 23       	and	r24, r24
    356e:	1c f4       	brge	.+6      	; 0x3576 <Stepper_vidDirection+0x250e>
		__ticks = 1;
    3570:	81 e0       	ldi	r24, 0x01	; 1
    3572:	88 8b       	std	Y+16, r24	; 0x10
    3574:	91 c0       	rjmp	.+290    	; 0x3698 <Stepper_vidDirection+0x2630>
	else if (__tmp > 255)
    3576:	69 89       	ldd	r22, Y+17	; 0x11
    3578:	7a 89       	ldd	r23, Y+18	; 0x12
    357a:	8b 89       	ldd	r24, Y+19	; 0x13
    357c:	9c 89       	ldd	r25, Y+20	; 0x14
    357e:	20 e0       	ldi	r18, 0x00	; 0
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	4f e7       	ldi	r20, 0x7F	; 127
    3584:	53 e4       	ldi	r21, 0x43	; 67
    3586:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    358a:	18 16       	cp	r1, r24
    358c:	0c f0       	brlt	.+2      	; 0x3590 <Stepper_vidDirection+0x2528>
    358e:	7b c0       	rjmp	.+246    	; 0x3686 <Stepper_vidDirection+0x261e>
	{
		_delay_ms(__us / 1000.0);
    3590:	6d 89       	ldd	r22, Y+21	; 0x15
    3592:	7e 89       	ldd	r23, Y+22	; 0x16
    3594:	8f 89       	ldd	r24, Y+23	; 0x17
    3596:	98 8d       	ldd	r25, Y+24	; 0x18
    3598:	20 e0       	ldi	r18, 0x00	; 0
    359a:	30 e0       	ldi	r19, 0x00	; 0
    359c:	4a e7       	ldi	r20, 0x7A	; 122
    359e:	54 e4       	ldi	r21, 0x44	; 68
    35a0:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    35a4:	dc 01       	movw	r26, r24
    35a6:	cb 01       	movw	r24, r22
    35a8:	8c 87       	std	Y+12, r24	; 0x0c
    35aa:	9d 87       	std	Y+13, r25	; 0x0d
    35ac:	ae 87       	std	Y+14, r26	; 0x0e
    35ae:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35b0:	6c 85       	ldd	r22, Y+12	; 0x0c
    35b2:	7d 85       	ldd	r23, Y+13	; 0x0d
    35b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    35b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	4a ef       	ldi	r20, 0xFA	; 250
    35be:	54 e4       	ldi	r21, 0x44	; 68
    35c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35c4:	dc 01       	movw	r26, r24
    35c6:	cb 01       	movw	r24, r22
    35c8:	88 87       	std	Y+8, r24	; 0x08
    35ca:	99 87       	std	Y+9, r25	; 0x09
    35cc:	aa 87       	std	Y+10, r26	; 0x0a
    35ce:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    35d0:	68 85       	ldd	r22, Y+8	; 0x08
    35d2:	79 85       	ldd	r23, Y+9	; 0x09
    35d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    35d6:	9b 85       	ldd	r25, Y+11	; 0x0b
    35d8:	20 e0       	ldi	r18, 0x00	; 0
    35da:	30 e0       	ldi	r19, 0x00	; 0
    35dc:	40 e8       	ldi	r20, 0x80	; 128
    35de:	5f e3       	ldi	r21, 0x3F	; 63
    35e0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    35e4:	88 23       	and	r24, r24
    35e6:	2c f4       	brge	.+10     	; 0x35f2 <Stepper_vidDirection+0x258a>
		__ticks = 1;
    35e8:	81 e0       	ldi	r24, 0x01	; 1
    35ea:	90 e0       	ldi	r25, 0x00	; 0
    35ec:	9f 83       	std	Y+7, r25	; 0x07
    35ee:	8e 83       	std	Y+6, r24	; 0x06
    35f0:	3f c0       	rjmp	.+126    	; 0x3670 <Stepper_vidDirection+0x2608>
	else if (__tmp > 65535)
    35f2:	68 85       	ldd	r22, Y+8	; 0x08
    35f4:	79 85       	ldd	r23, Y+9	; 0x09
    35f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    35f8:	9b 85       	ldd	r25, Y+11	; 0x0b
    35fa:	20 e0       	ldi	r18, 0x00	; 0
    35fc:	3f ef       	ldi	r19, 0xFF	; 255
    35fe:	4f e7       	ldi	r20, 0x7F	; 127
    3600:	57 e4       	ldi	r21, 0x47	; 71
    3602:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3606:	18 16       	cp	r1, r24
    3608:	4c f5       	brge	.+82     	; 0x365c <Stepper_vidDirection+0x25f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    360a:	6c 85       	ldd	r22, Y+12	; 0x0c
    360c:	7d 85       	ldd	r23, Y+13	; 0x0d
    360e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3610:	9f 85       	ldd	r25, Y+15	; 0x0f
    3612:	20 e0       	ldi	r18, 0x00	; 0
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	40 e2       	ldi	r20, 0x20	; 32
    3618:	51 e4       	ldi	r21, 0x41	; 65
    361a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    361e:	dc 01       	movw	r26, r24
    3620:	cb 01       	movw	r24, r22
    3622:	bc 01       	movw	r22, r24
    3624:	cd 01       	movw	r24, r26
    3626:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    362a:	dc 01       	movw	r26, r24
    362c:	cb 01       	movw	r24, r22
    362e:	9f 83       	std	Y+7, r25	; 0x07
    3630:	8e 83       	std	Y+6, r24	; 0x06
    3632:	0f c0       	rjmp	.+30     	; 0x3652 <Stepper_vidDirection+0x25ea>
    3634:	88 ec       	ldi	r24, 0xC8	; 200
    3636:	90 e0       	ldi	r25, 0x00	; 0
    3638:	9d 83       	std	Y+5, r25	; 0x05
    363a:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    363c:	8c 81       	ldd	r24, Y+4	; 0x04
    363e:	9d 81       	ldd	r25, Y+5	; 0x05
    3640:	01 97       	sbiw	r24, 0x01	; 1
    3642:	f1 f7       	brne	.-4      	; 0x3640 <Stepper_vidDirection+0x25d8>
    3644:	9d 83       	std	Y+5, r25	; 0x05
    3646:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3648:	8e 81       	ldd	r24, Y+6	; 0x06
    364a:	9f 81       	ldd	r25, Y+7	; 0x07
    364c:	01 97       	sbiw	r24, 0x01	; 1
    364e:	9f 83       	std	Y+7, r25	; 0x07
    3650:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3652:	8e 81       	ldd	r24, Y+6	; 0x06
    3654:	9f 81       	ldd	r25, Y+7	; 0x07
    3656:	00 97       	sbiw	r24, 0x00	; 0
    3658:	69 f7       	brne	.-38     	; 0x3634 <Stepper_vidDirection+0x25cc>
    365a:	24 c0       	rjmp	.+72     	; 0x36a4 <Stepper_vidDirection+0x263c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    365c:	68 85       	ldd	r22, Y+8	; 0x08
    365e:	79 85       	ldd	r23, Y+9	; 0x09
    3660:	8a 85       	ldd	r24, Y+10	; 0x0a
    3662:	9b 85       	ldd	r25, Y+11	; 0x0b
    3664:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3668:	dc 01       	movw	r26, r24
    366a:	cb 01       	movw	r24, r22
    366c:	9f 83       	std	Y+7, r25	; 0x07
    366e:	8e 83       	std	Y+6, r24	; 0x06
    3670:	8e 81       	ldd	r24, Y+6	; 0x06
    3672:	9f 81       	ldd	r25, Y+7	; 0x07
    3674:	9b 83       	std	Y+3, r25	; 0x03
    3676:	8a 83       	std	Y+2, r24	; 0x02
    3678:	8a 81       	ldd	r24, Y+2	; 0x02
    367a:	9b 81       	ldd	r25, Y+3	; 0x03
    367c:	01 97       	sbiw	r24, 0x01	; 1
    367e:	f1 f7       	brne	.-4      	; 0x367c <Stepper_vidDirection+0x2614>
    3680:	9b 83       	std	Y+3, r25	; 0x03
    3682:	8a 83       	std	Y+2, r24	; 0x02
    3684:	0f c0       	rjmp	.+30     	; 0x36a4 <Stepper_vidDirection+0x263c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3686:	69 89       	ldd	r22, Y+17	; 0x11
    3688:	7a 89       	ldd	r23, Y+18	; 0x12
    368a:	8b 89       	ldd	r24, Y+19	; 0x13
    368c:	9c 89       	ldd	r25, Y+20	; 0x14
    368e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3692:	dc 01       	movw	r26, r24
    3694:	cb 01       	movw	r24, r22
    3696:	88 8b       	std	Y+16, r24	; 0x10
    3698:	88 89       	ldd	r24, Y+16	; 0x10
    369a:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    369c:	89 81       	ldd	r24, Y+1	; 0x01
    369e:	8a 95       	dec	r24
    36a0:	f1 f7       	brne	.-4      	; 0x369e <Stepper_vidDirection+0x2636>
    36a2:	89 83       	std	Y+1, r24	; 0x01
					_delay_us(850);
				}
				break;

			case 180:
				for(x=0; x<250; x++){
    36a4:	de 01       	movw	r26, r28
    36a6:	af 57       	subi	r26, 0x7F	; 127
    36a8:	be 4f       	sbci	r27, 0xFE	; 254
    36aa:	fe 01       	movw	r30, r28
    36ac:	ef 57       	subi	r30, 0x7F	; 127
    36ae:	fe 4f       	sbci	r31, 0xFE	; 254
    36b0:	80 81       	ld	r24, Z
    36b2:	8f 5f       	subi	r24, 0xFF	; 255
    36b4:	8c 93       	st	X, r24
    36b6:	fe 01       	movw	r30, r28
    36b8:	ef 57       	subi	r30, 0x7F	; 127
    36ba:	fe 4f       	sbci	r31, 0xFE	; 254
    36bc:	80 81       	ld	r24, Z
    36be:	8a 3f       	cpi	r24, 0xFA	; 250
    36c0:	08 f4       	brcc	.+2      	; 0x36c4 <Stepper_vidDirection+0x265c>
    36c2:	2e cc       	rjmp	.-1956   	; 0x2f20 <Stepper_vidDirection+0x1eb8>
					_delay_us(850);
				}
				break;
			}
		}
	}
    36c4:	c9 57       	subi	r28, 0x79	; 121
    36c6:	de 4f       	sbci	r29, 0xFE	; 254
    36c8:	0f b6       	in	r0, 0x3f	; 63
    36ca:	f8 94       	cli
    36cc:	de bf       	out	0x3e, r29	; 62
    36ce:	0f be       	out	0x3f, r0	; 63
    36d0:	cd bf       	out	0x3d, r28	; 61
    36d2:	cf 91       	pop	r28
    36d4:	df 91       	pop	r29
    36d6:	1f 91       	pop	r17
    36d8:	0f 91       	pop	r16
    36da:	08 95       	ret

000036dc <main>:
#include<util/delay.h>
#include"Dio_int.h"
#include"Stepper_int.h"


int main(void){
    36dc:	df 93       	push	r29
    36de:	cf 93       	push	r28
    36e0:	cd b7       	in	r28, 0x3d	; 61
    36e2:	de b7       	in	r29, 0x3e	; 62
    36e4:	2e 97       	sbiw	r28, 0x0e	; 14
    36e6:	0f b6       	in	r0, 0x3f	; 63
    36e8:	f8 94       	cli
    36ea:	de bf       	out	0x3e, r29	; 62
    36ec:	0f be       	out	0x3f, r0	; 63
    36ee:	cd bf       	out	0x3d, r28	; 61

	Stepper_vidInit();
    36f0:	0e 94 1d 08 	call	0x103a	; 0x103a <Stepper_vidInit>
    36f4:	80 e0       	ldi	r24, 0x00	; 0
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	aa ef       	ldi	r26, 0xFA	; 250
    36fa:	b3 e4       	ldi	r27, 0x43	; 67
    36fc:	8b 87       	std	Y+11, r24	; 0x0b
    36fe:	9c 87       	std	Y+12, r25	; 0x0c
    3700:	ad 87       	std	Y+13, r26	; 0x0d
    3702:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3704:	6b 85       	ldd	r22, Y+11	; 0x0b
    3706:	7c 85       	ldd	r23, Y+12	; 0x0c
    3708:	8d 85       	ldd	r24, Y+13	; 0x0d
    370a:	9e 85       	ldd	r25, Y+14	; 0x0e
    370c:	20 e0       	ldi	r18, 0x00	; 0
    370e:	30 e0       	ldi	r19, 0x00	; 0
    3710:	4a ef       	ldi	r20, 0xFA	; 250
    3712:	54 e4       	ldi	r21, 0x44	; 68
    3714:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3718:	dc 01       	movw	r26, r24
    371a:	cb 01       	movw	r24, r22
    371c:	8f 83       	std	Y+7, r24	; 0x07
    371e:	98 87       	std	Y+8, r25	; 0x08
    3720:	a9 87       	std	Y+9, r26	; 0x09
    3722:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3724:	6f 81       	ldd	r22, Y+7	; 0x07
    3726:	78 85       	ldd	r23, Y+8	; 0x08
    3728:	89 85       	ldd	r24, Y+9	; 0x09
    372a:	9a 85       	ldd	r25, Y+10	; 0x0a
    372c:	20 e0       	ldi	r18, 0x00	; 0
    372e:	30 e0       	ldi	r19, 0x00	; 0
    3730:	40 e8       	ldi	r20, 0x80	; 128
    3732:	5f e3       	ldi	r21, 0x3F	; 63
    3734:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3738:	88 23       	and	r24, r24
    373a:	2c f4       	brge	.+10     	; 0x3746 <main+0x6a>
		__ticks = 1;
    373c:	81 e0       	ldi	r24, 0x01	; 1
    373e:	90 e0       	ldi	r25, 0x00	; 0
    3740:	9e 83       	std	Y+6, r25	; 0x06
    3742:	8d 83       	std	Y+5, r24	; 0x05
    3744:	3f c0       	rjmp	.+126    	; 0x37c4 <main+0xe8>
	else if (__tmp > 65535)
    3746:	6f 81       	ldd	r22, Y+7	; 0x07
    3748:	78 85       	ldd	r23, Y+8	; 0x08
    374a:	89 85       	ldd	r24, Y+9	; 0x09
    374c:	9a 85       	ldd	r25, Y+10	; 0x0a
    374e:	20 e0       	ldi	r18, 0x00	; 0
    3750:	3f ef       	ldi	r19, 0xFF	; 255
    3752:	4f e7       	ldi	r20, 0x7F	; 127
    3754:	57 e4       	ldi	r21, 0x47	; 71
    3756:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    375a:	18 16       	cp	r1, r24
    375c:	4c f5       	brge	.+82     	; 0x37b0 <main+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    375e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3760:	7c 85       	ldd	r23, Y+12	; 0x0c
    3762:	8d 85       	ldd	r24, Y+13	; 0x0d
    3764:	9e 85       	ldd	r25, Y+14	; 0x0e
    3766:	20 e0       	ldi	r18, 0x00	; 0
    3768:	30 e0       	ldi	r19, 0x00	; 0
    376a:	40 e2       	ldi	r20, 0x20	; 32
    376c:	51 e4       	ldi	r21, 0x41	; 65
    376e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3772:	dc 01       	movw	r26, r24
    3774:	cb 01       	movw	r24, r22
    3776:	bc 01       	movw	r22, r24
    3778:	cd 01       	movw	r24, r26
    377a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    377e:	dc 01       	movw	r26, r24
    3780:	cb 01       	movw	r24, r22
    3782:	9e 83       	std	Y+6, r25	; 0x06
    3784:	8d 83       	std	Y+5, r24	; 0x05
    3786:	0f c0       	rjmp	.+30     	; 0x37a6 <main+0xca>
    3788:	88 ec       	ldi	r24, 0xC8	; 200
    378a:	90 e0       	ldi	r25, 0x00	; 0
    378c:	9c 83       	std	Y+4, r25	; 0x04
    378e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3790:	8b 81       	ldd	r24, Y+3	; 0x03
    3792:	9c 81       	ldd	r25, Y+4	; 0x04
    3794:	01 97       	sbiw	r24, 0x01	; 1
    3796:	f1 f7       	brne	.-4      	; 0x3794 <main+0xb8>
    3798:	9c 83       	std	Y+4, r25	; 0x04
    379a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    379c:	8d 81       	ldd	r24, Y+5	; 0x05
    379e:	9e 81       	ldd	r25, Y+6	; 0x06
    37a0:	01 97       	sbiw	r24, 0x01	; 1
    37a2:	9e 83       	std	Y+6, r25	; 0x06
    37a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37a6:	8d 81       	ldd	r24, Y+5	; 0x05
    37a8:	9e 81       	ldd	r25, Y+6	; 0x06
    37aa:	00 97       	sbiw	r24, 0x00	; 0
    37ac:	69 f7       	brne	.-38     	; 0x3788 <main+0xac>
    37ae:	14 c0       	rjmp	.+40     	; 0x37d8 <main+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37b0:	6f 81       	ldd	r22, Y+7	; 0x07
    37b2:	78 85       	ldd	r23, Y+8	; 0x08
    37b4:	89 85       	ldd	r24, Y+9	; 0x09
    37b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    37b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37bc:	dc 01       	movw	r26, r24
    37be:	cb 01       	movw	r24, r22
    37c0:	9e 83       	std	Y+6, r25	; 0x06
    37c2:	8d 83       	std	Y+5, r24	; 0x05
    37c4:	8d 81       	ldd	r24, Y+5	; 0x05
    37c6:	9e 81       	ldd	r25, Y+6	; 0x06
    37c8:	9a 83       	std	Y+2, r25	; 0x02
    37ca:	89 83       	std	Y+1, r24	; 0x01
    37cc:	89 81       	ldd	r24, Y+1	; 0x01
    37ce:	9a 81       	ldd	r25, Y+2	; 0x02
    37d0:	01 97       	sbiw	r24, 0x01	; 1
    37d2:	f1 f7       	brne	.-4      	; 0x37d0 <main+0xf4>
    37d4:	9a 83       	std	Y+2, r25	; 0x02
    37d6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
	Stepper_vidDirection('R',90);
    37d8:	82 e5       	ldi	r24, 0x52	; 82
    37da:	6a e5       	ldi	r22, 0x5A	; 90
    37dc:	0e 94 34 08 	call	0x1068	; 0x1068 <Stepper_vidDirection>
	while(1){

	Stepper_vidDirection('L',90);
    37e0:	8c e4       	ldi	r24, 0x4C	; 76
    37e2:	6a e5       	ldi	r22, 0x5A	; 90
    37e4:	0e 94 34 08 	call	0x1068	; 0x1068 <Stepper_vidDirection>
    37e8:	fb cf       	rjmp	.-10     	; 0x37e0 <main+0x104>

000037ea <__prologue_saves__>:
    37ea:	2f 92       	push	r2
    37ec:	3f 92       	push	r3
    37ee:	4f 92       	push	r4
    37f0:	5f 92       	push	r5
    37f2:	6f 92       	push	r6
    37f4:	7f 92       	push	r7
    37f6:	8f 92       	push	r8
    37f8:	9f 92       	push	r9
    37fa:	af 92       	push	r10
    37fc:	bf 92       	push	r11
    37fe:	cf 92       	push	r12
    3800:	df 92       	push	r13
    3802:	ef 92       	push	r14
    3804:	ff 92       	push	r15
    3806:	0f 93       	push	r16
    3808:	1f 93       	push	r17
    380a:	cf 93       	push	r28
    380c:	df 93       	push	r29
    380e:	cd b7       	in	r28, 0x3d	; 61
    3810:	de b7       	in	r29, 0x3e	; 62
    3812:	ca 1b       	sub	r28, r26
    3814:	db 0b       	sbc	r29, r27
    3816:	0f b6       	in	r0, 0x3f	; 63
    3818:	f8 94       	cli
    381a:	de bf       	out	0x3e, r29	; 62
    381c:	0f be       	out	0x3f, r0	; 63
    381e:	cd bf       	out	0x3d, r28	; 61
    3820:	09 94       	ijmp

00003822 <__epilogue_restores__>:
    3822:	2a 88       	ldd	r2, Y+18	; 0x12
    3824:	39 88       	ldd	r3, Y+17	; 0x11
    3826:	48 88       	ldd	r4, Y+16	; 0x10
    3828:	5f 84       	ldd	r5, Y+15	; 0x0f
    382a:	6e 84       	ldd	r6, Y+14	; 0x0e
    382c:	7d 84       	ldd	r7, Y+13	; 0x0d
    382e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3830:	9b 84       	ldd	r9, Y+11	; 0x0b
    3832:	aa 84       	ldd	r10, Y+10	; 0x0a
    3834:	b9 84       	ldd	r11, Y+9	; 0x09
    3836:	c8 84       	ldd	r12, Y+8	; 0x08
    3838:	df 80       	ldd	r13, Y+7	; 0x07
    383a:	ee 80       	ldd	r14, Y+6	; 0x06
    383c:	fd 80       	ldd	r15, Y+5	; 0x05
    383e:	0c 81       	ldd	r16, Y+4	; 0x04
    3840:	1b 81       	ldd	r17, Y+3	; 0x03
    3842:	aa 81       	ldd	r26, Y+2	; 0x02
    3844:	b9 81       	ldd	r27, Y+1	; 0x01
    3846:	ce 0f       	add	r28, r30
    3848:	d1 1d       	adc	r29, r1
    384a:	0f b6       	in	r0, 0x3f	; 63
    384c:	f8 94       	cli
    384e:	de bf       	out	0x3e, r29	; 62
    3850:	0f be       	out	0x3f, r0	; 63
    3852:	cd bf       	out	0x3d, r28	; 61
    3854:	ed 01       	movw	r28, r26
    3856:	08 95       	ret

00003858 <_exit>:
    3858:	f8 94       	cli

0000385a <__stop_program>:
    385a:	ff cf       	rjmp	.-2      	; 0x385a <__stop_program>

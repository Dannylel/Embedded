
Login_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000047e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000047e6  0000485a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002ebc  00000000  00000000  00004868  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c4f  00000000  00000000  00007724  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00008373  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000084b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00008623  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000a26c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b157  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000bf04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000c2f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000cabf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ee       	ldi	r30, 0xE6	; 230
      68:	f7 e4       	ldi	r31, 0x47	; 71
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <main>
      7a:	0c 94 f1 23 	jmp	0x47e2	; 0x47e2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b1 23 	jmp	0x4762	; 0x4762 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 cd 23 	jmp	0x479a	; 0x479a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b1 23 	jmp	0x4762	; 0x4762 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 cd 23 	jmp	0x479a	; 0x479a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 dd 23 	jmp	0x47ba	; 0x47ba <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <Adc_vidInit>:
#include"ADC_int.h"




void Adc_vidInit(void){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62

	CLR_BIT(ADMUX,7);	//7TH BIT REFS1	AVCC WITH EXTERNAL
     b3e:	a7 e2       	ldi	r26, 0x27	; 39
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	e7 e2       	ldi	r30, 0x27	; 39
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	80 81       	ld	r24, Z
     b48:	8f 77       	andi	r24, 0x7F	; 127
     b4a:	8c 93       	st	X, r24
	SET_BIT(ADMUX,6);	//6TH BIT REFS0 CAPACITOR AT AREF pin
     b4c:	a7 e2       	ldi	r26, 0x27	; 39
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	e7 e2       	ldi	r30, 0x27	; 39
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	80 81       	ld	r24, Z
     b56:	80 64       	ori	r24, 0x40	; 64
     b58:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,5);	//RIGHT ADJUSTED IN ADLAR BIT
     b5a:	a7 e2       	ldi	r26, 0x27	; 39
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e7 e2       	ldi	r30, 0x27	; 39
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	8f 7d       	andi	r24, 0xDF	; 223
     b66:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,4);	//ADC CHANNEL 0
     b68:	a7 e2       	ldi	r26, 0x27	; 39
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e7 e2       	ldi	r30, 0x27	; 39
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	8f 7e       	andi	r24, 0xEF	; 239
     b74:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,3);	//ADC CHANNEL 0
     b76:	a7 e2       	ldi	r26, 0x27	; 39
     b78:	b0 e0       	ldi	r27, 0x00	; 0
     b7a:	e7 e2       	ldi	r30, 0x27	; 39
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	80 81       	ld	r24, Z
     b80:	87 7f       	andi	r24, 0xF7	; 247
     b82:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,2);	//ADC CHANNEL 0	page 212,213
     b84:	a7 e2       	ldi	r26, 0x27	; 39
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	e7 e2       	ldi	r30, 0x27	; 39
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	80 81       	ld	r24, Z
     b8e:	8b 7f       	andi	r24, 0xFB	; 251
     b90:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,1);	//ADC CHANNEL 0
     b92:	a7 e2       	ldi	r26, 0x27	; 39
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	e7 e2       	ldi	r30, 0x27	; 39
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	80 81       	ld	r24, Z
     b9c:	8d 7f       	andi	r24, 0xFD	; 253
     b9e:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,0);	//ADC CHANNEL 0
     ba0:	a7 e2       	ldi	r26, 0x27	; 39
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e7 e2       	ldi	r30, 0x27	; 39
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	8e 7f       	andi	r24, 0xFE	; 254
     bac:	8c 93       	st	X, r24

	SET_BIT(ADCSRA,7);	//ENABLE ADC ADEN
     bae:	a6 e2       	ldi	r26, 0x26	; 38
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	e6 e2       	ldi	r30, 0x26	; 38
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 81       	ld	r24, Z
     bb8:	80 68       	ori	r24, 0x80	; 128
     bba:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,6);	//ADSC ADC START CONVERSION DISABLED
     bbc:	a6 e2       	ldi	r26, 0x26	; 38
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	e6 e2       	ldi	r30, 0x26	; 38
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	80 81       	ld	r24, Z
     bc6:	8f 7b       	andi	r24, 0xBF	; 191
     bc8:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,5);	//ADC AUTO TRIGGER ADATE DISABLED
     bca:	a6 e2       	ldi	r26, 0x26	; 38
     bcc:	b0 e0       	ldi	r27, 0x00	; 0
     bce:	e6 e2       	ldi	r30, 0x26	; 38
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	80 81       	ld	r24, Z
     bd4:	8f 7d       	andi	r24, 0xDF	; 223
     bd6:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,4);  //ADIF INTERRUPT FLAG CLEARED BY WRITING ONE TO IT
     bd8:	a6 e2       	ldi	r26, 0x26	; 38
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	e6 e2       	ldi	r30, 0x26	; 38
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	80 81       	ld	r24, Z
     be2:	80 61       	ori	r24, 0x10	; 16
     be4:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,3);  //ADIE ADC INTERRUPT ENABLE CLEARED
     be6:	a6 e2       	ldi	r26, 0x26	; 38
     be8:	b0 e0       	ldi	r27, 0x00	; 0
     bea:	e6 e2       	ldi	r30, 0x26	; 38
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	80 81       	ld	r24, Z
     bf0:	87 7f       	andi	r24, 0xF7	; 247
     bf2:	8c 93       	st	X, r24

	CLR_BIT(ADCSRA,2);  //ADPS2		PRESCALER SELECTED TO 8 MHZ
     bf4:	a6 e2       	ldi	r26, 0x26	; 38
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e6 e2       	ldi	r30, 0x26	; 38
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	80 81       	ld	r24, Z
     bfe:	8b 7f       	andi	r24, 0xFB	; 251
     c00:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,1);	//ADPS1		PRESCALER SELECTED TO 8 MHZ
     c02:	a6 e2       	ldi	r26, 0x26	; 38
     c04:	b0 e0       	ldi	r27, 0x00	; 0
     c06:	e6 e2       	ldi	r30, 0x26	; 38
     c08:	f0 e0       	ldi	r31, 0x00	; 0
     c0a:	80 81       	ld	r24, Z
     c0c:	82 60       	ori	r24, 0x02	; 2
     c0e:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,0);	//ADPS0		PRESCALER SELECTED TO 8 MHZ
     c10:	a6 e2       	ldi	r26, 0x26	; 38
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	e6 e2       	ldi	r30, 0x26	; 38
     c16:	f0 e0       	ldi	r31, 0x00	; 0
     c18:	80 81       	ld	r24, Z
     c1a:	8e 7f       	andi	r24, 0xFE	; 254
     c1c:	8c 93       	st	X, r24
}
     c1e:	cf 91       	pop	r28
     c20:	df 91       	pop	r29
     c22:	08 95       	ret

00000c24 <Adc_u16GetResult>:


u16 Adc_u16GetResult(u8 Chnl_Id){
     c24:	df 93       	push	r29
     c26:	cf 93       	push	r28
     c28:	00 d0       	rcall	.+0      	; 0xc2a <Adc_u16GetResult+0x6>
     c2a:	0f 92       	push	r0
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
     c30:	8b 83       	std	Y+3, r24	; 0x03
	u16 result=0;
     c32:	1a 82       	std	Y+2, r1	; 0x02
     c34:	19 82       	std	Y+1, r1	; 0x01
	ADMUX&=0b11100000;	//CLEAR 5 MUX BITS BEFORE SELECTING CHANNEL
     c36:	a7 e2       	ldi	r26, 0x27	; 39
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e7 e2       	ldi	r30, 0x27	; 39
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	80 7e       	andi	r24, 0xE0	; 224
     c42:	8c 93       	st	X, r24
	ADMUX|=(Chnl_Id&0b00011111);		//XOR-ING WITH OUTER 5 MUX BITS TO SELECT CHANNEL
     c44:	a7 e2       	ldi	r26, 0x27	; 39
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e7 e2       	ldi	r30, 0x27	; 39
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	98 2f       	mov	r25, r24
     c50:	8b 81       	ldd	r24, Y+3	; 0x03
     c52:	8f 71       	andi	r24, 0x1F	; 31
     c54:	89 2b       	or	r24, r25
     c56:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,6); //START ADC
     c58:	a6 e2       	ldi	r26, 0x26	; 38
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	e6 e2       	ldi	r30, 0x26	; 38
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	80 81       	ld	r24, Z
     c62:	80 64       	ori	r24, 0x40	; 64
     c64:	8c 93       	st	X, r24
	while(GET_BIT(ADCSRA,4)==0); //CHECK FOR ADIF FLAG
     c66:	e6 e2       	ldi	r30, 0x26	; 38
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	80 81       	ld	r24, Z
     c6c:	82 95       	swap	r24
     c6e:	8f 70       	andi	r24, 0x0F	; 15
     c70:	88 2f       	mov	r24, r24
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	81 70       	andi	r24, 0x01	; 1
     c76:	90 70       	andi	r25, 0x00	; 0
     c78:	00 97       	sbiw	r24, 0x00	; 0
     c7a:	a9 f3       	breq	.-22     	; 0xc66 <Adc_u16GetResult+0x42>
	SET_BIT(ADCSRA,4);		//INTERRUPT FLAG CLEARED BY WRITING ONE
     c7c:	a6 e2       	ldi	r26, 0x26	; 38
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	e6 e2       	ldi	r30, 0x26	; 38
     c82:	f0 e0       	ldi	r31, 0x00	; 0
     c84:	80 81       	ld	r24, Z
     c86:	80 61       	ori	r24, 0x10	; 16
     c88:	8c 93       	st	X, r24
	result=ADCL;			//RESULT CONTAINING THE LOWER 8 BITS OF THE ADC 10 BIT CHANNEL
     c8a:	e4 e2       	ldi	r30, 0x24	; 36
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	80 81       	ld	r24, Z
     c90:	88 2f       	mov	r24, r24
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	9a 83       	std	Y+2, r25	; 0x02
     c96:	89 83       	std	Y+1, r24	; 0x01
	result|=(ADCH<<8);		//RESULT CONTAINGING THE HIGHER BITS OF THE ADC 10 BIT CHANNEL BY XOR-ING THE (LEFT SHIFTED BY 8 BITS)
     c98:	e5 e2       	ldi	r30, 0x25	; 37
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	80 81       	ld	r24, Z
     c9e:	88 2f       	mov	r24, r24
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	98 2f       	mov	r25, r24
     ca4:	88 27       	eor	r24, r24
     ca6:	9c 01       	movw	r18, r24
     ca8:	89 81       	ldd	r24, Y+1	; 0x01
     caa:	9a 81       	ldd	r25, Y+2	; 0x02
     cac:	82 2b       	or	r24, r18
     cae:	93 2b       	or	r25, r19
     cb0:	9a 83       	std	Y+2, r25	; 0x02
     cb2:	89 83       	std	Y+1, r24	; 0x01
	return result;
     cb4:	89 81       	ldd	r24, Y+1	; 0x01
     cb6:	9a 81       	ldd	r25, Y+2	; 0x02
}
     cb8:	0f 90       	pop	r0
     cba:	0f 90       	pop	r0
     cbc:	0f 90       	pop	r0
     cbe:	cf 91       	pop	r28
     cc0:	df 91       	pop	r29
     cc2:	08 95       	ret

00000cc4 <Dio_vidSetPinDir>:
#include"../Lib/Std_types.h"
#include"../Lib/Bit_math.h"
#include"Dio_int.h"
#include<avr/io.h>

void Dio_vidSetPinDir(u8 Pin, u8 Dir){
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	00 d0       	rcall	.+0      	; 0xcca <Dio_vidSetPinDir+0x6>
     cca:	00 d0       	rcall	.+0      	; 0xccc <Dio_vidSetPinDir+0x8>
     ccc:	00 d0       	rcall	.+0      	; 0xcce <Dio_vidSetPinDir+0xa>
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	8b 83       	std	Y+3, r24	; 0x03
     cd4:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
     cd6:	8b 81       	ldd	r24, Y+3	; 0x03
     cd8:	86 95       	lsr	r24
     cda:	86 95       	lsr	r24
     cdc:	86 95       	lsr	r24
     cde:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
     ce0:	8b 81       	ldd	r24, Y+3	; 0x03
     ce2:	87 70       	andi	r24, 0x07	; 7
     ce4:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	28 2f       	mov	r18, r24
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	3e 83       	std	Y+6, r19	; 0x06
     cee:	2d 83       	std	Y+5, r18	; 0x05
     cf0:	8d 81       	ldd	r24, Y+5	; 0x05
     cf2:	9e 81       	ldd	r25, Y+6	; 0x06
     cf4:	81 30       	cpi	r24, 0x01	; 1
     cf6:	91 05       	cpc	r25, r1
     cf8:	09 f4       	brne	.+2      	; 0xcfc <Dio_vidSetPinDir+0x38>
     cfa:	43 c0       	rjmp	.+134    	; 0xd82 <Dio_vidSetPinDir+0xbe>
     cfc:	2d 81       	ldd	r18, Y+5	; 0x05
     cfe:	3e 81       	ldd	r19, Y+6	; 0x06
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	2c f4       	brge	.+10     	; 0xd10 <Dio_vidSetPinDir+0x4c>
     d06:	8d 81       	ldd	r24, Y+5	; 0x05
     d08:	9e 81       	ldd	r25, Y+6	; 0x06
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	71 f0       	breq	.+28     	; 0xd2a <Dio_vidSetPinDir+0x66>
     d0e:	bc c0       	rjmp	.+376    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
     d10:	2d 81       	ldd	r18, Y+5	; 0x05
     d12:	3e 81       	ldd	r19, Y+6	; 0x06
     d14:	22 30       	cpi	r18, 0x02	; 2
     d16:	31 05       	cpc	r19, r1
     d18:	09 f4       	brne	.+2      	; 0xd1c <Dio_vidSetPinDir+0x58>
     d1a:	5f c0       	rjmp	.+190    	; 0xdda <Dio_vidSetPinDir+0x116>
     d1c:	8d 81       	ldd	r24, Y+5	; 0x05
     d1e:	9e 81       	ldd	r25, Y+6	; 0x06
     d20:	83 30       	cpi	r24, 0x03	; 3
     d22:	91 05       	cpc	r25, r1
     d24:	09 f4       	brne	.+2      	; 0xd28 <Dio_vidSetPinDir+0x64>
     d26:	85 c0       	rjmp	.+266    	; 0xe32 <Dio_vidSetPinDir+0x16e>
     d28:	af c0       	rjmp	.+350    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
	case 0:
		if(Dir==1){
     d2a:	8c 81       	ldd	r24, Y+4	; 0x04
     d2c:	81 30       	cpi	r24, 0x01	; 1
     d2e:	a1 f4       	brne	.+40     	; 0xd58 <Dio_vidSetPinDir+0x94>
			SET_BIT(DDRA,PinLoc);
     d30:	aa e3       	ldi	r26, 0x3A	; 58
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	ea e3       	ldi	r30, 0x3A	; 58
     d36:	f0 e0       	ldi	r31, 0x00	; 0
     d38:	80 81       	ld	r24, Z
     d3a:	48 2f       	mov	r20, r24
     d3c:	89 81       	ldd	r24, Y+1	; 0x01
     d3e:	28 2f       	mov	r18, r24
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	02 2e       	mov	r0, r18
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <Dio_vidSetPinDir+0x8a>
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	0a 94       	dec	r0
     d50:	e2 f7       	brpl	.-8      	; 0xd4a <Dio_vidSetPinDir+0x86>
     d52:	84 2b       	or	r24, r20
     d54:	8c 93       	st	X, r24
     d56:	98 c0       	rjmp	.+304    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRA,PinLoc);
     d58:	aa e3       	ldi	r26, 0x3A	; 58
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	ea e3       	ldi	r30, 0x3A	; 58
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	89 81       	ldd	r24, Y+1	; 0x01
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 2e       	mov	r0, r18
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <Dio_vidSetPinDir+0xb2>
     d72:	88 0f       	add	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	0a 94       	dec	r0
     d78:	e2 f7       	brpl	.-8      	; 0xd72 <Dio_vidSetPinDir+0xae>
     d7a:	80 95       	com	r24
     d7c:	84 23       	and	r24, r20
     d7e:	8c 93       	st	X, r24
     d80:	83 c0       	rjmp	.+262    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 1:
		if(Dir==1){
     d82:	8c 81       	ldd	r24, Y+4	; 0x04
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	a1 f4       	brne	.+40     	; 0xdb0 <Dio_vidSetPinDir+0xec>
			SET_BIT(DDRB,PinLoc);
     d88:	a7 e3       	ldi	r26, 0x37	; 55
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	e7 e3       	ldi	r30, 0x37	; 55
     d8e:	f0 e0       	ldi	r31, 0x00	; 0
     d90:	80 81       	ld	r24, Z
     d92:	48 2f       	mov	r20, r24
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	28 2f       	mov	r18, r24
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	02 2e       	mov	r0, r18
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <Dio_vidSetPinDir+0xe2>
     da2:	88 0f       	add	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	0a 94       	dec	r0
     da8:	e2 f7       	brpl	.-8      	; 0xda2 <Dio_vidSetPinDir+0xde>
     daa:	84 2b       	or	r24, r20
     dac:	8c 93       	st	X, r24
     dae:	6c c0       	rjmp	.+216    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRB,PinLoc);
     db0:	a7 e3       	ldi	r26, 0x37	; 55
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	e7 e3       	ldi	r30, 0x37	; 55
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	48 2f       	mov	r20, r24
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	28 2f       	mov	r18, r24
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	81 e0       	ldi	r24, 0x01	; 1
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	02 2e       	mov	r0, r18
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <Dio_vidSetPinDir+0x10a>
     dca:	88 0f       	add	r24, r24
     dcc:	99 1f       	adc	r25, r25
     dce:	0a 94       	dec	r0
     dd0:	e2 f7       	brpl	.-8      	; 0xdca <Dio_vidSetPinDir+0x106>
     dd2:	80 95       	com	r24
     dd4:	84 23       	and	r24, r20
     dd6:	8c 93       	st	X, r24
     dd8:	57 c0       	rjmp	.+174    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 2:
		if(Dir==1){
     dda:	8c 81       	ldd	r24, Y+4	; 0x04
     ddc:	81 30       	cpi	r24, 0x01	; 1
     dde:	a1 f4       	brne	.+40     	; 0xe08 <Dio_vidSetPinDir+0x144>
			SET_BIT(DDRC,PinLoc);
     de0:	a4 e3       	ldi	r26, 0x34	; 52
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e4 e3       	ldi	r30, 0x34	; 52
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	48 2f       	mov	r20, r24
     dec:	89 81       	ldd	r24, Y+1	; 0x01
     dee:	28 2f       	mov	r18, r24
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	02 2e       	mov	r0, r18
     df8:	02 c0       	rjmp	.+4      	; 0xdfe <Dio_vidSetPinDir+0x13a>
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	0a 94       	dec	r0
     e00:	e2 f7       	brpl	.-8      	; 0xdfa <Dio_vidSetPinDir+0x136>
     e02:	84 2b       	or	r24, r20
     e04:	8c 93       	st	X, r24
     e06:	40 c0       	rjmp	.+128    	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRC,PinLoc);
     e08:	a4 e3       	ldi	r26, 0x34	; 52
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	e4 e3       	ldi	r30, 0x34	; 52
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	80 81       	ld	r24, Z
     e12:	48 2f       	mov	r20, r24
     e14:	89 81       	ldd	r24, Y+1	; 0x01
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 2e       	mov	r0, r18
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <Dio_vidSetPinDir+0x162>
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	0a 94       	dec	r0
     e28:	e2 f7       	brpl	.-8      	; 0xe22 <Dio_vidSetPinDir+0x15e>
     e2a:	80 95       	com	r24
     e2c:	84 23       	and	r24, r20
     e2e:	8c 93       	st	X, r24
     e30:	2b c0       	rjmp	.+86     	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 3:
		if(Dir==1){
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	81 30       	cpi	r24, 0x01	; 1
     e36:	a1 f4       	brne	.+40     	; 0xe60 <Dio_vidSetPinDir+0x19c>
			SET_BIT(DDRD,PinLoc);
     e38:	a1 e3       	ldi	r26, 0x31	; 49
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e1 e3       	ldi	r30, 0x31	; 49
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	48 2f       	mov	r20, r24
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	28 2f       	mov	r18, r24
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 2e       	mov	r0, r18
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <Dio_vidSetPinDir+0x192>
     e52:	88 0f       	add	r24, r24
     e54:	99 1f       	adc	r25, r25
     e56:	0a 94       	dec	r0
     e58:	e2 f7       	brpl	.-8      	; 0xe52 <Dio_vidSetPinDir+0x18e>
     e5a:	84 2b       	or	r24, r20
     e5c:	8c 93       	st	X, r24
     e5e:	14 c0       	rjmp	.+40     	; 0xe88 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRD,PinLoc);
     e60:	a1 e3       	ldi	r26, 0x31	; 49
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	e1 e3       	ldi	r30, 0x31	; 49
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	80 81       	ld	r24, Z
     e6a:	48 2f       	mov	r20, r24
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 2e       	mov	r0, r18
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <Dio_vidSetPinDir+0x1ba>
     e7a:	88 0f       	add	r24, r24
     e7c:	99 1f       	adc	r25, r25
     e7e:	0a 94       	dec	r0
     e80:	e2 f7       	brpl	.-8      	; 0xe7a <Dio_vidSetPinDir+0x1b6>
     e82:	80 95       	com	r24
     e84:	84 23       	and	r24, r20
     e86:	8c 93       	st	X, r24
		}
		break;
	}
}
     e88:	26 96       	adiw	r28, 0x06	; 6
     e8a:	0f b6       	in	r0, 0x3f	; 63
     e8c:	f8 94       	cli
     e8e:	de bf       	out	0x3e, r29	; 62
     e90:	0f be       	out	0x3f, r0	; 63
     e92:	cd bf       	out	0x3d, r28	; 61
     e94:	cf 91       	pop	r28
     e96:	df 91       	pop	r29
     e98:	08 95       	ret

00000e9a <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin, u8 Val){
     e9a:	df 93       	push	r29
     e9c:	cf 93       	push	r28
     e9e:	00 d0       	rcall	.+0      	; 0xea0 <Dio_vidSetPinVal+0x6>
     ea0:	00 d0       	rcall	.+0      	; 0xea2 <Dio_vidSetPinVal+0x8>
     ea2:	00 d0       	rcall	.+0      	; 0xea4 <Dio_vidSetPinVal+0xa>
     ea4:	cd b7       	in	r28, 0x3d	; 61
     ea6:	de b7       	in	r29, 0x3e	; 62
     ea8:	8b 83       	std	Y+3, r24	; 0x03
     eaa:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
     eac:	8b 81       	ldd	r24, Y+3	; 0x03
     eae:	86 95       	lsr	r24
     eb0:	86 95       	lsr	r24
     eb2:	86 95       	lsr	r24
     eb4:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
     eb6:	8b 81       	ldd	r24, Y+3	; 0x03
     eb8:	87 70       	andi	r24, 0x07	; 7
     eba:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
     ebc:	8a 81       	ldd	r24, Y+2	; 0x02
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	3e 83       	std	Y+6, r19	; 0x06
     ec4:	2d 83       	std	Y+5, r18	; 0x05
     ec6:	8d 81       	ldd	r24, Y+5	; 0x05
     ec8:	9e 81       	ldd	r25, Y+6	; 0x06
     eca:	81 30       	cpi	r24, 0x01	; 1
     ecc:	91 05       	cpc	r25, r1
     ece:	09 f4       	brne	.+2      	; 0xed2 <Dio_vidSetPinVal+0x38>
     ed0:	43 c0       	rjmp	.+134    	; 0xf58 <Dio_vidSetPinVal+0xbe>
     ed2:	2d 81       	ldd	r18, Y+5	; 0x05
     ed4:	3e 81       	ldd	r19, Y+6	; 0x06
     ed6:	22 30       	cpi	r18, 0x02	; 2
     ed8:	31 05       	cpc	r19, r1
     eda:	2c f4       	brge	.+10     	; 0xee6 <Dio_vidSetPinVal+0x4c>
     edc:	8d 81       	ldd	r24, Y+5	; 0x05
     ede:	9e 81       	ldd	r25, Y+6	; 0x06
     ee0:	00 97       	sbiw	r24, 0x00	; 0
     ee2:	71 f0       	breq	.+28     	; 0xf00 <Dio_vidSetPinVal+0x66>
     ee4:	bc c0       	rjmp	.+376    	; 0x105e <Dio_vidSetPinVal+0x1c4>
     ee6:	2d 81       	ldd	r18, Y+5	; 0x05
     ee8:	3e 81       	ldd	r19, Y+6	; 0x06
     eea:	22 30       	cpi	r18, 0x02	; 2
     eec:	31 05       	cpc	r19, r1
     eee:	09 f4       	brne	.+2      	; 0xef2 <Dio_vidSetPinVal+0x58>
     ef0:	5f c0       	rjmp	.+190    	; 0xfb0 <Dio_vidSetPinVal+0x116>
     ef2:	8d 81       	ldd	r24, Y+5	; 0x05
     ef4:	9e 81       	ldd	r25, Y+6	; 0x06
     ef6:	83 30       	cpi	r24, 0x03	; 3
     ef8:	91 05       	cpc	r25, r1
     efa:	09 f4       	brne	.+2      	; 0xefe <Dio_vidSetPinVal+0x64>
     efc:	85 c0       	rjmp	.+266    	; 0x1008 <Dio_vidSetPinVal+0x16e>
     efe:	af c0       	rjmp	.+350    	; 0x105e <Dio_vidSetPinVal+0x1c4>
	case 0:
		if(Val==1){
     f00:	8c 81       	ldd	r24, Y+4	; 0x04
     f02:	81 30       	cpi	r24, 0x01	; 1
     f04:	a1 f4       	brne	.+40     	; 0xf2e <Dio_vidSetPinVal+0x94>
			SET_BIT(PORTA,PinLoc);
     f06:	ab e3       	ldi	r26, 0x3B	; 59
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	eb e3       	ldi	r30, 0x3B	; 59
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	48 2f       	mov	r20, r24
     f12:	89 81       	ldd	r24, Y+1	; 0x01
     f14:	28 2f       	mov	r18, r24
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	02 2e       	mov	r0, r18
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <Dio_vidSetPinVal+0x8a>
     f20:	88 0f       	add	r24, r24
     f22:	99 1f       	adc	r25, r25
     f24:	0a 94       	dec	r0
     f26:	e2 f7       	brpl	.-8      	; 0xf20 <Dio_vidSetPinVal+0x86>
     f28:	84 2b       	or	r24, r20
     f2a:	8c 93       	st	X, r24
     f2c:	98 c0       	rjmp	.+304    	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTA,PinLoc);
     f2e:	ab e3       	ldi	r26, 0x3B	; 59
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	eb e3       	ldi	r30, 0x3B	; 59
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	80 81       	ld	r24, Z
     f38:	48 2f       	mov	r20, r24
     f3a:	89 81       	ldd	r24, Y+1	; 0x01
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 2e       	mov	r0, r18
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <Dio_vidSetPinVal+0xb2>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <Dio_vidSetPinVal+0xae>
     f50:	80 95       	com	r24
     f52:	84 23       	and	r24, r20
     f54:	8c 93       	st	X, r24
     f56:	83 c0       	rjmp	.+262    	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 1:
		if(Val==1){
     f58:	8c 81       	ldd	r24, Y+4	; 0x04
     f5a:	81 30       	cpi	r24, 0x01	; 1
     f5c:	a1 f4       	brne	.+40     	; 0xf86 <Dio_vidSetPinVal+0xec>
			SET_BIT(PORTB,PinLoc);
     f5e:	a8 e3       	ldi	r26, 0x38	; 56
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e8 e3       	ldi	r30, 0x38	; 56
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	48 2f       	mov	r20, r24
     f6a:	89 81       	ldd	r24, Y+1	; 0x01
     f6c:	28 2f       	mov	r18, r24
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	02 2e       	mov	r0, r18
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <Dio_vidSetPinVal+0xe2>
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	0a 94       	dec	r0
     f7e:	e2 f7       	brpl	.-8      	; 0xf78 <Dio_vidSetPinVal+0xde>
     f80:	84 2b       	or	r24, r20
     f82:	8c 93       	st	X, r24
     f84:	6c c0       	rjmp	.+216    	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTB,PinLoc);
     f86:	a8 e3       	ldi	r26, 0x38	; 56
     f88:	b0 e0       	ldi	r27, 0x00	; 0
     f8a:	e8 e3       	ldi	r30, 0x38	; 56
     f8c:	f0 e0       	ldi	r31, 0x00	; 0
     f8e:	80 81       	ld	r24, Z
     f90:	48 2f       	mov	r20, r24
     f92:	89 81       	ldd	r24, Y+1	; 0x01
     f94:	28 2f       	mov	r18, r24
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	02 2e       	mov	r0, r18
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <Dio_vidSetPinVal+0x10a>
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	0a 94       	dec	r0
     fa6:	e2 f7       	brpl	.-8      	; 0xfa0 <Dio_vidSetPinVal+0x106>
     fa8:	80 95       	com	r24
     faa:	84 23       	and	r24, r20
     fac:	8c 93       	st	X, r24
     fae:	57 c0       	rjmp	.+174    	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 2:
		if(Val==1){
     fb0:	8c 81       	ldd	r24, Y+4	; 0x04
     fb2:	81 30       	cpi	r24, 0x01	; 1
     fb4:	a1 f4       	brne	.+40     	; 0xfde <Dio_vidSetPinVal+0x144>
			SET_BIT(PORTC,PinLoc);
     fb6:	a5 e3       	ldi	r26, 0x35	; 53
     fb8:	b0 e0       	ldi	r27, 0x00	; 0
     fba:	e5 e3       	ldi	r30, 0x35	; 53
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	80 81       	ld	r24, Z
     fc0:	48 2f       	mov	r20, r24
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	81 e0       	ldi	r24, 0x01	; 1
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	02 2e       	mov	r0, r18
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <Dio_vidSetPinVal+0x13a>
     fd0:	88 0f       	add	r24, r24
     fd2:	99 1f       	adc	r25, r25
     fd4:	0a 94       	dec	r0
     fd6:	e2 f7       	brpl	.-8      	; 0xfd0 <Dio_vidSetPinVal+0x136>
     fd8:	84 2b       	or	r24, r20
     fda:	8c 93       	st	X, r24
     fdc:	40 c0       	rjmp	.+128    	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTC,PinLoc);
     fde:	a5 e3       	ldi	r26, 0x35	; 53
     fe0:	b0 e0       	ldi	r27, 0x00	; 0
     fe2:	e5 e3       	ldi	r30, 0x35	; 53
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	80 81       	ld	r24, Z
     fe8:	48 2f       	mov	r20, r24
     fea:	89 81       	ldd	r24, Y+1	; 0x01
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	02 2e       	mov	r0, r18
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <Dio_vidSetPinVal+0x162>
     ff8:	88 0f       	add	r24, r24
     ffa:	99 1f       	adc	r25, r25
     ffc:	0a 94       	dec	r0
     ffe:	e2 f7       	brpl	.-8      	; 0xff8 <Dio_vidSetPinVal+0x15e>
    1000:	80 95       	com	r24
    1002:	84 23       	and	r24, r20
    1004:	8c 93       	st	X, r24
    1006:	2b c0       	rjmp	.+86     	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 3:
		if(Val==1){
    1008:	8c 81       	ldd	r24, Y+4	; 0x04
    100a:	81 30       	cpi	r24, 0x01	; 1
    100c:	a1 f4       	brne	.+40     	; 0x1036 <Dio_vidSetPinVal+0x19c>
			SET_BIT(PORTD,PinLoc);
    100e:	a2 e3       	ldi	r26, 0x32	; 50
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	e2 e3       	ldi	r30, 0x32	; 50
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	48 2f       	mov	r20, r24
    101a:	89 81       	ldd	r24, Y+1	; 0x01
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	02 2e       	mov	r0, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <Dio_vidSetPinVal+0x192>
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	0a 94       	dec	r0
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <Dio_vidSetPinVal+0x18e>
    1030:	84 2b       	or	r24, r20
    1032:	8c 93       	st	X, r24
    1034:	14 c0       	rjmp	.+40     	; 0x105e <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTD,PinLoc);
    1036:	a2 e3       	ldi	r26, 0x32	; 50
    1038:	b0 e0       	ldi	r27, 0x00	; 0
    103a:	e2 e3       	ldi	r30, 0x32	; 50
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	80 81       	ld	r24, Z
    1040:	48 2f       	mov	r20, r24
    1042:	89 81       	ldd	r24, Y+1	; 0x01
    1044:	28 2f       	mov	r18, r24
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	02 2e       	mov	r0, r18
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <Dio_vidSetPinVal+0x1ba>
    1050:	88 0f       	add	r24, r24
    1052:	99 1f       	adc	r25, r25
    1054:	0a 94       	dec	r0
    1056:	e2 f7       	brpl	.-8      	; 0x1050 <Dio_vidSetPinVal+0x1b6>
    1058:	80 95       	com	r24
    105a:	84 23       	and	r24, r20
    105c:	8c 93       	st	X, r24
		}
		break;
	}
}
    105e:	26 96       	adiw	r28, 0x06	; 6
    1060:	0f b6       	in	r0, 0x3f	; 63
    1062:	f8 94       	cli
    1064:	de bf       	out	0x3e, r29	; 62
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	cd bf       	out	0x3d, r28	; 61
    106a:	cf 91       	pop	r28
    106c:	df 91       	pop	r29
    106e:	08 95       	ret

00001070 <Keypad_vidInit>:
#undef F_CPU
#define F_CPU 8000000
#include<util/delay.h>
#include<avr/io.h>

void Keypad_vidInit(void){
    1070:	df 93       	push	r29
    1072:	cf 93       	push	r28
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
	Keypad_PORT=0b00001111;	//Setting upper 4 bits to output and lower 4 to input
    1078:	e1 e3       	ldi	r30, 0x31	; 49
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	8f e0       	ldi	r24, 0x0F	; 15
    107e:	80 83       	st	Z, r24
	Keypad_PIN=0b11111111;	//Pulling up resistors for lower 4 bits and passing 5v through upper 4 bits
    1080:	e2 e3       	ldi	r30, 0x32	; 50
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	8f ef       	ldi	r24, 0xFF	; 255
    1086:	80 83       	st	Z, r24
	//>Indicating that we are not scanning for any button clicks right now
}
    1088:	cf 91       	pop	r28
    108a:	df 91       	pop	r29
    108c:	08 95       	ret

0000108e <Keypad_u8GetKey>:

u8 Keypad_u8GetKey(void){
    108e:	df 93       	push	r29
    1090:	cf 93       	push	r28
    1092:	cd b7       	in	r28, 0x3d	; 61
    1094:	de b7       	in	r29, 0x3e	; 62
    1096:	2a 97       	sbiw	r28, 0x0a	; 10
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	f8 94       	cli
    109c:	de bf       	out	0x3e, r29	; 62
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	cd bf       	out	0x3d, r28	; 61
	u8 temp;
	CLR_BIT(Keypad_PIN,0);
    10a2:	a2 e3       	ldi	r26, 0x32	; 50
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e2 e3       	ldi	r30, 0x32	; 50
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	80 81       	ld	r24, Z
    10ac:	8e 7f       	andi	r24, 0xFE	; 254
    10ae:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    10b0:	a2 e3       	ldi	r26, 0x32	; 50
    10b2:	b0 e0       	ldi	r27, 0x00	; 0
    10b4:	e2 e3       	ldi	r30, 0x32	; 50
    10b6:	f0 e0       	ldi	r31, 0x00	; 0
    10b8:	80 81       	ld	r24, Z
    10ba:	82 60       	ori	r24, 0x02	; 2
    10bc:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    10be:	a2 e3       	ldi	r26, 0x32	; 50
    10c0:	b0 e0       	ldi	r27, 0x00	; 0
    10c2:	e2 e3       	ldi	r30, 0x32	; 50
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	80 81       	ld	r24, Z
    10c8:	84 60       	ori	r24, 0x04	; 4
    10ca:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    10cc:	a2 e3       	ldi	r26, 0x32	; 50
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	e2 e3       	ldi	r30, 0x32	; 50
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	88 60       	ori	r24, 0x08	; 8
    10d8:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000); //Masking to get values of input pins solely
    10da:	e0 e3       	ldi	r30, 0x30	; 48
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	80 7f       	andi	r24, 0xF0	; 240
    10e2:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    10e4:	89 81       	ldd	r24, Y+1	; 0x01
    10e6:	28 2f       	mov	r18, r24
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	3a 87       	std	Y+10, r19	; 0x0a
    10ec:	29 87       	std	Y+9, r18	; 0x09
    10ee:	89 85       	ldd	r24, Y+9	; 0x09
    10f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    10f2:	80 3b       	cpi	r24, 0xB0	; 176
    10f4:	91 05       	cpc	r25, r1
    10f6:	d9 f0       	breq	.+54     	; 0x112e <Keypad_u8GetKey+0xa0>
    10f8:	29 85       	ldd	r18, Y+9	; 0x09
    10fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    10fc:	21 3b       	cpi	r18, 0xB1	; 177
    10fe:	31 05       	cpc	r19, r1
    1100:	34 f4       	brge	.+12     	; 0x110e <Keypad_u8GetKey+0x80>
    1102:	89 85       	ldd	r24, Y+9	; 0x09
    1104:	9a 85       	ldd	r25, Y+10	; 0x0a
    1106:	80 37       	cpi	r24, 0x70	; 112
    1108:	91 05       	cpc	r25, r1
    110a:	a1 f0       	breq	.+40     	; 0x1134 <Keypad_u8GetKey+0xa6>
    110c:	16 c0       	rjmp	.+44     	; 0x113a <Keypad_u8GetKey+0xac>
    110e:	29 85       	ldd	r18, Y+9	; 0x09
    1110:	3a 85       	ldd	r19, Y+10	; 0x0a
    1112:	20 3d       	cpi	r18, 0xD0	; 208
    1114:	31 05       	cpc	r19, r1
    1116:	41 f0       	breq	.+16     	; 0x1128 <Keypad_u8GetKey+0x9a>
    1118:	89 85       	ldd	r24, Y+9	; 0x09
    111a:	9a 85       	ldd	r25, Y+10	; 0x0a
    111c:	80 3e       	cpi	r24, 0xE0	; 224
    111e:	91 05       	cpc	r25, r1
    1120:	61 f4       	brne	.+24     	; 0x113a <Keypad_u8GetKey+0xac>
	case 0b11100000:
		return 1;
    1122:	91 e0       	ldi	r25, 0x01	; 1
    1124:	98 87       	std	Y+8, r25	; 0x08
    1126:	ee c0       	rjmp	.+476    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 2;
    1128:	22 e0       	ldi	r18, 0x02	; 2
    112a:	28 87       	std	Y+8, r18	; 0x08
    112c:	eb c0       	rjmp	.+470    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 3;
    112e:	33 e0       	ldi	r19, 0x03	; 3
    1130:	38 87       	std	Y+8, r19	; 0x08
    1132:	e8 c0       	rjmp	.+464    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '+';
    1134:	8b e2       	ldi	r24, 0x2B	; 43
    1136:	88 87       	std	Y+8, r24	; 0x08
    1138:	e5 c0       	rjmp	.+458    	; 0x1304 <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    113a:	a2 e3       	ldi	r26, 0x32	; 50
    113c:	b0 e0       	ldi	r27, 0x00	; 0
    113e:	e2 e3       	ldi	r30, 0x32	; 50
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	80 81       	ld	r24, Z
    1144:	81 60       	ori	r24, 0x01	; 1
    1146:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,1);
    1148:	a2 e3       	ldi	r26, 0x32	; 50
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	e2 e3       	ldi	r30, 0x32	; 50
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	80 81       	ld	r24, Z
    1152:	8d 7f       	andi	r24, 0xFD	; 253
    1154:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    1156:	a2 e3       	ldi	r26, 0x32	; 50
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e2 e3       	ldi	r30, 0x32	; 50
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	80 81       	ld	r24, Z
    1160:	84 60       	ori	r24, 0x04	; 4
    1162:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    1164:	a2 e3       	ldi	r26, 0x32	; 50
    1166:	b0 e0       	ldi	r27, 0x00	; 0
    1168:	e2 e3       	ldi	r30, 0x32	; 50
    116a:	f0 e0       	ldi	r31, 0x00	; 0
    116c:	80 81       	ld	r24, Z
    116e:	88 60       	ori	r24, 0x08	; 8
    1170:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    1172:	e0 e3       	ldi	r30, 0x30	; 48
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	80 7f       	andi	r24, 0xF0	; 240
    117a:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    117c:	89 81       	ldd	r24, Y+1	; 0x01
    117e:	28 2f       	mov	r18, r24
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	3f 83       	std	Y+7, r19	; 0x07
    1184:	2e 83       	std	Y+6, r18	; 0x06
    1186:	8e 81       	ldd	r24, Y+6	; 0x06
    1188:	9f 81       	ldd	r25, Y+7	; 0x07
    118a:	80 3b       	cpi	r24, 0xB0	; 176
    118c:	91 05       	cpc	r25, r1
    118e:	d9 f0       	breq	.+54     	; 0x11c6 <Keypad_u8GetKey+0x138>
    1190:	2e 81       	ldd	r18, Y+6	; 0x06
    1192:	3f 81       	ldd	r19, Y+7	; 0x07
    1194:	21 3b       	cpi	r18, 0xB1	; 177
    1196:	31 05       	cpc	r19, r1
    1198:	34 f4       	brge	.+12     	; 0x11a6 <Keypad_u8GetKey+0x118>
    119a:	8e 81       	ldd	r24, Y+6	; 0x06
    119c:	9f 81       	ldd	r25, Y+7	; 0x07
    119e:	80 37       	cpi	r24, 0x70	; 112
    11a0:	91 05       	cpc	r25, r1
    11a2:	a1 f0       	breq	.+40     	; 0x11cc <Keypad_u8GetKey+0x13e>
    11a4:	16 c0       	rjmp	.+44     	; 0x11d2 <Keypad_u8GetKey+0x144>
    11a6:	2e 81       	ldd	r18, Y+6	; 0x06
    11a8:	3f 81       	ldd	r19, Y+7	; 0x07
    11aa:	20 3d       	cpi	r18, 0xD0	; 208
    11ac:	31 05       	cpc	r19, r1
    11ae:	41 f0       	breq	.+16     	; 0x11c0 <Keypad_u8GetKey+0x132>
    11b0:	8e 81       	ldd	r24, Y+6	; 0x06
    11b2:	9f 81       	ldd	r25, Y+7	; 0x07
    11b4:	80 3e       	cpi	r24, 0xE0	; 224
    11b6:	91 05       	cpc	r25, r1
    11b8:	61 f4       	brne	.+24     	; 0x11d2 <Keypad_u8GetKey+0x144>
	case 0b11100000:
		return 4;
    11ba:	94 e0       	ldi	r25, 0x04	; 4
    11bc:	98 87       	std	Y+8, r25	; 0x08
    11be:	a2 c0       	rjmp	.+324    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 5;
    11c0:	25 e0       	ldi	r18, 0x05	; 5
    11c2:	28 87       	std	Y+8, r18	; 0x08
    11c4:	9f c0       	rjmp	.+318    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 6;
    11c6:	36 e0       	ldi	r19, 0x06	; 6
    11c8:	38 87       	std	Y+8, r19	; 0x08
    11ca:	9c c0       	rjmp	.+312    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '-';
    11cc:	8d e2       	ldi	r24, 0x2D	; 45
    11ce:	88 87       	std	Y+8, r24	; 0x08
    11d0:	99 c0       	rjmp	.+306    	; 0x1304 <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    11d2:	a2 e3       	ldi	r26, 0x32	; 50
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	e2 e3       	ldi	r30, 0x32	; 50
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	80 81       	ld	r24, Z
    11dc:	81 60       	ori	r24, 0x01	; 1
    11de:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    11e0:	a2 e3       	ldi	r26, 0x32	; 50
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	e2 e3       	ldi	r30, 0x32	; 50
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	80 81       	ld	r24, Z
    11ea:	82 60       	ori	r24, 0x02	; 2
    11ec:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,2);
    11ee:	a2 e3       	ldi	r26, 0x32	; 50
    11f0:	b0 e0       	ldi	r27, 0x00	; 0
    11f2:	e2 e3       	ldi	r30, 0x32	; 50
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	80 81       	ld	r24, Z
    11f8:	8b 7f       	andi	r24, 0xFB	; 251
    11fa:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    11fc:	a2 e3       	ldi	r26, 0x32	; 50
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	e2 e3       	ldi	r30, 0x32	; 50
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	88 60       	ori	r24, 0x08	; 8
    1208:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    120a:	e0 e3       	ldi	r30, 0x30	; 48
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	80 7f       	andi	r24, 0xF0	; 240
    1212:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    1214:	89 81       	ldd	r24, Y+1	; 0x01
    1216:	28 2f       	mov	r18, r24
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	3d 83       	std	Y+5, r19	; 0x05
    121c:	2c 83       	std	Y+4, r18	; 0x04
    121e:	8c 81       	ldd	r24, Y+4	; 0x04
    1220:	9d 81       	ldd	r25, Y+5	; 0x05
    1222:	80 3b       	cpi	r24, 0xB0	; 176
    1224:	91 05       	cpc	r25, r1
    1226:	d9 f0       	breq	.+54     	; 0x125e <Keypad_u8GetKey+0x1d0>
    1228:	2c 81       	ldd	r18, Y+4	; 0x04
    122a:	3d 81       	ldd	r19, Y+5	; 0x05
    122c:	21 3b       	cpi	r18, 0xB1	; 177
    122e:	31 05       	cpc	r19, r1
    1230:	34 f4       	brge	.+12     	; 0x123e <Keypad_u8GetKey+0x1b0>
    1232:	8c 81       	ldd	r24, Y+4	; 0x04
    1234:	9d 81       	ldd	r25, Y+5	; 0x05
    1236:	80 37       	cpi	r24, 0x70	; 112
    1238:	91 05       	cpc	r25, r1
    123a:	a1 f0       	breq	.+40     	; 0x1264 <Keypad_u8GetKey+0x1d6>
    123c:	16 c0       	rjmp	.+44     	; 0x126a <Keypad_u8GetKey+0x1dc>
    123e:	2c 81       	ldd	r18, Y+4	; 0x04
    1240:	3d 81       	ldd	r19, Y+5	; 0x05
    1242:	20 3d       	cpi	r18, 0xD0	; 208
    1244:	31 05       	cpc	r19, r1
    1246:	41 f0       	breq	.+16     	; 0x1258 <Keypad_u8GetKey+0x1ca>
    1248:	8c 81       	ldd	r24, Y+4	; 0x04
    124a:	9d 81       	ldd	r25, Y+5	; 0x05
    124c:	80 3e       	cpi	r24, 0xE0	; 224
    124e:	91 05       	cpc	r25, r1
    1250:	61 f4       	brne	.+24     	; 0x126a <Keypad_u8GetKey+0x1dc>
	case 0b11100000:
		return 7;
    1252:	97 e0       	ldi	r25, 0x07	; 7
    1254:	98 87       	std	Y+8, r25	; 0x08
    1256:	56 c0       	rjmp	.+172    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 8;
    1258:	28 e0       	ldi	r18, 0x08	; 8
    125a:	28 87       	std	Y+8, r18	; 0x08
    125c:	53 c0       	rjmp	.+166    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 9;
    125e:	39 e0       	ldi	r19, 0x09	; 9
    1260:	38 87       	std	Y+8, r19	; 0x08
    1262:	50 c0       	rjmp	.+160    	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '*';
    1264:	8a e2       	ldi	r24, 0x2A	; 42
    1266:	88 87       	std	Y+8, r24	; 0x08
    1268:	4d c0       	rjmp	.+154    	; 0x1304 <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    126a:	a2 e3       	ldi	r26, 0x32	; 50
    126c:	b0 e0       	ldi	r27, 0x00	; 0
    126e:	e2 e3       	ldi	r30, 0x32	; 50
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	80 81       	ld	r24, Z
    1274:	81 60       	ori	r24, 0x01	; 1
    1276:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    1278:	a2 e3       	ldi	r26, 0x32	; 50
    127a:	b0 e0       	ldi	r27, 0x00	; 0
    127c:	e2 e3       	ldi	r30, 0x32	; 50
    127e:	f0 e0       	ldi	r31, 0x00	; 0
    1280:	80 81       	ld	r24, Z
    1282:	82 60       	ori	r24, 0x02	; 2
    1284:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    1286:	a2 e3       	ldi	r26, 0x32	; 50
    1288:	b0 e0       	ldi	r27, 0x00	; 0
    128a:	e2 e3       	ldi	r30, 0x32	; 50
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	80 81       	ld	r24, Z
    1290:	84 60       	ori	r24, 0x04	; 4
    1292:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,3);
    1294:	a2 e3       	ldi	r26, 0x32	; 50
    1296:	b0 e0       	ldi	r27, 0x00	; 0
    1298:	e2 e3       	ldi	r30, 0x32	; 50
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	80 81       	ld	r24, Z
    129e:	87 7f       	andi	r24, 0xF7	; 247
    12a0:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    12a2:	e0 e3       	ldi	r30, 0x30	; 48
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	80 81       	ld	r24, Z
    12a8:	80 7f       	andi	r24, 0xF0	; 240
    12aa:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    12ac:	89 81       	ldd	r24, Y+1	; 0x01
    12ae:	28 2f       	mov	r18, r24
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	3b 83       	std	Y+3, r19	; 0x03
    12b4:	2a 83       	std	Y+2, r18	; 0x02
    12b6:	8a 81       	ldd	r24, Y+2	; 0x02
    12b8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ba:	80 3b       	cpi	r24, 0xB0	; 176
    12bc:	91 05       	cpc	r25, r1
    12be:	d1 f0       	breq	.+52     	; 0x12f4 <Keypad_u8GetKey+0x266>
    12c0:	2a 81       	ldd	r18, Y+2	; 0x02
    12c2:	3b 81       	ldd	r19, Y+3	; 0x03
    12c4:	21 3b       	cpi	r18, 0xB1	; 177
    12c6:	31 05       	cpc	r19, r1
    12c8:	34 f4       	brge	.+12     	; 0x12d6 <Keypad_u8GetKey+0x248>
    12ca:	8a 81       	ldd	r24, Y+2	; 0x02
    12cc:	9b 81       	ldd	r25, Y+3	; 0x03
    12ce:	80 37       	cpi	r24, 0x70	; 112
    12d0:	91 05       	cpc	r25, r1
    12d2:	99 f0       	breq	.+38     	; 0x12fa <Keypad_u8GetKey+0x26c>
    12d4:	15 c0       	rjmp	.+42     	; 0x1300 <Keypad_u8GetKey+0x272>
    12d6:	2a 81       	ldd	r18, Y+2	; 0x02
    12d8:	3b 81       	ldd	r19, Y+3	; 0x03
    12da:	20 3d       	cpi	r18, 0xD0	; 208
    12dc:	31 05       	cpc	r19, r1
    12de:	41 f0       	breq	.+16     	; 0x12f0 <Keypad_u8GetKey+0x262>
    12e0:	8a 81       	ldd	r24, Y+2	; 0x02
    12e2:	9b 81       	ldd	r25, Y+3	; 0x03
    12e4:	80 3e       	cpi	r24, 0xE0	; 224
    12e6:	91 05       	cpc	r25, r1
    12e8:	59 f4       	brne	.+22     	; 0x1300 <Keypad_u8GetKey+0x272>
	case 0b11100000:
		return '#';
    12ea:	93 e2       	ldi	r25, 0x23	; 35
    12ec:	98 87       	std	Y+8, r25	; 0x08
    12ee:	0a c0       	rjmp	.+20     	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 0;
    12f0:	18 86       	std	Y+8, r1	; 0x08
    12f2:	08 c0       	rjmp	.+16     	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return '=';
    12f4:	2d e3       	ldi	r18, 0x3D	; 61
    12f6:	28 87       	std	Y+8, r18	; 0x08
    12f8:	05 c0       	rjmp	.+10     	; 0x1304 <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '/';
    12fa:	3f e2       	ldi	r19, 0x2F	; 47
    12fc:	38 87       	std	Y+8, r19	; 0x08
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <Keypad_u8GetKey+0x276>
	}
	return KEYPAD_u8NO_KEY;
    1300:	8f ef       	ldi	r24, 0xFF	; 255
    1302:	88 87       	std	Y+8, r24	; 0x08
    1304:	88 85       	ldd	r24, Y+8	; 0x08
}
    1306:	2a 96       	adiw	r28, 0x0a	; 10
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	de bf       	out	0x3e, r29	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	cd bf       	out	0x3d, r28	; 61
    1312:	cf 91       	pop	r28
    1314:	df 91       	pop	r29
    1316:	08 95       	ret

00001318 <Lcd_vidSendCommand>:
#include"Dio_int.h"
#include"Lcd_cfg.h"
#include"Lcd_int.h"


void Lcd_vidSendCommand(u8 Cmd){
    1318:	df 93       	push	r29
    131a:	cf 93       	push	r28
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
    1320:	2f 97       	sbiw	r28, 0x0f	; 15
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
    132c:	8f 87       	std	Y+15, r24	; 0x0f

	Dio_vidSetPinVal(LCD_u8RS_PIN,DIO_u8LOW);  //RS Pin cleared
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	60 e0       	ldi	r22, 0x00	; 0
    1332:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN,DIO_u8LOW);  //RW Pin cleared because we always wanna write
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	60 e0       	ldi	r22, 0x00	; 0
    133a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D0_PIN,GET_BIT(Cmd,0));
    133e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1340:	98 2f       	mov	r25, r24
    1342:	91 70       	andi	r25, 0x01	; 1
    1344:	80 e1       	ldi	r24, 0x10	; 16
    1346:	69 2f       	mov	r22, r25
    1348:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN,GET_BIT(Cmd,1));
    134c:	8f 85       	ldd	r24, Y+15	; 0x0f
    134e:	86 95       	lsr	r24
    1350:	98 2f       	mov	r25, r24
    1352:	91 70       	andi	r25, 0x01	; 1
    1354:	81 e1       	ldi	r24, 0x11	; 17
    1356:	69 2f       	mov	r22, r25
    1358:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN,GET_BIT(Cmd,2));
    135c:	8f 85       	ldd	r24, Y+15	; 0x0f
    135e:	86 95       	lsr	r24
    1360:	86 95       	lsr	r24
    1362:	98 2f       	mov	r25, r24
    1364:	91 70       	andi	r25, 0x01	; 1
    1366:	82 e1       	ldi	r24, 0x12	; 18
    1368:	69 2f       	mov	r22, r25
    136a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN,GET_BIT(Cmd,3));
    136e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1370:	86 95       	lsr	r24
    1372:	86 95       	lsr	r24
    1374:	86 95       	lsr	r24
    1376:	98 2f       	mov	r25, r24
    1378:	91 70       	andi	r25, 0x01	; 1
    137a:	83 e1       	ldi	r24, 0x13	; 19
    137c:	69 2f       	mov	r22, r25
    137e:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN,GET_BIT(Cmd,4));
    1382:	8f 85       	ldd	r24, Y+15	; 0x0f
    1384:	82 95       	swap	r24
    1386:	8f 70       	andi	r24, 0x0F	; 15
    1388:	98 2f       	mov	r25, r24
    138a:	91 70       	andi	r25, 0x01	; 1
    138c:	84 e1       	ldi	r24, 0x14	; 20
    138e:	69 2f       	mov	r22, r25
    1390:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN,GET_BIT(Cmd,5));
    1394:	8f 85       	ldd	r24, Y+15	; 0x0f
    1396:	82 95       	swap	r24
    1398:	86 95       	lsr	r24
    139a:	87 70       	andi	r24, 0x07	; 7
    139c:	98 2f       	mov	r25, r24
    139e:	91 70       	andi	r25, 0x01	; 1
    13a0:	85 e1       	ldi	r24, 0x15	; 21
    13a2:	69 2f       	mov	r22, r25
    13a4:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN,GET_BIT(Cmd,6));
    13a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    13aa:	82 95       	swap	r24
    13ac:	86 95       	lsr	r24
    13ae:	86 95       	lsr	r24
    13b0:	83 70       	andi	r24, 0x03	; 3
    13b2:	98 2f       	mov	r25, r24
    13b4:	91 70       	andi	r25, 0x01	; 1
    13b6:	86 e1       	ldi	r24, 0x16	; 22
    13b8:	69 2f       	mov	r22, r25
    13ba:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN,GET_BIT(Cmd,7));
    13be:	8f 85       	ldd	r24, Y+15	; 0x0f
    13c0:	98 2f       	mov	r25, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	99 27       	eor	r25, r25
    13c6:	99 1f       	adc	r25, r25
    13c8:	87 e1       	ldi	r24, 0x17	; 23
    13ca:	69 2f       	mov	r22, r25
    13cc:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>

	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8HIGH); //EN
    13d0:	82 e0       	ldi	r24, 0x02	; 2
    13d2:	61 e0       	ldi	r22, 0x01	; 1
    13d4:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	a0 e0       	ldi	r26, 0x00	; 0
    13de:	b0 e4       	ldi	r27, 0x40	; 64
    13e0:	8b 87       	std	Y+11, r24	; 0x0b
    13e2:	9c 87       	std	Y+12, r25	; 0x0c
    13e4:	ad 87       	std	Y+13, r26	; 0x0d
    13e6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    13ea:	7c 85       	ldd	r23, Y+12	; 0x0c
    13ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    13ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	4a ef       	ldi	r20, 0xFA	; 250
    13f6:	54 e4       	ldi	r21, 0x44	; 68
    13f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13fc:	dc 01       	movw	r26, r24
    13fe:	cb 01       	movw	r24, r22
    1400:	8f 83       	std	Y+7, r24	; 0x07
    1402:	98 87       	std	Y+8, r25	; 0x08
    1404:	a9 87       	std	Y+9, r26	; 0x09
    1406:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1408:	6f 81       	ldd	r22, Y+7	; 0x07
    140a:	78 85       	ldd	r23, Y+8	; 0x08
    140c:	89 85       	ldd	r24, Y+9	; 0x09
    140e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1410:	20 e0       	ldi	r18, 0x00	; 0
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	40 e8       	ldi	r20, 0x80	; 128
    1416:	5f e3       	ldi	r21, 0x3F	; 63
    1418:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    141c:	88 23       	and	r24, r24
    141e:	2c f4       	brge	.+10     	; 0x142a <Lcd_vidSendCommand+0x112>
		__ticks = 1;
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	9e 83       	std	Y+6, r25	; 0x06
    1426:	8d 83       	std	Y+5, r24	; 0x05
    1428:	3f c0       	rjmp	.+126    	; 0x14a8 <Lcd_vidSendCommand+0x190>
	else if (__tmp > 65535)
    142a:	6f 81       	ldd	r22, Y+7	; 0x07
    142c:	78 85       	ldd	r23, Y+8	; 0x08
    142e:	89 85       	ldd	r24, Y+9	; 0x09
    1430:	9a 85       	ldd	r25, Y+10	; 0x0a
    1432:	20 e0       	ldi	r18, 0x00	; 0
    1434:	3f ef       	ldi	r19, 0xFF	; 255
    1436:	4f e7       	ldi	r20, 0x7F	; 127
    1438:	57 e4       	ldi	r21, 0x47	; 71
    143a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    143e:	18 16       	cp	r1, r24
    1440:	4c f5       	brge	.+82     	; 0x1494 <Lcd_vidSendCommand+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1442:	6b 85       	ldd	r22, Y+11	; 0x0b
    1444:	7c 85       	ldd	r23, Y+12	; 0x0c
    1446:	8d 85       	ldd	r24, Y+13	; 0x0d
    1448:	9e 85       	ldd	r25, Y+14	; 0x0e
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	40 e2       	ldi	r20, 0x20	; 32
    1450:	51 e4       	ldi	r21, 0x41	; 65
    1452:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1456:	dc 01       	movw	r26, r24
    1458:	cb 01       	movw	r24, r22
    145a:	bc 01       	movw	r22, r24
    145c:	cd 01       	movw	r24, r26
    145e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1462:	dc 01       	movw	r26, r24
    1464:	cb 01       	movw	r24, r22
    1466:	9e 83       	std	Y+6, r25	; 0x06
    1468:	8d 83       	std	Y+5, r24	; 0x05
    146a:	0f c0       	rjmp	.+30     	; 0x148a <Lcd_vidSendCommand+0x172>
    146c:	88 ec       	ldi	r24, 0xC8	; 200
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	9c 83       	std	Y+4, r25	; 0x04
    1472:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1474:	8b 81       	ldd	r24, Y+3	; 0x03
    1476:	9c 81       	ldd	r25, Y+4	; 0x04
    1478:	01 97       	sbiw	r24, 0x01	; 1
    147a:	f1 f7       	brne	.-4      	; 0x1478 <Lcd_vidSendCommand+0x160>
    147c:	9c 83       	std	Y+4, r25	; 0x04
    147e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1480:	8d 81       	ldd	r24, Y+5	; 0x05
    1482:	9e 81       	ldd	r25, Y+6	; 0x06
    1484:	01 97       	sbiw	r24, 0x01	; 1
    1486:	9e 83       	std	Y+6, r25	; 0x06
    1488:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    148a:	8d 81       	ldd	r24, Y+5	; 0x05
    148c:	9e 81       	ldd	r25, Y+6	; 0x06
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	69 f7       	brne	.-38     	; 0x146c <Lcd_vidSendCommand+0x154>
    1492:	14 c0       	rjmp	.+40     	; 0x14bc <Lcd_vidSendCommand+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1494:	6f 81       	ldd	r22, Y+7	; 0x07
    1496:	78 85       	ldd	r23, Y+8	; 0x08
    1498:	89 85       	ldd	r24, Y+9	; 0x09
    149a:	9a 85       	ldd	r25, Y+10	; 0x0a
    149c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14a0:	dc 01       	movw	r26, r24
    14a2:	cb 01       	movw	r24, r22
    14a4:	9e 83       	std	Y+6, r25	; 0x06
    14a6:	8d 83       	std	Y+5, r24	; 0x05
    14a8:	8d 81       	ldd	r24, Y+5	; 0x05
    14aa:	9e 81       	ldd	r25, Y+6	; 0x06
    14ac:	9a 83       	std	Y+2, r25	; 0x02
    14ae:	89 83       	std	Y+1, r24	; 0x01
    14b0:	89 81       	ldd	r24, Y+1	; 0x01
    14b2:	9a 81       	ldd	r25, Y+2	; 0x02
    14b4:	01 97       	sbiw	r24, 0x01	; 1
    14b6:	f1 f7       	brne	.-4      	; 0x14b4 <Lcd_vidSendCommand+0x19c>
    14b8:	9a 83       	std	Y+2, r25	; 0x02
    14ba:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8LOW); //EN
    14bc:	82 e0       	ldi	r24, 0x02	; 2
    14be:	60 e0       	ldi	r22, 0x00	; 0
    14c0:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
}
    14c4:	2f 96       	adiw	r28, 0x0f	; 15
    14c6:	0f b6       	in	r0, 0x3f	; 63
    14c8:	f8 94       	cli
    14ca:	de bf       	out	0x3e, r29	; 62
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	cd bf       	out	0x3d, r28	; 61
    14d0:	cf 91       	pop	r28
    14d2:	df 91       	pop	r29
    14d4:	08 95       	ret

000014d6 <Lcd_vidWriteChar>:

void Lcd_vidWriteChar(u8 Char){
    14d6:	df 93       	push	r29
    14d8:	cf 93       	push	r28
    14da:	cd b7       	in	r28, 0x3d	; 61
    14dc:	de b7       	in	r29, 0x3e	; 62
    14de:	2f 97       	sbiw	r28, 0x0f	; 15
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	8f 87       	std	Y+15, r24	; 0x0f
	Dio_vidSetPinVal(LCD_u8RS_PIN,DIO_u8HIGH);  //RS Pin set
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	61 e0       	ldi	r22, 0x01	; 1
    14f0:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN,DIO_u8LOW);  //RW Pin cleared because we always wanna write
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	60 e0       	ldi	r22, 0x00	; 0
    14f8:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D0_PIN,GET_BIT(Char,0));
    14fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14fe:	98 2f       	mov	r25, r24
    1500:	91 70       	andi	r25, 0x01	; 1
    1502:	80 e1       	ldi	r24, 0x10	; 16
    1504:	69 2f       	mov	r22, r25
    1506:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN,GET_BIT(Char,1));
    150a:	8f 85       	ldd	r24, Y+15	; 0x0f
    150c:	86 95       	lsr	r24
    150e:	98 2f       	mov	r25, r24
    1510:	91 70       	andi	r25, 0x01	; 1
    1512:	81 e1       	ldi	r24, 0x11	; 17
    1514:	69 2f       	mov	r22, r25
    1516:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN,GET_BIT(Char,2));
    151a:	8f 85       	ldd	r24, Y+15	; 0x0f
    151c:	86 95       	lsr	r24
    151e:	86 95       	lsr	r24
    1520:	98 2f       	mov	r25, r24
    1522:	91 70       	andi	r25, 0x01	; 1
    1524:	82 e1       	ldi	r24, 0x12	; 18
    1526:	69 2f       	mov	r22, r25
    1528:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN,GET_BIT(Char,3));
    152c:	8f 85       	ldd	r24, Y+15	; 0x0f
    152e:	86 95       	lsr	r24
    1530:	86 95       	lsr	r24
    1532:	86 95       	lsr	r24
    1534:	98 2f       	mov	r25, r24
    1536:	91 70       	andi	r25, 0x01	; 1
    1538:	83 e1       	ldi	r24, 0x13	; 19
    153a:	69 2f       	mov	r22, r25
    153c:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN,GET_BIT(Char,4));
    1540:	8f 85       	ldd	r24, Y+15	; 0x0f
    1542:	82 95       	swap	r24
    1544:	8f 70       	andi	r24, 0x0F	; 15
    1546:	98 2f       	mov	r25, r24
    1548:	91 70       	andi	r25, 0x01	; 1
    154a:	84 e1       	ldi	r24, 0x14	; 20
    154c:	69 2f       	mov	r22, r25
    154e:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN,GET_BIT(Char,5));
    1552:	8f 85       	ldd	r24, Y+15	; 0x0f
    1554:	82 95       	swap	r24
    1556:	86 95       	lsr	r24
    1558:	87 70       	andi	r24, 0x07	; 7
    155a:	98 2f       	mov	r25, r24
    155c:	91 70       	andi	r25, 0x01	; 1
    155e:	85 e1       	ldi	r24, 0x15	; 21
    1560:	69 2f       	mov	r22, r25
    1562:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN,GET_BIT(Char,6));
    1566:	8f 85       	ldd	r24, Y+15	; 0x0f
    1568:	82 95       	swap	r24
    156a:	86 95       	lsr	r24
    156c:	86 95       	lsr	r24
    156e:	83 70       	andi	r24, 0x03	; 3
    1570:	98 2f       	mov	r25, r24
    1572:	91 70       	andi	r25, 0x01	; 1
    1574:	86 e1       	ldi	r24, 0x16	; 22
    1576:	69 2f       	mov	r22, r25
    1578:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN,GET_BIT(Char,7));
    157c:	8f 85       	ldd	r24, Y+15	; 0x0f
    157e:	98 2f       	mov	r25, r24
    1580:	99 1f       	adc	r25, r25
    1582:	99 27       	eor	r25, r25
    1584:	99 1f       	adc	r25, r25
    1586:	87 e1       	ldi	r24, 0x17	; 23
    1588:	69 2f       	mov	r22, r25
    158a:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8HIGH);   //EN
    158e:	82 e0       	ldi	r24, 0x02	; 2
    1590:	61 e0       	ldi	r22, 0x01	; 1
    1592:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	a0 e0       	ldi	r26, 0x00	; 0
    159c:	b0 e4       	ldi	r27, 0x40	; 64
    159e:	8b 87       	std	Y+11, r24	; 0x0b
    15a0:	9c 87       	std	Y+12, r25	; 0x0c
    15a2:	ad 87       	std	Y+13, r26	; 0x0d
    15a4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    15a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    15aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    15ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	4a ef       	ldi	r20, 0xFA	; 250
    15b4:	54 e4       	ldi	r21, 0x44	; 68
    15b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	8f 83       	std	Y+7, r24	; 0x07
    15c0:	98 87       	std	Y+8, r25	; 0x08
    15c2:	a9 87       	std	Y+9, r26	; 0x09
    15c4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15c6:	6f 81       	ldd	r22, Y+7	; 0x07
    15c8:	78 85       	ldd	r23, Y+8	; 0x08
    15ca:	89 85       	ldd	r24, Y+9	; 0x09
    15cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	40 e8       	ldi	r20, 0x80	; 128
    15d4:	5f e3       	ldi	r21, 0x3F	; 63
    15d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15da:	88 23       	and	r24, r24
    15dc:	2c f4       	brge	.+10     	; 0x15e8 <Lcd_vidWriteChar+0x112>
		__ticks = 1;
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	9e 83       	std	Y+6, r25	; 0x06
    15e4:	8d 83       	std	Y+5, r24	; 0x05
    15e6:	3f c0       	rjmp	.+126    	; 0x1666 <Lcd_vidWriteChar+0x190>
	else if (__tmp > 65535)
    15e8:	6f 81       	ldd	r22, Y+7	; 0x07
    15ea:	78 85       	ldd	r23, Y+8	; 0x08
    15ec:	89 85       	ldd	r24, Y+9	; 0x09
    15ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	3f ef       	ldi	r19, 0xFF	; 255
    15f4:	4f e7       	ldi	r20, 0x7F	; 127
    15f6:	57 e4       	ldi	r21, 0x47	; 71
    15f8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15fc:	18 16       	cp	r1, r24
    15fe:	4c f5       	brge	.+82     	; 0x1652 <Lcd_vidWriteChar+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1600:	6b 85       	ldd	r22, Y+11	; 0x0b
    1602:	7c 85       	ldd	r23, Y+12	; 0x0c
    1604:	8d 85       	ldd	r24, Y+13	; 0x0d
    1606:	9e 85       	ldd	r25, Y+14	; 0x0e
    1608:	20 e0       	ldi	r18, 0x00	; 0
    160a:	30 e0       	ldi	r19, 0x00	; 0
    160c:	40 e2       	ldi	r20, 0x20	; 32
    160e:	51 e4       	ldi	r21, 0x41	; 65
    1610:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1614:	dc 01       	movw	r26, r24
    1616:	cb 01       	movw	r24, r22
    1618:	bc 01       	movw	r22, r24
    161a:	cd 01       	movw	r24, r26
    161c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	9e 83       	std	Y+6, r25	; 0x06
    1626:	8d 83       	std	Y+5, r24	; 0x05
    1628:	0f c0       	rjmp	.+30     	; 0x1648 <Lcd_vidWriteChar+0x172>
    162a:	88 ec       	ldi	r24, 0xC8	; 200
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	9c 83       	std	Y+4, r25	; 0x04
    1630:	8b 83       	std	Y+3, r24	; 0x03
    1632:	8b 81       	ldd	r24, Y+3	; 0x03
    1634:	9c 81       	ldd	r25, Y+4	; 0x04
    1636:	01 97       	sbiw	r24, 0x01	; 1
    1638:	f1 f7       	brne	.-4      	; 0x1636 <Lcd_vidWriteChar+0x160>
    163a:	9c 83       	std	Y+4, r25	; 0x04
    163c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    163e:	8d 81       	ldd	r24, Y+5	; 0x05
    1640:	9e 81       	ldd	r25, Y+6	; 0x06
    1642:	01 97       	sbiw	r24, 0x01	; 1
    1644:	9e 83       	std	Y+6, r25	; 0x06
    1646:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1648:	8d 81       	ldd	r24, Y+5	; 0x05
    164a:	9e 81       	ldd	r25, Y+6	; 0x06
    164c:	00 97       	sbiw	r24, 0x00	; 0
    164e:	69 f7       	brne	.-38     	; 0x162a <Lcd_vidWriteChar+0x154>
    1650:	14 c0       	rjmp	.+40     	; 0x167a <Lcd_vidWriteChar+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1652:	6f 81       	ldd	r22, Y+7	; 0x07
    1654:	78 85       	ldd	r23, Y+8	; 0x08
    1656:	89 85       	ldd	r24, Y+9	; 0x09
    1658:	9a 85       	ldd	r25, Y+10	; 0x0a
    165a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    165e:	dc 01       	movw	r26, r24
    1660:	cb 01       	movw	r24, r22
    1662:	9e 83       	std	Y+6, r25	; 0x06
    1664:	8d 83       	std	Y+5, r24	; 0x05
    1666:	8d 81       	ldd	r24, Y+5	; 0x05
    1668:	9e 81       	ldd	r25, Y+6	; 0x06
    166a:	9a 83       	std	Y+2, r25	; 0x02
    166c:	89 83       	std	Y+1, r24	; 0x01
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	9a 81       	ldd	r25, Y+2	; 0x02
    1672:	01 97       	sbiw	r24, 0x01	; 1
    1674:	f1 f7       	brne	.-4      	; 0x1672 <Lcd_vidWriteChar+0x19c>
    1676:	9a 83       	std	Y+2, r25	; 0x02
    1678:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8LOW);   //EN
    167a:	82 e0       	ldi	r24, 0x02	; 2
    167c:	60 e0       	ldi	r22, 0x00	; 0
    167e:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
}
    1682:	2f 96       	adiw	r28, 0x0f	; 15
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	cf 91       	pop	r28
    1690:	df 91       	pop	r29
    1692:	08 95       	ret

00001694 <Lcd_vidInit>:

void Lcd_vidInit(void){
    1694:	df 93       	push	r29
    1696:	cf 93       	push	r28
    1698:	cd b7       	in	r28, 0x3d	; 61
    169a:	de b7       	in	r29, 0x3e	; 62
    169c:	aa 97       	sbiw	r28, 0x2a	; 42
    169e:	0f b6       	in	r0, 0x3f	; 63
    16a0:	f8 94       	cli
    16a2:	de bf       	out	0x3e, r29	; 62
    16a4:	0f be       	out	0x3f, r0	; 63
    16a6:	cd bf       	out	0x3d, r28	; 61

	Dio_vidSetPinDir(LCD_u8RS_PIN,DIO_u8OUTPUT);
    16a8:	80 e0       	ldi	r24, 0x00	; 0
    16aa:	61 e0       	ldi	r22, 0x01	; 1
    16ac:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8RW_PIN,DIO_u8OUTPUT);
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	61 e0       	ldi	r22, 0x01	; 1
    16b4:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8EN_PIN,DIO_u8OUTPUT);
    16b8:	82 e0       	ldi	r24, 0x02	; 2
    16ba:	61 e0       	ldi	r22, 0x01	; 1
    16bc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>

	Dio_vidSetPinDir(LCD_u8D0_PIN,DIO_u8OUTPUT);
    16c0:	80 e1       	ldi	r24, 0x10	; 16
    16c2:	61 e0       	ldi	r22, 0x01	; 1
    16c4:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D1_PIN,DIO_u8OUTPUT);
    16c8:	81 e1       	ldi	r24, 0x11	; 17
    16ca:	61 e0       	ldi	r22, 0x01	; 1
    16cc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D2_PIN,DIO_u8OUTPUT);
    16d0:	82 e1       	ldi	r24, 0x12	; 18
    16d2:	61 e0       	ldi	r22, 0x01	; 1
    16d4:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D3_PIN,DIO_u8OUTPUT);
    16d8:	83 e1       	ldi	r24, 0x13	; 19
    16da:	61 e0       	ldi	r22, 0x01	; 1
    16dc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D4_PIN,DIO_u8OUTPUT);
    16e0:	84 e1       	ldi	r24, 0x14	; 20
    16e2:	61 e0       	ldi	r22, 0x01	; 1
    16e4:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D5_PIN,DIO_u8OUTPUT);
    16e8:	85 e1       	ldi	r24, 0x15	; 21
    16ea:	61 e0       	ldi	r22, 0x01	; 1
    16ec:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D6_PIN,DIO_u8OUTPUT);
    16f0:	86 e1       	ldi	r24, 0x16	; 22
    16f2:	61 e0       	ldi	r22, 0x01	; 1
    16f4:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D7_PIN,DIO_u8OUTPUT);
    16f8:	87 e1       	ldi	r24, 0x17	; 23
    16fa:	61 e0       	ldi	r22, 0x01	; 1
    16fc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>




	Lcd_vidSendCommand(LCD_u8_CMD_8_BIT_2x16_5x7); 	 //Function Set 8bit 2 line 5x7
    1700:	88 e3       	ldi	r24, 0x38	; 56
    1702:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
    1706:	80 e0       	ldi	r24, 0x00	; 0
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	a0 e0       	ldi	r26, 0x00	; 0
    170c:	b0 e4       	ldi	r27, 0x40	; 64
    170e:	8f a3       	std	Y+39, r24	; 0x27
    1710:	98 a7       	std	Y+40, r25	; 0x28
    1712:	a9 a7       	std	Y+41, r26	; 0x29
    1714:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1716:	6f a1       	ldd	r22, Y+39	; 0x27
    1718:	78 a5       	ldd	r23, Y+40	; 0x28
    171a:	89 a5       	ldd	r24, Y+41	; 0x29
    171c:	9a a5       	ldd	r25, Y+42	; 0x2a
    171e:	20 e0       	ldi	r18, 0x00	; 0
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	4a ef       	ldi	r20, 0xFA	; 250
    1724:	54 e4       	ldi	r21, 0x44	; 68
    1726:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    172a:	dc 01       	movw	r26, r24
    172c:	cb 01       	movw	r24, r22
    172e:	8b a3       	std	Y+35, r24	; 0x23
    1730:	9c a3       	std	Y+36, r25	; 0x24
    1732:	ad a3       	std	Y+37, r26	; 0x25
    1734:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1736:	6b a1       	ldd	r22, Y+35	; 0x23
    1738:	7c a1       	ldd	r23, Y+36	; 0x24
    173a:	8d a1       	ldd	r24, Y+37	; 0x25
    173c:	9e a1       	ldd	r25, Y+38	; 0x26
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	40 e8       	ldi	r20, 0x80	; 128
    1744:	5f e3       	ldi	r21, 0x3F	; 63
    1746:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    174a:	88 23       	and	r24, r24
    174c:	2c f4       	brge	.+10     	; 0x1758 <Lcd_vidInit+0xc4>
		__ticks = 1;
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	9a a3       	std	Y+34, r25	; 0x22
    1754:	89 a3       	std	Y+33, r24	; 0x21
    1756:	3f c0       	rjmp	.+126    	; 0x17d6 <Lcd_vidInit+0x142>
	else if (__tmp > 65535)
    1758:	6b a1       	ldd	r22, Y+35	; 0x23
    175a:	7c a1       	ldd	r23, Y+36	; 0x24
    175c:	8d a1       	ldd	r24, Y+37	; 0x25
    175e:	9e a1       	ldd	r25, Y+38	; 0x26
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	3f ef       	ldi	r19, 0xFF	; 255
    1764:	4f e7       	ldi	r20, 0x7F	; 127
    1766:	57 e4       	ldi	r21, 0x47	; 71
    1768:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    176c:	18 16       	cp	r1, r24
    176e:	4c f5       	brge	.+82     	; 0x17c2 <Lcd_vidInit+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1770:	6f a1       	ldd	r22, Y+39	; 0x27
    1772:	78 a5       	ldd	r23, Y+40	; 0x28
    1774:	89 a5       	ldd	r24, Y+41	; 0x29
    1776:	9a a5       	ldd	r25, Y+42	; 0x2a
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 e2       	ldi	r20, 0x20	; 32
    177e:	51 e4       	ldi	r21, 0x41	; 65
    1780:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	bc 01       	movw	r22, r24
    178a:	cd 01       	movw	r24, r26
    178c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1790:	dc 01       	movw	r26, r24
    1792:	cb 01       	movw	r24, r22
    1794:	9a a3       	std	Y+34, r25	; 0x22
    1796:	89 a3       	std	Y+33, r24	; 0x21
    1798:	0f c0       	rjmp	.+30     	; 0x17b8 <Lcd_vidInit+0x124>
    179a:	88 ec       	ldi	r24, 0xC8	; 200
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	98 a3       	std	Y+32, r25	; 0x20
    17a0:	8f 8f       	std	Y+31, r24	; 0x1f
    17a2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17a4:	98 a1       	ldd	r25, Y+32	; 0x20
    17a6:	01 97       	sbiw	r24, 0x01	; 1
    17a8:	f1 f7       	brne	.-4      	; 0x17a6 <Lcd_vidInit+0x112>
    17aa:	98 a3       	std	Y+32, r25	; 0x20
    17ac:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ae:	89 a1       	ldd	r24, Y+33	; 0x21
    17b0:	9a a1       	ldd	r25, Y+34	; 0x22
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	9a a3       	std	Y+34, r25	; 0x22
    17b6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b8:	89 a1       	ldd	r24, Y+33	; 0x21
    17ba:	9a a1       	ldd	r25, Y+34	; 0x22
    17bc:	00 97       	sbiw	r24, 0x00	; 0
    17be:	69 f7       	brne	.-38     	; 0x179a <Lcd_vidInit+0x106>
    17c0:	14 c0       	rjmp	.+40     	; 0x17ea <Lcd_vidInit+0x156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17c2:	6b a1       	ldd	r22, Y+35	; 0x23
    17c4:	7c a1       	ldd	r23, Y+36	; 0x24
    17c6:	8d a1       	ldd	r24, Y+37	; 0x25
    17c8:	9e a1       	ldd	r25, Y+38	; 0x26
    17ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	9a a3       	std	Y+34, r25	; 0x22
    17d4:	89 a3       	std	Y+33, r24	; 0x21
    17d6:	89 a1       	ldd	r24, Y+33	; 0x21
    17d8:	9a a1       	ldd	r25, Y+34	; 0x22
    17da:	9e 8f       	std	Y+30, r25	; 0x1e
    17dc:	8d 8f       	std	Y+29, r24	; 0x1d
    17de:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	f1 f7       	brne	.-4      	; 0x17e2 <Lcd_vidInit+0x14e>
    17e6:	9e 8f       	std	Y+30, r25	; 0x1e
    17e8:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8_CMD_DISP_ON_CURS_OFF); 	//Display ON Cursor OFF
    17ea:	8c e0       	ldi	r24, 0x0C	; 12
    17ec:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
    17f0:	80 e0       	ldi	r24, 0x00	; 0
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	a0 e0       	ldi	r26, 0x00	; 0
    17f6:	b0 e4       	ldi	r27, 0x40	; 64
    17f8:	89 8f       	std	Y+25, r24	; 0x19
    17fa:	9a 8f       	std	Y+26, r25	; 0x1a
    17fc:	ab 8f       	std	Y+27, r26	; 0x1b
    17fe:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1800:	69 8d       	ldd	r22, Y+25	; 0x19
    1802:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1804:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1806:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	4a ef       	ldi	r20, 0xFA	; 250
    180e:	54 e4       	ldi	r21, 0x44	; 68
    1810:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1814:	dc 01       	movw	r26, r24
    1816:	cb 01       	movw	r24, r22
    1818:	8d 8b       	std	Y+21, r24	; 0x15
    181a:	9e 8b       	std	Y+22, r25	; 0x16
    181c:	af 8b       	std	Y+23, r26	; 0x17
    181e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1820:	6d 89       	ldd	r22, Y+21	; 0x15
    1822:	7e 89       	ldd	r23, Y+22	; 0x16
    1824:	8f 89       	ldd	r24, Y+23	; 0x17
    1826:	98 8d       	ldd	r25, Y+24	; 0x18
    1828:	20 e0       	ldi	r18, 0x00	; 0
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	40 e8       	ldi	r20, 0x80	; 128
    182e:	5f e3       	ldi	r21, 0x3F	; 63
    1830:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1834:	88 23       	and	r24, r24
    1836:	2c f4       	brge	.+10     	; 0x1842 <Lcd_vidInit+0x1ae>
		__ticks = 1;
    1838:	81 e0       	ldi	r24, 0x01	; 1
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	9c 8b       	std	Y+20, r25	; 0x14
    183e:	8b 8b       	std	Y+19, r24	; 0x13
    1840:	3f c0       	rjmp	.+126    	; 0x18c0 <Lcd_vidInit+0x22c>
	else if (__tmp > 65535)
    1842:	6d 89       	ldd	r22, Y+21	; 0x15
    1844:	7e 89       	ldd	r23, Y+22	; 0x16
    1846:	8f 89       	ldd	r24, Y+23	; 0x17
    1848:	98 8d       	ldd	r25, Y+24	; 0x18
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	3f ef       	ldi	r19, 0xFF	; 255
    184e:	4f e7       	ldi	r20, 0x7F	; 127
    1850:	57 e4       	ldi	r21, 0x47	; 71
    1852:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1856:	18 16       	cp	r1, r24
    1858:	4c f5       	brge	.+82     	; 0x18ac <Lcd_vidInit+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    185a:	69 8d       	ldd	r22, Y+25	; 0x19
    185c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    185e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1860:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	40 e2       	ldi	r20, 0x20	; 32
    1868:	51 e4       	ldi	r21, 0x41	; 65
    186a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    186e:	dc 01       	movw	r26, r24
    1870:	cb 01       	movw	r24, r22
    1872:	bc 01       	movw	r22, r24
    1874:	cd 01       	movw	r24, r26
    1876:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    187a:	dc 01       	movw	r26, r24
    187c:	cb 01       	movw	r24, r22
    187e:	9c 8b       	std	Y+20, r25	; 0x14
    1880:	8b 8b       	std	Y+19, r24	; 0x13
    1882:	0f c0       	rjmp	.+30     	; 0x18a2 <Lcd_vidInit+0x20e>
    1884:	88 ec       	ldi	r24, 0xC8	; 200
    1886:	90 e0       	ldi	r25, 0x00	; 0
    1888:	9a 8b       	std	Y+18, r25	; 0x12
    188a:	89 8b       	std	Y+17, r24	; 0x11
    188c:	89 89       	ldd	r24, Y+17	; 0x11
    188e:	9a 89       	ldd	r25, Y+18	; 0x12
    1890:	01 97       	sbiw	r24, 0x01	; 1
    1892:	f1 f7       	brne	.-4      	; 0x1890 <Lcd_vidInit+0x1fc>
    1894:	9a 8b       	std	Y+18, r25	; 0x12
    1896:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1898:	8b 89       	ldd	r24, Y+19	; 0x13
    189a:	9c 89       	ldd	r25, Y+20	; 0x14
    189c:	01 97       	sbiw	r24, 0x01	; 1
    189e:	9c 8b       	std	Y+20, r25	; 0x14
    18a0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18a2:	8b 89       	ldd	r24, Y+19	; 0x13
    18a4:	9c 89       	ldd	r25, Y+20	; 0x14
    18a6:	00 97       	sbiw	r24, 0x00	; 0
    18a8:	69 f7       	brne	.-38     	; 0x1884 <Lcd_vidInit+0x1f0>
    18aa:	14 c0       	rjmp	.+40     	; 0x18d4 <Lcd_vidInit+0x240>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ac:	6d 89       	ldd	r22, Y+21	; 0x15
    18ae:	7e 89       	ldd	r23, Y+22	; 0x16
    18b0:	8f 89       	ldd	r24, Y+23	; 0x17
    18b2:	98 8d       	ldd	r25, Y+24	; 0x18
    18b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b8:	dc 01       	movw	r26, r24
    18ba:	cb 01       	movw	r24, r22
    18bc:	9c 8b       	std	Y+20, r25	; 0x14
    18be:	8b 8b       	std	Y+19, r24	; 0x13
    18c0:	8b 89       	ldd	r24, Y+19	; 0x13
    18c2:	9c 89       	ldd	r25, Y+20	; 0x14
    18c4:	98 8b       	std	Y+16, r25	; 0x10
    18c6:	8f 87       	std	Y+15, r24	; 0x0f
    18c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    18ca:	98 89       	ldd	r25, Y+16	; 0x10
    18cc:	01 97       	sbiw	r24, 0x01	; 1
    18ce:	f1 f7       	brne	.-4      	; 0x18cc <Lcd_vidInit+0x238>
    18d0:	98 8b       	std	Y+16, r25	; 0x10
    18d2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8_CMD_CLR_DISPLAY);	//Clear Display
    18d4:	81 e0       	ldi	r24, 0x01	; 1
    18d6:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
    18da:	80 e0       	ldi	r24, 0x00	; 0
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	a0 e0       	ldi	r26, 0x00	; 0
    18e0:	b0 e4       	ldi	r27, 0x40	; 64
    18e2:	8b 87       	std	Y+11, r24	; 0x0b
    18e4:	9c 87       	std	Y+12, r25	; 0x0c
    18e6:	ad 87       	std	Y+13, r26	; 0x0d
    18e8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    18ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    18ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    18f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    18f2:	20 e0       	ldi	r18, 0x00	; 0
    18f4:	30 e0       	ldi	r19, 0x00	; 0
    18f6:	4a ef       	ldi	r20, 0xFA	; 250
    18f8:	54 e4       	ldi	r21, 0x44	; 68
    18fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18fe:	dc 01       	movw	r26, r24
    1900:	cb 01       	movw	r24, r22
    1902:	8f 83       	std	Y+7, r24	; 0x07
    1904:	98 87       	std	Y+8, r25	; 0x08
    1906:	a9 87       	std	Y+9, r26	; 0x09
    1908:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    190a:	6f 81       	ldd	r22, Y+7	; 0x07
    190c:	78 85       	ldd	r23, Y+8	; 0x08
    190e:	89 85       	ldd	r24, Y+9	; 0x09
    1910:	9a 85       	ldd	r25, Y+10	; 0x0a
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	40 e8       	ldi	r20, 0x80	; 128
    1918:	5f e3       	ldi	r21, 0x3F	; 63
    191a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    191e:	88 23       	and	r24, r24
    1920:	2c f4       	brge	.+10     	; 0x192c <Lcd_vidInit+0x298>
		__ticks = 1;
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	9e 83       	std	Y+6, r25	; 0x06
    1928:	8d 83       	std	Y+5, r24	; 0x05
    192a:	3f c0       	rjmp	.+126    	; 0x19aa <Lcd_vidInit+0x316>
	else if (__tmp > 65535)
    192c:	6f 81       	ldd	r22, Y+7	; 0x07
    192e:	78 85       	ldd	r23, Y+8	; 0x08
    1930:	89 85       	ldd	r24, Y+9	; 0x09
    1932:	9a 85       	ldd	r25, Y+10	; 0x0a
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	3f ef       	ldi	r19, 0xFF	; 255
    1938:	4f e7       	ldi	r20, 0x7F	; 127
    193a:	57 e4       	ldi	r21, 0x47	; 71
    193c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1940:	18 16       	cp	r1, r24
    1942:	4c f5       	brge	.+82     	; 0x1996 <Lcd_vidInit+0x302>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1944:	6b 85       	ldd	r22, Y+11	; 0x0b
    1946:	7c 85       	ldd	r23, Y+12	; 0x0c
    1948:	8d 85       	ldd	r24, Y+13	; 0x0d
    194a:	9e 85       	ldd	r25, Y+14	; 0x0e
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e2       	ldi	r20, 0x20	; 32
    1952:	51 e4       	ldi	r21, 0x41	; 65
    1954:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	bc 01       	movw	r22, r24
    195e:	cd 01       	movw	r24, r26
    1960:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1964:	dc 01       	movw	r26, r24
    1966:	cb 01       	movw	r24, r22
    1968:	9e 83       	std	Y+6, r25	; 0x06
    196a:	8d 83       	std	Y+5, r24	; 0x05
    196c:	0f c0       	rjmp	.+30     	; 0x198c <Lcd_vidInit+0x2f8>
    196e:	88 ec       	ldi	r24, 0xC8	; 200
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	9c 83       	std	Y+4, r25	; 0x04
    1974:	8b 83       	std	Y+3, r24	; 0x03
    1976:	8b 81       	ldd	r24, Y+3	; 0x03
    1978:	9c 81       	ldd	r25, Y+4	; 0x04
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	f1 f7       	brne	.-4      	; 0x197a <Lcd_vidInit+0x2e6>
    197e:	9c 83       	std	Y+4, r25	; 0x04
    1980:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1982:	8d 81       	ldd	r24, Y+5	; 0x05
    1984:	9e 81       	ldd	r25, Y+6	; 0x06
    1986:	01 97       	sbiw	r24, 0x01	; 1
    1988:	9e 83       	std	Y+6, r25	; 0x06
    198a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    198c:	8d 81       	ldd	r24, Y+5	; 0x05
    198e:	9e 81       	ldd	r25, Y+6	; 0x06
    1990:	00 97       	sbiw	r24, 0x00	; 0
    1992:	69 f7       	brne	.-38     	; 0x196e <Lcd_vidInit+0x2da>
    1994:	14 c0       	rjmp	.+40     	; 0x19be <Lcd_vidInit+0x32a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1996:	6f 81       	ldd	r22, Y+7	; 0x07
    1998:	78 85       	ldd	r23, Y+8	; 0x08
    199a:	89 85       	ldd	r24, Y+9	; 0x09
    199c:	9a 85       	ldd	r25, Y+10	; 0x0a
    199e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19a2:	dc 01       	movw	r26, r24
    19a4:	cb 01       	movw	r24, r22
    19a6:	9e 83       	std	Y+6, r25	; 0x06
    19a8:	8d 83       	std	Y+5, r24	; 0x05
    19aa:	8d 81       	ldd	r24, Y+5	; 0x05
    19ac:	9e 81       	ldd	r25, Y+6	; 0x06
    19ae:	9a 83       	std	Y+2, r25	; 0x02
    19b0:	89 83       	std	Y+1, r24	; 0x01
    19b2:	89 81       	ldd	r24, Y+1	; 0x01
    19b4:	9a 81       	ldd	r25, Y+2	; 0x02
    19b6:	01 97       	sbiw	r24, 0x01	; 1
    19b8:	f1 f7       	brne	.-4      	; 0x19b6 <Lcd_vidInit+0x322>
    19ba:	9a 83       	std	Y+2, r25	; 0x02
    19bc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    19be:	aa 96       	adiw	r28, 0x2a	; 42
    19c0:	0f b6       	in	r0, 0x3f	; 63
    19c2:	f8 94       	cli
    19c4:	de bf       	out	0x3e, r29	; 62
    19c6:	0f be       	out	0x3f, r0	; 63
    19c8:	cd bf       	out	0x3d, r28	; 61
    19ca:	cf 91       	pop	r28
    19cc:	df 91       	pop	r29
    19ce:	08 95       	ret

000019d0 <Lcd_MoveCursor>:

void Lcd_MoveCursor(u8 Pos){
    19d0:	df 93       	push	r29
    19d2:	cf 93       	push	r28
    19d4:	00 d0       	rcall	.+0      	; 0x19d6 <Lcd_MoveCursor+0x6>
    19d6:	0f 92       	push	r0
    19d8:	cd b7       	in	r28, 0x3d	; 61
    19da:	de b7       	in	r29, 0x3e	; 62
    19dc:	8b 83       	std	Y+3, r24	; 0x03
	for(int i=0; i<Pos; i++){
    19de:	1a 82       	std	Y+2, r1	; 0x02
    19e0:	19 82       	std	Y+1, r1	; 0x01
    19e2:	08 c0       	rjmp	.+16     	; 0x19f4 <Lcd_MoveCursor+0x24>
		Lcd_vidSendCommand(16);
    19e4:	80 e1       	ldi	r24, 0x10	; 16
    19e6:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
	Lcd_vidSendCommand(LCD_u8_CMD_CLR_DISPLAY);	//Clear Display
	_delay_ms(2);
}

void Lcd_MoveCursor(u8 Pos){
	for(int i=0; i<Pos; i++){
    19ea:	89 81       	ldd	r24, Y+1	; 0x01
    19ec:	9a 81       	ldd	r25, Y+2	; 0x02
    19ee:	01 96       	adiw	r24, 0x01	; 1
    19f0:	9a 83       	std	Y+2, r25	; 0x02
    19f2:	89 83       	std	Y+1, r24	; 0x01
    19f4:	8b 81       	ldd	r24, Y+3	; 0x03
    19f6:	28 2f       	mov	r18, r24
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	89 81       	ldd	r24, Y+1	; 0x01
    19fc:	9a 81       	ldd	r25, Y+2	; 0x02
    19fe:	82 17       	cp	r24, r18
    1a00:	93 07       	cpc	r25, r19
    1a02:	84 f3       	brlt	.-32     	; 0x19e4 <Lcd_MoveCursor+0x14>
		Lcd_vidSendCommand(16);
	}
}
    1a04:	0f 90       	pop	r0
    1a06:	0f 90       	pop	r0
    1a08:	0f 90       	pop	r0
    1a0a:	cf 91       	pop	r28
    1a0c:	df 91       	pop	r29
    1a0e:	08 95       	ret

00001a10 <main>:
#undef F_CPU
#define F_CPU 8000000
#include<util/delay.h>
#include<avr/io.h>

int main(void){
    1a10:	0f 93       	push	r16
    1a12:	1f 93       	push	r17
    1a14:	df 93       	push	r29
    1a16:	cf 93       	push	r28
    1a18:	cd b7       	in	r28, 0x3d	; 61
    1a1a:	de b7       	in	r29, 0x3e	; 62
    1a1c:	cf 59       	subi	r28, 0x9F	; 159
    1a1e:	d1 40       	sbci	r29, 0x01	; 1
    1a20:	0f b6       	in	r0, 0x3f	; 63
    1a22:	f8 94       	cli
    1a24:	de bf       	out	0x3e, r29	; 62
    1a26:	0f be       	out	0x3f, r0	; 63
    1a28:	cd bf       	out	0x3d, r28	; 61
	u8 key,x,i,count,count1;
	char id[4];
	char pass[4];
	u8 error[5]={'E','R','R','O','R'};
    1a2a:	ce 01       	movw	r24, r28
    1a2c:	82 58       	subi	r24, 0x82	; 130
    1a2e:	9e 4f       	sbci	r25, 0xFE	; 254
    1a30:	c5 56       	subi	r28, 0x65	; 101
    1a32:	de 4f       	sbci	r29, 0xFE	; 254
    1a34:	99 83       	std	Y+1, r25	; 0x01
    1a36:	88 83       	st	Y, r24
    1a38:	cb 59       	subi	r28, 0x9B	; 155
    1a3a:	d1 40       	sbci	r29, 0x01	; 1
    1a3c:	88 e6       	ldi	r24, 0x68	; 104
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	c3 56       	subi	r28, 0x63	; 99
    1a42:	de 4f       	sbci	r29, 0xFE	; 254
    1a44:	99 83       	std	Y+1, r25	; 0x01
    1a46:	88 83       	st	Y, r24
    1a48:	cd 59       	subi	r28, 0x9D	; 157
    1a4a:	d1 40       	sbci	r29, 0x01	; 1
    1a4c:	95 e0       	ldi	r25, 0x05	; 5
    1a4e:	c1 56       	subi	r28, 0x61	; 97
    1a50:	de 4f       	sbci	r29, 0xFE	; 254
    1a52:	98 83       	st	Y, r25
    1a54:	cf 59       	subi	r28, 0x9F	; 159
    1a56:	d1 40       	sbci	r29, 0x01	; 1
    1a58:	c3 56       	subi	r28, 0x63	; 99
    1a5a:	de 4f       	sbci	r29, 0xFE	; 254
    1a5c:	e8 81       	ld	r30, Y
    1a5e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a60:	cd 59       	subi	r28, 0x9D	; 157
    1a62:	d1 40       	sbci	r29, 0x01	; 1
    1a64:	00 80       	ld	r0, Z
    1a66:	c3 56       	subi	r28, 0x63	; 99
    1a68:	de 4f       	sbci	r29, 0xFE	; 254
    1a6a:	88 81       	ld	r24, Y
    1a6c:	99 81       	ldd	r25, Y+1	; 0x01
    1a6e:	cd 59       	subi	r28, 0x9D	; 157
    1a70:	d1 40       	sbci	r29, 0x01	; 1
    1a72:	01 96       	adiw	r24, 0x01	; 1
    1a74:	c3 56       	subi	r28, 0x63	; 99
    1a76:	de 4f       	sbci	r29, 0xFE	; 254
    1a78:	99 83       	std	Y+1, r25	; 0x01
    1a7a:	88 83       	st	Y, r24
    1a7c:	cd 59       	subi	r28, 0x9D	; 157
    1a7e:	d1 40       	sbci	r29, 0x01	; 1
    1a80:	c5 56       	subi	r28, 0x65	; 101
    1a82:	de 4f       	sbci	r29, 0xFE	; 254
    1a84:	e8 81       	ld	r30, Y
    1a86:	f9 81       	ldd	r31, Y+1	; 0x01
    1a88:	cb 59       	subi	r28, 0x9B	; 155
    1a8a:	d1 40       	sbci	r29, 0x01	; 1
    1a8c:	00 82       	st	Z, r0
    1a8e:	c5 56       	subi	r28, 0x65	; 101
    1a90:	de 4f       	sbci	r29, 0xFE	; 254
    1a92:	88 81       	ld	r24, Y
    1a94:	99 81       	ldd	r25, Y+1	; 0x01
    1a96:	cb 59       	subi	r28, 0x9B	; 155
    1a98:	d1 40       	sbci	r29, 0x01	; 1
    1a9a:	01 96       	adiw	r24, 0x01	; 1
    1a9c:	c5 56       	subi	r28, 0x65	; 101
    1a9e:	de 4f       	sbci	r29, 0xFE	; 254
    1aa0:	99 83       	std	Y+1, r25	; 0x01
    1aa2:	88 83       	st	Y, r24
    1aa4:	cb 59       	subi	r28, 0x9B	; 155
    1aa6:	d1 40       	sbci	r29, 0x01	; 1
    1aa8:	c1 56       	subi	r28, 0x61	; 97
    1aaa:	de 4f       	sbci	r29, 0xFE	; 254
    1aac:	98 81       	ld	r25, Y
    1aae:	cf 59       	subi	r28, 0x9F	; 159
    1ab0:	d1 40       	sbci	r29, 0x01	; 1
    1ab2:	91 50       	subi	r25, 0x01	; 1
    1ab4:	c1 56       	subi	r28, 0x61	; 97
    1ab6:	de 4f       	sbci	r29, 0xFE	; 254
    1ab8:	98 83       	st	Y, r25
    1aba:	cf 59       	subi	r28, 0x9F	; 159
    1abc:	d1 40       	sbci	r29, 0x01	; 1
    1abe:	c1 56       	subi	r28, 0x61	; 97
    1ac0:	de 4f       	sbci	r29, 0xFE	; 254
    1ac2:	e8 81       	ld	r30, Y
    1ac4:	cf 59       	subi	r28, 0x9F	; 159
    1ac6:	d1 40       	sbci	r29, 0x01	; 1
    1ac8:	ee 23       	and	r30, r30
    1aca:	31 f6       	brne	.-116    	; 0x1a58 <main+0x48>
	char id1[4]={'d','a','n'};
    1acc:	fe 01       	movw	r30, r28
    1ace:	ed 57       	subi	r30, 0x7D	; 125
    1ad0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ad2:	10 82       	st	Z, r1
    1ad4:	11 82       	std	Z+1, r1	; 0x01
    1ad6:	12 82       	std	Z+2, r1	; 0x02
    1ad8:	13 82       	std	Z+3, r1	; 0x03
    1ada:	fe 01       	movw	r30, r28
    1adc:	ed 57       	subi	r30, 0x7D	; 125
    1ade:	fe 4f       	sbci	r31, 0xFE	; 254
    1ae0:	84 e6       	ldi	r24, 0x64	; 100
    1ae2:	80 83       	st	Z, r24
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	ed 57       	subi	r30, 0x7D	; 125
    1ae8:	fe 4f       	sbci	r31, 0xFE	; 254
    1aea:	81 e6       	ldi	r24, 0x61	; 97
    1aec:	81 83       	std	Z+1, r24	; 0x01
    1aee:	fe 01       	movw	r30, r28
    1af0:	ed 57       	subi	r30, 0x7D	; 125
    1af2:	fe 4f       	sbci	r31, 0xFE	; 254
    1af4:	8e e6       	ldi	r24, 0x6E	; 110
    1af6:	82 83       	std	Z+2, r24	; 0x02
	char id2[4]={'m','a','n'};
    1af8:	fe 01       	movw	r30, r28
    1afa:	e9 57       	subi	r30, 0x79	; 121
    1afc:	fe 4f       	sbci	r31, 0xFE	; 254
    1afe:	10 82       	st	Z, r1
    1b00:	11 82       	std	Z+1, r1	; 0x01
    1b02:	12 82       	std	Z+2, r1	; 0x02
    1b04:	13 82       	std	Z+3, r1	; 0x03
    1b06:	fe 01       	movw	r30, r28
    1b08:	e9 57       	subi	r30, 0x79	; 121
    1b0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b0c:	8d e6       	ldi	r24, 0x6D	; 109
    1b0e:	80 83       	st	Z, r24
    1b10:	fe 01       	movw	r30, r28
    1b12:	e9 57       	subi	r30, 0x79	; 121
    1b14:	fe 4f       	sbci	r31, 0xFE	; 254
    1b16:	81 e6       	ldi	r24, 0x61	; 97
    1b18:	81 83       	std	Z+1, r24	; 0x01
    1b1a:	fe 01       	movw	r30, r28
    1b1c:	e9 57       	subi	r30, 0x79	; 121
    1b1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b20:	8e e6       	ldi	r24, 0x6E	; 110
    1b22:	82 83       	std	Z+2, r24	; 0x02
	char id3[4]={'c','a','b'};
    1b24:	fe 01       	movw	r30, r28
    1b26:	e5 57       	subi	r30, 0x75	; 117
    1b28:	fe 4f       	sbci	r31, 0xFE	; 254
    1b2a:	10 82       	st	Z, r1
    1b2c:	11 82       	std	Z+1, r1	; 0x01
    1b2e:	12 82       	std	Z+2, r1	; 0x02
    1b30:	13 82       	std	Z+3, r1	; 0x03
    1b32:	fe 01       	movw	r30, r28
    1b34:	e5 57       	subi	r30, 0x75	; 117
    1b36:	fe 4f       	sbci	r31, 0xFE	; 254
    1b38:	83 e6       	ldi	r24, 0x63	; 99
    1b3a:	80 83       	st	Z, r24
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	e5 57       	subi	r30, 0x75	; 117
    1b40:	fe 4f       	sbci	r31, 0xFE	; 254
    1b42:	81 e6       	ldi	r24, 0x61	; 97
    1b44:	81 83       	std	Z+1, r24	; 0x01
    1b46:	fe 01       	movw	r30, r28
    1b48:	e5 57       	subi	r30, 0x75	; 117
    1b4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b4c:	82 e6       	ldi	r24, 0x62	; 98
    1b4e:	82 83       	std	Z+2, r24	; 0x02
	char pass1[4]={2,2,5};
    1b50:	fe 01       	movw	r30, r28
    1b52:	e1 57       	subi	r30, 0x71	; 113
    1b54:	fe 4f       	sbci	r31, 0xFE	; 254
    1b56:	10 82       	st	Z, r1
    1b58:	11 82       	std	Z+1, r1	; 0x01
    1b5a:	12 82       	std	Z+2, r1	; 0x02
    1b5c:	13 82       	std	Z+3, r1	; 0x03
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e1 57       	subi	r30, 0x71	; 113
    1b62:	fe 4f       	sbci	r31, 0xFE	; 254
    1b64:	82 e0       	ldi	r24, 0x02	; 2
    1b66:	80 83       	st	Z, r24
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e1 57       	subi	r30, 0x71	; 113
    1b6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b6e:	82 e0       	ldi	r24, 0x02	; 2
    1b70:	81 83       	std	Z+1, r24	; 0x01
    1b72:	fe 01       	movw	r30, r28
    1b74:	e1 57       	subi	r30, 0x71	; 113
    1b76:	fe 4f       	sbci	r31, 0xFE	; 254
    1b78:	85 e0       	ldi	r24, 0x05	; 5
    1b7a:	82 83       	std	Z+2, r24	; 0x02
	char pass2[4]={3,2,7};
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	ed 56       	subi	r30, 0x6D	; 109
    1b80:	fe 4f       	sbci	r31, 0xFE	; 254
    1b82:	10 82       	st	Z, r1
    1b84:	11 82       	std	Z+1, r1	; 0x01
    1b86:	12 82       	std	Z+2, r1	; 0x02
    1b88:	13 82       	std	Z+3, r1	; 0x03
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	ed 56       	subi	r30, 0x6D	; 109
    1b8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b90:	83 e0       	ldi	r24, 0x03	; 3
    1b92:	80 83       	st	Z, r24
    1b94:	fe 01       	movw	r30, r28
    1b96:	ed 56       	subi	r30, 0x6D	; 109
    1b98:	fe 4f       	sbci	r31, 0xFE	; 254
    1b9a:	82 e0       	ldi	r24, 0x02	; 2
    1b9c:	81 83       	std	Z+1, r24	; 0x01
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	ed 56       	subi	r30, 0x6D	; 109
    1ba2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba4:	87 e0       	ldi	r24, 0x07	; 7
    1ba6:	82 83       	std	Z+2, r24	; 0x02
	char pass3[4]={8,6,9};
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e9 56       	subi	r30, 0x69	; 105
    1bac:	fe 4f       	sbci	r31, 0xFE	; 254
    1bae:	10 82       	st	Z, r1
    1bb0:	11 82       	std	Z+1, r1	; 0x01
    1bb2:	12 82       	std	Z+2, r1	; 0x02
    1bb4:	13 82       	std	Z+3, r1	; 0x03
    1bb6:	fe 01       	movw	r30, r28
    1bb8:	e9 56       	subi	r30, 0x69	; 105
    1bba:	fe 4f       	sbci	r31, 0xFE	; 254
    1bbc:	88 e0       	ldi	r24, 0x08	; 8
    1bbe:	80 83       	st	Z, r24
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e9 56       	subi	r30, 0x69	; 105
    1bc4:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc6:	86 e0       	ldi	r24, 0x06	; 6
    1bc8:	81 83       	std	Z+1, r24	; 0x01
    1bca:	fe 01       	movw	r30, r28
    1bcc:	e9 56       	subi	r30, 0x69	; 105
    1bce:	fe 4f       	sbci	r31, 0xFE	; 254
    1bd0:	89 e0       	ldi	r24, 0x09	; 9
    1bd2:	82 83       	std	Z+2, r24	; 0x02
	u8 loc=0x80;
    1bd4:	fe 01       	movw	r30, r28
    1bd6:	e0 59       	subi	r30, 0x90	; 144
    1bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1bda:	80 e8       	ldi	r24, 0x80	; 128
    1bdc:	80 83       	st	Z, r24
	u8 loc2=0xC0;
    1bde:	fe 01       	movw	r30, r28
    1be0:	e1 59       	subi	r30, 0x91	; 145
    1be2:	fe 4f       	sbci	r31, 0xFE	; 254
    1be4:	80 ec       	ldi	r24, 0xC0	; 192
    1be6:	80 83       	st	Z, r24
	u8 error_loc1=0x85;
    1be8:	fe 01       	movw	r30, r28
    1bea:	e2 59       	subi	r30, 0x92	; 146
    1bec:	fe 4f       	sbci	r31, 0xFE	; 254
    1bee:	85 e8       	ldi	r24, 0x85	; 133
    1bf0:	80 83       	st	Z, r24
	u8 error_loc2=0xC5;
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	e3 59       	subi	r30, 0x93	; 147
    1bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf8:	85 ec       	ldi	r24, 0xC5	; 197
    1bfa:	80 83       	st	Z, r24
	count=0;
    1bfc:	fe 01       	movw	r30, r28
    1bfe:	ee 58       	subi	r30, 0x8E	; 142
    1c00:	fe 4f       	sbci	r31, 0xFE	; 254
    1c02:	10 82       	st	Z, r1
	Dio_vidSetPinDir(DIO_u8PIN_0,DIO_u8INPUT);
    1c04:	80 e0       	ldi	r24, 0x00	; 0
    1c06:	60 e0       	ldi	r22, 0x00	; 0
    1c08:	0e 94 62 06 	call	0xcc4	; 0xcc4 <Dio_vidSetPinDir>
	Dio_vidSetPinVal(DIO_u8PIN_0,DIO_u8HIGH); //pullup resistor
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	61 e0       	ldi	r22, 0x01	; 1
    1c10:	0e 94 4d 07 	call	0xe9a	; 0xe9a <Dio_vidSetPinVal>
	Lcd_vidInit();
    1c14:	0e 94 4a 0b 	call	0x1694	; 0x1694 <Lcd_vidInit>
	while(1){
		x=PINA;
    1c18:	e9 e3       	ldi	r30, 0x39	; 57
    1c1a:	f0 e0       	ldi	r31, 0x00	; 0
    1c1c:	de 01       	movw	r26, r28
    1c1e:	ac 58       	subi	r26, 0x8C	; 140
    1c20:	be 4f       	sbci	r27, 0xFE	; 254
    1c22:	80 81       	ld	r24, Z
    1c24:	8c 93       	st	X, r24

		if(x==1){
    1c26:	fe 01       	movw	r30, r28
    1c28:	ec 58       	subi	r30, 0x8C	; 140
    1c2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c2c:	80 81       	ld	r24, Z
    1c2e:	81 30       	cpi	r24, 0x01	; 1
    1c30:	11 f0       	breq	.+4      	; 0x1c36 <main+0x226>
    1c32:	0c 94 ec 1a 	jmp	0x35d8	; 0x35d8 <main+0x1bc8>
			do{
				for(i=0; i<3; i++){
    1c36:	fe 01       	movw	r30, r28
    1c38:	ed 58       	subi	r30, 0x8D	; 141
    1c3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c3c:	10 82       	st	Z, r1
    1c3e:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0x1916>
					key=Keypad_u8GetKey();
    1c42:	0e 94 47 08 	call	0x108e	; 0x108e <Keypad_u8GetKey>
    1c46:	fe 01       	movw	r30, r28
    1c48:	eb 58       	subi	r30, 0x8B	; 139
    1c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c4c:	80 83       	st	Z, r24
					Lcd_vidSendCommand(loc);
    1c4e:	fe 01       	movw	r30, r28
    1c50:	e0 59       	subi	r30, 0x90	; 144
    1c52:	fe 4f       	sbci	r31, 0xFE	; 254
    1c54:	80 81       	ld	r24, Z
    1c56:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
					if(key!=0xFF){
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	eb 58       	subi	r30, 0x8B	; 139
    1c5e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c60:	80 81       	ld	r24, Z
    1c62:	8f 3f       	cpi	r24, 0xFF	; 255
    1c64:	11 f4       	brne	.+4      	; 0x1c6a <main+0x25a>
    1c66:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
					if((key!='=')&&(key!='#')){
    1c6a:	fe 01       	movw	r30, r28
    1c6c:	eb 58       	subi	r30, 0x8B	; 139
    1c6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c70:	80 81       	ld	r24, Z
    1c72:	8d 33       	cpi	r24, 0x3D	; 61
    1c74:	11 f4       	brne	.+4      	; 0x1c7a <main+0x26a>
    1c76:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
    1c7a:	fe 01       	movw	r30, r28
    1c7c:	eb 58       	subi	r30, 0x8B	; 139
    1c7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c80:	80 81       	ld	r24, Z
    1c82:	83 32       	cpi	r24, 0x23	; 35
    1c84:	11 f4       	brne	.+4      	; 0x1c8a <main+0x27a>
    1c86:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
						if(key==1){
    1c8a:	fe 01       	movw	r30, r28
    1c8c:	eb 58       	subi	r30, 0x8B	; 139
    1c8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c90:	80 81       	ld	r24, Z
    1c92:	81 30       	cpi	r24, 0x01	; 1
    1c94:	09 f0       	breq	.+2      	; 0x1c98 <main+0x288>
    1c96:	c8 c0       	rjmp	.+400    	; 0x1e28 <main+0x418>
							id[i]='a';
    1c98:	fe 01       	movw	r30, r28
    1c9a:	ed 58       	subi	r30, 0x8D	; 141
    1c9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c9e:	80 81       	ld	r24, Z
    1ca0:	28 2f       	mov	r18, r24
    1ca2:	30 e0       	ldi	r19, 0x00	; 0
    1ca4:	ce 01       	movw	r24, r28
    1ca6:	8a 58       	subi	r24, 0x8A	; 138
    1ca8:	9e 4f       	sbci	r25, 0xFE	; 254
    1caa:	fc 01       	movw	r30, r24
    1cac:	e2 0f       	add	r30, r18
    1cae:	f3 1f       	adc	r31, r19
    1cb0:	81 e6       	ldi	r24, 0x61	; 97
    1cb2:	80 83       	st	Z, r24
							Lcd_vidWriteChar('a');
    1cb4:	81 e6       	ldi	r24, 0x61	; 97
    1cb6:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    1cba:	fe 01       	movw	r30, r28
    1cbc:	e7 59       	subi	r30, 0x97	; 151
    1cbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	aa ef       	ldi	r26, 0xFA	; 250
    1cc6:	b4 e4       	ldi	r27, 0x44	; 68
    1cc8:	80 83       	st	Z, r24
    1cca:	91 83       	std	Z+1, r25	; 0x01
    1ccc:	a2 83       	std	Z+2, r26	; 0x02
    1cce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cd0:	8e 01       	movw	r16, r28
    1cd2:	0b 59       	subi	r16, 0x9B	; 155
    1cd4:	1e 4f       	sbci	r17, 0xFE	; 254
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	e7 59       	subi	r30, 0x97	; 151
    1cda:	fe 4f       	sbci	r31, 0xFE	; 254
    1cdc:	60 81       	ld	r22, Z
    1cde:	71 81       	ldd	r23, Z+1	; 0x01
    1ce0:	82 81       	ldd	r24, Z+2	; 0x02
    1ce2:	93 81       	ldd	r25, Z+3	; 0x03
    1ce4:	20 e0       	ldi	r18, 0x00	; 0
    1ce6:	30 e0       	ldi	r19, 0x00	; 0
    1ce8:	4a ef       	ldi	r20, 0xFA	; 250
    1cea:	54 e4       	ldi	r21, 0x44	; 68
    1cec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cf0:	dc 01       	movw	r26, r24
    1cf2:	cb 01       	movw	r24, r22
    1cf4:	f8 01       	movw	r30, r16
    1cf6:	80 83       	st	Z, r24
    1cf8:	91 83       	std	Z+1, r25	; 0x01
    1cfa:	a2 83       	std	Z+2, r26	; 0x02
    1cfc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cfe:	fe 01       	movw	r30, r28
    1d00:	eb 59       	subi	r30, 0x9B	; 155
    1d02:	fe 4f       	sbci	r31, 0xFE	; 254
    1d04:	60 81       	ld	r22, Z
    1d06:	71 81       	ldd	r23, Z+1	; 0x01
    1d08:	82 81       	ldd	r24, Z+2	; 0x02
    1d0a:	93 81       	ldd	r25, Z+3	; 0x03
    1d0c:	20 e0       	ldi	r18, 0x00	; 0
    1d0e:	30 e0       	ldi	r19, 0x00	; 0
    1d10:	40 e8       	ldi	r20, 0x80	; 128
    1d12:	5f e3       	ldi	r21, 0x3F	; 63
    1d14:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d18:	88 23       	and	r24, r24
    1d1a:	44 f4       	brge	.+16     	; 0x1d2c <main+0x31c>
		__ticks = 1;
    1d1c:	fe 01       	movw	r30, r28
    1d1e:	ed 59       	subi	r30, 0x9D	; 157
    1d20:	fe 4f       	sbci	r31, 0xFE	; 254
    1d22:	81 e0       	ldi	r24, 0x01	; 1
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	91 83       	std	Z+1, r25	; 0x01
    1d28:	80 83       	st	Z, r24
    1d2a:	65 c0       	rjmp	.+202    	; 0x1df6 <main+0x3e6>
	else if (__tmp > 65535)
    1d2c:	fe 01       	movw	r30, r28
    1d2e:	eb 59       	subi	r30, 0x9B	; 155
    1d30:	fe 4f       	sbci	r31, 0xFE	; 254
    1d32:	60 81       	ld	r22, Z
    1d34:	71 81       	ldd	r23, Z+1	; 0x01
    1d36:	82 81       	ldd	r24, Z+2	; 0x02
    1d38:	93 81       	ldd	r25, Z+3	; 0x03
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	3f ef       	ldi	r19, 0xFF	; 255
    1d3e:	4f e7       	ldi	r20, 0x7F	; 127
    1d40:	57 e4       	ldi	r21, 0x47	; 71
    1d42:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d46:	18 16       	cp	r1, r24
    1d48:	0c f0       	brlt	.+2      	; 0x1d4c <main+0x33c>
    1d4a:	44 c0       	rjmp	.+136    	; 0x1dd4 <main+0x3c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	e7 59       	subi	r30, 0x97	; 151
    1d50:	fe 4f       	sbci	r31, 0xFE	; 254
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	20 e0       	ldi	r18, 0x00	; 0
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	40 e2       	ldi	r20, 0x20	; 32
    1d60:	51 e4       	ldi	r21, 0x41	; 65
    1d62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d66:	dc 01       	movw	r26, r24
    1d68:	cb 01       	movw	r24, r22
    1d6a:	8e 01       	movw	r16, r28
    1d6c:	0d 59       	subi	r16, 0x9D	; 157
    1d6e:	1e 4f       	sbci	r17, 0xFE	; 254
    1d70:	bc 01       	movw	r22, r24
    1d72:	cd 01       	movw	r24, r26
    1d74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d78:	dc 01       	movw	r26, r24
    1d7a:	cb 01       	movw	r24, r22
    1d7c:	f8 01       	movw	r30, r16
    1d7e:	91 83       	std	Z+1, r25	; 0x01
    1d80:	80 83       	st	Z, r24
    1d82:	1f c0       	rjmp	.+62     	; 0x1dc2 <main+0x3b2>
    1d84:	fe 01       	movw	r30, r28
    1d86:	ef 59       	subi	r30, 0x9F	; 159
    1d88:	fe 4f       	sbci	r31, 0xFE	; 254
    1d8a:	88 ec       	ldi	r24, 0xC8	; 200
    1d8c:	90 e0       	ldi	r25, 0x00	; 0
    1d8e:	91 83       	std	Z+1, r25	; 0x01
    1d90:	80 83       	st	Z, r24
    1d92:	fe 01       	movw	r30, r28
    1d94:	ef 59       	subi	r30, 0x9F	; 159
    1d96:	fe 4f       	sbci	r31, 0xFE	; 254
    1d98:	80 81       	ld	r24, Z
    1d9a:	91 81       	ldd	r25, Z+1	; 0x01
    1d9c:	01 97       	sbiw	r24, 0x01	; 1
    1d9e:	f1 f7       	brne	.-4      	; 0x1d9c <main+0x38c>
    1da0:	fe 01       	movw	r30, r28
    1da2:	ef 59       	subi	r30, 0x9F	; 159
    1da4:	fe 4f       	sbci	r31, 0xFE	; 254
    1da6:	91 83       	std	Z+1, r25	; 0x01
    1da8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1daa:	de 01       	movw	r26, r28
    1dac:	ad 59       	subi	r26, 0x9D	; 157
    1dae:	be 4f       	sbci	r27, 0xFE	; 254
    1db0:	fe 01       	movw	r30, r28
    1db2:	ed 59       	subi	r30, 0x9D	; 157
    1db4:	fe 4f       	sbci	r31, 0xFE	; 254
    1db6:	80 81       	ld	r24, Z
    1db8:	91 81       	ldd	r25, Z+1	; 0x01
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	11 96       	adiw	r26, 0x01	; 1
    1dbe:	9c 93       	st	X, r25
    1dc0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dc2:	fe 01       	movw	r30, r28
    1dc4:	ed 59       	subi	r30, 0x9D	; 157
    1dc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc8:	80 81       	ld	r24, Z
    1dca:	91 81       	ldd	r25, Z+1	; 0x01
    1dcc:	00 97       	sbiw	r24, 0x00	; 0
    1dce:	d1 f6       	brne	.-76     	; 0x1d84 <main+0x374>
    1dd0:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dd4:	8e 01       	movw	r16, r28
    1dd6:	0d 59       	subi	r16, 0x9D	; 157
    1dd8:	1e 4f       	sbci	r17, 0xFE	; 254
    1dda:	fe 01       	movw	r30, r28
    1ddc:	eb 59       	subi	r30, 0x9B	; 155
    1dde:	fe 4f       	sbci	r31, 0xFE	; 254
    1de0:	60 81       	ld	r22, Z
    1de2:	71 81       	ldd	r23, Z+1	; 0x01
    1de4:	82 81       	ldd	r24, Z+2	; 0x02
    1de6:	93 81       	ldd	r25, Z+3	; 0x03
    1de8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dec:	dc 01       	movw	r26, r24
    1dee:	cb 01       	movw	r24, r22
    1df0:	f8 01       	movw	r30, r16
    1df2:	91 83       	std	Z+1, r25	; 0x01
    1df4:	80 83       	st	Z, r24
    1df6:	de 01       	movw	r26, r28
    1df8:	a1 5a       	subi	r26, 0xA1	; 161
    1dfa:	be 4f       	sbci	r27, 0xFE	; 254
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	ed 59       	subi	r30, 0x9D	; 157
    1e00:	fe 4f       	sbci	r31, 0xFE	; 254
    1e02:	80 81       	ld	r24, Z
    1e04:	91 81       	ldd	r25, Z+1	; 0x01
    1e06:	11 96       	adiw	r26, 0x01	; 1
    1e08:	9c 93       	st	X, r25
    1e0a:	8e 93       	st	-X, r24
    1e0c:	fe 01       	movw	r30, r28
    1e0e:	e1 5a       	subi	r30, 0xA1	; 161
    1e10:	fe 4f       	sbci	r31, 0xFE	; 254
    1e12:	80 81       	ld	r24, Z
    1e14:	91 81       	ldd	r25, Z+1	; 0x01
    1e16:	01 97       	sbiw	r24, 0x01	; 1
    1e18:	f1 f7       	brne	.-4      	; 0x1e16 <main+0x406>
    1e1a:	fe 01       	movw	r30, r28
    1e1c:	e1 5a       	subi	r30, 0xA1	; 161
    1e1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e20:	91 83       	std	Z+1, r25	; 0x01
    1e22:	80 83       	st	Z, r24
    1e24:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==2){
    1e28:	fe 01       	movw	r30, r28
    1e2a:	eb 58       	subi	r30, 0x8B	; 139
    1e2c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e2e:	80 81       	ld	r24, Z
    1e30:	82 30       	cpi	r24, 0x02	; 2
    1e32:	09 f0       	breq	.+2      	; 0x1e36 <main+0x426>
    1e34:	c8 c0       	rjmp	.+400    	; 0x1fc6 <main+0x5b6>
							id[i]='b';
    1e36:	fe 01       	movw	r30, r28
    1e38:	ed 58       	subi	r30, 0x8D	; 141
    1e3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3c:	80 81       	ld	r24, Z
    1e3e:	28 2f       	mov	r18, r24
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	ce 01       	movw	r24, r28
    1e44:	8a 58       	subi	r24, 0x8A	; 138
    1e46:	9e 4f       	sbci	r25, 0xFE	; 254
    1e48:	fc 01       	movw	r30, r24
    1e4a:	e2 0f       	add	r30, r18
    1e4c:	f3 1f       	adc	r31, r19
    1e4e:	82 e6       	ldi	r24, 0x62	; 98
    1e50:	80 83       	st	Z, r24
							Lcd_vidWriteChar('b');
    1e52:	82 e6       	ldi	r24, 0x62	; 98
    1e54:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    1e58:	fe 01       	movw	r30, r28
    1e5a:	e5 5a       	subi	r30, 0xA5	; 165
    1e5c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	aa ef       	ldi	r26, 0xFA	; 250
    1e64:	b4 e4       	ldi	r27, 0x44	; 68
    1e66:	80 83       	st	Z, r24
    1e68:	91 83       	std	Z+1, r25	; 0x01
    1e6a:	a2 83       	std	Z+2, r26	; 0x02
    1e6c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e6e:	8e 01       	movw	r16, r28
    1e70:	09 5a       	subi	r16, 0xA9	; 169
    1e72:	1e 4f       	sbci	r17, 0xFE	; 254
    1e74:	fe 01       	movw	r30, r28
    1e76:	e5 5a       	subi	r30, 0xA5	; 165
    1e78:	fe 4f       	sbci	r31, 0xFE	; 254
    1e7a:	60 81       	ld	r22, Z
    1e7c:	71 81       	ldd	r23, Z+1	; 0x01
    1e7e:	82 81       	ldd	r24, Z+2	; 0x02
    1e80:	93 81       	ldd	r25, Z+3	; 0x03
    1e82:	20 e0       	ldi	r18, 0x00	; 0
    1e84:	30 e0       	ldi	r19, 0x00	; 0
    1e86:	4a ef       	ldi	r20, 0xFA	; 250
    1e88:	54 e4       	ldi	r21, 0x44	; 68
    1e8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e8e:	dc 01       	movw	r26, r24
    1e90:	cb 01       	movw	r24, r22
    1e92:	f8 01       	movw	r30, r16
    1e94:	80 83       	st	Z, r24
    1e96:	91 83       	std	Z+1, r25	; 0x01
    1e98:	a2 83       	std	Z+2, r26	; 0x02
    1e9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e9c:	fe 01       	movw	r30, r28
    1e9e:	e9 5a       	subi	r30, 0xA9	; 169
    1ea0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ea2:	60 81       	ld	r22, Z
    1ea4:	71 81       	ldd	r23, Z+1	; 0x01
    1ea6:	82 81       	ldd	r24, Z+2	; 0x02
    1ea8:	93 81       	ldd	r25, Z+3	; 0x03
    1eaa:	20 e0       	ldi	r18, 0x00	; 0
    1eac:	30 e0       	ldi	r19, 0x00	; 0
    1eae:	40 e8       	ldi	r20, 0x80	; 128
    1eb0:	5f e3       	ldi	r21, 0x3F	; 63
    1eb2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eb6:	88 23       	and	r24, r24
    1eb8:	44 f4       	brge	.+16     	; 0x1eca <main+0x4ba>
		__ticks = 1;
    1eba:	fe 01       	movw	r30, r28
    1ebc:	eb 5a       	subi	r30, 0xAB	; 171
    1ebe:	fe 4f       	sbci	r31, 0xFE	; 254
    1ec0:	81 e0       	ldi	r24, 0x01	; 1
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	91 83       	std	Z+1, r25	; 0x01
    1ec6:	80 83       	st	Z, r24
    1ec8:	65 c0       	rjmp	.+202    	; 0x1f94 <main+0x584>
	else if (__tmp > 65535)
    1eca:	fe 01       	movw	r30, r28
    1ecc:	e9 5a       	subi	r30, 0xA9	; 169
    1ece:	fe 4f       	sbci	r31, 0xFE	; 254
    1ed0:	60 81       	ld	r22, Z
    1ed2:	71 81       	ldd	r23, Z+1	; 0x01
    1ed4:	82 81       	ldd	r24, Z+2	; 0x02
    1ed6:	93 81       	ldd	r25, Z+3	; 0x03
    1ed8:	20 e0       	ldi	r18, 0x00	; 0
    1eda:	3f ef       	ldi	r19, 0xFF	; 255
    1edc:	4f e7       	ldi	r20, 0x7F	; 127
    1ede:	57 e4       	ldi	r21, 0x47	; 71
    1ee0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ee4:	18 16       	cp	r1, r24
    1ee6:	0c f0       	brlt	.+2      	; 0x1eea <main+0x4da>
    1ee8:	44 c0       	rjmp	.+136    	; 0x1f72 <main+0x562>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eea:	fe 01       	movw	r30, r28
    1eec:	e5 5a       	subi	r30, 0xA5	; 165
    1eee:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef0:	60 81       	ld	r22, Z
    1ef2:	71 81       	ldd	r23, Z+1	; 0x01
    1ef4:	82 81       	ldd	r24, Z+2	; 0x02
    1ef6:	93 81       	ldd	r25, Z+3	; 0x03
    1ef8:	20 e0       	ldi	r18, 0x00	; 0
    1efa:	30 e0       	ldi	r19, 0x00	; 0
    1efc:	40 e2       	ldi	r20, 0x20	; 32
    1efe:	51 e4       	ldi	r21, 0x41	; 65
    1f00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f04:	dc 01       	movw	r26, r24
    1f06:	cb 01       	movw	r24, r22
    1f08:	8e 01       	movw	r16, r28
    1f0a:	0b 5a       	subi	r16, 0xAB	; 171
    1f0c:	1e 4f       	sbci	r17, 0xFE	; 254
    1f0e:	bc 01       	movw	r22, r24
    1f10:	cd 01       	movw	r24, r26
    1f12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f16:	dc 01       	movw	r26, r24
    1f18:	cb 01       	movw	r24, r22
    1f1a:	f8 01       	movw	r30, r16
    1f1c:	91 83       	std	Z+1, r25	; 0x01
    1f1e:	80 83       	st	Z, r24
    1f20:	1f c0       	rjmp	.+62     	; 0x1f60 <main+0x550>
    1f22:	fe 01       	movw	r30, r28
    1f24:	ed 5a       	subi	r30, 0xAD	; 173
    1f26:	fe 4f       	sbci	r31, 0xFE	; 254
    1f28:	88 ec       	ldi	r24, 0xC8	; 200
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	91 83       	std	Z+1, r25	; 0x01
    1f2e:	80 83       	st	Z, r24
    1f30:	fe 01       	movw	r30, r28
    1f32:	ed 5a       	subi	r30, 0xAD	; 173
    1f34:	fe 4f       	sbci	r31, 0xFE	; 254
    1f36:	80 81       	ld	r24, Z
    1f38:	91 81       	ldd	r25, Z+1	; 0x01
    1f3a:	01 97       	sbiw	r24, 0x01	; 1
    1f3c:	f1 f7       	brne	.-4      	; 0x1f3a <main+0x52a>
    1f3e:	fe 01       	movw	r30, r28
    1f40:	ed 5a       	subi	r30, 0xAD	; 173
    1f42:	fe 4f       	sbci	r31, 0xFE	; 254
    1f44:	91 83       	std	Z+1, r25	; 0x01
    1f46:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f48:	de 01       	movw	r26, r28
    1f4a:	ab 5a       	subi	r26, 0xAB	; 171
    1f4c:	be 4f       	sbci	r27, 0xFE	; 254
    1f4e:	fe 01       	movw	r30, r28
    1f50:	eb 5a       	subi	r30, 0xAB	; 171
    1f52:	fe 4f       	sbci	r31, 0xFE	; 254
    1f54:	80 81       	ld	r24, Z
    1f56:	91 81       	ldd	r25, Z+1	; 0x01
    1f58:	01 97       	sbiw	r24, 0x01	; 1
    1f5a:	11 96       	adiw	r26, 0x01	; 1
    1f5c:	9c 93       	st	X, r25
    1f5e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f60:	fe 01       	movw	r30, r28
    1f62:	eb 5a       	subi	r30, 0xAB	; 171
    1f64:	fe 4f       	sbci	r31, 0xFE	; 254
    1f66:	80 81       	ld	r24, Z
    1f68:	91 81       	ldd	r25, Z+1	; 0x01
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	d1 f6       	brne	.-76     	; 0x1f22 <main+0x512>
    1f6e:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f72:	8e 01       	movw	r16, r28
    1f74:	0b 5a       	subi	r16, 0xAB	; 171
    1f76:	1e 4f       	sbci	r17, 0xFE	; 254
    1f78:	fe 01       	movw	r30, r28
    1f7a:	e9 5a       	subi	r30, 0xA9	; 169
    1f7c:	fe 4f       	sbci	r31, 0xFE	; 254
    1f7e:	60 81       	ld	r22, Z
    1f80:	71 81       	ldd	r23, Z+1	; 0x01
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	f8 01       	movw	r30, r16
    1f90:	91 83       	std	Z+1, r25	; 0x01
    1f92:	80 83       	st	Z, r24
    1f94:	de 01       	movw	r26, r28
    1f96:	af 5a       	subi	r26, 0xAF	; 175
    1f98:	be 4f       	sbci	r27, 0xFE	; 254
    1f9a:	fe 01       	movw	r30, r28
    1f9c:	eb 5a       	subi	r30, 0xAB	; 171
    1f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa0:	80 81       	ld	r24, Z
    1fa2:	91 81       	ldd	r25, Z+1	; 0x01
    1fa4:	11 96       	adiw	r26, 0x01	; 1
    1fa6:	9c 93       	st	X, r25
    1fa8:	8e 93       	st	-X, r24
    1faa:	fe 01       	movw	r30, r28
    1fac:	ef 5a       	subi	r30, 0xAF	; 175
    1fae:	fe 4f       	sbci	r31, 0xFE	; 254
    1fb0:	80 81       	ld	r24, Z
    1fb2:	91 81       	ldd	r25, Z+1	; 0x01
    1fb4:	01 97       	sbiw	r24, 0x01	; 1
    1fb6:	f1 f7       	brne	.-4      	; 0x1fb4 <main+0x5a4>
    1fb8:	fe 01       	movw	r30, r28
    1fba:	ef 5a       	subi	r30, 0xAF	; 175
    1fbc:	fe 4f       	sbci	r31, 0xFE	; 254
    1fbe:	91 83       	std	Z+1, r25	; 0x01
    1fc0:	80 83       	st	Z, r24
    1fc2:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==3){
    1fc6:	fe 01       	movw	r30, r28
    1fc8:	eb 58       	subi	r30, 0x8B	; 139
    1fca:	fe 4f       	sbci	r31, 0xFE	; 254
    1fcc:	80 81       	ld	r24, Z
    1fce:	83 30       	cpi	r24, 0x03	; 3
    1fd0:	09 f0       	breq	.+2      	; 0x1fd4 <main+0x5c4>
    1fd2:	c8 c0       	rjmp	.+400    	; 0x2164 <main+0x754>
							id[i]='c';
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	ed 58       	subi	r30, 0x8D	; 141
    1fd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1fda:	80 81       	ld	r24, Z
    1fdc:	28 2f       	mov	r18, r24
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	ce 01       	movw	r24, r28
    1fe2:	8a 58       	subi	r24, 0x8A	; 138
    1fe4:	9e 4f       	sbci	r25, 0xFE	; 254
    1fe6:	fc 01       	movw	r30, r24
    1fe8:	e2 0f       	add	r30, r18
    1fea:	f3 1f       	adc	r31, r19
    1fec:	83 e6       	ldi	r24, 0x63	; 99
    1fee:	80 83       	st	Z, r24
							Lcd_vidWriteChar('c');
    1ff0:	83 e6       	ldi	r24, 0x63	; 99
    1ff2:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e3 5b       	subi	r30, 0xB3	; 179
    1ffa:	fe 4f       	sbci	r31, 0xFE	; 254
    1ffc:	80 e0       	ldi	r24, 0x00	; 0
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	aa ef       	ldi	r26, 0xFA	; 250
    2002:	b4 e4       	ldi	r27, 0x44	; 68
    2004:	80 83       	st	Z, r24
    2006:	91 83       	std	Z+1, r25	; 0x01
    2008:	a2 83       	std	Z+2, r26	; 0x02
    200a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    200c:	8e 01       	movw	r16, r28
    200e:	07 5b       	subi	r16, 0xB7	; 183
    2010:	1e 4f       	sbci	r17, 0xFE	; 254
    2012:	fe 01       	movw	r30, r28
    2014:	e3 5b       	subi	r30, 0xB3	; 179
    2016:	fe 4f       	sbci	r31, 0xFE	; 254
    2018:	60 81       	ld	r22, Z
    201a:	71 81       	ldd	r23, Z+1	; 0x01
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	4a ef       	ldi	r20, 0xFA	; 250
    2026:	54 e4       	ldi	r21, 0x44	; 68
    2028:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    202c:	dc 01       	movw	r26, r24
    202e:	cb 01       	movw	r24, r22
    2030:	f8 01       	movw	r30, r16
    2032:	80 83       	st	Z, r24
    2034:	91 83       	std	Z+1, r25	; 0x01
    2036:	a2 83       	std	Z+2, r26	; 0x02
    2038:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    203a:	fe 01       	movw	r30, r28
    203c:	e7 5b       	subi	r30, 0xB7	; 183
    203e:	fe 4f       	sbci	r31, 0xFE	; 254
    2040:	60 81       	ld	r22, Z
    2042:	71 81       	ldd	r23, Z+1	; 0x01
    2044:	82 81       	ldd	r24, Z+2	; 0x02
    2046:	93 81       	ldd	r25, Z+3	; 0x03
    2048:	20 e0       	ldi	r18, 0x00	; 0
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	40 e8       	ldi	r20, 0x80	; 128
    204e:	5f e3       	ldi	r21, 0x3F	; 63
    2050:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2054:	88 23       	and	r24, r24
    2056:	44 f4       	brge	.+16     	; 0x2068 <main+0x658>
		__ticks = 1;
    2058:	fe 01       	movw	r30, r28
    205a:	e9 5b       	subi	r30, 0xB9	; 185
    205c:	fe 4f       	sbci	r31, 0xFE	; 254
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	80 83       	st	Z, r24
    2066:	65 c0       	rjmp	.+202    	; 0x2132 <main+0x722>
	else if (__tmp > 65535)
    2068:	fe 01       	movw	r30, r28
    206a:	e7 5b       	subi	r30, 0xB7	; 183
    206c:	fe 4f       	sbci	r31, 0xFE	; 254
    206e:	60 81       	ld	r22, Z
    2070:	71 81       	ldd	r23, Z+1	; 0x01
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	93 81       	ldd	r25, Z+3	; 0x03
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	3f ef       	ldi	r19, 0xFF	; 255
    207a:	4f e7       	ldi	r20, 0x7F	; 127
    207c:	57 e4       	ldi	r21, 0x47	; 71
    207e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2082:	18 16       	cp	r1, r24
    2084:	0c f0       	brlt	.+2      	; 0x2088 <main+0x678>
    2086:	44 c0       	rjmp	.+136    	; 0x2110 <main+0x700>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2088:	fe 01       	movw	r30, r28
    208a:	e3 5b       	subi	r30, 0xB3	; 179
    208c:	fe 4f       	sbci	r31, 0xFE	; 254
    208e:	60 81       	ld	r22, Z
    2090:	71 81       	ldd	r23, Z+1	; 0x01
    2092:	82 81       	ldd	r24, Z+2	; 0x02
    2094:	93 81       	ldd	r25, Z+3	; 0x03
    2096:	20 e0       	ldi	r18, 0x00	; 0
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	40 e2       	ldi	r20, 0x20	; 32
    209c:	51 e4       	ldi	r21, 0x41	; 65
    209e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a2:	dc 01       	movw	r26, r24
    20a4:	cb 01       	movw	r24, r22
    20a6:	8e 01       	movw	r16, r28
    20a8:	09 5b       	subi	r16, 0xB9	; 185
    20aa:	1e 4f       	sbci	r17, 0xFE	; 254
    20ac:	bc 01       	movw	r22, r24
    20ae:	cd 01       	movw	r24, r26
    20b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20b4:	dc 01       	movw	r26, r24
    20b6:	cb 01       	movw	r24, r22
    20b8:	f8 01       	movw	r30, r16
    20ba:	91 83       	std	Z+1, r25	; 0x01
    20bc:	80 83       	st	Z, r24
    20be:	1f c0       	rjmp	.+62     	; 0x20fe <main+0x6ee>
    20c0:	fe 01       	movw	r30, r28
    20c2:	eb 5b       	subi	r30, 0xBB	; 187
    20c4:	fe 4f       	sbci	r31, 0xFE	; 254
    20c6:	88 ec       	ldi	r24, 0xC8	; 200
    20c8:	90 e0       	ldi	r25, 0x00	; 0
    20ca:	91 83       	std	Z+1, r25	; 0x01
    20cc:	80 83       	st	Z, r24
    20ce:	fe 01       	movw	r30, r28
    20d0:	eb 5b       	subi	r30, 0xBB	; 187
    20d2:	fe 4f       	sbci	r31, 0xFE	; 254
    20d4:	80 81       	ld	r24, Z
    20d6:	91 81       	ldd	r25, Z+1	; 0x01
    20d8:	01 97       	sbiw	r24, 0x01	; 1
    20da:	f1 f7       	brne	.-4      	; 0x20d8 <main+0x6c8>
    20dc:	fe 01       	movw	r30, r28
    20de:	eb 5b       	subi	r30, 0xBB	; 187
    20e0:	fe 4f       	sbci	r31, 0xFE	; 254
    20e2:	91 83       	std	Z+1, r25	; 0x01
    20e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20e6:	de 01       	movw	r26, r28
    20e8:	a9 5b       	subi	r26, 0xB9	; 185
    20ea:	be 4f       	sbci	r27, 0xFE	; 254
    20ec:	fe 01       	movw	r30, r28
    20ee:	e9 5b       	subi	r30, 0xB9	; 185
    20f0:	fe 4f       	sbci	r31, 0xFE	; 254
    20f2:	80 81       	ld	r24, Z
    20f4:	91 81       	ldd	r25, Z+1	; 0x01
    20f6:	01 97       	sbiw	r24, 0x01	; 1
    20f8:	11 96       	adiw	r26, 0x01	; 1
    20fa:	9c 93       	st	X, r25
    20fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20fe:	fe 01       	movw	r30, r28
    2100:	e9 5b       	subi	r30, 0xB9	; 185
    2102:	fe 4f       	sbci	r31, 0xFE	; 254
    2104:	80 81       	ld	r24, Z
    2106:	91 81       	ldd	r25, Z+1	; 0x01
    2108:	00 97       	sbiw	r24, 0x00	; 0
    210a:	d1 f6       	brne	.-76     	; 0x20c0 <main+0x6b0>
    210c:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2110:	8e 01       	movw	r16, r28
    2112:	09 5b       	subi	r16, 0xB9	; 185
    2114:	1e 4f       	sbci	r17, 0xFE	; 254
    2116:	fe 01       	movw	r30, r28
    2118:	e7 5b       	subi	r30, 0xB7	; 183
    211a:	fe 4f       	sbci	r31, 0xFE	; 254
    211c:	60 81       	ld	r22, Z
    211e:	71 81       	ldd	r23, Z+1	; 0x01
    2120:	82 81       	ldd	r24, Z+2	; 0x02
    2122:	93 81       	ldd	r25, Z+3	; 0x03
    2124:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2128:	dc 01       	movw	r26, r24
    212a:	cb 01       	movw	r24, r22
    212c:	f8 01       	movw	r30, r16
    212e:	91 83       	std	Z+1, r25	; 0x01
    2130:	80 83       	st	Z, r24
    2132:	de 01       	movw	r26, r28
    2134:	ad 5b       	subi	r26, 0xBD	; 189
    2136:	be 4f       	sbci	r27, 0xFE	; 254
    2138:	fe 01       	movw	r30, r28
    213a:	e9 5b       	subi	r30, 0xB9	; 185
    213c:	fe 4f       	sbci	r31, 0xFE	; 254
    213e:	80 81       	ld	r24, Z
    2140:	91 81       	ldd	r25, Z+1	; 0x01
    2142:	11 96       	adiw	r26, 0x01	; 1
    2144:	9c 93       	st	X, r25
    2146:	8e 93       	st	-X, r24
    2148:	fe 01       	movw	r30, r28
    214a:	ed 5b       	subi	r30, 0xBD	; 189
    214c:	fe 4f       	sbci	r31, 0xFE	; 254
    214e:	80 81       	ld	r24, Z
    2150:	91 81       	ldd	r25, Z+1	; 0x01
    2152:	01 97       	sbiw	r24, 0x01	; 1
    2154:	f1 f7       	brne	.-4      	; 0x2152 <main+0x742>
    2156:	fe 01       	movw	r30, r28
    2158:	ed 5b       	subi	r30, 0xBD	; 189
    215a:	fe 4f       	sbci	r31, 0xFE	; 254
    215c:	91 83       	std	Z+1, r25	; 0x01
    215e:	80 83       	st	Z, r24
    2160:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key=='+'){
    2164:	fe 01       	movw	r30, r28
    2166:	eb 58       	subi	r30, 0x8B	; 139
    2168:	fe 4f       	sbci	r31, 0xFE	; 254
    216a:	80 81       	ld	r24, Z
    216c:	8b 32       	cpi	r24, 0x2B	; 43
    216e:	09 f0       	breq	.+2      	; 0x2172 <main+0x762>
    2170:	c8 c0       	rjmp	.+400    	; 0x2302 <main+0x8f2>
							id[i]='d';
    2172:	fe 01       	movw	r30, r28
    2174:	ed 58       	subi	r30, 0x8D	; 141
    2176:	fe 4f       	sbci	r31, 0xFE	; 254
    2178:	80 81       	ld	r24, Z
    217a:	28 2f       	mov	r18, r24
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	ce 01       	movw	r24, r28
    2180:	8a 58       	subi	r24, 0x8A	; 138
    2182:	9e 4f       	sbci	r25, 0xFE	; 254
    2184:	fc 01       	movw	r30, r24
    2186:	e2 0f       	add	r30, r18
    2188:	f3 1f       	adc	r31, r19
    218a:	84 e6       	ldi	r24, 0x64	; 100
    218c:	80 83       	st	Z, r24
							Lcd_vidWriteChar('d');
    218e:	84 e6       	ldi	r24, 0x64	; 100
    2190:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2194:	fe 01       	movw	r30, r28
    2196:	e1 5c       	subi	r30, 0xC1	; 193
    2198:	fe 4f       	sbci	r31, 0xFE	; 254
    219a:	80 e0       	ldi	r24, 0x00	; 0
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	aa ef       	ldi	r26, 0xFA	; 250
    21a0:	b4 e4       	ldi	r27, 0x44	; 68
    21a2:	80 83       	st	Z, r24
    21a4:	91 83       	std	Z+1, r25	; 0x01
    21a6:	a2 83       	std	Z+2, r26	; 0x02
    21a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21aa:	8e 01       	movw	r16, r28
    21ac:	05 5c       	subi	r16, 0xC5	; 197
    21ae:	1e 4f       	sbci	r17, 0xFE	; 254
    21b0:	fe 01       	movw	r30, r28
    21b2:	e1 5c       	subi	r30, 0xC1	; 193
    21b4:	fe 4f       	sbci	r31, 0xFE	; 254
    21b6:	60 81       	ld	r22, Z
    21b8:	71 81       	ldd	r23, Z+1	; 0x01
    21ba:	82 81       	ldd	r24, Z+2	; 0x02
    21bc:	93 81       	ldd	r25, Z+3	; 0x03
    21be:	20 e0       	ldi	r18, 0x00	; 0
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	4a ef       	ldi	r20, 0xFA	; 250
    21c4:	54 e4       	ldi	r21, 0x44	; 68
    21c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21ca:	dc 01       	movw	r26, r24
    21cc:	cb 01       	movw	r24, r22
    21ce:	f8 01       	movw	r30, r16
    21d0:	80 83       	st	Z, r24
    21d2:	91 83       	std	Z+1, r25	; 0x01
    21d4:	a2 83       	std	Z+2, r26	; 0x02
    21d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21d8:	fe 01       	movw	r30, r28
    21da:	e5 5c       	subi	r30, 0xC5	; 197
    21dc:	fe 4f       	sbci	r31, 0xFE	; 254
    21de:	60 81       	ld	r22, Z
    21e0:	71 81       	ldd	r23, Z+1	; 0x01
    21e2:	82 81       	ldd	r24, Z+2	; 0x02
    21e4:	93 81       	ldd	r25, Z+3	; 0x03
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	40 e8       	ldi	r20, 0x80	; 128
    21ec:	5f e3       	ldi	r21, 0x3F	; 63
    21ee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21f2:	88 23       	and	r24, r24
    21f4:	44 f4       	brge	.+16     	; 0x2206 <main+0x7f6>
		__ticks = 1;
    21f6:	fe 01       	movw	r30, r28
    21f8:	e7 5c       	subi	r30, 0xC7	; 199
    21fa:	fe 4f       	sbci	r31, 0xFE	; 254
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	91 83       	std	Z+1, r25	; 0x01
    2202:	80 83       	st	Z, r24
    2204:	65 c0       	rjmp	.+202    	; 0x22d0 <main+0x8c0>
	else if (__tmp > 65535)
    2206:	fe 01       	movw	r30, r28
    2208:	e5 5c       	subi	r30, 0xC5	; 197
    220a:	fe 4f       	sbci	r31, 0xFE	; 254
    220c:	60 81       	ld	r22, Z
    220e:	71 81       	ldd	r23, Z+1	; 0x01
    2210:	82 81       	ldd	r24, Z+2	; 0x02
    2212:	93 81       	ldd	r25, Z+3	; 0x03
    2214:	20 e0       	ldi	r18, 0x00	; 0
    2216:	3f ef       	ldi	r19, 0xFF	; 255
    2218:	4f e7       	ldi	r20, 0x7F	; 127
    221a:	57 e4       	ldi	r21, 0x47	; 71
    221c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2220:	18 16       	cp	r1, r24
    2222:	0c f0       	brlt	.+2      	; 0x2226 <main+0x816>
    2224:	44 c0       	rjmp	.+136    	; 0x22ae <main+0x89e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2226:	fe 01       	movw	r30, r28
    2228:	e1 5c       	subi	r30, 0xC1	; 193
    222a:	fe 4f       	sbci	r31, 0xFE	; 254
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	40 e2       	ldi	r20, 0x20	; 32
    223a:	51 e4       	ldi	r21, 0x41	; 65
    223c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2240:	dc 01       	movw	r26, r24
    2242:	cb 01       	movw	r24, r22
    2244:	8e 01       	movw	r16, r28
    2246:	07 5c       	subi	r16, 0xC7	; 199
    2248:	1e 4f       	sbci	r17, 0xFE	; 254
    224a:	bc 01       	movw	r22, r24
    224c:	cd 01       	movw	r24, r26
    224e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	f8 01       	movw	r30, r16
    2258:	91 83       	std	Z+1, r25	; 0x01
    225a:	80 83       	st	Z, r24
    225c:	1f c0       	rjmp	.+62     	; 0x229c <main+0x88c>
    225e:	fe 01       	movw	r30, r28
    2260:	e9 5c       	subi	r30, 0xC9	; 201
    2262:	fe 4f       	sbci	r31, 0xFE	; 254
    2264:	88 ec       	ldi	r24, 0xC8	; 200
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	fe 01       	movw	r30, r28
    226e:	e9 5c       	subi	r30, 0xC9	; 201
    2270:	fe 4f       	sbci	r31, 0xFE	; 254
    2272:	80 81       	ld	r24, Z
    2274:	91 81       	ldd	r25, Z+1	; 0x01
    2276:	01 97       	sbiw	r24, 0x01	; 1
    2278:	f1 f7       	brne	.-4      	; 0x2276 <main+0x866>
    227a:	fe 01       	movw	r30, r28
    227c:	e9 5c       	subi	r30, 0xC9	; 201
    227e:	fe 4f       	sbci	r31, 0xFE	; 254
    2280:	91 83       	std	Z+1, r25	; 0x01
    2282:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2284:	de 01       	movw	r26, r28
    2286:	a7 5c       	subi	r26, 0xC7	; 199
    2288:	be 4f       	sbci	r27, 0xFE	; 254
    228a:	fe 01       	movw	r30, r28
    228c:	e7 5c       	subi	r30, 0xC7	; 199
    228e:	fe 4f       	sbci	r31, 0xFE	; 254
    2290:	80 81       	ld	r24, Z
    2292:	91 81       	ldd	r25, Z+1	; 0x01
    2294:	01 97       	sbiw	r24, 0x01	; 1
    2296:	11 96       	adiw	r26, 0x01	; 1
    2298:	9c 93       	st	X, r25
    229a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    229c:	fe 01       	movw	r30, r28
    229e:	e7 5c       	subi	r30, 0xC7	; 199
    22a0:	fe 4f       	sbci	r31, 0xFE	; 254
    22a2:	80 81       	ld	r24, Z
    22a4:	91 81       	ldd	r25, Z+1	; 0x01
    22a6:	00 97       	sbiw	r24, 0x00	; 0
    22a8:	d1 f6       	brne	.-76     	; 0x225e <main+0x84e>
    22aa:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ae:	8e 01       	movw	r16, r28
    22b0:	07 5c       	subi	r16, 0xC7	; 199
    22b2:	1e 4f       	sbci	r17, 0xFE	; 254
    22b4:	fe 01       	movw	r30, r28
    22b6:	e5 5c       	subi	r30, 0xC5	; 197
    22b8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ba:	60 81       	ld	r22, Z
    22bc:	71 81       	ldd	r23, Z+1	; 0x01
    22be:	82 81       	ldd	r24, Z+2	; 0x02
    22c0:	93 81       	ldd	r25, Z+3	; 0x03
    22c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22c6:	dc 01       	movw	r26, r24
    22c8:	cb 01       	movw	r24, r22
    22ca:	f8 01       	movw	r30, r16
    22cc:	91 83       	std	Z+1, r25	; 0x01
    22ce:	80 83       	st	Z, r24
    22d0:	de 01       	movw	r26, r28
    22d2:	ab 5c       	subi	r26, 0xCB	; 203
    22d4:	be 4f       	sbci	r27, 0xFE	; 254
    22d6:	fe 01       	movw	r30, r28
    22d8:	e7 5c       	subi	r30, 0xC7	; 199
    22da:	fe 4f       	sbci	r31, 0xFE	; 254
    22dc:	80 81       	ld	r24, Z
    22de:	91 81       	ldd	r25, Z+1	; 0x01
    22e0:	11 96       	adiw	r26, 0x01	; 1
    22e2:	9c 93       	st	X, r25
    22e4:	8e 93       	st	-X, r24
    22e6:	fe 01       	movw	r30, r28
    22e8:	eb 5c       	subi	r30, 0xCB	; 203
    22ea:	fe 4f       	sbci	r31, 0xFE	; 254
    22ec:	80 81       	ld	r24, Z
    22ee:	91 81       	ldd	r25, Z+1	; 0x01
    22f0:	01 97       	sbiw	r24, 0x01	; 1
    22f2:	f1 f7       	brne	.-4      	; 0x22f0 <main+0x8e0>
    22f4:	fe 01       	movw	r30, r28
    22f6:	eb 5c       	subi	r30, 0xCB	; 203
    22f8:	fe 4f       	sbci	r31, 0xFE	; 254
    22fa:	91 83       	std	Z+1, r25	; 0x01
    22fc:	80 83       	st	Z, r24
    22fe:	0c 94 81 19 	jmp	0x3302	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==4){
    2302:	fe 01       	movw	r30, r28
    2304:	eb 58       	subi	r30, 0x8B	; 139
    2306:	fe 4f       	sbci	r31, 0xFE	; 254
    2308:	80 81       	ld	r24, Z
    230a:	84 30       	cpi	r24, 0x04	; 4
    230c:	09 f0       	breq	.+2      	; 0x2310 <main+0x900>
    230e:	c6 c0       	rjmp	.+396    	; 0x249c <main+0xa8c>
							id[i]='e';
    2310:	fe 01       	movw	r30, r28
    2312:	ed 58       	subi	r30, 0x8D	; 141
    2314:	fe 4f       	sbci	r31, 0xFE	; 254
    2316:	80 81       	ld	r24, Z
    2318:	28 2f       	mov	r18, r24
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	ce 01       	movw	r24, r28
    231e:	8a 58       	subi	r24, 0x8A	; 138
    2320:	9e 4f       	sbci	r25, 0xFE	; 254
    2322:	fc 01       	movw	r30, r24
    2324:	e2 0f       	add	r30, r18
    2326:	f3 1f       	adc	r31, r19
    2328:	85 e6       	ldi	r24, 0x65	; 101
    232a:	80 83       	st	Z, r24
							Lcd_vidWriteChar('e');
    232c:	85 e6       	ldi	r24, 0x65	; 101
    232e:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2332:	fe 01       	movw	r30, r28
    2334:	ef 5c       	subi	r30, 0xCF	; 207
    2336:	fe 4f       	sbci	r31, 0xFE	; 254
    2338:	80 e0       	ldi	r24, 0x00	; 0
    233a:	90 e0       	ldi	r25, 0x00	; 0
    233c:	aa ef       	ldi	r26, 0xFA	; 250
    233e:	b4 e4       	ldi	r27, 0x44	; 68
    2340:	80 83       	st	Z, r24
    2342:	91 83       	std	Z+1, r25	; 0x01
    2344:	a2 83       	std	Z+2, r26	; 0x02
    2346:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2348:	8e 01       	movw	r16, r28
    234a:	03 5d       	subi	r16, 0xD3	; 211
    234c:	1e 4f       	sbci	r17, 0xFE	; 254
    234e:	fe 01       	movw	r30, r28
    2350:	ef 5c       	subi	r30, 0xCF	; 207
    2352:	fe 4f       	sbci	r31, 0xFE	; 254
    2354:	60 81       	ld	r22, Z
    2356:	71 81       	ldd	r23, Z+1	; 0x01
    2358:	82 81       	ldd	r24, Z+2	; 0x02
    235a:	93 81       	ldd	r25, Z+3	; 0x03
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	4a ef       	ldi	r20, 0xFA	; 250
    2362:	54 e4       	ldi	r21, 0x44	; 68
    2364:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2368:	dc 01       	movw	r26, r24
    236a:	cb 01       	movw	r24, r22
    236c:	f8 01       	movw	r30, r16
    236e:	80 83       	st	Z, r24
    2370:	91 83       	std	Z+1, r25	; 0x01
    2372:	a2 83       	std	Z+2, r26	; 0x02
    2374:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2376:	fe 01       	movw	r30, r28
    2378:	e3 5d       	subi	r30, 0xD3	; 211
    237a:	fe 4f       	sbci	r31, 0xFE	; 254
    237c:	60 81       	ld	r22, Z
    237e:	71 81       	ldd	r23, Z+1	; 0x01
    2380:	82 81       	ldd	r24, Z+2	; 0x02
    2382:	93 81       	ldd	r25, Z+3	; 0x03
    2384:	20 e0       	ldi	r18, 0x00	; 0
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	40 e8       	ldi	r20, 0x80	; 128
    238a:	5f e3       	ldi	r21, 0x3F	; 63
    238c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2390:	88 23       	and	r24, r24
    2392:	44 f4       	brge	.+16     	; 0x23a4 <main+0x994>
		__ticks = 1;
    2394:	fe 01       	movw	r30, r28
    2396:	e5 5d       	subi	r30, 0xD5	; 213
    2398:	fe 4f       	sbci	r31, 0xFE	; 254
    239a:	81 e0       	ldi	r24, 0x01	; 1
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	91 83       	std	Z+1, r25	; 0x01
    23a0:	80 83       	st	Z, r24
    23a2:	64 c0       	rjmp	.+200    	; 0x246c <main+0xa5c>
	else if (__tmp > 65535)
    23a4:	fe 01       	movw	r30, r28
    23a6:	e3 5d       	subi	r30, 0xD3	; 211
    23a8:	fe 4f       	sbci	r31, 0xFE	; 254
    23aa:	60 81       	ld	r22, Z
    23ac:	71 81       	ldd	r23, Z+1	; 0x01
    23ae:	82 81       	ldd	r24, Z+2	; 0x02
    23b0:	93 81       	ldd	r25, Z+3	; 0x03
    23b2:	20 e0       	ldi	r18, 0x00	; 0
    23b4:	3f ef       	ldi	r19, 0xFF	; 255
    23b6:	4f e7       	ldi	r20, 0x7F	; 127
    23b8:	57 e4       	ldi	r21, 0x47	; 71
    23ba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23be:	18 16       	cp	r1, r24
    23c0:	0c f0       	brlt	.+2      	; 0x23c4 <main+0x9b4>
    23c2:	43 c0       	rjmp	.+134    	; 0x244a <main+0xa3a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23c4:	fe 01       	movw	r30, r28
    23c6:	ef 5c       	subi	r30, 0xCF	; 207
    23c8:	fe 4f       	sbci	r31, 0xFE	; 254
    23ca:	60 81       	ld	r22, Z
    23cc:	71 81       	ldd	r23, Z+1	; 0x01
    23ce:	82 81       	ldd	r24, Z+2	; 0x02
    23d0:	93 81       	ldd	r25, Z+3	; 0x03
    23d2:	20 e0       	ldi	r18, 0x00	; 0
    23d4:	30 e0       	ldi	r19, 0x00	; 0
    23d6:	40 e2       	ldi	r20, 0x20	; 32
    23d8:	51 e4       	ldi	r21, 0x41	; 65
    23da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23de:	dc 01       	movw	r26, r24
    23e0:	cb 01       	movw	r24, r22
    23e2:	8e 01       	movw	r16, r28
    23e4:	05 5d       	subi	r16, 0xD5	; 213
    23e6:	1e 4f       	sbci	r17, 0xFE	; 254
    23e8:	bc 01       	movw	r22, r24
    23ea:	cd 01       	movw	r24, r26
    23ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23f0:	dc 01       	movw	r26, r24
    23f2:	cb 01       	movw	r24, r22
    23f4:	f8 01       	movw	r30, r16
    23f6:	91 83       	std	Z+1, r25	; 0x01
    23f8:	80 83       	st	Z, r24
    23fa:	1f c0       	rjmp	.+62     	; 0x243a <main+0xa2a>
    23fc:	fe 01       	movw	r30, r28
    23fe:	e7 5d       	subi	r30, 0xD7	; 215
    2400:	fe 4f       	sbci	r31, 0xFE	; 254
    2402:	88 ec       	ldi	r24, 0xC8	; 200
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	91 83       	std	Z+1, r25	; 0x01
    2408:	80 83       	st	Z, r24
    240a:	fe 01       	movw	r30, r28
    240c:	e7 5d       	subi	r30, 0xD7	; 215
    240e:	fe 4f       	sbci	r31, 0xFE	; 254
    2410:	80 81       	ld	r24, Z
    2412:	91 81       	ldd	r25, Z+1	; 0x01
    2414:	01 97       	sbiw	r24, 0x01	; 1
    2416:	f1 f7       	brne	.-4      	; 0x2414 <main+0xa04>
    2418:	fe 01       	movw	r30, r28
    241a:	e7 5d       	subi	r30, 0xD7	; 215
    241c:	fe 4f       	sbci	r31, 0xFE	; 254
    241e:	91 83       	std	Z+1, r25	; 0x01
    2420:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2422:	de 01       	movw	r26, r28
    2424:	a5 5d       	subi	r26, 0xD5	; 213
    2426:	be 4f       	sbci	r27, 0xFE	; 254
    2428:	fe 01       	movw	r30, r28
    242a:	e5 5d       	subi	r30, 0xD5	; 213
    242c:	fe 4f       	sbci	r31, 0xFE	; 254
    242e:	80 81       	ld	r24, Z
    2430:	91 81       	ldd	r25, Z+1	; 0x01
    2432:	01 97       	sbiw	r24, 0x01	; 1
    2434:	11 96       	adiw	r26, 0x01	; 1
    2436:	9c 93       	st	X, r25
    2438:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    243a:	fe 01       	movw	r30, r28
    243c:	e5 5d       	subi	r30, 0xD5	; 213
    243e:	fe 4f       	sbci	r31, 0xFE	; 254
    2440:	80 81       	ld	r24, Z
    2442:	91 81       	ldd	r25, Z+1	; 0x01
    2444:	00 97       	sbiw	r24, 0x00	; 0
    2446:	d1 f6       	brne	.-76     	; 0x23fc <main+0x9ec>
    2448:	5c c7       	rjmp	.+3768   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    244a:	8e 01       	movw	r16, r28
    244c:	05 5d       	subi	r16, 0xD5	; 213
    244e:	1e 4f       	sbci	r17, 0xFE	; 254
    2450:	fe 01       	movw	r30, r28
    2452:	e3 5d       	subi	r30, 0xD3	; 211
    2454:	fe 4f       	sbci	r31, 0xFE	; 254
    2456:	60 81       	ld	r22, Z
    2458:	71 81       	ldd	r23, Z+1	; 0x01
    245a:	82 81       	ldd	r24, Z+2	; 0x02
    245c:	93 81       	ldd	r25, Z+3	; 0x03
    245e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2462:	dc 01       	movw	r26, r24
    2464:	cb 01       	movw	r24, r22
    2466:	f8 01       	movw	r30, r16
    2468:	91 83       	std	Z+1, r25	; 0x01
    246a:	80 83       	st	Z, r24
    246c:	de 01       	movw	r26, r28
    246e:	a9 5d       	subi	r26, 0xD9	; 217
    2470:	be 4f       	sbci	r27, 0xFE	; 254
    2472:	fe 01       	movw	r30, r28
    2474:	e5 5d       	subi	r30, 0xD5	; 213
    2476:	fe 4f       	sbci	r31, 0xFE	; 254
    2478:	80 81       	ld	r24, Z
    247a:	91 81       	ldd	r25, Z+1	; 0x01
    247c:	11 96       	adiw	r26, 0x01	; 1
    247e:	9c 93       	st	X, r25
    2480:	8e 93       	st	-X, r24
    2482:	fe 01       	movw	r30, r28
    2484:	e9 5d       	subi	r30, 0xD9	; 217
    2486:	fe 4f       	sbci	r31, 0xFE	; 254
    2488:	80 81       	ld	r24, Z
    248a:	91 81       	ldd	r25, Z+1	; 0x01
    248c:	01 97       	sbiw	r24, 0x01	; 1
    248e:	f1 f7       	brne	.-4      	; 0x248c <main+0xa7c>
    2490:	fe 01       	movw	r30, r28
    2492:	e9 5d       	subi	r30, 0xD9	; 217
    2494:	fe 4f       	sbci	r31, 0xFE	; 254
    2496:	91 83       	std	Z+1, r25	; 0x01
    2498:	80 83       	st	Z, r24
    249a:	33 c7       	rjmp	.+3686   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==5){
    249c:	fe 01       	movw	r30, r28
    249e:	eb 58       	subi	r30, 0x8B	; 139
    24a0:	fe 4f       	sbci	r31, 0xFE	; 254
    24a2:	80 81       	ld	r24, Z
    24a4:	85 30       	cpi	r24, 0x05	; 5
    24a6:	09 f0       	breq	.+2      	; 0x24aa <main+0xa9a>
    24a8:	c6 c0       	rjmp	.+396    	; 0x2636 <main+0xc26>
							id[i]='f';
    24aa:	fe 01       	movw	r30, r28
    24ac:	ed 58       	subi	r30, 0x8D	; 141
    24ae:	fe 4f       	sbci	r31, 0xFE	; 254
    24b0:	80 81       	ld	r24, Z
    24b2:	28 2f       	mov	r18, r24
    24b4:	30 e0       	ldi	r19, 0x00	; 0
    24b6:	ce 01       	movw	r24, r28
    24b8:	8a 58       	subi	r24, 0x8A	; 138
    24ba:	9e 4f       	sbci	r25, 0xFE	; 254
    24bc:	fc 01       	movw	r30, r24
    24be:	e2 0f       	add	r30, r18
    24c0:	f3 1f       	adc	r31, r19
    24c2:	86 e6       	ldi	r24, 0x66	; 102
    24c4:	80 83       	st	Z, r24
							Lcd_vidWriteChar('f');
    24c6:	86 e6       	ldi	r24, 0x66	; 102
    24c8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    24cc:	fe 01       	movw	r30, r28
    24ce:	ed 5d       	subi	r30, 0xDD	; 221
    24d0:	fe 4f       	sbci	r31, 0xFE	; 254
    24d2:	80 e0       	ldi	r24, 0x00	; 0
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	aa ef       	ldi	r26, 0xFA	; 250
    24d8:	b4 e4       	ldi	r27, 0x44	; 68
    24da:	80 83       	st	Z, r24
    24dc:	91 83       	std	Z+1, r25	; 0x01
    24de:	a2 83       	std	Z+2, r26	; 0x02
    24e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24e2:	8e 01       	movw	r16, r28
    24e4:	01 5e       	subi	r16, 0xE1	; 225
    24e6:	1e 4f       	sbci	r17, 0xFE	; 254
    24e8:	fe 01       	movw	r30, r28
    24ea:	ed 5d       	subi	r30, 0xDD	; 221
    24ec:	fe 4f       	sbci	r31, 0xFE	; 254
    24ee:	60 81       	ld	r22, Z
    24f0:	71 81       	ldd	r23, Z+1	; 0x01
    24f2:	82 81       	ldd	r24, Z+2	; 0x02
    24f4:	93 81       	ldd	r25, Z+3	; 0x03
    24f6:	20 e0       	ldi	r18, 0x00	; 0
    24f8:	30 e0       	ldi	r19, 0x00	; 0
    24fa:	4a ef       	ldi	r20, 0xFA	; 250
    24fc:	54 e4       	ldi	r21, 0x44	; 68
    24fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	f8 01       	movw	r30, r16
    2508:	80 83       	st	Z, r24
    250a:	91 83       	std	Z+1, r25	; 0x01
    250c:	a2 83       	std	Z+2, r26	; 0x02
    250e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2510:	fe 01       	movw	r30, r28
    2512:	e1 5e       	subi	r30, 0xE1	; 225
    2514:	fe 4f       	sbci	r31, 0xFE	; 254
    2516:	60 81       	ld	r22, Z
    2518:	71 81       	ldd	r23, Z+1	; 0x01
    251a:	82 81       	ldd	r24, Z+2	; 0x02
    251c:	93 81       	ldd	r25, Z+3	; 0x03
    251e:	20 e0       	ldi	r18, 0x00	; 0
    2520:	30 e0       	ldi	r19, 0x00	; 0
    2522:	40 e8       	ldi	r20, 0x80	; 128
    2524:	5f e3       	ldi	r21, 0x3F	; 63
    2526:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    252a:	88 23       	and	r24, r24
    252c:	44 f4       	brge	.+16     	; 0x253e <main+0xb2e>
		__ticks = 1;
    252e:	fe 01       	movw	r30, r28
    2530:	e3 5e       	subi	r30, 0xE3	; 227
    2532:	fe 4f       	sbci	r31, 0xFE	; 254
    2534:	81 e0       	ldi	r24, 0x01	; 1
    2536:	90 e0       	ldi	r25, 0x00	; 0
    2538:	91 83       	std	Z+1, r25	; 0x01
    253a:	80 83       	st	Z, r24
    253c:	64 c0       	rjmp	.+200    	; 0x2606 <main+0xbf6>
	else if (__tmp > 65535)
    253e:	fe 01       	movw	r30, r28
    2540:	e1 5e       	subi	r30, 0xE1	; 225
    2542:	fe 4f       	sbci	r31, 0xFE	; 254
    2544:	60 81       	ld	r22, Z
    2546:	71 81       	ldd	r23, Z+1	; 0x01
    2548:	82 81       	ldd	r24, Z+2	; 0x02
    254a:	93 81       	ldd	r25, Z+3	; 0x03
    254c:	20 e0       	ldi	r18, 0x00	; 0
    254e:	3f ef       	ldi	r19, 0xFF	; 255
    2550:	4f e7       	ldi	r20, 0x7F	; 127
    2552:	57 e4       	ldi	r21, 0x47	; 71
    2554:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2558:	18 16       	cp	r1, r24
    255a:	0c f0       	brlt	.+2      	; 0x255e <main+0xb4e>
    255c:	43 c0       	rjmp	.+134    	; 0x25e4 <main+0xbd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    255e:	fe 01       	movw	r30, r28
    2560:	ed 5d       	subi	r30, 0xDD	; 221
    2562:	fe 4f       	sbci	r31, 0xFE	; 254
    2564:	60 81       	ld	r22, Z
    2566:	71 81       	ldd	r23, Z+1	; 0x01
    2568:	82 81       	ldd	r24, Z+2	; 0x02
    256a:	93 81       	ldd	r25, Z+3	; 0x03
    256c:	20 e0       	ldi	r18, 0x00	; 0
    256e:	30 e0       	ldi	r19, 0x00	; 0
    2570:	40 e2       	ldi	r20, 0x20	; 32
    2572:	51 e4       	ldi	r21, 0x41	; 65
    2574:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2578:	dc 01       	movw	r26, r24
    257a:	cb 01       	movw	r24, r22
    257c:	8e 01       	movw	r16, r28
    257e:	03 5e       	subi	r16, 0xE3	; 227
    2580:	1e 4f       	sbci	r17, 0xFE	; 254
    2582:	bc 01       	movw	r22, r24
    2584:	cd 01       	movw	r24, r26
    2586:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    258a:	dc 01       	movw	r26, r24
    258c:	cb 01       	movw	r24, r22
    258e:	f8 01       	movw	r30, r16
    2590:	91 83       	std	Z+1, r25	; 0x01
    2592:	80 83       	st	Z, r24
    2594:	1f c0       	rjmp	.+62     	; 0x25d4 <main+0xbc4>
    2596:	fe 01       	movw	r30, r28
    2598:	e5 5e       	subi	r30, 0xE5	; 229
    259a:	fe 4f       	sbci	r31, 0xFE	; 254
    259c:	88 ec       	ldi	r24, 0xC8	; 200
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	91 83       	std	Z+1, r25	; 0x01
    25a2:	80 83       	st	Z, r24
    25a4:	fe 01       	movw	r30, r28
    25a6:	e5 5e       	subi	r30, 0xE5	; 229
    25a8:	fe 4f       	sbci	r31, 0xFE	; 254
    25aa:	80 81       	ld	r24, Z
    25ac:	91 81       	ldd	r25, Z+1	; 0x01
    25ae:	01 97       	sbiw	r24, 0x01	; 1
    25b0:	f1 f7       	brne	.-4      	; 0x25ae <main+0xb9e>
    25b2:	fe 01       	movw	r30, r28
    25b4:	e5 5e       	subi	r30, 0xE5	; 229
    25b6:	fe 4f       	sbci	r31, 0xFE	; 254
    25b8:	91 83       	std	Z+1, r25	; 0x01
    25ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25bc:	de 01       	movw	r26, r28
    25be:	a3 5e       	subi	r26, 0xE3	; 227
    25c0:	be 4f       	sbci	r27, 0xFE	; 254
    25c2:	fe 01       	movw	r30, r28
    25c4:	e3 5e       	subi	r30, 0xE3	; 227
    25c6:	fe 4f       	sbci	r31, 0xFE	; 254
    25c8:	80 81       	ld	r24, Z
    25ca:	91 81       	ldd	r25, Z+1	; 0x01
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	11 96       	adiw	r26, 0x01	; 1
    25d0:	9c 93       	st	X, r25
    25d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25d4:	fe 01       	movw	r30, r28
    25d6:	e3 5e       	subi	r30, 0xE3	; 227
    25d8:	fe 4f       	sbci	r31, 0xFE	; 254
    25da:	80 81       	ld	r24, Z
    25dc:	91 81       	ldd	r25, Z+1	; 0x01
    25de:	00 97       	sbiw	r24, 0x00	; 0
    25e0:	d1 f6       	brne	.-76     	; 0x2596 <main+0xb86>
    25e2:	8f c6       	rjmp	.+3358   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25e4:	8e 01       	movw	r16, r28
    25e6:	03 5e       	subi	r16, 0xE3	; 227
    25e8:	1e 4f       	sbci	r17, 0xFE	; 254
    25ea:	fe 01       	movw	r30, r28
    25ec:	e1 5e       	subi	r30, 0xE1	; 225
    25ee:	fe 4f       	sbci	r31, 0xFE	; 254
    25f0:	60 81       	ld	r22, Z
    25f2:	71 81       	ldd	r23, Z+1	; 0x01
    25f4:	82 81       	ldd	r24, Z+2	; 0x02
    25f6:	93 81       	ldd	r25, Z+3	; 0x03
    25f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25fc:	dc 01       	movw	r26, r24
    25fe:	cb 01       	movw	r24, r22
    2600:	f8 01       	movw	r30, r16
    2602:	91 83       	std	Z+1, r25	; 0x01
    2604:	80 83       	st	Z, r24
    2606:	de 01       	movw	r26, r28
    2608:	a7 5e       	subi	r26, 0xE7	; 231
    260a:	be 4f       	sbci	r27, 0xFE	; 254
    260c:	fe 01       	movw	r30, r28
    260e:	e3 5e       	subi	r30, 0xE3	; 227
    2610:	fe 4f       	sbci	r31, 0xFE	; 254
    2612:	80 81       	ld	r24, Z
    2614:	91 81       	ldd	r25, Z+1	; 0x01
    2616:	11 96       	adiw	r26, 0x01	; 1
    2618:	9c 93       	st	X, r25
    261a:	8e 93       	st	-X, r24
    261c:	fe 01       	movw	r30, r28
    261e:	e7 5e       	subi	r30, 0xE7	; 231
    2620:	fe 4f       	sbci	r31, 0xFE	; 254
    2622:	80 81       	ld	r24, Z
    2624:	91 81       	ldd	r25, Z+1	; 0x01
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	f1 f7       	brne	.-4      	; 0x2626 <main+0xc16>
    262a:	fe 01       	movw	r30, r28
    262c:	e7 5e       	subi	r30, 0xE7	; 231
    262e:	fe 4f       	sbci	r31, 0xFE	; 254
    2630:	91 83       	std	Z+1, r25	; 0x01
    2632:	80 83       	st	Z, r24
    2634:	66 c6       	rjmp	.+3276   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==6){
    2636:	fe 01       	movw	r30, r28
    2638:	eb 58       	subi	r30, 0x8B	; 139
    263a:	fe 4f       	sbci	r31, 0xFE	; 254
    263c:	80 81       	ld	r24, Z
    263e:	86 30       	cpi	r24, 0x06	; 6
    2640:	09 f0       	breq	.+2      	; 0x2644 <main+0xc34>
    2642:	c6 c0       	rjmp	.+396    	; 0x27d0 <main+0xdc0>
							id[i]='g';
    2644:	fe 01       	movw	r30, r28
    2646:	ed 58       	subi	r30, 0x8D	; 141
    2648:	fe 4f       	sbci	r31, 0xFE	; 254
    264a:	80 81       	ld	r24, Z
    264c:	28 2f       	mov	r18, r24
    264e:	30 e0       	ldi	r19, 0x00	; 0
    2650:	ce 01       	movw	r24, r28
    2652:	8a 58       	subi	r24, 0x8A	; 138
    2654:	9e 4f       	sbci	r25, 0xFE	; 254
    2656:	fc 01       	movw	r30, r24
    2658:	e2 0f       	add	r30, r18
    265a:	f3 1f       	adc	r31, r19
    265c:	87 e6       	ldi	r24, 0x67	; 103
    265e:	80 83       	st	Z, r24
							Lcd_vidWriteChar('g');
    2660:	87 e6       	ldi	r24, 0x67	; 103
    2662:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2666:	fe 01       	movw	r30, r28
    2668:	eb 5e       	subi	r30, 0xEB	; 235
    266a:	fe 4f       	sbci	r31, 0xFE	; 254
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	aa ef       	ldi	r26, 0xFA	; 250
    2672:	b4 e4       	ldi	r27, 0x44	; 68
    2674:	80 83       	st	Z, r24
    2676:	91 83       	std	Z+1, r25	; 0x01
    2678:	a2 83       	std	Z+2, r26	; 0x02
    267a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    267c:	8e 01       	movw	r16, r28
    267e:	0f 5e       	subi	r16, 0xEF	; 239
    2680:	1e 4f       	sbci	r17, 0xFE	; 254
    2682:	fe 01       	movw	r30, r28
    2684:	eb 5e       	subi	r30, 0xEB	; 235
    2686:	fe 4f       	sbci	r31, 0xFE	; 254
    2688:	60 81       	ld	r22, Z
    268a:	71 81       	ldd	r23, Z+1	; 0x01
    268c:	82 81       	ldd	r24, Z+2	; 0x02
    268e:	93 81       	ldd	r25, Z+3	; 0x03
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	4a ef       	ldi	r20, 0xFA	; 250
    2696:	54 e4       	ldi	r21, 0x44	; 68
    2698:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    269c:	dc 01       	movw	r26, r24
    269e:	cb 01       	movw	r24, r22
    26a0:	f8 01       	movw	r30, r16
    26a2:	80 83       	st	Z, r24
    26a4:	91 83       	std	Z+1, r25	; 0x01
    26a6:	a2 83       	std	Z+2, r26	; 0x02
    26a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26aa:	fe 01       	movw	r30, r28
    26ac:	ef 5e       	subi	r30, 0xEF	; 239
    26ae:	fe 4f       	sbci	r31, 0xFE	; 254
    26b0:	60 81       	ld	r22, Z
    26b2:	71 81       	ldd	r23, Z+1	; 0x01
    26b4:	82 81       	ldd	r24, Z+2	; 0x02
    26b6:	93 81       	ldd	r25, Z+3	; 0x03
    26b8:	20 e0       	ldi	r18, 0x00	; 0
    26ba:	30 e0       	ldi	r19, 0x00	; 0
    26bc:	40 e8       	ldi	r20, 0x80	; 128
    26be:	5f e3       	ldi	r21, 0x3F	; 63
    26c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26c4:	88 23       	and	r24, r24
    26c6:	44 f4       	brge	.+16     	; 0x26d8 <main+0xcc8>
		__ticks = 1;
    26c8:	fe 01       	movw	r30, r28
    26ca:	e1 5f       	subi	r30, 0xF1	; 241
    26cc:	fe 4f       	sbci	r31, 0xFE	; 254
    26ce:	81 e0       	ldi	r24, 0x01	; 1
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	91 83       	std	Z+1, r25	; 0x01
    26d4:	80 83       	st	Z, r24
    26d6:	64 c0       	rjmp	.+200    	; 0x27a0 <main+0xd90>
	else if (__tmp > 65535)
    26d8:	fe 01       	movw	r30, r28
    26da:	ef 5e       	subi	r30, 0xEF	; 239
    26dc:	fe 4f       	sbci	r31, 0xFE	; 254
    26de:	60 81       	ld	r22, Z
    26e0:	71 81       	ldd	r23, Z+1	; 0x01
    26e2:	82 81       	ldd	r24, Z+2	; 0x02
    26e4:	93 81       	ldd	r25, Z+3	; 0x03
    26e6:	20 e0       	ldi	r18, 0x00	; 0
    26e8:	3f ef       	ldi	r19, 0xFF	; 255
    26ea:	4f e7       	ldi	r20, 0x7F	; 127
    26ec:	57 e4       	ldi	r21, 0x47	; 71
    26ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26f2:	18 16       	cp	r1, r24
    26f4:	0c f0       	brlt	.+2      	; 0x26f8 <main+0xce8>
    26f6:	43 c0       	rjmp	.+134    	; 0x277e <main+0xd6e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f8:	fe 01       	movw	r30, r28
    26fa:	eb 5e       	subi	r30, 0xEB	; 235
    26fc:	fe 4f       	sbci	r31, 0xFE	; 254
    26fe:	60 81       	ld	r22, Z
    2700:	71 81       	ldd	r23, Z+1	; 0x01
    2702:	82 81       	ldd	r24, Z+2	; 0x02
    2704:	93 81       	ldd	r25, Z+3	; 0x03
    2706:	20 e0       	ldi	r18, 0x00	; 0
    2708:	30 e0       	ldi	r19, 0x00	; 0
    270a:	40 e2       	ldi	r20, 0x20	; 32
    270c:	51 e4       	ldi	r21, 0x41	; 65
    270e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2712:	dc 01       	movw	r26, r24
    2714:	cb 01       	movw	r24, r22
    2716:	8e 01       	movw	r16, r28
    2718:	01 5f       	subi	r16, 0xF1	; 241
    271a:	1e 4f       	sbci	r17, 0xFE	; 254
    271c:	bc 01       	movw	r22, r24
    271e:	cd 01       	movw	r24, r26
    2720:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2724:	dc 01       	movw	r26, r24
    2726:	cb 01       	movw	r24, r22
    2728:	f8 01       	movw	r30, r16
    272a:	91 83       	std	Z+1, r25	; 0x01
    272c:	80 83       	st	Z, r24
    272e:	1f c0       	rjmp	.+62     	; 0x276e <main+0xd5e>
    2730:	fe 01       	movw	r30, r28
    2732:	e3 5f       	subi	r30, 0xF3	; 243
    2734:	fe 4f       	sbci	r31, 0xFE	; 254
    2736:	88 ec       	ldi	r24, 0xC8	; 200
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	91 83       	std	Z+1, r25	; 0x01
    273c:	80 83       	st	Z, r24
    273e:	fe 01       	movw	r30, r28
    2740:	e3 5f       	subi	r30, 0xF3	; 243
    2742:	fe 4f       	sbci	r31, 0xFE	; 254
    2744:	80 81       	ld	r24, Z
    2746:	91 81       	ldd	r25, Z+1	; 0x01
    2748:	01 97       	sbiw	r24, 0x01	; 1
    274a:	f1 f7       	brne	.-4      	; 0x2748 <main+0xd38>
    274c:	fe 01       	movw	r30, r28
    274e:	e3 5f       	subi	r30, 0xF3	; 243
    2750:	fe 4f       	sbci	r31, 0xFE	; 254
    2752:	91 83       	std	Z+1, r25	; 0x01
    2754:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2756:	de 01       	movw	r26, r28
    2758:	a1 5f       	subi	r26, 0xF1	; 241
    275a:	be 4f       	sbci	r27, 0xFE	; 254
    275c:	fe 01       	movw	r30, r28
    275e:	e1 5f       	subi	r30, 0xF1	; 241
    2760:	fe 4f       	sbci	r31, 0xFE	; 254
    2762:	80 81       	ld	r24, Z
    2764:	91 81       	ldd	r25, Z+1	; 0x01
    2766:	01 97       	sbiw	r24, 0x01	; 1
    2768:	11 96       	adiw	r26, 0x01	; 1
    276a:	9c 93       	st	X, r25
    276c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    276e:	fe 01       	movw	r30, r28
    2770:	e1 5f       	subi	r30, 0xF1	; 241
    2772:	fe 4f       	sbci	r31, 0xFE	; 254
    2774:	80 81       	ld	r24, Z
    2776:	91 81       	ldd	r25, Z+1	; 0x01
    2778:	00 97       	sbiw	r24, 0x00	; 0
    277a:	d1 f6       	brne	.-76     	; 0x2730 <main+0xd20>
    277c:	c2 c5       	rjmp	.+2948   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    277e:	8e 01       	movw	r16, r28
    2780:	01 5f       	subi	r16, 0xF1	; 241
    2782:	1e 4f       	sbci	r17, 0xFE	; 254
    2784:	fe 01       	movw	r30, r28
    2786:	ef 5e       	subi	r30, 0xEF	; 239
    2788:	fe 4f       	sbci	r31, 0xFE	; 254
    278a:	60 81       	ld	r22, Z
    278c:	71 81       	ldd	r23, Z+1	; 0x01
    278e:	82 81       	ldd	r24, Z+2	; 0x02
    2790:	93 81       	ldd	r25, Z+3	; 0x03
    2792:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2796:	dc 01       	movw	r26, r24
    2798:	cb 01       	movw	r24, r22
    279a:	f8 01       	movw	r30, r16
    279c:	91 83       	std	Z+1, r25	; 0x01
    279e:	80 83       	st	Z, r24
    27a0:	de 01       	movw	r26, r28
    27a2:	a5 5f       	subi	r26, 0xF5	; 245
    27a4:	be 4f       	sbci	r27, 0xFE	; 254
    27a6:	fe 01       	movw	r30, r28
    27a8:	e1 5f       	subi	r30, 0xF1	; 241
    27aa:	fe 4f       	sbci	r31, 0xFE	; 254
    27ac:	80 81       	ld	r24, Z
    27ae:	91 81       	ldd	r25, Z+1	; 0x01
    27b0:	11 96       	adiw	r26, 0x01	; 1
    27b2:	9c 93       	st	X, r25
    27b4:	8e 93       	st	-X, r24
    27b6:	fe 01       	movw	r30, r28
    27b8:	e5 5f       	subi	r30, 0xF5	; 245
    27ba:	fe 4f       	sbci	r31, 0xFE	; 254
    27bc:	80 81       	ld	r24, Z
    27be:	91 81       	ldd	r25, Z+1	; 0x01
    27c0:	01 97       	sbiw	r24, 0x01	; 1
    27c2:	f1 f7       	brne	.-4      	; 0x27c0 <main+0xdb0>
    27c4:	fe 01       	movw	r30, r28
    27c6:	e5 5f       	subi	r30, 0xF5	; 245
    27c8:	fe 4f       	sbci	r31, 0xFE	; 254
    27ca:	91 83       	std	Z+1, r25	; 0x01
    27cc:	80 83       	st	Z, r24
    27ce:	99 c5       	rjmp	.+2866   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key=='-'){
    27d0:	fe 01       	movw	r30, r28
    27d2:	eb 58       	subi	r30, 0x8B	; 139
    27d4:	fe 4f       	sbci	r31, 0xFE	; 254
    27d6:	80 81       	ld	r24, Z
    27d8:	8d 32       	cpi	r24, 0x2D	; 45
    27da:	09 f0       	breq	.+2      	; 0x27de <main+0xdce>
    27dc:	c6 c0       	rjmp	.+396    	; 0x296a <main+0xf5a>
							id[i]='h';
    27de:	fe 01       	movw	r30, r28
    27e0:	ed 58       	subi	r30, 0x8D	; 141
    27e2:	fe 4f       	sbci	r31, 0xFE	; 254
    27e4:	80 81       	ld	r24, Z
    27e6:	28 2f       	mov	r18, r24
    27e8:	30 e0       	ldi	r19, 0x00	; 0
    27ea:	ce 01       	movw	r24, r28
    27ec:	8a 58       	subi	r24, 0x8A	; 138
    27ee:	9e 4f       	sbci	r25, 0xFE	; 254
    27f0:	fc 01       	movw	r30, r24
    27f2:	e2 0f       	add	r30, r18
    27f4:	f3 1f       	adc	r31, r19
    27f6:	88 e6       	ldi	r24, 0x68	; 104
    27f8:	80 83       	st	Z, r24
							Lcd_vidWriteChar('h');
    27fa:	88 e6       	ldi	r24, 0x68	; 104
    27fc:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2800:	fe 01       	movw	r30, r28
    2802:	e9 5f       	subi	r30, 0xF9	; 249
    2804:	fe 4f       	sbci	r31, 0xFE	; 254
    2806:	80 e0       	ldi	r24, 0x00	; 0
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	aa ef       	ldi	r26, 0xFA	; 250
    280c:	b4 e4       	ldi	r27, 0x44	; 68
    280e:	80 83       	st	Z, r24
    2810:	91 83       	std	Z+1, r25	; 0x01
    2812:	a2 83       	std	Z+2, r26	; 0x02
    2814:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2816:	8e 01       	movw	r16, r28
    2818:	0d 5f       	subi	r16, 0xFD	; 253
    281a:	1e 4f       	sbci	r17, 0xFE	; 254
    281c:	fe 01       	movw	r30, r28
    281e:	e9 5f       	subi	r30, 0xF9	; 249
    2820:	fe 4f       	sbci	r31, 0xFE	; 254
    2822:	60 81       	ld	r22, Z
    2824:	71 81       	ldd	r23, Z+1	; 0x01
    2826:	82 81       	ldd	r24, Z+2	; 0x02
    2828:	93 81       	ldd	r25, Z+3	; 0x03
    282a:	20 e0       	ldi	r18, 0x00	; 0
    282c:	30 e0       	ldi	r19, 0x00	; 0
    282e:	4a ef       	ldi	r20, 0xFA	; 250
    2830:	54 e4       	ldi	r21, 0x44	; 68
    2832:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2836:	dc 01       	movw	r26, r24
    2838:	cb 01       	movw	r24, r22
    283a:	f8 01       	movw	r30, r16
    283c:	80 83       	st	Z, r24
    283e:	91 83       	std	Z+1, r25	; 0x01
    2840:	a2 83       	std	Z+2, r26	; 0x02
    2842:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2844:	fe 01       	movw	r30, r28
    2846:	ed 5f       	subi	r30, 0xFD	; 253
    2848:	fe 4f       	sbci	r31, 0xFE	; 254
    284a:	60 81       	ld	r22, Z
    284c:	71 81       	ldd	r23, Z+1	; 0x01
    284e:	82 81       	ldd	r24, Z+2	; 0x02
    2850:	93 81       	ldd	r25, Z+3	; 0x03
    2852:	20 e0       	ldi	r18, 0x00	; 0
    2854:	30 e0       	ldi	r19, 0x00	; 0
    2856:	40 e8       	ldi	r20, 0x80	; 128
    2858:	5f e3       	ldi	r21, 0x3F	; 63
    285a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    285e:	88 23       	and	r24, r24
    2860:	44 f4       	brge	.+16     	; 0x2872 <main+0xe62>
		__ticks = 1;
    2862:	fe 01       	movw	r30, r28
    2864:	ef 5f       	subi	r30, 0xFF	; 255
    2866:	fe 4f       	sbci	r31, 0xFE	; 254
    2868:	81 e0       	ldi	r24, 0x01	; 1
    286a:	90 e0       	ldi	r25, 0x00	; 0
    286c:	91 83       	std	Z+1, r25	; 0x01
    286e:	80 83       	st	Z, r24
    2870:	64 c0       	rjmp	.+200    	; 0x293a <main+0xf2a>
	else if (__tmp > 65535)
    2872:	fe 01       	movw	r30, r28
    2874:	ed 5f       	subi	r30, 0xFD	; 253
    2876:	fe 4f       	sbci	r31, 0xFE	; 254
    2878:	60 81       	ld	r22, Z
    287a:	71 81       	ldd	r23, Z+1	; 0x01
    287c:	82 81       	ldd	r24, Z+2	; 0x02
    287e:	93 81       	ldd	r25, Z+3	; 0x03
    2880:	20 e0       	ldi	r18, 0x00	; 0
    2882:	3f ef       	ldi	r19, 0xFF	; 255
    2884:	4f e7       	ldi	r20, 0x7F	; 127
    2886:	57 e4       	ldi	r21, 0x47	; 71
    2888:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    288c:	18 16       	cp	r1, r24
    288e:	0c f0       	brlt	.+2      	; 0x2892 <main+0xe82>
    2890:	43 c0       	rjmp	.+134    	; 0x2918 <main+0xf08>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2892:	fe 01       	movw	r30, r28
    2894:	e9 5f       	subi	r30, 0xF9	; 249
    2896:	fe 4f       	sbci	r31, 0xFE	; 254
    2898:	60 81       	ld	r22, Z
    289a:	71 81       	ldd	r23, Z+1	; 0x01
    289c:	82 81       	ldd	r24, Z+2	; 0x02
    289e:	93 81       	ldd	r25, Z+3	; 0x03
    28a0:	20 e0       	ldi	r18, 0x00	; 0
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	40 e2       	ldi	r20, 0x20	; 32
    28a6:	51 e4       	ldi	r21, 0x41	; 65
    28a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28ac:	dc 01       	movw	r26, r24
    28ae:	cb 01       	movw	r24, r22
    28b0:	8e 01       	movw	r16, r28
    28b2:	0f 5f       	subi	r16, 0xFF	; 255
    28b4:	1e 4f       	sbci	r17, 0xFE	; 254
    28b6:	bc 01       	movw	r22, r24
    28b8:	cd 01       	movw	r24, r26
    28ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28be:	dc 01       	movw	r26, r24
    28c0:	cb 01       	movw	r24, r22
    28c2:	f8 01       	movw	r30, r16
    28c4:	91 83       	std	Z+1, r25	; 0x01
    28c6:	80 83       	st	Z, r24
    28c8:	1f c0       	rjmp	.+62     	; 0x2908 <main+0xef8>
    28ca:	fe 01       	movw	r30, r28
    28cc:	e1 50       	subi	r30, 0x01	; 1
    28ce:	ff 4f       	sbci	r31, 0xFF	; 255
    28d0:	88 ec       	ldi	r24, 0xC8	; 200
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	91 83       	std	Z+1, r25	; 0x01
    28d6:	80 83       	st	Z, r24
    28d8:	fe 01       	movw	r30, r28
    28da:	e1 50       	subi	r30, 0x01	; 1
    28dc:	ff 4f       	sbci	r31, 0xFF	; 255
    28de:	80 81       	ld	r24, Z
    28e0:	91 81       	ldd	r25, Z+1	; 0x01
    28e2:	01 97       	sbiw	r24, 0x01	; 1
    28e4:	f1 f7       	brne	.-4      	; 0x28e2 <main+0xed2>
    28e6:	fe 01       	movw	r30, r28
    28e8:	e1 50       	subi	r30, 0x01	; 1
    28ea:	ff 4f       	sbci	r31, 0xFF	; 255
    28ec:	91 83       	std	Z+1, r25	; 0x01
    28ee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28f0:	de 01       	movw	r26, r28
    28f2:	af 5f       	subi	r26, 0xFF	; 255
    28f4:	be 4f       	sbci	r27, 0xFE	; 254
    28f6:	fe 01       	movw	r30, r28
    28f8:	ef 5f       	subi	r30, 0xFF	; 255
    28fa:	fe 4f       	sbci	r31, 0xFE	; 254
    28fc:	80 81       	ld	r24, Z
    28fe:	91 81       	ldd	r25, Z+1	; 0x01
    2900:	01 97       	sbiw	r24, 0x01	; 1
    2902:	11 96       	adiw	r26, 0x01	; 1
    2904:	9c 93       	st	X, r25
    2906:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2908:	fe 01       	movw	r30, r28
    290a:	ef 5f       	subi	r30, 0xFF	; 255
    290c:	fe 4f       	sbci	r31, 0xFE	; 254
    290e:	80 81       	ld	r24, Z
    2910:	91 81       	ldd	r25, Z+1	; 0x01
    2912:	00 97       	sbiw	r24, 0x00	; 0
    2914:	d1 f6       	brne	.-76     	; 0x28ca <main+0xeba>
    2916:	f5 c4       	rjmp	.+2538   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2918:	8e 01       	movw	r16, r28
    291a:	0f 5f       	subi	r16, 0xFF	; 255
    291c:	1e 4f       	sbci	r17, 0xFE	; 254
    291e:	fe 01       	movw	r30, r28
    2920:	ed 5f       	subi	r30, 0xFD	; 253
    2922:	fe 4f       	sbci	r31, 0xFE	; 254
    2924:	60 81       	ld	r22, Z
    2926:	71 81       	ldd	r23, Z+1	; 0x01
    2928:	82 81       	ldd	r24, Z+2	; 0x02
    292a:	93 81       	ldd	r25, Z+3	; 0x03
    292c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2930:	dc 01       	movw	r26, r24
    2932:	cb 01       	movw	r24, r22
    2934:	f8 01       	movw	r30, r16
    2936:	91 83       	std	Z+1, r25	; 0x01
    2938:	80 83       	st	Z, r24
    293a:	de 01       	movw	r26, r28
    293c:	a3 50       	subi	r26, 0x03	; 3
    293e:	bf 4f       	sbci	r27, 0xFF	; 255
    2940:	fe 01       	movw	r30, r28
    2942:	ef 5f       	subi	r30, 0xFF	; 255
    2944:	fe 4f       	sbci	r31, 0xFE	; 254
    2946:	80 81       	ld	r24, Z
    2948:	91 81       	ldd	r25, Z+1	; 0x01
    294a:	11 96       	adiw	r26, 0x01	; 1
    294c:	9c 93       	st	X, r25
    294e:	8e 93       	st	-X, r24
    2950:	fe 01       	movw	r30, r28
    2952:	e3 50       	subi	r30, 0x03	; 3
    2954:	ff 4f       	sbci	r31, 0xFF	; 255
    2956:	80 81       	ld	r24, Z
    2958:	91 81       	ldd	r25, Z+1	; 0x01
    295a:	01 97       	sbiw	r24, 0x01	; 1
    295c:	f1 f7       	brne	.-4      	; 0x295a <main+0xf4a>
    295e:	fe 01       	movw	r30, r28
    2960:	e3 50       	subi	r30, 0x03	; 3
    2962:	ff 4f       	sbci	r31, 0xFF	; 255
    2964:	91 83       	std	Z+1, r25	; 0x01
    2966:	80 83       	st	Z, r24
    2968:	cc c4       	rjmp	.+2456   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==7){
    296a:	fe 01       	movw	r30, r28
    296c:	eb 58       	subi	r30, 0x8B	; 139
    296e:	fe 4f       	sbci	r31, 0xFE	; 254
    2970:	80 81       	ld	r24, Z
    2972:	87 30       	cpi	r24, 0x07	; 7
    2974:	09 f0       	breq	.+2      	; 0x2978 <main+0xf68>
    2976:	c6 c0       	rjmp	.+396    	; 0x2b04 <main+0x10f4>
							id[i]='i';
    2978:	fe 01       	movw	r30, r28
    297a:	ed 58       	subi	r30, 0x8D	; 141
    297c:	fe 4f       	sbci	r31, 0xFE	; 254
    297e:	80 81       	ld	r24, Z
    2980:	28 2f       	mov	r18, r24
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	ce 01       	movw	r24, r28
    2986:	8a 58       	subi	r24, 0x8A	; 138
    2988:	9e 4f       	sbci	r25, 0xFE	; 254
    298a:	fc 01       	movw	r30, r24
    298c:	e2 0f       	add	r30, r18
    298e:	f3 1f       	adc	r31, r19
    2990:	89 e6       	ldi	r24, 0x69	; 105
    2992:	80 83       	st	Z, r24
							Lcd_vidWriteChar('i');
    2994:	89 e6       	ldi	r24, 0x69	; 105
    2996:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    299a:	fe 01       	movw	r30, r28
    299c:	e7 50       	subi	r30, 0x07	; 7
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	80 e0       	ldi	r24, 0x00	; 0
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	aa ef       	ldi	r26, 0xFA	; 250
    29a6:	b4 e4       	ldi	r27, 0x44	; 68
    29a8:	80 83       	st	Z, r24
    29aa:	91 83       	std	Z+1, r25	; 0x01
    29ac:	a2 83       	std	Z+2, r26	; 0x02
    29ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29b0:	8e 01       	movw	r16, r28
    29b2:	0b 50       	subi	r16, 0x0B	; 11
    29b4:	1f 4f       	sbci	r17, 0xFF	; 255
    29b6:	fe 01       	movw	r30, r28
    29b8:	e7 50       	subi	r30, 0x07	; 7
    29ba:	ff 4f       	sbci	r31, 0xFF	; 255
    29bc:	60 81       	ld	r22, Z
    29be:	71 81       	ldd	r23, Z+1	; 0x01
    29c0:	82 81       	ldd	r24, Z+2	; 0x02
    29c2:	93 81       	ldd	r25, Z+3	; 0x03
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	30 e0       	ldi	r19, 0x00	; 0
    29c8:	4a ef       	ldi	r20, 0xFA	; 250
    29ca:	54 e4       	ldi	r21, 0x44	; 68
    29cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29d0:	dc 01       	movw	r26, r24
    29d2:	cb 01       	movw	r24, r22
    29d4:	f8 01       	movw	r30, r16
    29d6:	80 83       	st	Z, r24
    29d8:	91 83       	std	Z+1, r25	; 0x01
    29da:	a2 83       	std	Z+2, r26	; 0x02
    29dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29de:	fe 01       	movw	r30, r28
    29e0:	eb 50       	subi	r30, 0x0B	; 11
    29e2:	ff 4f       	sbci	r31, 0xFF	; 255
    29e4:	60 81       	ld	r22, Z
    29e6:	71 81       	ldd	r23, Z+1	; 0x01
    29e8:	82 81       	ldd	r24, Z+2	; 0x02
    29ea:	93 81       	ldd	r25, Z+3	; 0x03
    29ec:	20 e0       	ldi	r18, 0x00	; 0
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	40 e8       	ldi	r20, 0x80	; 128
    29f2:	5f e3       	ldi	r21, 0x3F	; 63
    29f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29f8:	88 23       	and	r24, r24
    29fa:	44 f4       	brge	.+16     	; 0x2a0c <main+0xffc>
		__ticks = 1;
    29fc:	fe 01       	movw	r30, r28
    29fe:	ed 50       	subi	r30, 0x0D	; 13
    2a00:	ff 4f       	sbci	r31, 0xFF	; 255
    2a02:	81 e0       	ldi	r24, 0x01	; 1
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	91 83       	std	Z+1, r25	; 0x01
    2a08:	80 83       	st	Z, r24
    2a0a:	64 c0       	rjmp	.+200    	; 0x2ad4 <main+0x10c4>
	else if (__tmp > 65535)
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	eb 50       	subi	r30, 0x0B	; 11
    2a10:	ff 4f       	sbci	r31, 0xFF	; 255
    2a12:	60 81       	ld	r22, Z
    2a14:	71 81       	ldd	r23, Z+1	; 0x01
    2a16:	82 81       	ldd	r24, Z+2	; 0x02
    2a18:	93 81       	ldd	r25, Z+3	; 0x03
    2a1a:	20 e0       	ldi	r18, 0x00	; 0
    2a1c:	3f ef       	ldi	r19, 0xFF	; 255
    2a1e:	4f e7       	ldi	r20, 0x7F	; 127
    2a20:	57 e4       	ldi	r21, 0x47	; 71
    2a22:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a26:	18 16       	cp	r1, r24
    2a28:	0c f0       	brlt	.+2      	; 0x2a2c <main+0x101c>
    2a2a:	43 c0       	rjmp	.+134    	; 0x2ab2 <main+0x10a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a2c:	fe 01       	movw	r30, r28
    2a2e:	e7 50       	subi	r30, 0x07	; 7
    2a30:	ff 4f       	sbci	r31, 0xFF	; 255
    2a32:	60 81       	ld	r22, Z
    2a34:	71 81       	ldd	r23, Z+1	; 0x01
    2a36:	82 81       	ldd	r24, Z+2	; 0x02
    2a38:	93 81       	ldd	r25, Z+3	; 0x03
    2a3a:	20 e0       	ldi	r18, 0x00	; 0
    2a3c:	30 e0       	ldi	r19, 0x00	; 0
    2a3e:	40 e2       	ldi	r20, 0x20	; 32
    2a40:	51 e4       	ldi	r21, 0x41	; 65
    2a42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a46:	dc 01       	movw	r26, r24
    2a48:	cb 01       	movw	r24, r22
    2a4a:	8e 01       	movw	r16, r28
    2a4c:	0d 50       	subi	r16, 0x0D	; 13
    2a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a50:	bc 01       	movw	r22, r24
    2a52:	cd 01       	movw	r24, r26
    2a54:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a58:	dc 01       	movw	r26, r24
    2a5a:	cb 01       	movw	r24, r22
    2a5c:	f8 01       	movw	r30, r16
    2a5e:	91 83       	std	Z+1, r25	; 0x01
    2a60:	80 83       	st	Z, r24
    2a62:	1f c0       	rjmp	.+62     	; 0x2aa2 <main+0x1092>
    2a64:	fe 01       	movw	r30, r28
    2a66:	ef 50       	subi	r30, 0x0F	; 15
    2a68:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6a:	88 ec       	ldi	r24, 0xC8	; 200
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	80 83       	st	Z, r24
    2a72:	fe 01       	movw	r30, r28
    2a74:	ef 50       	subi	r30, 0x0F	; 15
    2a76:	ff 4f       	sbci	r31, 0xFF	; 255
    2a78:	80 81       	ld	r24, Z
    2a7a:	91 81       	ldd	r25, Z+1	; 0x01
    2a7c:	01 97       	sbiw	r24, 0x01	; 1
    2a7e:	f1 f7       	brne	.-4      	; 0x2a7c <main+0x106c>
    2a80:	fe 01       	movw	r30, r28
    2a82:	ef 50       	subi	r30, 0x0F	; 15
    2a84:	ff 4f       	sbci	r31, 0xFF	; 255
    2a86:	91 83       	std	Z+1, r25	; 0x01
    2a88:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a8a:	de 01       	movw	r26, r28
    2a8c:	ad 50       	subi	r26, 0x0D	; 13
    2a8e:	bf 4f       	sbci	r27, 0xFF	; 255
    2a90:	fe 01       	movw	r30, r28
    2a92:	ed 50       	subi	r30, 0x0D	; 13
    2a94:	ff 4f       	sbci	r31, 0xFF	; 255
    2a96:	80 81       	ld	r24, Z
    2a98:	91 81       	ldd	r25, Z+1	; 0x01
    2a9a:	01 97       	sbiw	r24, 0x01	; 1
    2a9c:	11 96       	adiw	r26, 0x01	; 1
    2a9e:	9c 93       	st	X, r25
    2aa0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	ed 50       	subi	r30, 0x0D	; 13
    2aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa8:	80 81       	ld	r24, Z
    2aaa:	91 81       	ldd	r25, Z+1	; 0x01
    2aac:	00 97       	sbiw	r24, 0x00	; 0
    2aae:	d1 f6       	brne	.-76     	; 0x2a64 <main+0x1054>
    2ab0:	28 c4       	rjmp	.+2128   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ab2:	8e 01       	movw	r16, r28
    2ab4:	0d 50       	subi	r16, 0x0D	; 13
    2ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab8:	fe 01       	movw	r30, r28
    2aba:	eb 50       	subi	r30, 0x0B	; 11
    2abc:	ff 4f       	sbci	r31, 0xFF	; 255
    2abe:	60 81       	ld	r22, Z
    2ac0:	71 81       	ldd	r23, Z+1	; 0x01
    2ac2:	82 81       	ldd	r24, Z+2	; 0x02
    2ac4:	93 81       	ldd	r25, Z+3	; 0x03
    2ac6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aca:	dc 01       	movw	r26, r24
    2acc:	cb 01       	movw	r24, r22
    2ace:	f8 01       	movw	r30, r16
    2ad0:	91 83       	std	Z+1, r25	; 0x01
    2ad2:	80 83       	st	Z, r24
    2ad4:	de 01       	movw	r26, r28
    2ad6:	a1 51       	subi	r26, 0x11	; 17
    2ad8:	bf 4f       	sbci	r27, 0xFF	; 255
    2ada:	fe 01       	movw	r30, r28
    2adc:	ed 50       	subi	r30, 0x0D	; 13
    2ade:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae0:	80 81       	ld	r24, Z
    2ae2:	91 81       	ldd	r25, Z+1	; 0x01
    2ae4:	11 96       	adiw	r26, 0x01	; 1
    2ae6:	9c 93       	st	X, r25
    2ae8:	8e 93       	st	-X, r24
    2aea:	fe 01       	movw	r30, r28
    2aec:	e1 51       	subi	r30, 0x11	; 17
    2aee:	ff 4f       	sbci	r31, 0xFF	; 255
    2af0:	80 81       	ld	r24, Z
    2af2:	91 81       	ldd	r25, Z+1	; 0x01
    2af4:	01 97       	sbiw	r24, 0x01	; 1
    2af6:	f1 f7       	brne	.-4      	; 0x2af4 <main+0x10e4>
    2af8:	fe 01       	movw	r30, r28
    2afa:	e1 51       	subi	r30, 0x11	; 17
    2afc:	ff 4f       	sbci	r31, 0xFF	; 255
    2afe:	91 83       	std	Z+1, r25	; 0x01
    2b00:	80 83       	st	Z, r24
    2b02:	ff c3       	rjmp	.+2046   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==8){
    2b04:	fe 01       	movw	r30, r28
    2b06:	eb 58       	subi	r30, 0x8B	; 139
    2b08:	fe 4f       	sbci	r31, 0xFE	; 254
    2b0a:	80 81       	ld	r24, Z
    2b0c:	88 30       	cpi	r24, 0x08	; 8
    2b0e:	09 f0       	breq	.+2      	; 0x2b12 <main+0x1102>
    2b10:	c6 c0       	rjmp	.+396    	; 0x2c9e <main+0x128e>
							id[i]='j';
    2b12:	fe 01       	movw	r30, r28
    2b14:	ed 58       	subi	r30, 0x8D	; 141
    2b16:	fe 4f       	sbci	r31, 0xFE	; 254
    2b18:	80 81       	ld	r24, Z
    2b1a:	28 2f       	mov	r18, r24
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	ce 01       	movw	r24, r28
    2b20:	8a 58       	subi	r24, 0x8A	; 138
    2b22:	9e 4f       	sbci	r25, 0xFE	; 254
    2b24:	fc 01       	movw	r30, r24
    2b26:	e2 0f       	add	r30, r18
    2b28:	f3 1f       	adc	r31, r19
    2b2a:	8a e6       	ldi	r24, 0x6A	; 106
    2b2c:	80 83       	st	Z, r24
							Lcd_vidWriteChar('j');
    2b2e:	8a e6       	ldi	r24, 0x6A	; 106
    2b30:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2b34:	fe 01       	movw	r30, r28
    2b36:	e5 51       	subi	r30, 0x15	; 21
    2b38:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3a:	80 e0       	ldi	r24, 0x00	; 0
    2b3c:	90 e0       	ldi	r25, 0x00	; 0
    2b3e:	aa ef       	ldi	r26, 0xFA	; 250
    2b40:	b4 e4       	ldi	r27, 0x44	; 68
    2b42:	80 83       	st	Z, r24
    2b44:	91 83       	std	Z+1, r25	; 0x01
    2b46:	a2 83       	std	Z+2, r26	; 0x02
    2b48:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b4a:	8e 01       	movw	r16, r28
    2b4c:	09 51       	subi	r16, 0x19	; 25
    2b4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b50:	fe 01       	movw	r30, r28
    2b52:	e5 51       	subi	r30, 0x15	; 21
    2b54:	ff 4f       	sbci	r31, 0xFF	; 255
    2b56:	60 81       	ld	r22, Z
    2b58:	71 81       	ldd	r23, Z+1	; 0x01
    2b5a:	82 81       	ldd	r24, Z+2	; 0x02
    2b5c:	93 81       	ldd	r25, Z+3	; 0x03
    2b5e:	20 e0       	ldi	r18, 0x00	; 0
    2b60:	30 e0       	ldi	r19, 0x00	; 0
    2b62:	4a ef       	ldi	r20, 0xFA	; 250
    2b64:	54 e4       	ldi	r21, 0x44	; 68
    2b66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b6a:	dc 01       	movw	r26, r24
    2b6c:	cb 01       	movw	r24, r22
    2b6e:	f8 01       	movw	r30, r16
    2b70:	80 83       	st	Z, r24
    2b72:	91 83       	std	Z+1, r25	; 0x01
    2b74:	a2 83       	std	Z+2, r26	; 0x02
    2b76:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b78:	fe 01       	movw	r30, r28
    2b7a:	e9 51       	subi	r30, 0x19	; 25
    2b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7e:	60 81       	ld	r22, Z
    2b80:	71 81       	ldd	r23, Z+1	; 0x01
    2b82:	82 81       	ldd	r24, Z+2	; 0x02
    2b84:	93 81       	ldd	r25, Z+3	; 0x03
    2b86:	20 e0       	ldi	r18, 0x00	; 0
    2b88:	30 e0       	ldi	r19, 0x00	; 0
    2b8a:	40 e8       	ldi	r20, 0x80	; 128
    2b8c:	5f e3       	ldi	r21, 0x3F	; 63
    2b8e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b92:	88 23       	and	r24, r24
    2b94:	44 f4       	brge	.+16     	; 0x2ba6 <main+0x1196>
		__ticks = 1;
    2b96:	fe 01       	movw	r30, r28
    2b98:	eb 51       	subi	r30, 0x1B	; 27
    2b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9c:	81 e0       	ldi	r24, 0x01	; 1
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	91 83       	std	Z+1, r25	; 0x01
    2ba2:	80 83       	st	Z, r24
    2ba4:	64 c0       	rjmp	.+200    	; 0x2c6e <main+0x125e>
	else if (__tmp > 65535)
    2ba6:	fe 01       	movw	r30, r28
    2ba8:	e9 51       	subi	r30, 0x19	; 25
    2baa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bac:	60 81       	ld	r22, Z
    2bae:	71 81       	ldd	r23, Z+1	; 0x01
    2bb0:	82 81       	ldd	r24, Z+2	; 0x02
    2bb2:	93 81       	ldd	r25, Z+3	; 0x03
    2bb4:	20 e0       	ldi	r18, 0x00	; 0
    2bb6:	3f ef       	ldi	r19, 0xFF	; 255
    2bb8:	4f e7       	ldi	r20, 0x7F	; 127
    2bba:	57 e4       	ldi	r21, 0x47	; 71
    2bbc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bc0:	18 16       	cp	r1, r24
    2bc2:	0c f0       	brlt	.+2      	; 0x2bc6 <main+0x11b6>
    2bc4:	43 c0       	rjmp	.+134    	; 0x2c4c <main+0x123c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e5 51       	subi	r30, 0x15	; 21
    2bca:	ff 4f       	sbci	r31, 0xFF	; 255
    2bcc:	60 81       	ld	r22, Z
    2bce:	71 81       	ldd	r23, Z+1	; 0x01
    2bd0:	82 81       	ldd	r24, Z+2	; 0x02
    2bd2:	93 81       	ldd	r25, Z+3	; 0x03
    2bd4:	20 e0       	ldi	r18, 0x00	; 0
    2bd6:	30 e0       	ldi	r19, 0x00	; 0
    2bd8:	40 e2       	ldi	r20, 0x20	; 32
    2bda:	51 e4       	ldi	r21, 0x41	; 65
    2bdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2be0:	dc 01       	movw	r26, r24
    2be2:	cb 01       	movw	r24, r22
    2be4:	8e 01       	movw	r16, r28
    2be6:	0b 51       	subi	r16, 0x1B	; 27
    2be8:	1f 4f       	sbci	r17, 0xFF	; 255
    2bea:	bc 01       	movw	r22, r24
    2bec:	cd 01       	movw	r24, r26
    2bee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf2:	dc 01       	movw	r26, r24
    2bf4:	cb 01       	movw	r24, r22
    2bf6:	f8 01       	movw	r30, r16
    2bf8:	91 83       	std	Z+1, r25	; 0x01
    2bfa:	80 83       	st	Z, r24
    2bfc:	1f c0       	rjmp	.+62     	; 0x2c3c <main+0x122c>
    2bfe:	fe 01       	movw	r30, r28
    2c00:	ed 51       	subi	r30, 0x1D	; 29
    2c02:	ff 4f       	sbci	r31, 0xFF	; 255
    2c04:	88 ec       	ldi	r24, 0xC8	; 200
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	91 83       	std	Z+1, r25	; 0x01
    2c0a:	80 83       	st	Z, r24
    2c0c:	fe 01       	movw	r30, r28
    2c0e:	ed 51       	subi	r30, 0x1D	; 29
    2c10:	ff 4f       	sbci	r31, 0xFF	; 255
    2c12:	80 81       	ld	r24, Z
    2c14:	91 81       	ldd	r25, Z+1	; 0x01
    2c16:	01 97       	sbiw	r24, 0x01	; 1
    2c18:	f1 f7       	brne	.-4      	; 0x2c16 <main+0x1206>
    2c1a:	fe 01       	movw	r30, r28
    2c1c:	ed 51       	subi	r30, 0x1D	; 29
    2c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c20:	91 83       	std	Z+1, r25	; 0x01
    2c22:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c24:	de 01       	movw	r26, r28
    2c26:	ab 51       	subi	r26, 0x1B	; 27
    2c28:	bf 4f       	sbci	r27, 0xFF	; 255
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	eb 51       	subi	r30, 0x1B	; 27
    2c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c30:	80 81       	ld	r24, Z
    2c32:	91 81       	ldd	r25, Z+1	; 0x01
    2c34:	01 97       	sbiw	r24, 0x01	; 1
    2c36:	11 96       	adiw	r26, 0x01	; 1
    2c38:	9c 93       	st	X, r25
    2c3a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c3c:	fe 01       	movw	r30, r28
    2c3e:	eb 51       	subi	r30, 0x1B	; 27
    2c40:	ff 4f       	sbci	r31, 0xFF	; 255
    2c42:	80 81       	ld	r24, Z
    2c44:	91 81       	ldd	r25, Z+1	; 0x01
    2c46:	00 97       	sbiw	r24, 0x00	; 0
    2c48:	d1 f6       	brne	.-76     	; 0x2bfe <main+0x11ee>
    2c4a:	5b c3       	rjmp	.+1718   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c4c:	8e 01       	movw	r16, r28
    2c4e:	0b 51       	subi	r16, 0x1B	; 27
    2c50:	1f 4f       	sbci	r17, 0xFF	; 255
    2c52:	fe 01       	movw	r30, r28
    2c54:	e9 51       	subi	r30, 0x19	; 25
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
    2c58:	60 81       	ld	r22, Z
    2c5a:	71 81       	ldd	r23, Z+1	; 0x01
    2c5c:	82 81       	ldd	r24, Z+2	; 0x02
    2c5e:	93 81       	ldd	r25, Z+3	; 0x03
    2c60:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c64:	dc 01       	movw	r26, r24
    2c66:	cb 01       	movw	r24, r22
    2c68:	f8 01       	movw	r30, r16
    2c6a:	91 83       	std	Z+1, r25	; 0x01
    2c6c:	80 83       	st	Z, r24
    2c6e:	de 01       	movw	r26, r28
    2c70:	af 51       	subi	r26, 0x1F	; 31
    2c72:	bf 4f       	sbci	r27, 0xFF	; 255
    2c74:	fe 01       	movw	r30, r28
    2c76:	eb 51       	subi	r30, 0x1B	; 27
    2c78:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7a:	80 81       	ld	r24, Z
    2c7c:	91 81       	ldd	r25, Z+1	; 0x01
    2c7e:	11 96       	adiw	r26, 0x01	; 1
    2c80:	9c 93       	st	X, r25
    2c82:	8e 93       	st	-X, r24
    2c84:	fe 01       	movw	r30, r28
    2c86:	ef 51       	subi	r30, 0x1F	; 31
    2c88:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8a:	80 81       	ld	r24, Z
    2c8c:	91 81       	ldd	r25, Z+1	; 0x01
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	f1 f7       	brne	.-4      	; 0x2c8e <main+0x127e>
    2c92:	fe 01       	movw	r30, r28
    2c94:	ef 51       	subi	r30, 0x1F	; 31
    2c96:	ff 4f       	sbci	r31, 0xFF	; 255
    2c98:	91 83       	std	Z+1, r25	; 0x01
    2c9a:	80 83       	st	Z, r24
    2c9c:	32 c3       	rjmp	.+1636   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==9){
    2c9e:	fe 01       	movw	r30, r28
    2ca0:	eb 58       	subi	r30, 0x8B	; 139
    2ca2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ca4:	80 81       	ld	r24, Z
    2ca6:	89 30       	cpi	r24, 0x09	; 9
    2ca8:	09 f0       	breq	.+2      	; 0x2cac <main+0x129c>
    2caa:	c6 c0       	rjmp	.+396    	; 0x2e38 <main+0x1428>
							id[i]='k';
    2cac:	fe 01       	movw	r30, r28
    2cae:	ed 58       	subi	r30, 0x8D	; 141
    2cb0:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb2:	80 81       	ld	r24, Z
    2cb4:	28 2f       	mov	r18, r24
    2cb6:	30 e0       	ldi	r19, 0x00	; 0
    2cb8:	ce 01       	movw	r24, r28
    2cba:	8a 58       	subi	r24, 0x8A	; 138
    2cbc:	9e 4f       	sbci	r25, 0xFE	; 254
    2cbe:	fc 01       	movw	r30, r24
    2cc0:	e2 0f       	add	r30, r18
    2cc2:	f3 1f       	adc	r31, r19
    2cc4:	8b e6       	ldi	r24, 0x6B	; 107
    2cc6:	80 83       	st	Z, r24
							Lcd_vidWriteChar('k');
    2cc8:	8b e6       	ldi	r24, 0x6B	; 107
    2cca:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2cce:	fe 01       	movw	r30, r28
    2cd0:	e3 52       	subi	r30, 0x23	; 35
    2cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd4:	80 e0       	ldi	r24, 0x00	; 0
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	aa ef       	ldi	r26, 0xFA	; 250
    2cda:	b4 e4       	ldi	r27, 0x44	; 68
    2cdc:	80 83       	st	Z, r24
    2cde:	91 83       	std	Z+1, r25	; 0x01
    2ce0:	a2 83       	std	Z+2, r26	; 0x02
    2ce2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ce4:	8e 01       	movw	r16, r28
    2ce6:	07 52       	subi	r16, 0x27	; 39
    2ce8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cea:	fe 01       	movw	r30, r28
    2cec:	e3 52       	subi	r30, 0x23	; 35
    2cee:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf0:	60 81       	ld	r22, Z
    2cf2:	71 81       	ldd	r23, Z+1	; 0x01
    2cf4:	82 81       	ldd	r24, Z+2	; 0x02
    2cf6:	93 81       	ldd	r25, Z+3	; 0x03
    2cf8:	20 e0       	ldi	r18, 0x00	; 0
    2cfa:	30 e0       	ldi	r19, 0x00	; 0
    2cfc:	4a ef       	ldi	r20, 0xFA	; 250
    2cfe:	54 e4       	ldi	r21, 0x44	; 68
    2d00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d04:	dc 01       	movw	r26, r24
    2d06:	cb 01       	movw	r24, r22
    2d08:	f8 01       	movw	r30, r16
    2d0a:	80 83       	st	Z, r24
    2d0c:	91 83       	std	Z+1, r25	; 0x01
    2d0e:	a2 83       	std	Z+2, r26	; 0x02
    2d10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d12:	fe 01       	movw	r30, r28
    2d14:	e7 52       	subi	r30, 0x27	; 39
    2d16:	ff 4f       	sbci	r31, 0xFF	; 255
    2d18:	60 81       	ld	r22, Z
    2d1a:	71 81       	ldd	r23, Z+1	; 0x01
    2d1c:	82 81       	ldd	r24, Z+2	; 0x02
    2d1e:	93 81       	ldd	r25, Z+3	; 0x03
    2d20:	20 e0       	ldi	r18, 0x00	; 0
    2d22:	30 e0       	ldi	r19, 0x00	; 0
    2d24:	40 e8       	ldi	r20, 0x80	; 128
    2d26:	5f e3       	ldi	r21, 0x3F	; 63
    2d28:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d2c:	88 23       	and	r24, r24
    2d2e:	44 f4       	brge	.+16     	; 0x2d40 <main+0x1330>
		__ticks = 1;
    2d30:	fe 01       	movw	r30, r28
    2d32:	e9 52       	subi	r30, 0x29	; 41
    2d34:	ff 4f       	sbci	r31, 0xFF	; 255
    2d36:	81 e0       	ldi	r24, 0x01	; 1
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	91 83       	std	Z+1, r25	; 0x01
    2d3c:	80 83       	st	Z, r24
    2d3e:	64 c0       	rjmp	.+200    	; 0x2e08 <main+0x13f8>
	else if (__tmp > 65535)
    2d40:	fe 01       	movw	r30, r28
    2d42:	e7 52       	subi	r30, 0x27	; 39
    2d44:	ff 4f       	sbci	r31, 0xFF	; 255
    2d46:	60 81       	ld	r22, Z
    2d48:	71 81       	ldd	r23, Z+1	; 0x01
    2d4a:	82 81       	ldd	r24, Z+2	; 0x02
    2d4c:	93 81       	ldd	r25, Z+3	; 0x03
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	3f ef       	ldi	r19, 0xFF	; 255
    2d52:	4f e7       	ldi	r20, 0x7F	; 127
    2d54:	57 e4       	ldi	r21, 0x47	; 71
    2d56:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d5a:	18 16       	cp	r1, r24
    2d5c:	0c f0       	brlt	.+2      	; 0x2d60 <main+0x1350>
    2d5e:	43 c0       	rjmp	.+134    	; 0x2de6 <main+0x13d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d60:	fe 01       	movw	r30, r28
    2d62:	e3 52       	subi	r30, 0x23	; 35
    2d64:	ff 4f       	sbci	r31, 0xFF	; 255
    2d66:	60 81       	ld	r22, Z
    2d68:	71 81       	ldd	r23, Z+1	; 0x01
    2d6a:	82 81       	ldd	r24, Z+2	; 0x02
    2d6c:	93 81       	ldd	r25, Z+3	; 0x03
    2d6e:	20 e0       	ldi	r18, 0x00	; 0
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	40 e2       	ldi	r20, 0x20	; 32
    2d74:	51 e4       	ldi	r21, 0x41	; 65
    2d76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d7a:	dc 01       	movw	r26, r24
    2d7c:	cb 01       	movw	r24, r22
    2d7e:	8e 01       	movw	r16, r28
    2d80:	09 52       	subi	r16, 0x29	; 41
    2d82:	1f 4f       	sbci	r17, 0xFF	; 255
    2d84:	bc 01       	movw	r22, r24
    2d86:	cd 01       	movw	r24, r26
    2d88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d8c:	dc 01       	movw	r26, r24
    2d8e:	cb 01       	movw	r24, r22
    2d90:	f8 01       	movw	r30, r16
    2d92:	91 83       	std	Z+1, r25	; 0x01
    2d94:	80 83       	st	Z, r24
    2d96:	1f c0       	rjmp	.+62     	; 0x2dd6 <main+0x13c6>
    2d98:	fe 01       	movw	r30, r28
    2d9a:	eb 52       	subi	r30, 0x2B	; 43
    2d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9e:	88 ec       	ldi	r24, 0xC8	; 200
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	91 83       	std	Z+1, r25	; 0x01
    2da4:	80 83       	st	Z, r24
    2da6:	fe 01       	movw	r30, r28
    2da8:	eb 52       	subi	r30, 0x2B	; 43
    2daa:	ff 4f       	sbci	r31, 0xFF	; 255
    2dac:	80 81       	ld	r24, Z
    2dae:	91 81       	ldd	r25, Z+1	; 0x01
    2db0:	01 97       	sbiw	r24, 0x01	; 1
    2db2:	f1 f7       	brne	.-4      	; 0x2db0 <main+0x13a0>
    2db4:	fe 01       	movw	r30, r28
    2db6:	eb 52       	subi	r30, 0x2B	; 43
    2db8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dba:	91 83       	std	Z+1, r25	; 0x01
    2dbc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dbe:	de 01       	movw	r26, r28
    2dc0:	a9 52       	subi	r26, 0x29	; 41
    2dc2:	bf 4f       	sbci	r27, 0xFF	; 255
    2dc4:	fe 01       	movw	r30, r28
    2dc6:	e9 52       	subi	r30, 0x29	; 41
    2dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dca:	80 81       	ld	r24, Z
    2dcc:	91 81       	ldd	r25, Z+1	; 0x01
    2dce:	01 97       	sbiw	r24, 0x01	; 1
    2dd0:	11 96       	adiw	r26, 0x01	; 1
    2dd2:	9c 93       	st	X, r25
    2dd4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd6:	fe 01       	movw	r30, r28
    2dd8:	e9 52       	subi	r30, 0x29	; 41
    2dda:	ff 4f       	sbci	r31, 0xFF	; 255
    2ddc:	80 81       	ld	r24, Z
    2dde:	91 81       	ldd	r25, Z+1	; 0x01
    2de0:	00 97       	sbiw	r24, 0x00	; 0
    2de2:	d1 f6       	brne	.-76     	; 0x2d98 <main+0x1388>
    2de4:	8e c2       	rjmp	.+1308   	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de6:	8e 01       	movw	r16, r28
    2de8:	09 52       	subi	r16, 0x29	; 41
    2dea:	1f 4f       	sbci	r17, 0xFF	; 255
    2dec:	fe 01       	movw	r30, r28
    2dee:	e7 52       	subi	r30, 0x27	; 39
    2df0:	ff 4f       	sbci	r31, 0xFF	; 255
    2df2:	60 81       	ld	r22, Z
    2df4:	71 81       	ldd	r23, Z+1	; 0x01
    2df6:	82 81       	ldd	r24, Z+2	; 0x02
    2df8:	93 81       	ldd	r25, Z+3	; 0x03
    2dfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dfe:	dc 01       	movw	r26, r24
    2e00:	cb 01       	movw	r24, r22
    2e02:	f8 01       	movw	r30, r16
    2e04:	91 83       	std	Z+1, r25	; 0x01
    2e06:	80 83       	st	Z, r24
    2e08:	de 01       	movw	r26, r28
    2e0a:	ad 52       	subi	r26, 0x2D	; 45
    2e0c:	bf 4f       	sbci	r27, 0xFF	; 255
    2e0e:	fe 01       	movw	r30, r28
    2e10:	e9 52       	subi	r30, 0x29	; 41
    2e12:	ff 4f       	sbci	r31, 0xFF	; 255
    2e14:	80 81       	ld	r24, Z
    2e16:	91 81       	ldd	r25, Z+1	; 0x01
    2e18:	11 96       	adiw	r26, 0x01	; 1
    2e1a:	9c 93       	st	X, r25
    2e1c:	8e 93       	st	-X, r24
    2e1e:	fe 01       	movw	r30, r28
    2e20:	ed 52       	subi	r30, 0x2D	; 45
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	80 81       	ld	r24, Z
    2e26:	91 81       	ldd	r25, Z+1	; 0x01
    2e28:	01 97       	sbiw	r24, 0x01	; 1
    2e2a:	f1 f7       	brne	.-4      	; 0x2e28 <main+0x1418>
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	ed 52       	subi	r30, 0x2D	; 45
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	91 83       	std	Z+1, r25	; 0x01
    2e34:	80 83       	st	Z, r24
    2e36:	65 c2       	rjmp	.+1226   	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key=='*'){
    2e38:	fe 01       	movw	r30, r28
    2e3a:	eb 58       	subi	r30, 0x8B	; 139
    2e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2e3e:	80 81       	ld	r24, Z
    2e40:	8a 32       	cpi	r24, 0x2A	; 42
    2e42:	09 f0       	breq	.+2      	; 0x2e46 <main+0x1436>
    2e44:	c6 c0       	rjmp	.+396    	; 0x2fd2 <main+0x15c2>
							id[i]='l';
    2e46:	fe 01       	movw	r30, r28
    2e48:	ed 58       	subi	r30, 0x8D	; 141
    2e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e4c:	80 81       	ld	r24, Z
    2e4e:	28 2f       	mov	r18, r24
    2e50:	30 e0       	ldi	r19, 0x00	; 0
    2e52:	ce 01       	movw	r24, r28
    2e54:	8a 58       	subi	r24, 0x8A	; 138
    2e56:	9e 4f       	sbci	r25, 0xFE	; 254
    2e58:	fc 01       	movw	r30, r24
    2e5a:	e2 0f       	add	r30, r18
    2e5c:	f3 1f       	adc	r31, r19
    2e5e:	8c e6       	ldi	r24, 0x6C	; 108
    2e60:	80 83       	st	Z, r24
							Lcd_vidWriteChar('l');
    2e62:	8c e6       	ldi	r24, 0x6C	; 108
    2e64:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    2e68:	fe 01       	movw	r30, r28
    2e6a:	e1 53       	subi	r30, 0x31	; 49
    2e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6e:	80 e0       	ldi	r24, 0x00	; 0
    2e70:	90 e0       	ldi	r25, 0x00	; 0
    2e72:	aa ef       	ldi	r26, 0xFA	; 250
    2e74:	b4 e4       	ldi	r27, 0x44	; 68
    2e76:	80 83       	st	Z, r24
    2e78:	91 83       	std	Z+1, r25	; 0x01
    2e7a:	a2 83       	std	Z+2, r26	; 0x02
    2e7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e7e:	8e 01       	movw	r16, r28
    2e80:	05 53       	subi	r16, 0x35	; 53
    2e82:	1f 4f       	sbci	r17, 0xFF	; 255
    2e84:	fe 01       	movw	r30, r28
    2e86:	e1 53       	subi	r30, 0x31	; 49
    2e88:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8a:	60 81       	ld	r22, Z
    2e8c:	71 81       	ldd	r23, Z+1	; 0x01
    2e8e:	82 81       	ldd	r24, Z+2	; 0x02
    2e90:	93 81       	ldd	r25, Z+3	; 0x03
    2e92:	20 e0       	ldi	r18, 0x00	; 0
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	4a ef       	ldi	r20, 0xFA	; 250
    2e98:	54 e4       	ldi	r21, 0x44	; 68
    2e9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e9e:	dc 01       	movw	r26, r24
    2ea0:	cb 01       	movw	r24, r22
    2ea2:	f8 01       	movw	r30, r16
    2ea4:	80 83       	st	Z, r24
    2ea6:	91 83       	std	Z+1, r25	; 0x01
    2ea8:	a2 83       	std	Z+2, r26	; 0x02
    2eaa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2eac:	fe 01       	movw	r30, r28
    2eae:	e5 53       	subi	r30, 0x35	; 53
    2eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb2:	60 81       	ld	r22, Z
    2eb4:	71 81       	ldd	r23, Z+1	; 0x01
    2eb6:	82 81       	ldd	r24, Z+2	; 0x02
    2eb8:	93 81       	ldd	r25, Z+3	; 0x03
    2eba:	20 e0       	ldi	r18, 0x00	; 0
    2ebc:	30 e0       	ldi	r19, 0x00	; 0
    2ebe:	40 e8       	ldi	r20, 0x80	; 128
    2ec0:	5f e3       	ldi	r21, 0x3F	; 63
    2ec2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ec6:	88 23       	and	r24, r24
    2ec8:	44 f4       	brge	.+16     	; 0x2eda <main+0x14ca>
		__ticks = 1;
    2eca:	fe 01       	movw	r30, r28
    2ecc:	e7 53       	subi	r30, 0x37	; 55
    2ece:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed0:	81 e0       	ldi	r24, 0x01	; 1
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	91 83       	std	Z+1, r25	; 0x01
    2ed6:	80 83       	st	Z, r24
    2ed8:	64 c0       	rjmp	.+200    	; 0x2fa2 <main+0x1592>
	else if (__tmp > 65535)
    2eda:	fe 01       	movw	r30, r28
    2edc:	e5 53       	subi	r30, 0x35	; 53
    2ede:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee0:	60 81       	ld	r22, Z
    2ee2:	71 81       	ldd	r23, Z+1	; 0x01
    2ee4:	82 81       	ldd	r24, Z+2	; 0x02
    2ee6:	93 81       	ldd	r25, Z+3	; 0x03
    2ee8:	20 e0       	ldi	r18, 0x00	; 0
    2eea:	3f ef       	ldi	r19, 0xFF	; 255
    2eec:	4f e7       	ldi	r20, 0x7F	; 127
    2eee:	57 e4       	ldi	r21, 0x47	; 71
    2ef0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ef4:	18 16       	cp	r1, r24
    2ef6:	0c f0       	brlt	.+2      	; 0x2efa <main+0x14ea>
    2ef8:	43 c0       	rjmp	.+134    	; 0x2f80 <main+0x1570>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2efa:	fe 01       	movw	r30, r28
    2efc:	e1 53       	subi	r30, 0x31	; 49
    2efe:	ff 4f       	sbci	r31, 0xFF	; 255
    2f00:	60 81       	ld	r22, Z
    2f02:	71 81       	ldd	r23, Z+1	; 0x01
    2f04:	82 81       	ldd	r24, Z+2	; 0x02
    2f06:	93 81       	ldd	r25, Z+3	; 0x03
    2f08:	20 e0       	ldi	r18, 0x00	; 0
    2f0a:	30 e0       	ldi	r19, 0x00	; 0
    2f0c:	40 e2       	ldi	r20, 0x20	; 32
    2f0e:	51 e4       	ldi	r21, 0x41	; 65
    2f10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f14:	dc 01       	movw	r26, r24
    2f16:	cb 01       	movw	r24, r22
    2f18:	8e 01       	movw	r16, r28
    2f1a:	07 53       	subi	r16, 0x37	; 55
    2f1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f1e:	bc 01       	movw	r22, r24
    2f20:	cd 01       	movw	r24, r26
    2f22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f26:	dc 01       	movw	r26, r24
    2f28:	cb 01       	movw	r24, r22
    2f2a:	f8 01       	movw	r30, r16
    2f2c:	91 83       	std	Z+1, r25	; 0x01
    2f2e:	80 83       	st	Z, r24
    2f30:	1f c0       	rjmp	.+62     	; 0x2f70 <main+0x1560>
    2f32:	fe 01       	movw	r30, r28
    2f34:	e9 53       	subi	r30, 0x39	; 57
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	88 ec       	ldi	r24, 0xC8	; 200
    2f3a:	90 e0       	ldi	r25, 0x00	; 0
    2f3c:	91 83       	std	Z+1, r25	; 0x01
    2f3e:	80 83       	st	Z, r24
    2f40:	fe 01       	movw	r30, r28
    2f42:	e9 53       	subi	r30, 0x39	; 57
    2f44:	ff 4f       	sbci	r31, 0xFF	; 255
    2f46:	80 81       	ld	r24, Z
    2f48:	91 81       	ldd	r25, Z+1	; 0x01
    2f4a:	01 97       	sbiw	r24, 0x01	; 1
    2f4c:	f1 f7       	brne	.-4      	; 0x2f4a <main+0x153a>
    2f4e:	fe 01       	movw	r30, r28
    2f50:	e9 53       	subi	r30, 0x39	; 57
    2f52:	ff 4f       	sbci	r31, 0xFF	; 255
    2f54:	91 83       	std	Z+1, r25	; 0x01
    2f56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f58:	de 01       	movw	r26, r28
    2f5a:	a7 53       	subi	r26, 0x37	; 55
    2f5c:	bf 4f       	sbci	r27, 0xFF	; 255
    2f5e:	fe 01       	movw	r30, r28
    2f60:	e7 53       	subi	r30, 0x37	; 55
    2f62:	ff 4f       	sbci	r31, 0xFF	; 255
    2f64:	80 81       	ld	r24, Z
    2f66:	91 81       	ldd	r25, Z+1	; 0x01
    2f68:	01 97       	sbiw	r24, 0x01	; 1
    2f6a:	11 96       	adiw	r26, 0x01	; 1
    2f6c:	9c 93       	st	X, r25
    2f6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f70:	fe 01       	movw	r30, r28
    2f72:	e7 53       	subi	r30, 0x37	; 55
    2f74:	ff 4f       	sbci	r31, 0xFF	; 255
    2f76:	80 81       	ld	r24, Z
    2f78:	91 81       	ldd	r25, Z+1	; 0x01
    2f7a:	00 97       	sbiw	r24, 0x00	; 0
    2f7c:	d1 f6       	brne	.-76     	; 0x2f32 <main+0x1522>
    2f7e:	c1 c1       	rjmp	.+898    	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f80:	8e 01       	movw	r16, r28
    2f82:	07 53       	subi	r16, 0x37	; 55
    2f84:	1f 4f       	sbci	r17, 0xFF	; 255
    2f86:	fe 01       	movw	r30, r28
    2f88:	e5 53       	subi	r30, 0x35	; 53
    2f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f8c:	60 81       	ld	r22, Z
    2f8e:	71 81       	ldd	r23, Z+1	; 0x01
    2f90:	82 81       	ldd	r24, Z+2	; 0x02
    2f92:	93 81       	ldd	r25, Z+3	; 0x03
    2f94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f98:	dc 01       	movw	r26, r24
    2f9a:	cb 01       	movw	r24, r22
    2f9c:	f8 01       	movw	r30, r16
    2f9e:	91 83       	std	Z+1, r25	; 0x01
    2fa0:	80 83       	st	Z, r24
    2fa2:	de 01       	movw	r26, r28
    2fa4:	ab 53       	subi	r26, 0x3B	; 59
    2fa6:	bf 4f       	sbci	r27, 0xFF	; 255
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e7 53       	subi	r30, 0x37	; 55
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	80 81       	ld	r24, Z
    2fb0:	91 81       	ldd	r25, Z+1	; 0x01
    2fb2:	11 96       	adiw	r26, 0x01	; 1
    2fb4:	9c 93       	st	X, r25
    2fb6:	8e 93       	st	-X, r24
    2fb8:	fe 01       	movw	r30, r28
    2fba:	eb 53       	subi	r30, 0x3B	; 59
    2fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fbe:	80 81       	ld	r24, Z
    2fc0:	91 81       	ldd	r25, Z+1	; 0x01
    2fc2:	01 97       	sbiw	r24, 0x01	; 1
    2fc4:	f1 f7       	brne	.-4      	; 0x2fc2 <main+0x15b2>
    2fc6:	fe 01       	movw	r30, r28
    2fc8:	eb 53       	subi	r30, 0x3B	; 59
    2fca:	ff 4f       	sbci	r31, 0xFF	; 255
    2fcc:	91 83       	std	Z+1, r25	; 0x01
    2fce:	80 83       	st	Z, r24
    2fd0:	98 c1       	rjmp	.+816    	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key==0){
    2fd2:	fe 01       	movw	r30, r28
    2fd4:	eb 58       	subi	r30, 0x8B	; 139
    2fd6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd8:	80 81       	ld	r24, Z
    2fda:	88 23       	and	r24, r24
    2fdc:	09 f0       	breq	.+2      	; 0x2fe0 <main+0x15d0>
    2fde:	c6 c0       	rjmp	.+396    	; 0x316c <main+0x175c>
							id[i]='m';
    2fe0:	fe 01       	movw	r30, r28
    2fe2:	ed 58       	subi	r30, 0x8D	; 141
    2fe4:	fe 4f       	sbci	r31, 0xFE	; 254
    2fe6:	80 81       	ld	r24, Z
    2fe8:	28 2f       	mov	r18, r24
    2fea:	30 e0       	ldi	r19, 0x00	; 0
    2fec:	ce 01       	movw	r24, r28
    2fee:	8a 58       	subi	r24, 0x8A	; 138
    2ff0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ff2:	fc 01       	movw	r30, r24
    2ff4:	e2 0f       	add	r30, r18
    2ff6:	f3 1f       	adc	r31, r19
    2ff8:	8d e6       	ldi	r24, 0x6D	; 109
    2ffa:	80 83       	st	Z, r24
							Lcd_vidWriteChar('m');
    2ffc:	8d e6       	ldi	r24, 0x6D	; 109
    2ffe:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    3002:	fe 01       	movw	r30, r28
    3004:	ef 53       	subi	r30, 0x3F	; 63
    3006:	ff 4f       	sbci	r31, 0xFF	; 255
    3008:	80 e0       	ldi	r24, 0x00	; 0
    300a:	90 e0       	ldi	r25, 0x00	; 0
    300c:	aa ef       	ldi	r26, 0xFA	; 250
    300e:	b4 e4       	ldi	r27, 0x44	; 68
    3010:	80 83       	st	Z, r24
    3012:	91 83       	std	Z+1, r25	; 0x01
    3014:	a2 83       	std	Z+2, r26	; 0x02
    3016:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3018:	8e 01       	movw	r16, r28
    301a:	03 54       	subi	r16, 0x43	; 67
    301c:	1f 4f       	sbci	r17, 0xFF	; 255
    301e:	fe 01       	movw	r30, r28
    3020:	ef 53       	subi	r30, 0x3F	; 63
    3022:	ff 4f       	sbci	r31, 0xFF	; 255
    3024:	60 81       	ld	r22, Z
    3026:	71 81       	ldd	r23, Z+1	; 0x01
    3028:	82 81       	ldd	r24, Z+2	; 0x02
    302a:	93 81       	ldd	r25, Z+3	; 0x03
    302c:	20 e0       	ldi	r18, 0x00	; 0
    302e:	30 e0       	ldi	r19, 0x00	; 0
    3030:	4a ef       	ldi	r20, 0xFA	; 250
    3032:	54 e4       	ldi	r21, 0x44	; 68
    3034:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3038:	dc 01       	movw	r26, r24
    303a:	cb 01       	movw	r24, r22
    303c:	f8 01       	movw	r30, r16
    303e:	80 83       	st	Z, r24
    3040:	91 83       	std	Z+1, r25	; 0x01
    3042:	a2 83       	std	Z+2, r26	; 0x02
    3044:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3046:	fe 01       	movw	r30, r28
    3048:	e3 54       	subi	r30, 0x43	; 67
    304a:	ff 4f       	sbci	r31, 0xFF	; 255
    304c:	60 81       	ld	r22, Z
    304e:	71 81       	ldd	r23, Z+1	; 0x01
    3050:	82 81       	ldd	r24, Z+2	; 0x02
    3052:	93 81       	ldd	r25, Z+3	; 0x03
    3054:	20 e0       	ldi	r18, 0x00	; 0
    3056:	30 e0       	ldi	r19, 0x00	; 0
    3058:	40 e8       	ldi	r20, 0x80	; 128
    305a:	5f e3       	ldi	r21, 0x3F	; 63
    305c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3060:	88 23       	and	r24, r24
    3062:	44 f4       	brge	.+16     	; 0x3074 <main+0x1664>
		__ticks = 1;
    3064:	fe 01       	movw	r30, r28
    3066:	e5 54       	subi	r30, 0x45	; 69
    3068:	ff 4f       	sbci	r31, 0xFF	; 255
    306a:	81 e0       	ldi	r24, 0x01	; 1
    306c:	90 e0       	ldi	r25, 0x00	; 0
    306e:	91 83       	std	Z+1, r25	; 0x01
    3070:	80 83       	st	Z, r24
    3072:	64 c0       	rjmp	.+200    	; 0x313c <main+0x172c>
	else if (__tmp > 65535)
    3074:	fe 01       	movw	r30, r28
    3076:	e3 54       	subi	r30, 0x43	; 67
    3078:	ff 4f       	sbci	r31, 0xFF	; 255
    307a:	60 81       	ld	r22, Z
    307c:	71 81       	ldd	r23, Z+1	; 0x01
    307e:	82 81       	ldd	r24, Z+2	; 0x02
    3080:	93 81       	ldd	r25, Z+3	; 0x03
    3082:	20 e0       	ldi	r18, 0x00	; 0
    3084:	3f ef       	ldi	r19, 0xFF	; 255
    3086:	4f e7       	ldi	r20, 0x7F	; 127
    3088:	57 e4       	ldi	r21, 0x47	; 71
    308a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    308e:	18 16       	cp	r1, r24
    3090:	0c f0       	brlt	.+2      	; 0x3094 <main+0x1684>
    3092:	43 c0       	rjmp	.+134    	; 0x311a <main+0x170a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3094:	fe 01       	movw	r30, r28
    3096:	ef 53       	subi	r30, 0x3F	; 63
    3098:	ff 4f       	sbci	r31, 0xFF	; 255
    309a:	60 81       	ld	r22, Z
    309c:	71 81       	ldd	r23, Z+1	; 0x01
    309e:	82 81       	ldd	r24, Z+2	; 0x02
    30a0:	93 81       	ldd	r25, Z+3	; 0x03
    30a2:	20 e0       	ldi	r18, 0x00	; 0
    30a4:	30 e0       	ldi	r19, 0x00	; 0
    30a6:	40 e2       	ldi	r20, 0x20	; 32
    30a8:	51 e4       	ldi	r21, 0x41	; 65
    30aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30ae:	dc 01       	movw	r26, r24
    30b0:	cb 01       	movw	r24, r22
    30b2:	8e 01       	movw	r16, r28
    30b4:	05 54       	subi	r16, 0x45	; 69
    30b6:	1f 4f       	sbci	r17, 0xFF	; 255
    30b8:	bc 01       	movw	r22, r24
    30ba:	cd 01       	movw	r24, r26
    30bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	f8 01       	movw	r30, r16
    30c6:	91 83       	std	Z+1, r25	; 0x01
    30c8:	80 83       	st	Z, r24
    30ca:	1f c0       	rjmp	.+62     	; 0x310a <main+0x16fa>
    30cc:	fe 01       	movw	r30, r28
    30ce:	e7 54       	subi	r30, 0x47	; 71
    30d0:	ff 4f       	sbci	r31, 0xFF	; 255
    30d2:	88 ec       	ldi	r24, 0xC8	; 200
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	91 83       	std	Z+1, r25	; 0x01
    30d8:	80 83       	st	Z, r24
    30da:	fe 01       	movw	r30, r28
    30dc:	e7 54       	subi	r30, 0x47	; 71
    30de:	ff 4f       	sbci	r31, 0xFF	; 255
    30e0:	80 81       	ld	r24, Z
    30e2:	91 81       	ldd	r25, Z+1	; 0x01
    30e4:	01 97       	sbiw	r24, 0x01	; 1
    30e6:	f1 f7       	brne	.-4      	; 0x30e4 <main+0x16d4>
    30e8:	fe 01       	movw	r30, r28
    30ea:	e7 54       	subi	r30, 0x47	; 71
    30ec:	ff 4f       	sbci	r31, 0xFF	; 255
    30ee:	91 83       	std	Z+1, r25	; 0x01
    30f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30f2:	de 01       	movw	r26, r28
    30f4:	a5 54       	subi	r26, 0x45	; 69
    30f6:	bf 4f       	sbci	r27, 0xFF	; 255
    30f8:	fe 01       	movw	r30, r28
    30fa:	e5 54       	subi	r30, 0x45	; 69
    30fc:	ff 4f       	sbci	r31, 0xFF	; 255
    30fe:	80 81       	ld	r24, Z
    3100:	91 81       	ldd	r25, Z+1	; 0x01
    3102:	01 97       	sbiw	r24, 0x01	; 1
    3104:	11 96       	adiw	r26, 0x01	; 1
    3106:	9c 93       	st	X, r25
    3108:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    310a:	fe 01       	movw	r30, r28
    310c:	e5 54       	subi	r30, 0x45	; 69
    310e:	ff 4f       	sbci	r31, 0xFF	; 255
    3110:	80 81       	ld	r24, Z
    3112:	91 81       	ldd	r25, Z+1	; 0x01
    3114:	00 97       	sbiw	r24, 0x00	; 0
    3116:	d1 f6       	brne	.-76     	; 0x30cc <main+0x16bc>
    3118:	f4 c0       	rjmp	.+488    	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    311a:	8e 01       	movw	r16, r28
    311c:	05 54       	subi	r16, 0x45	; 69
    311e:	1f 4f       	sbci	r17, 0xFF	; 255
    3120:	fe 01       	movw	r30, r28
    3122:	e3 54       	subi	r30, 0x43	; 67
    3124:	ff 4f       	sbci	r31, 0xFF	; 255
    3126:	60 81       	ld	r22, Z
    3128:	71 81       	ldd	r23, Z+1	; 0x01
    312a:	82 81       	ldd	r24, Z+2	; 0x02
    312c:	93 81       	ldd	r25, Z+3	; 0x03
    312e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3132:	dc 01       	movw	r26, r24
    3134:	cb 01       	movw	r24, r22
    3136:	f8 01       	movw	r30, r16
    3138:	91 83       	std	Z+1, r25	; 0x01
    313a:	80 83       	st	Z, r24
    313c:	de 01       	movw	r26, r28
    313e:	a9 54       	subi	r26, 0x49	; 73
    3140:	bf 4f       	sbci	r27, 0xFF	; 255
    3142:	fe 01       	movw	r30, r28
    3144:	e5 54       	subi	r30, 0x45	; 69
    3146:	ff 4f       	sbci	r31, 0xFF	; 255
    3148:	80 81       	ld	r24, Z
    314a:	91 81       	ldd	r25, Z+1	; 0x01
    314c:	11 96       	adiw	r26, 0x01	; 1
    314e:	9c 93       	st	X, r25
    3150:	8e 93       	st	-X, r24
    3152:	fe 01       	movw	r30, r28
    3154:	e9 54       	subi	r30, 0x49	; 73
    3156:	ff 4f       	sbci	r31, 0xFF	; 255
    3158:	80 81       	ld	r24, Z
    315a:	91 81       	ldd	r25, Z+1	; 0x01
    315c:	01 97       	sbiw	r24, 0x01	; 1
    315e:	f1 f7       	brne	.-4      	; 0x315c <main+0x174c>
    3160:	fe 01       	movw	r30, r28
    3162:	e9 54       	subi	r30, 0x49	; 73
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	91 83       	std	Z+1, r25	; 0x01
    3168:	80 83       	st	Z, r24
    316a:	cb c0       	rjmp	.+406    	; 0x3302 <main+0x18f2>
							_delay_ms(2000);
						}
						else if(key=='/'){
    316c:	fe 01       	movw	r30, r28
    316e:	eb 58       	subi	r30, 0x8B	; 139
    3170:	fe 4f       	sbci	r31, 0xFE	; 254
    3172:	80 81       	ld	r24, Z
    3174:	8f 32       	cpi	r24, 0x2F	; 47
    3176:	09 f0       	breq	.+2      	; 0x317a <main+0x176a>
    3178:	c4 c0       	rjmp	.+392    	; 0x3302 <main+0x18f2>
							id[i]='n';
    317a:	fe 01       	movw	r30, r28
    317c:	ed 58       	subi	r30, 0x8D	; 141
    317e:	fe 4f       	sbci	r31, 0xFE	; 254
    3180:	80 81       	ld	r24, Z
    3182:	28 2f       	mov	r18, r24
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	ce 01       	movw	r24, r28
    3188:	8a 58       	subi	r24, 0x8A	; 138
    318a:	9e 4f       	sbci	r25, 0xFE	; 254
    318c:	fc 01       	movw	r30, r24
    318e:	e2 0f       	add	r30, r18
    3190:	f3 1f       	adc	r31, r19
    3192:	8e e6       	ldi	r24, 0x6E	; 110
    3194:	80 83       	st	Z, r24
							Lcd_vidWriteChar('n');
    3196:	8e e6       	ldi	r24, 0x6E	; 110
    3198:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    319c:	fe 01       	movw	r30, r28
    319e:	ed 54       	subi	r30, 0x4D	; 77
    31a0:	ff 4f       	sbci	r31, 0xFF	; 255
    31a2:	80 e0       	ldi	r24, 0x00	; 0
    31a4:	90 e0       	ldi	r25, 0x00	; 0
    31a6:	aa ef       	ldi	r26, 0xFA	; 250
    31a8:	b4 e4       	ldi	r27, 0x44	; 68
    31aa:	80 83       	st	Z, r24
    31ac:	91 83       	std	Z+1, r25	; 0x01
    31ae:	a2 83       	std	Z+2, r26	; 0x02
    31b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31b2:	8e 01       	movw	r16, r28
    31b4:	01 55       	subi	r16, 0x51	; 81
    31b6:	1f 4f       	sbci	r17, 0xFF	; 255
    31b8:	fe 01       	movw	r30, r28
    31ba:	ed 54       	subi	r30, 0x4D	; 77
    31bc:	ff 4f       	sbci	r31, 0xFF	; 255
    31be:	60 81       	ld	r22, Z
    31c0:	71 81       	ldd	r23, Z+1	; 0x01
    31c2:	82 81       	ldd	r24, Z+2	; 0x02
    31c4:	93 81       	ldd	r25, Z+3	; 0x03
    31c6:	20 e0       	ldi	r18, 0x00	; 0
    31c8:	30 e0       	ldi	r19, 0x00	; 0
    31ca:	4a ef       	ldi	r20, 0xFA	; 250
    31cc:	54 e4       	ldi	r21, 0x44	; 68
    31ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31d2:	dc 01       	movw	r26, r24
    31d4:	cb 01       	movw	r24, r22
    31d6:	f8 01       	movw	r30, r16
    31d8:	80 83       	st	Z, r24
    31da:	91 83       	std	Z+1, r25	; 0x01
    31dc:	a2 83       	std	Z+2, r26	; 0x02
    31de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31e0:	fe 01       	movw	r30, r28
    31e2:	e1 55       	subi	r30, 0x51	; 81
    31e4:	ff 4f       	sbci	r31, 0xFF	; 255
    31e6:	60 81       	ld	r22, Z
    31e8:	71 81       	ldd	r23, Z+1	; 0x01
    31ea:	82 81       	ldd	r24, Z+2	; 0x02
    31ec:	93 81       	ldd	r25, Z+3	; 0x03
    31ee:	20 e0       	ldi	r18, 0x00	; 0
    31f0:	30 e0       	ldi	r19, 0x00	; 0
    31f2:	40 e8       	ldi	r20, 0x80	; 128
    31f4:	5f e3       	ldi	r21, 0x3F	; 63
    31f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31fa:	88 23       	and	r24, r24
    31fc:	44 f4       	brge	.+16     	; 0x320e <main+0x17fe>
		__ticks = 1;
    31fe:	fe 01       	movw	r30, r28
    3200:	e3 55       	subi	r30, 0x53	; 83
    3202:	ff 4f       	sbci	r31, 0xFF	; 255
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	80 83       	st	Z, r24
    320c:	64 c0       	rjmp	.+200    	; 0x32d6 <main+0x18c6>
	else if (__tmp > 65535)
    320e:	fe 01       	movw	r30, r28
    3210:	e1 55       	subi	r30, 0x51	; 81
    3212:	ff 4f       	sbci	r31, 0xFF	; 255
    3214:	60 81       	ld	r22, Z
    3216:	71 81       	ldd	r23, Z+1	; 0x01
    3218:	82 81       	ldd	r24, Z+2	; 0x02
    321a:	93 81       	ldd	r25, Z+3	; 0x03
    321c:	20 e0       	ldi	r18, 0x00	; 0
    321e:	3f ef       	ldi	r19, 0xFF	; 255
    3220:	4f e7       	ldi	r20, 0x7F	; 127
    3222:	57 e4       	ldi	r21, 0x47	; 71
    3224:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3228:	18 16       	cp	r1, r24
    322a:	0c f0       	brlt	.+2      	; 0x322e <main+0x181e>
    322c:	43 c0       	rjmp	.+134    	; 0x32b4 <main+0x18a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    322e:	fe 01       	movw	r30, r28
    3230:	ed 54       	subi	r30, 0x4D	; 77
    3232:	ff 4f       	sbci	r31, 0xFF	; 255
    3234:	60 81       	ld	r22, Z
    3236:	71 81       	ldd	r23, Z+1	; 0x01
    3238:	82 81       	ldd	r24, Z+2	; 0x02
    323a:	93 81       	ldd	r25, Z+3	; 0x03
    323c:	20 e0       	ldi	r18, 0x00	; 0
    323e:	30 e0       	ldi	r19, 0x00	; 0
    3240:	40 e2       	ldi	r20, 0x20	; 32
    3242:	51 e4       	ldi	r21, 0x41	; 65
    3244:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3248:	dc 01       	movw	r26, r24
    324a:	cb 01       	movw	r24, r22
    324c:	8e 01       	movw	r16, r28
    324e:	03 55       	subi	r16, 0x53	; 83
    3250:	1f 4f       	sbci	r17, 0xFF	; 255
    3252:	bc 01       	movw	r22, r24
    3254:	cd 01       	movw	r24, r26
    3256:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    325a:	dc 01       	movw	r26, r24
    325c:	cb 01       	movw	r24, r22
    325e:	f8 01       	movw	r30, r16
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24
    3264:	1f c0       	rjmp	.+62     	; 0x32a4 <main+0x1894>
    3266:	fe 01       	movw	r30, r28
    3268:	e5 55       	subi	r30, 0x55	; 85
    326a:	ff 4f       	sbci	r31, 0xFF	; 255
    326c:	88 ec       	ldi	r24, 0xC8	; 200
    326e:	90 e0       	ldi	r25, 0x00	; 0
    3270:	91 83       	std	Z+1, r25	; 0x01
    3272:	80 83       	st	Z, r24
    3274:	fe 01       	movw	r30, r28
    3276:	e5 55       	subi	r30, 0x55	; 85
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	80 81       	ld	r24, Z
    327c:	91 81       	ldd	r25, Z+1	; 0x01
    327e:	01 97       	sbiw	r24, 0x01	; 1
    3280:	f1 f7       	brne	.-4      	; 0x327e <main+0x186e>
    3282:	fe 01       	movw	r30, r28
    3284:	e5 55       	subi	r30, 0x55	; 85
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	91 83       	std	Z+1, r25	; 0x01
    328a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    328c:	de 01       	movw	r26, r28
    328e:	a3 55       	subi	r26, 0x53	; 83
    3290:	bf 4f       	sbci	r27, 0xFF	; 255
    3292:	fe 01       	movw	r30, r28
    3294:	e3 55       	subi	r30, 0x53	; 83
    3296:	ff 4f       	sbci	r31, 0xFF	; 255
    3298:	80 81       	ld	r24, Z
    329a:	91 81       	ldd	r25, Z+1	; 0x01
    329c:	01 97       	sbiw	r24, 0x01	; 1
    329e:	11 96       	adiw	r26, 0x01	; 1
    32a0:	9c 93       	st	X, r25
    32a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32a4:	fe 01       	movw	r30, r28
    32a6:	e3 55       	subi	r30, 0x53	; 83
    32a8:	ff 4f       	sbci	r31, 0xFF	; 255
    32aa:	80 81       	ld	r24, Z
    32ac:	91 81       	ldd	r25, Z+1	; 0x01
    32ae:	00 97       	sbiw	r24, 0x00	; 0
    32b0:	d1 f6       	brne	.-76     	; 0x3266 <main+0x1856>
    32b2:	27 c0       	rjmp	.+78     	; 0x3302 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32b4:	8e 01       	movw	r16, r28
    32b6:	03 55       	subi	r16, 0x53	; 83
    32b8:	1f 4f       	sbci	r17, 0xFF	; 255
    32ba:	fe 01       	movw	r30, r28
    32bc:	e1 55       	subi	r30, 0x51	; 81
    32be:	ff 4f       	sbci	r31, 0xFF	; 255
    32c0:	60 81       	ld	r22, Z
    32c2:	71 81       	ldd	r23, Z+1	; 0x01
    32c4:	82 81       	ldd	r24, Z+2	; 0x02
    32c6:	93 81       	ldd	r25, Z+3	; 0x03
    32c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32cc:	dc 01       	movw	r26, r24
    32ce:	cb 01       	movw	r24, r22
    32d0:	f8 01       	movw	r30, r16
    32d2:	91 83       	std	Z+1, r25	; 0x01
    32d4:	80 83       	st	Z, r24
    32d6:	de 01       	movw	r26, r28
    32d8:	a7 55       	subi	r26, 0x57	; 87
    32da:	bf 4f       	sbci	r27, 0xFF	; 255
    32dc:	fe 01       	movw	r30, r28
    32de:	e3 55       	subi	r30, 0x53	; 83
    32e0:	ff 4f       	sbci	r31, 0xFF	; 255
    32e2:	80 81       	ld	r24, Z
    32e4:	91 81       	ldd	r25, Z+1	; 0x01
    32e6:	8d 93       	st	X+, r24
    32e8:	9c 93       	st	X, r25
    32ea:	fe 01       	movw	r30, r28
    32ec:	e7 55       	subi	r30, 0x57	; 87
    32ee:	ff 4f       	sbci	r31, 0xFF	; 255
    32f0:	80 81       	ld	r24, Z
    32f2:	91 81       	ldd	r25, Z+1	; 0x01
    32f4:	01 97       	sbiw	r24, 0x01	; 1
    32f6:	f1 f7       	brne	.-4      	; 0x32f4 <main+0x18e4>
    32f8:	fe 01       	movw	r30, r28
    32fa:	e7 55       	subi	r30, 0x57	; 87
    32fc:	ff 4f       	sbci	r31, 0xFF	; 255
    32fe:	91 83       	std	Z+1, r25	; 0x01
    3300:	80 83       	st	Z, r24
							_delay_ms(2000);
						}
					}
				}
					loc+=0x01;
    3302:	de 01       	movw	r26, r28
    3304:	a0 59       	subi	r26, 0x90	; 144
    3306:	be 4f       	sbci	r27, 0xFE	; 254
    3308:	fe 01       	movw	r30, r28
    330a:	e0 59       	subi	r30, 0x90	; 144
    330c:	fe 4f       	sbci	r31, 0xFE	; 254
    330e:	80 81       	ld	r24, Z
    3310:	8f 5f       	subi	r24, 0xFF	; 255
    3312:	8c 93       	st	X, r24
	while(1){
		x=PINA;

		if(x==1){
			do{
				for(i=0; i<3; i++){
    3314:	de 01       	movw	r26, r28
    3316:	ad 58       	subi	r26, 0x8D	; 141
    3318:	be 4f       	sbci	r27, 0xFE	; 254
    331a:	fe 01       	movw	r30, r28
    331c:	ed 58       	subi	r30, 0x8D	; 141
    331e:	fe 4f       	sbci	r31, 0xFE	; 254
    3320:	80 81       	ld	r24, Z
    3322:	8f 5f       	subi	r24, 0xFF	; 255
    3324:	8c 93       	st	X, r24
    3326:	fe 01       	movw	r30, r28
    3328:	ed 58       	subi	r30, 0x8D	; 141
    332a:	fe 4f       	sbci	r31, 0xFE	; 254
    332c:	80 81       	ld	r24, Z
    332e:	83 30       	cpi	r24, 0x03	; 3
    3330:	10 f4       	brcc	.+4      	; 0x3336 <main+0x1926>
    3332:	0c 94 21 0e 	jmp	0x1c42	; 0x1c42 <main+0x232>
					}
				}
					loc+=0x01;
				}
				do{
					key=Keypad_u8GetKey();
    3336:	0e 94 47 08 	call	0x108e	; 0x108e <Keypad_u8GetKey>
    333a:	fe 01       	movw	r30, r28
    333c:	eb 58       	subi	r30, 0x8B	; 139
    333e:	fe 4f       	sbci	r31, 0xFE	; 254
    3340:	80 83       	st	Z, r24
				}
				while(key!='=');
    3342:	fe 01       	movw	r30, r28
    3344:	eb 58       	subi	r30, 0x8B	; 139
    3346:	fe 4f       	sbci	r31, 0xFE	; 254
    3348:	80 81       	ld	r24, Z
    334a:	8d 33       	cpi	r24, 0x3D	; 61
    334c:	a1 f7       	brne	.-24     	; 0x3336 <main+0x1926>
				count++;
    334e:	de 01       	movw	r26, r28
    3350:	ae 58       	subi	r26, 0x8E	; 142
    3352:	be 4f       	sbci	r27, 0xFE	; 254
    3354:	fe 01       	movw	r30, r28
    3356:	ee 58       	subi	r30, 0x8E	; 142
    3358:	fe 4f       	sbci	r31, 0xFE	; 254
    335a:	80 81       	ld	r24, Z
    335c:	8f 5f       	subi	r24, 0xFF	; 255
    335e:	8c 93       	st	X, r24
			}
			while((strcmp(id,id1)!=0)&&(strcmp(id,id2)!=0)&&(strcmp(id,id3)!=0)&&(count<3));
    3360:	ce 01       	movw	r24, r28
    3362:	8a 58       	subi	r24, 0x8A	; 138
    3364:	9e 4f       	sbci	r25, 0xFE	; 254
    3366:	9e 01       	movw	r18, r28
    3368:	2d 57       	subi	r18, 0x7D	; 125
    336a:	3e 4f       	sbci	r19, 0xFE	; 254
    336c:	b9 01       	movw	r22, r18
    336e:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    3372:	00 97       	sbiw	r24, 0x00	; 0
    3374:	f1 f0       	breq	.+60     	; 0x33b2 <main+0x19a2>
    3376:	ce 01       	movw	r24, r28
    3378:	8a 58       	subi	r24, 0x8A	; 138
    337a:	9e 4f       	sbci	r25, 0xFE	; 254
    337c:	9e 01       	movw	r18, r28
    337e:	29 57       	subi	r18, 0x79	; 121
    3380:	3e 4f       	sbci	r19, 0xFE	; 254
    3382:	b9 01       	movw	r22, r18
    3384:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    3388:	00 97       	sbiw	r24, 0x00	; 0
    338a:	99 f0       	breq	.+38     	; 0x33b2 <main+0x19a2>
    338c:	ce 01       	movw	r24, r28
    338e:	8a 58       	subi	r24, 0x8A	; 138
    3390:	9e 4f       	sbci	r25, 0xFE	; 254
    3392:	9e 01       	movw	r18, r28
    3394:	25 57       	subi	r18, 0x75	; 117
    3396:	3e 4f       	sbci	r19, 0xFE	; 254
    3398:	b9 01       	movw	r22, r18
    339a:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    339e:	00 97       	sbiw	r24, 0x00	; 0
    33a0:	41 f0       	breq	.+16     	; 0x33b2 <main+0x19a2>
    33a2:	fe 01       	movw	r30, r28
    33a4:	ee 58       	subi	r30, 0x8E	; 142
    33a6:	fe 4f       	sbci	r31, 0xFE	; 254
    33a8:	80 81       	ld	r24, Z
    33aa:	83 30       	cpi	r24, 0x03	; 3
    33ac:	10 f4       	brcc	.+4      	; 0x33b2 <main+0x19a2>
    33ae:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <main+0x226>
			if((strcmp(id,id1)!=0)&&(strcmp(id,id2)!=0)&&(strcmp(id,id3)!=0)){
    33b2:	ce 01       	movw	r24, r28
    33b4:	8a 58       	subi	r24, 0x8A	; 138
    33b6:	9e 4f       	sbci	r25, 0xFE	; 254
    33b8:	9e 01       	movw	r18, r28
    33ba:	2d 57       	subi	r18, 0x7D	; 125
    33bc:	3e 4f       	sbci	r19, 0xFE	; 254
    33be:	b9 01       	movw	r22, r18
    33c0:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    33c4:	00 97       	sbiw	r24, 0x00	; 0
    33c6:	11 f4       	brne	.+4      	; 0x33cc <main+0x19bc>
    33c8:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
    33cc:	ce 01       	movw	r24, r28
    33ce:	8a 58       	subi	r24, 0x8A	; 138
    33d0:	9e 4f       	sbci	r25, 0xFE	; 254
    33d2:	9e 01       	movw	r18, r28
    33d4:	29 57       	subi	r18, 0x79	; 121
    33d6:	3e 4f       	sbci	r19, 0xFE	; 254
    33d8:	b9 01       	movw	r22, r18
    33da:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    33de:	00 97       	sbiw	r24, 0x00	; 0
    33e0:	11 f4       	brne	.+4      	; 0x33e6 <main+0x19d6>
    33e2:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
    33e6:	ce 01       	movw	r24, r28
    33e8:	8a 58       	subi	r24, 0x8A	; 138
    33ea:	9e 4f       	sbci	r25, 0xFE	; 254
    33ec:	9e 01       	movw	r18, r28
    33ee:	25 57       	subi	r18, 0x75	; 117
    33f0:	3e 4f       	sbci	r19, 0xFE	; 254
    33f2:	b9 01       	movw	r22, r18
    33f4:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    33f8:	00 97       	sbiw	r24, 0x00	; 0
    33fa:	11 f4       	brne	.+4      	; 0x3400 <main+0x19f0>
    33fc:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
				Lcd_vidSendCommand(0x01);
    3400:	81 e0       	ldi	r24, 0x01	; 1
    3402:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
				for(i=0; i<5; i++){
    3406:	fe 01       	movw	r30, r28
    3408:	ed 58       	subi	r30, 0x8D	; 141
    340a:	fe 4f       	sbci	r31, 0xFE	; 254
    340c:	10 82       	st	Z, r1
    340e:	27 c0       	rjmp	.+78     	; 0x345e <main+0x1a4e>
					Lcd_vidSendCommand(error_loc1);
    3410:	fe 01       	movw	r30, r28
    3412:	e2 59       	subi	r30, 0x92	; 146
    3414:	fe 4f       	sbci	r31, 0xFE	; 254
    3416:	80 81       	ld	r24, Z
    3418:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(error[i]);
    341c:	fe 01       	movw	r30, r28
    341e:	ed 58       	subi	r30, 0x8D	; 141
    3420:	fe 4f       	sbci	r31, 0xFE	; 254
    3422:	80 81       	ld	r24, Z
    3424:	28 2f       	mov	r18, r24
    3426:	30 e0       	ldi	r19, 0x00	; 0
    3428:	ce 01       	movw	r24, r28
    342a:	82 58       	subi	r24, 0x82	; 130
    342c:	9e 4f       	sbci	r25, 0xFE	; 254
    342e:	fc 01       	movw	r30, r24
    3430:	e2 0f       	add	r30, r18
    3432:	f3 1f       	adc	r31, r19
    3434:	80 81       	ld	r24, Z
    3436:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
					error_loc1+=0x01;
    343a:	de 01       	movw	r26, r28
    343c:	a2 59       	subi	r26, 0x92	; 146
    343e:	be 4f       	sbci	r27, 0xFE	; 254
    3440:	fe 01       	movw	r30, r28
    3442:	e2 59       	subi	r30, 0x92	; 146
    3444:	fe 4f       	sbci	r31, 0xFE	; 254
    3446:	80 81       	ld	r24, Z
    3448:	8f 5f       	subi	r24, 0xFF	; 255
    344a:	8c 93       	st	X, r24
				count++;
			}
			while((strcmp(id,id1)!=0)&&(strcmp(id,id2)!=0)&&(strcmp(id,id3)!=0)&&(count<3));
			if((strcmp(id,id1)!=0)&&(strcmp(id,id2)!=0)&&(strcmp(id,id3)!=0)){
				Lcd_vidSendCommand(0x01);
				for(i=0; i<5; i++){
    344c:	de 01       	movw	r26, r28
    344e:	ad 58       	subi	r26, 0x8D	; 141
    3450:	be 4f       	sbci	r27, 0xFE	; 254
    3452:	fe 01       	movw	r30, r28
    3454:	ed 58       	subi	r30, 0x8D	; 141
    3456:	fe 4f       	sbci	r31, 0xFE	; 254
    3458:	80 81       	ld	r24, Z
    345a:	8f 5f       	subi	r24, 0xFF	; 255
    345c:	8c 93       	st	X, r24
    345e:	fe 01       	movw	r30, r28
    3460:	ed 58       	subi	r30, 0x8D	; 141
    3462:	fe 4f       	sbci	r31, 0xFE	; 254
    3464:	80 81       	ld	r24, Z
    3466:	85 30       	cpi	r24, 0x05	; 5
    3468:	98 f2       	brcs	.-90     	; 0x3410 <main+0x1a00>
    346a:	fe 01       	movw	r30, r28
    346c:	eb 55       	subi	r30, 0x5B	; 91
    346e:	ff 4f       	sbci	r31, 0xFF	; 255
    3470:	80 e0       	ldi	r24, 0x00	; 0
    3472:	90 e4       	ldi	r25, 0x40	; 64
    3474:	ac e9       	ldi	r26, 0x9C	; 156
    3476:	b5 e4       	ldi	r27, 0x45	; 69
    3478:	80 83       	st	Z, r24
    347a:	91 83       	std	Z+1, r25	; 0x01
    347c:	a2 83       	std	Z+2, r26	; 0x02
    347e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3480:	8e 01       	movw	r16, r28
    3482:	0f 55       	subi	r16, 0x5F	; 95
    3484:	1f 4f       	sbci	r17, 0xFF	; 255
    3486:	fe 01       	movw	r30, r28
    3488:	eb 55       	subi	r30, 0x5B	; 91
    348a:	ff 4f       	sbci	r31, 0xFF	; 255
    348c:	60 81       	ld	r22, Z
    348e:	71 81       	ldd	r23, Z+1	; 0x01
    3490:	82 81       	ldd	r24, Z+2	; 0x02
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	20 e0       	ldi	r18, 0x00	; 0
    3496:	30 e0       	ldi	r19, 0x00	; 0
    3498:	4a ef       	ldi	r20, 0xFA	; 250
    349a:	54 e4       	ldi	r21, 0x44	; 68
    349c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34a0:	dc 01       	movw	r26, r24
    34a2:	cb 01       	movw	r24, r22
    34a4:	f8 01       	movw	r30, r16
    34a6:	80 83       	st	Z, r24
    34a8:	91 83       	std	Z+1, r25	; 0x01
    34aa:	a2 83       	std	Z+2, r26	; 0x02
    34ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34ae:	fe 01       	movw	r30, r28
    34b0:	ef 55       	subi	r30, 0x5F	; 95
    34b2:	ff 4f       	sbci	r31, 0xFF	; 255
    34b4:	60 81       	ld	r22, Z
    34b6:	71 81       	ldd	r23, Z+1	; 0x01
    34b8:	82 81       	ldd	r24, Z+2	; 0x02
    34ba:	93 81       	ldd	r25, Z+3	; 0x03
    34bc:	20 e0       	ldi	r18, 0x00	; 0
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	40 e8       	ldi	r20, 0x80	; 128
    34c2:	5f e3       	ldi	r21, 0x3F	; 63
    34c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34c8:	88 23       	and	r24, r24
    34ca:	44 f4       	brge	.+16     	; 0x34dc <main+0x1acc>
		__ticks = 1;
    34cc:	fe 01       	movw	r30, r28
    34ce:	e1 56       	subi	r30, 0x61	; 97
    34d0:	ff 4f       	sbci	r31, 0xFF	; 255
    34d2:	81 e0       	ldi	r24, 0x01	; 1
    34d4:	90 e0       	ldi	r25, 0x00	; 0
    34d6:	91 83       	std	Z+1, r25	; 0x01
    34d8:	80 83       	st	Z, r24
    34da:	65 c0       	rjmp	.+202    	; 0x35a6 <main+0x1b96>
	else if (__tmp > 65535)
    34dc:	fe 01       	movw	r30, r28
    34de:	ef 55       	subi	r30, 0x5F	; 95
    34e0:	ff 4f       	sbci	r31, 0xFF	; 255
    34e2:	60 81       	ld	r22, Z
    34e4:	71 81       	ldd	r23, Z+1	; 0x01
    34e6:	82 81       	ldd	r24, Z+2	; 0x02
    34e8:	93 81       	ldd	r25, Z+3	; 0x03
    34ea:	20 e0       	ldi	r18, 0x00	; 0
    34ec:	3f ef       	ldi	r19, 0xFF	; 255
    34ee:	4f e7       	ldi	r20, 0x7F	; 127
    34f0:	57 e4       	ldi	r21, 0x47	; 71
    34f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34f6:	18 16       	cp	r1, r24
    34f8:	0c f0       	brlt	.+2      	; 0x34fc <main+0x1aec>
    34fa:	44 c0       	rjmp	.+136    	; 0x3584 <main+0x1b74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34fc:	fe 01       	movw	r30, r28
    34fe:	eb 55       	subi	r30, 0x5B	; 91
    3500:	ff 4f       	sbci	r31, 0xFF	; 255
    3502:	60 81       	ld	r22, Z
    3504:	71 81       	ldd	r23, Z+1	; 0x01
    3506:	82 81       	ldd	r24, Z+2	; 0x02
    3508:	93 81       	ldd	r25, Z+3	; 0x03
    350a:	20 e0       	ldi	r18, 0x00	; 0
    350c:	30 e0       	ldi	r19, 0x00	; 0
    350e:	40 e2       	ldi	r20, 0x20	; 32
    3510:	51 e4       	ldi	r21, 0x41	; 65
    3512:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3516:	dc 01       	movw	r26, r24
    3518:	cb 01       	movw	r24, r22
    351a:	8e 01       	movw	r16, r28
    351c:	01 56       	subi	r16, 0x61	; 97
    351e:	1f 4f       	sbci	r17, 0xFF	; 255
    3520:	bc 01       	movw	r22, r24
    3522:	cd 01       	movw	r24, r26
    3524:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3528:	dc 01       	movw	r26, r24
    352a:	cb 01       	movw	r24, r22
    352c:	f8 01       	movw	r30, r16
    352e:	91 83       	std	Z+1, r25	; 0x01
    3530:	80 83       	st	Z, r24
    3532:	1f c0       	rjmp	.+62     	; 0x3572 <main+0x1b62>
    3534:	fe 01       	movw	r30, r28
    3536:	e3 56       	subi	r30, 0x63	; 99
    3538:	ff 4f       	sbci	r31, 0xFF	; 255
    353a:	88 ec       	ldi	r24, 0xC8	; 200
    353c:	90 e0       	ldi	r25, 0x00	; 0
    353e:	91 83       	std	Z+1, r25	; 0x01
    3540:	80 83       	st	Z, r24
    3542:	fe 01       	movw	r30, r28
    3544:	e3 56       	subi	r30, 0x63	; 99
    3546:	ff 4f       	sbci	r31, 0xFF	; 255
    3548:	80 81       	ld	r24, Z
    354a:	91 81       	ldd	r25, Z+1	; 0x01
    354c:	01 97       	sbiw	r24, 0x01	; 1
    354e:	f1 f7       	brne	.-4      	; 0x354c <main+0x1b3c>
    3550:	fe 01       	movw	r30, r28
    3552:	e3 56       	subi	r30, 0x63	; 99
    3554:	ff 4f       	sbci	r31, 0xFF	; 255
    3556:	91 83       	std	Z+1, r25	; 0x01
    3558:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    355a:	de 01       	movw	r26, r28
    355c:	a1 56       	subi	r26, 0x61	; 97
    355e:	bf 4f       	sbci	r27, 0xFF	; 255
    3560:	fe 01       	movw	r30, r28
    3562:	e1 56       	subi	r30, 0x61	; 97
    3564:	ff 4f       	sbci	r31, 0xFF	; 255
    3566:	80 81       	ld	r24, Z
    3568:	91 81       	ldd	r25, Z+1	; 0x01
    356a:	01 97       	sbiw	r24, 0x01	; 1
    356c:	11 96       	adiw	r26, 0x01	; 1
    356e:	9c 93       	st	X, r25
    3570:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3572:	fe 01       	movw	r30, r28
    3574:	e1 56       	subi	r30, 0x61	; 97
    3576:	ff 4f       	sbci	r31, 0xFF	; 255
    3578:	80 81       	ld	r24, Z
    357a:	91 81       	ldd	r25, Z+1	; 0x01
    357c:	00 97       	sbiw	r24, 0x00	; 0
    357e:	d1 f6       	brne	.-76     	; 0x3534 <main+0x1b24>
    3580:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3584:	8e 01       	movw	r16, r28
    3586:	01 56       	subi	r16, 0x61	; 97
    3588:	1f 4f       	sbci	r17, 0xFF	; 255
    358a:	fe 01       	movw	r30, r28
    358c:	ef 55       	subi	r30, 0x5F	; 95
    358e:	ff 4f       	sbci	r31, 0xFF	; 255
    3590:	60 81       	ld	r22, Z
    3592:	71 81       	ldd	r23, Z+1	; 0x01
    3594:	82 81       	ldd	r24, Z+2	; 0x02
    3596:	93 81       	ldd	r25, Z+3	; 0x03
    3598:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    359c:	dc 01       	movw	r26, r24
    359e:	cb 01       	movw	r24, r22
    35a0:	f8 01       	movw	r30, r16
    35a2:	91 83       	std	Z+1, r25	; 0x01
    35a4:	80 83       	st	Z, r24
    35a6:	de 01       	movw	r26, r28
    35a8:	a5 56       	subi	r26, 0x65	; 101
    35aa:	bf 4f       	sbci	r27, 0xFF	; 255
    35ac:	fe 01       	movw	r30, r28
    35ae:	e1 56       	subi	r30, 0x61	; 97
    35b0:	ff 4f       	sbci	r31, 0xFF	; 255
    35b2:	80 81       	ld	r24, Z
    35b4:	91 81       	ldd	r25, Z+1	; 0x01
    35b6:	11 96       	adiw	r26, 0x01	; 1
    35b8:	9c 93       	st	X, r25
    35ba:	8e 93       	st	-X, r24
    35bc:	fe 01       	movw	r30, r28
    35be:	e5 56       	subi	r30, 0x65	; 101
    35c0:	ff 4f       	sbci	r31, 0xFF	; 255
    35c2:	80 81       	ld	r24, Z
    35c4:	91 81       	ldd	r25, Z+1	; 0x01
    35c6:	01 97       	sbiw	r24, 0x01	; 1
    35c8:	f1 f7       	brne	.-4      	; 0x35c6 <main+0x1bb6>
    35ca:	fe 01       	movw	r30, r28
    35cc:	e5 56       	subi	r30, 0x65	; 101
    35ce:	ff 4f       	sbci	r31, 0xFF	; 255
    35d0:	91 83       	std	Z+1, r25	; 0x01
    35d2:	80 83       	st	Z, r24
    35d4:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
				}
				_delay_ms(5000);
			}
		}

		else if(x==0){
    35d8:	fe 01       	movw	r30, r28
    35da:	ec 58       	subi	r30, 0x8C	; 140
    35dc:	fe 4f       	sbci	r31, 0xFE	; 254
    35de:	80 81       	ld	r24, Z
    35e0:	88 23       	and	r24, r24
    35e2:	11 f0       	breq	.+4      	; 0x35e8 <main+0x1bd8>
    35e4:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
			do{
				for(i=0; i<3; i++){
    35e8:	fe 01       	movw	r30, r28
    35ea:	ed 58       	subi	r30, 0x8D	; 141
    35ec:	fe 4f       	sbci	r31, 0xFE	; 254
    35ee:	10 82       	st	Z, r1
    35f0:	0c 94 9b 22 	jmp	0x4536	; 0x4536 <main+0x2b26>
					key=Keypad_u8GetKey();
    35f4:	0e 94 47 08 	call	0x108e	; 0x108e <Keypad_u8GetKey>
    35f8:	fe 01       	movw	r30, r28
    35fa:	eb 58       	subi	r30, 0x8B	; 139
    35fc:	fe 4f       	sbci	r31, 0xFE	; 254
    35fe:	80 83       	st	Z, r24
					Lcd_vidSendCommand(loc2);
    3600:	fe 01       	movw	r30, r28
    3602:	e1 59       	subi	r30, 0x91	; 145
    3604:	fe 4f       	sbci	r31, 0xFE	; 254
    3606:	80 81       	ld	r24, Z
    3608:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
					if(key!=0xFF){
    360c:	fe 01       	movw	r30, r28
    360e:	eb 58       	subi	r30, 0x8B	; 139
    3610:	fe 4f       	sbci	r31, 0xFE	; 254
    3612:	80 81       	ld	r24, Z
    3614:	8f 3f       	cpi	r24, 0xFF	; 255
    3616:	09 f4       	brne	.+2      	; 0x361a <main+0x1c0a>
    3618:	7c c7       	rjmp	.+3832   	; 0x4512 <main+0x2b02>
					if((key!='=')&&(key!='#')&&(key!='+')&&(key!='*')&&(key!='/')&&(key!='-')){
    361a:	fe 01       	movw	r30, r28
    361c:	eb 58       	subi	r30, 0x8B	; 139
    361e:	fe 4f       	sbci	r31, 0xFE	; 254
    3620:	80 81       	ld	r24, Z
    3622:	8d 33       	cpi	r24, 0x3D	; 61
    3624:	09 f4       	brne	.+2      	; 0x3628 <main+0x1c18>
    3626:	75 c7       	rjmp	.+3818   	; 0x4512 <main+0x2b02>
    3628:	fe 01       	movw	r30, r28
    362a:	eb 58       	subi	r30, 0x8B	; 139
    362c:	fe 4f       	sbci	r31, 0xFE	; 254
    362e:	80 81       	ld	r24, Z
    3630:	83 32       	cpi	r24, 0x23	; 35
    3632:	09 f4       	brne	.+2      	; 0x3636 <main+0x1c26>
    3634:	6e c7       	rjmp	.+3804   	; 0x4512 <main+0x2b02>
    3636:	fe 01       	movw	r30, r28
    3638:	eb 58       	subi	r30, 0x8B	; 139
    363a:	fe 4f       	sbci	r31, 0xFE	; 254
    363c:	80 81       	ld	r24, Z
    363e:	8b 32       	cpi	r24, 0x2B	; 43
    3640:	09 f4       	brne	.+2      	; 0x3644 <main+0x1c34>
    3642:	67 c7       	rjmp	.+3790   	; 0x4512 <main+0x2b02>
    3644:	fe 01       	movw	r30, r28
    3646:	eb 58       	subi	r30, 0x8B	; 139
    3648:	fe 4f       	sbci	r31, 0xFE	; 254
    364a:	80 81       	ld	r24, Z
    364c:	8a 32       	cpi	r24, 0x2A	; 42
    364e:	09 f4       	brne	.+2      	; 0x3652 <main+0x1c42>
    3650:	60 c7       	rjmp	.+3776   	; 0x4512 <main+0x2b02>
    3652:	fe 01       	movw	r30, r28
    3654:	eb 58       	subi	r30, 0x8B	; 139
    3656:	fe 4f       	sbci	r31, 0xFE	; 254
    3658:	80 81       	ld	r24, Z
    365a:	8f 32       	cpi	r24, 0x2F	; 47
    365c:	09 f4       	brne	.+2      	; 0x3660 <main+0x1c50>
    365e:	59 c7       	rjmp	.+3762   	; 0x4512 <main+0x2b02>
    3660:	fe 01       	movw	r30, r28
    3662:	eb 58       	subi	r30, 0x8B	; 139
    3664:	fe 4f       	sbci	r31, 0xFE	; 254
    3666:	80 81       	ld	r24, Z
    3668:	8d 32       	cpi	r24, 0x2D	; 45
    366a:	09 f4       	brne	.+2      	; 0x366e <main+0x1c5e>
    366c:	52 c7       	rjmp	.+3748   	; 0x4512 <main+0x2b02>
						if(key==0){
    366e:	fe 01       	movw	r30, r28
    3670:	eb 58       	subi	r30, 0x8B	; 139
    3672:	fe 4f       	sbci	r31, 0xFE	; 254
    3674:	80 81       	ld	r24, Z
    3676:	88 23       	and	r24, r24
    3678:	09 f0       	breq	.+2      	; 0x367c <main+0x1c6c>
    367a:	cd c0       	rjmp	.+410    	; 0x3816 <main+0x1e06>
							pass[i]=key;
    367c:	fe 01       	movw	r30, r28
    367e:	ed 58       	subi	r30, 0x8D	; 141
    3680:	fe 4f       	sbci	r31, 0xFE	; 254
    3682:	80 81       	ld	r24, Z
    3684:	28 2f       	mov	r18, r24
    3686:	30 e0       	ldi	r19, 0x00	; 0
    3688:	ce 01       	movw	r24, r28
    368a:	86 58       	subi	r24, 0x86	; 134
    368c:	9e 4f       	sbci	r25, 0xFE	; 254
    368e:	dc 01       	movw	r26, r24
    3690:	a2 0f       	add	r26, r18
    3692:	b3 1f       	adc	r27, r19
    3694:	fe 01       	movw	r30, r28
    3696:	eb 58       	subi	r30, 0x8B	; 139
    3698:	fe 4f       	sbci	r31, 0xFE	; 254
    369a:	80 81       	ld	r24, Z
    369c:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    369e:	fe 01       	movw	r30, r28
    36a0:	eb 58       	subi	r30, 0x8B	; 139
    36a2:	fe 4f       	sbci	r31, 0xFE	; 254
    36a4:	80 81       	ld	r24, Z
    36a6:	80 5d       	subi	r24, 0xD0	; 208
    36a8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    36ac:	fe 01       	movw	r30, r28
    36ae:	e9 56       	subi	r30, 0x69	; 105
    36b0:	ff 4f       	sbci	r31, 0xFF	; 255
    36b2:	80 e0       	ldi	r24, 0x00	; 0
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	aa ef       	ldi	r26, 0xFA	; 250
    36b8:	b4 e4       	ldi	r27, 0x44	; 68
    36ba:	80 83       	st	Z, r24
    36bc:	91 83       	std	Z+1, r25	; 0x01
    36be:	a2 83       	std	Z+2, r26	; 0x02
    36c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36c2:	8e 01       	movw	r16, r28
    36c4:	0d 56       	subi	r16, 0x6D	; 109
    36c6:	1f 4f       	sbci	r17, 0xFF	; 255
    36c8:	fe 01       	movw	r30, r28
    36ca:	e9 56       	subi	r30, 0x69	; 105
    36cc:	ff 4f       	sbci	r31, 0xFF	; 255
    36ce:	60 81       	ld	r22, Z
    36d0:	71 81       	ldd	r23, Z+1	; 0x01
    36d2:	82 81       	ldd	r24, Z+2	; 0x02
    36d4:	93 81       	ldd	r25, Z+3	; 0x03
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	30 e0       	ldi	r19, 0x00	; 0
    36da:	4a ef       	ldi	r20, 0xFA	; 250
    36dc:	54 e4       	ldi	r21, 0x44	; 68
    36de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36e2:	dc 01       	movw	r26, r24
    36e4:	cb 01       	movw	r24, r22
    36e6:	f8 01       	movw	r30, r16
    36e8:	80 83       	st	Z, r24
    36ea:	91 83       	std	Z+1, r25	; 0x01
    36ec:	a2 83       	std	Z+2, r26	; 0x02
    36ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36f0:	fe 01       	movw	r30, r28
    36f2:	ed 56       	subi	r30, 0x6D	; 109
    36f4:	ff 4f       	sbci	r31, 0xFF	; 255
    36f6:	60 81       	ld	r22, Z
    36f8:	71 81       	ldd	r23, Z+1	; 0x01
    36fa:	82 81       	ldd	r24, Z+2	; 0x02
    36fc:	93 81       	ldd	r25, Z+3	; 0x03
    36fe:	20 e0       	ldi	r18, 0x00	; 0
    3700:	30 e0       	ldi	r19, 0x00	; 0
    3702:	40 e8       	ldi	r20, 0x80	; 128
    3704:	5f e3       	ldi	r21, 0x3F	; 63
    3706:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    370a:	88 23       	and	r24, r24
    370c:	44 f4       	brge	.+16     	; 0x371e <main+0x1d0e>
		__ticks = 1;
    370e:	fe 01       	movw	r30, r28
    3710:	ef 56       	subi	r30, 0x6F	; 111
    3712:	ff 4f       	sbci	r31, 0xFF	; 255
    3714:	81 e0       	ldi	r24, 0x01	; 1
    3716:	90 e0       	ldi	r25, 0x00	; 0
    3718:	91 83       	std	Z+1, r25	; 0x01
    371a:	80 83       	st	Z, r24
    371c:	64 c0       	rjmp	.+200    	; 0x37e6 <main+0x1dd6>
	else if (__tmp > 65535)
    371e:	fe 01       	movw	r30, r28
    3720:	ed 56       	subi	r30, 0x6D	; 109
    3722:	ff 4f       	sbci	r31, 0xFF	; 255
    3724:	60 81       	ld	r22, Z
    3726:	71 81       	ldd	r23, Z+1	; 0x01
    3728:	82 81       	ldd	r24, Z+2	; 0x02
    372a:	93 81       	ldd	r25, Z+3	; 0x03
    372c:	20 e0       	ldi	r18, 0x00	; 0
    372e:	3f ef       	ldi	r19, 0xFF	; 255
    3730:	4f e7       	ldi	r20, 0x7F	; 127
    3732:	57 e4       	ldi	r21, 0x47	; 71
    3734:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3738:	18 16       	cp	r1, r24
    373a:	0c f0       	brlt	.+2      	; 0x373e <main+0x1d2e>
    373c:	43 c0       	rjmp	.+134    	; 0x37c4 <main+0x1db4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    373e:	fe 01       	movw	r30, r28
    3740:	e9 56       	subi	r30, 0x69	; 105
    3742:	ff 4f       	sbci	r31, 0xFF	; 255
    3744:	60 81       	ld	r22, Z
    3746:	71 81       	ldd	r23, Z+1	; 0x01
    3748:	82 81       	ldd	r24, Z+2	; 0x02
    374a:	93 81       	ldd	r25, Z+3	; 0x03
    374c:	20 e0       	ldi	r18, 0x00	; 0
    374e:	30 e0       	ldi	r19, 0x00	; 0
    3750:	40 e2       	ldi	r20, 0x20	; 32
    3752:	51 e4       	ldi	r21, 0x41	; 65
    3754:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3758:	dc 01       	movw	r26, r24
    375a:	cb 01       	movw	r24, r22
    375c:	8e 01       	movw	r16, r28
    375e:	0f 56       	subi	r16, 0x6F	; 111
    3760:	1f 4f       	sbci	r17, 0xFF	; 255
    3762:	bc 01       	movw	r22, r24
    3764:	cd 01       	movw	r24, r26
    3766:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    376a:	dc 01       	movw	r26, r24
    376c:	cb 01       	movw	r24, r22
    376e:	f8 01       	movw	r30, r16
    3770:	91 83       	std	Z+1, r25	; 0x01
    3772:	80 83       	st	Z, r24
    3774:	1f c0       	rjmp	.+62     	; 0x37b4 <main+0x1da4>
    3776:	fe 01       	movw	r30, r28
    3778:	e1 57       	subi	r30, 0x71	; 113
    377a:	ff 4f       	sbci	r31, 0xFF	; 255
    377c:	88 ec       	ldi	r24, 0xC8	; 200
    377e:	90 e0       	ldi	r25, 0x00	; 0
    3780:	91 83       	std	Z+1, r25	; 0x01
    3782:	80 83       	st	Z, r24
    3784:	fe 01       	movw	r30, r28
    3786:	e1 57       	subi	r30, 0x71	; 113
    3788:	ff 4f       	sbci	r31, 0xFF	; 255
    378a:	80 81       	ld	r24, Z
    378c:	91 81       	ldd	r25, Z+1	; 0x01
    378e:	01 97       	sbiw	r24, 0x01	; 1
    3790:	f1 f7       	brne	.-4      	; 0x378e <main+0x1d7e>
    3792:	fe 01       	movw	r30, r28
    3794:	e1 57       	subi	r30, 0x71	; 113
    3796:	ff 4f       	sbci	r31, 0xFF	; 255
    3798:	91 83       	std	Z+1, r25	; 0x01
    379a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    379c:	de 01       	movw	r26, r28
    379e:	af 56       	subi	r26, 0x6F	; 111
    37a0:	bf 4f       	sbci	r27, 0xFF	; 255
    37a2:	fe 01       	movw	r30, r28
    37a4:	ef 56       	subi	r30, 0x6F	; 111
    37a6:	ff 4f       	sbci	r31, 0xFF	; 255
    37a8:	80 81       	ld	r24, Z
    37aa:	91 81       	ldd	r25, Z+1	; 0x01
    37ac:	01 97       	sbiw	r24, 0x01	; 1
    37ae:	11 96       	adiw	r26, 0x01	; 1
    37b0:	9c 93       	st	X, r25
    37b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37b4:	fe 01       	movw	r30, r28
    37b6:	ef 56       	subi	r30, 0x6F	; 111
    37b8:	ff 4f       	sbci	r31, 0xFF	; 255
    37ba:	80 81       	ld	r24, Z
    37bc:	91 81       	ldd	r25, Z+1	; 0x01
    37be:	00 97       	sbiw	r24, 0x00	; 0
    37c0:	d1 f6       	brne	.-76     	; 0x3776 <main+0x1d66>
    37c2:	a7 c6       	rjmp	.+3406   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37c4:	8e 01       	movw	r16, r28
    37c6:	0f 56       	subi	r16, 0x6F	; 111
    37c8:	1f 4f       	sbci	r17, 0xFF	; 255
    37ca:	fe 01       	movw	r30, r28
    37cc:	ed 56       	subi	r30, 0x6D	; 109
    37ce:	ff 4f       	sbci	r31, 0xFF	; 255
    37d0:	60 81       	ld	r22, Z
    37d2:	71 81       	ldd	r23, Z+1	; 0x01
    37d4:	82 81       	ldd	r24, Z+2	; 0x02
    37d6:	93 81       	ldd	r25, Z+3	; 0x03
    37d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37dc:	dc 01       	movw	r26, r24
    37de:	cb 01       	movw	r24, r22
    37e0:	f8 01       	movw	r30, r16
    37e2:	91 83       	std	Z+1, r25	; 0x01
    37e4:	80 83       	st	Z, r24
    37e6:	de 01       	movw	r26, r28
    37e8:	a3 57       	subi	r26, 0x73	; 115
    37ea:	bf 4f       	sbci	r27, 0xFF	; 255
    37ec:	fe 01       	movw	r30, r28
    37ee:	ef 56       	subi	r30, 0x6F	; 111
    37f0:	ff 4f       	sbci	r31, 0xFF	; 255
    37f2:	80 81       	ld	r24, Z
    37f4:	91 81       	ldd	r25, Z+1	; 0x01
    37f6:	11 96       	adiw	r26, 0x01	; 1
    37f8:	9c 93       	st	X, r25
    37fa:	8e 93       	st	-X, r24
    37fc:	fe 01       	movw	r30, r28
    37fe:	e3 57       	subi	r30, 0x73	; 115
    3800:	ff 4f       	sbci	r31, 0xFF	; 255
    3802:	80 81       	ld	r24, Z
    3804:	91 81       	ldd	r25, Z+1	; 0x01
    3806:	01 97       	sbiw	r24, 0x01	; 1
    3808:	f1 f7       	brne	.-4      	; 0x3806 <main+0x1df6>
    380a:	fe 01       	movw	r30, r28
    380c:	e3 57       	subi	r30, 0x73	; 115
    380e:	ff 4f       	sbci	r31, 0xFF	; 255
    3810:	91 83       	std	Z+1, r25	; 0x01
    3812:	80 83       	st	Z, r24
    3814:	7e c6       	rjmp	.+3324   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==1){
    3816:	fe 01       	movw	r30, r28
    3818:	eb 58       	subi	r30, 0x8B	; 139
    381a:	fe 4f       	sbci	r31, 0xFE	; 254
    381c:	80 81       	ld	r24, Z
    381e:	81 30       	cpi	r24, 0x01	; 1
    3820:	09 f0       	breq	.+2      	; 0x3824 <main+0x1e14>
    3822:	cd c0       	rjmp	.+410    	; 0x39be <main+0x1fae>
							pass[i]=key;
    3824:	fe 01       	movw	r30, r28
    3826:	ed 58       	subi	r30, 0x8D	; 141
    3828:	fe 4f       	sbci	r31, 0xFE	; 254
    382a:	80 81       	ld	r24, Z
    382c:	28 2f       	mov	r18, r24
    382e:	30 e0       	ldi	r19, 0x00	; 0
    3830:	ce 01       	movw	r24, r28
    3832:	86 58       	subi	r24, 0x86	; 134
    3834:	9e 4f       	sbci	r25, 0xFE	; 254
    3836:	dc 01       	movw	r26, r24
    3838:	a2 0f       	add	r26, r18
    383a:	b3 1f       	adc	r27, r19
    383c:	fe 01       	movw	r30, r28
    383e:	eb 58       	subi	r30, 0x8B	; 139
    3840:	fe 4f       	sbci	r31, 0xFE	; 254
    3842:	80 81       	ld	r24, Z
    3844:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    3846:	fe 01       	movw	r30, r28
    3848:	eb 58       	subi	r30, 0x8B	; 139
    384a:	fe 4f       	sbci	r31, 0xFE	; 254
    384c:	80 81       	ld	r24, Z
    384e:	80 5d       	subi	r24, 0xD0	; 208
    3850:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    3854:	fe 01       	movw	r30, r28
    3856:	e7 57       	subi	r30, 0x77	; 119
    3858:	ff 4f       	sbci	r31, 0xFF	; 255
    385a:	80 e0       	ldi	r24, 0x00	; 0
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	aa ef       	ldi	r26, 0xFA	; 250
    3860:	b4 e4       	ldi	r27, 0x44	; 68
    3862:	80 83       	st	Z, r24
    3864:	91 83       	std	Z+1, r25	; 0x01
    3866:	a2 83       	std	Z+2, r26	; 0x02
    3868:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    386a:	8e 01       	movw	r16, r28
    386c:	0b 57       	subi	r16, 0x7B	; 123
    386e:	1f 4f       	sbci	r17, 0xFF	; 255
    3870:	fe 01       	movw	r30, r28
    3872:	e7 57       	subi	r30, 0x77	; 119
    3874:	ff 4f       	sbci	r31, 0xFF	; 255
    3876:	60 81       	ld	r22, Z
    3878:	71 81       	ldd	r23, Z+1	; 0x01
    387a:	82 81       	ldd	r24, Z+2	; 0x02
    387c:	93 81       	ldd	r25, Z+3	; 0x03
    387e:	20 e0       	ldi	r18, 0x00	; 0
    3880:	30 e0       	ldi	r19, 0x00	; 0
    3882:	4a ef       	ldi	r20, 0xFA	; 250
    3884:	54 e4       	ldi	r21, 0x44	; 68
    3886:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    388a:	dc 01       	movw	r26, r24
    388c:	cb 01       	movw	r24, r22
    388e:	f8 01       	movw	r30, r16
    3890:	80 83       	st	Z, r24
    3892:	91 83       	std	Z+1, r25	; 0x01
    3894:	a2 83       	std	Z+2, r26	; 0x02
    3896:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3898:	fe 01       	movw	r30, r28
    389a:	eb 57       	subi	r30, 0x7B	; 123
    389c:	ff 4f       	sbci	r31, 0xFF	; 255
    389e:	60 81       	ld	r22, Z
    38a0:	71 81       	ldd	r23, Z+1	; 0x01
    38a2:	82 81       	ldd	r24, Z+2	; 0x02
    38a4:	93 81       	ldd	r25, Z+3	; 0x03
    38a6:	20 e0       	ldi	r18, 0x00	; 0
    38a8:	30 e0       	ldi	r19, 0x00	; 0
    38aa:	40 e8       	ldi	r20, 0x80	; 128
    38ac:	5f e3       	ldi	r21, 0x3F	; 63
    38ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    38b2:	88 23       	and	r24, r24
    38b4:	44 f4       	brge	.+16     	; 0x38c6 <main+0x1eb6>
		__ticks = 1;
    38b6:	fe 01       	movw	r30, r28
    38b8:	ed 57       	subi	r30, 0x7D	; 125
    38ba:	ff 4f       	sbci	r31, 0xFF	; 255
    38bc:	81 e0       	ldi	r24, 0x01	; 1
    38be:	90 e0       	ldi	r25, 0x00	; 0
    38c0:	91 83       	std	Z+1, r25	; 0x01
    38c2:	80 83       	st	Z, r24
    38c4:	64 c0       	rjmp	.+200    	; 0x398e <main+0x1f7e>
	else if (__tmp > 65535)
    38c6:	fe 01       	movw	r30, r28
    38c8:	eb 57       	subi	r30, 0x7B	; 123
    38ca:	ff 4f       	sbci	r31, 0xFF	; 255
    38cc:	60 81       	ld	r22, Z
    38ce:	71 81       	ldd	r23, Z+1	; 0x01
    38d0:	82 81       	ldd	r24, Z+2	; 0x02
    38d2:	93 81       	ldd	r25, Z+3	; 0x03
    38d4:	20 e0       	ldi	r18, 0x00	; 0
    38d6:	3f ef       	ldi	r19, 0xFF	; 255
    38d8:	4f e7       	ldi	r20, 0x7F	; 127
    38da:	57 e4       	ldi	r21, 0x47	; 71
    38dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    38e0:	18 16       	cp	r1, r24
    38e2:	0c f0       	brlt	.+2      	; 0x38e6 <main+0x1ed6>
    38e4:	43 c0       	rjmp	.+134    	; 0x396c <main+0x1f5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38e6:	fe 01       	movw	r30, r28
    38e8:	e7 57       	subi	r30, 0x77	; 119
    38ea:	ff 4f       	sbci	r31, 0xFF	; 255
    38ec:	60 81       	ld	r22, Z
    38ee:	71 81       	ldd	r23, Z+1	; 0x01
    38f0:	82 81       	ldd	r24, Z+2	; 0x02
    38f2:	93 81       	ldd	r25, Z+3	; 0x03
    38f4:	20 e0       	ldi	r18, 0x00	; 0
    38f6:	30 e0       	ldi	r19, 0x00	; 0
    38f8:	40 e2       	ldi	r20, 0x20	; 32
    38fa:	51 e4       	ldi	r21, 0x41	; 65
    38fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3900:	dc 01       	movw	r26, r24
    3902:	cb 01       	movw	r24, r22
    3904:	8e 01       	movw	r16, r28
    3906:	0d 57       	subi	r16, 0x7D	; 125
    3908:	1f 4f       	sbci	r17, 0xFF	; 255
    390a:	bc 01       	movw	r22, r24
    390c:	cd 01       	movw	r24, r26
    390e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3912:	dc 01       	movw	r26, r24
    3914:	cb 01       	movw	r24, r22
    3916:	f8 01       	movw	r30, r16
    3918:	91 83       	std	Z+1, r25	; 0x01
    391a:	80 83       	st	Z, r24
    391c:	1f c0       	rjmp	.+62     	; 0x395c <main+0x1f4c>
    391e:	fe 01       	movw	r30, r28
    3920:	ef 57       	subi	r30, 0x7F	; 127
    3922:	ff 4f       	sbci	r31, 0xFF	; 255
    3924:	88 ec       	ldi	r24, 0xC8	; 200
    3926:	90 e0       	ldi	r25, 0x00	; 0
    3928:	91 83       	std	Z+1, r25	; 0x01
    392a:	80 83       	st	Z, r24
    392c:	fe 01       	movw	r30, r28
    392e:	ef 57       	subi	r30, 0x7F	; 127
    3930:	ff 4f       	sbci	r31, 0xFF	; 255
    3932:	80 81       	ld	r24, Z
    3934:	91 81       	ldd	r25, Z+1	; 0x01
    3936:	01 97       	sbiw	r24, 0x01	; 1
    3938:	f1 f7       	brne	.-4      	; 0x3936 <main+0x1f26>
    393a:	fe 01       	movw	r30, r28
    393c:	ef 57       	subi	r30, 0x7F	; 127
    393e:	ff 4f       	sbci	r31, 0xFF	; 255
    3940:	91 83       	std	Z+1, r25	; 0x01
    3942:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3944:	de 01       	movw	r26, r28
    3946:	ad 57       	subi	r26, 0x7D	; 125
    3948:	bf 4f       	sbci	r27, 0xFF	; 255
    394a:	fe 01       	movw	r30, r28
    394c:	ed 57       	subi	r30, 0x7D	; 125
    394e:	ff 4f       	sbci	r31, 0xFF	; 255
    3950:	80 81       	ld	r24, Z
    3952:	91 81       	ldd	r25, Z+1	; 0x01
    3954:	01 97       	sbiw	r24, 0x01	; 1
    3956:	11 96       	adiw	r26, 0x01	; 1
    3958:	9c 93       	st	X, r25
    395a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    395c:	fe 01       	movw	r30, r28
    395e:	ed 57       	subi	r30, 0x7D	; 125
    3960:	ff 4f       	sbci	r31, 0xFF	; 255
    3962:	80 81       	ld	r24, Z
    3964:	91 81       	ldd	r25, Z+1	; 0x01
    3966:	00 97       	sbiw	r24, 0x00	; 0
    3968:	d1 f6       	brne	.-76     	; 0x391e <main+0x1f0e>
    396a:	d3 c5       	rjmp	.+2982   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    396c:	8e 01       	movw	r16, r28
    396e:	0d 57       	subi	r16, 0x7D	; 125
    3970:	1f 4f       	sbci	r17, 0xFF	; 255
    3972:	fe 01       	movw	r30, r28
    3974:	eb 57       	subi	r30, 0x7B	; 123
    3976:	ff 4f       	sbci	r31, 0xFF	; 255
    3978:	60 81       	ld	r22, Z
    397a:	71 81       	ldd	r23, Z+1	; 0x01
    397c:	82 81       	ldd	r24, Z+2	; 0x02
    397e:	93 81       	ldd	r25, Z+3	; 0x03
    3980:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3984:	dc 01       	movw	r26, r24
    3986:	cb 01       	movw	r24, r22
    3988:	f8 01       	movw	r30, r16
    398a:	91 83       	std	Z+1, r25	; 0x01
    398c:	80 83       	st	Z, r24
    398e:	de 01       	movw	r26, r28
    3990:	a1 58       	subi	r26, 0x81	; 129
    3992:	bf 4f       	sbci	r27, 0xFF	; 255
    3994:	fe 01       	movw	r30, r28
    3996:	ed 57       	subi	r30, 0x7D	; 125
    3998:	ff 4f       	sbci	r31, 0xFF	; 255
    399a:	80 81       	ld	r24, Z
    399c:	91 81       	ldd	r25, Z+1	; 0x01
    399e:	11 96       	adiw	r26, 0x01	; 1
    39a0:	9c 93       	st	X, r25
    39a2:	8e 93       	st	-X, r24
    39a4:	fe 01       	movw	r30, r28
    39a6:	e1 58       	subi	r30, 0x81	; 129
    39a8:	ff 4f       	sbci	r31, 0xFF	; 255
    39aa:	80 81       	ld	r24, Z
    39ac:	91 81       	ldd	r25, Z+1	; 0x01
    39ae:	01 97       	sbiw	r24, 0x01	; 1
    39b0:	f1 f7       	brne	.-4      	; 0x39ae <main+0x1f9e>
    39b2:	fe 01       	movw	r30, r28
    39b4:	e1 58       	subi	r30, 0x81	; 129
    39b6:	ff 4f       	sbci	r31, 0xFF	; 255
    39b8:	91 83       	std	Z+1, r25	; 0x01
    39ba:	80 83       	st	Z, r24
    39bc:	aa c5       	rjmp	.+2900   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==2){
    39be:	fe 01       	movw	r30, r28
    39c0:	eb 58       	subi	r30, 0x8B	; 139
    39c2:	fe 4f       	sbci	r31, 0xFE	; 254
    39c4:	80 81       	ld	r24, Z
    39c6:	82 30       	cpi	r24, 0x02	; 2
    39c8:	09 f0       	breq	.+2      	; 0x39cc <main+0x1fbc>
    39ca:	cd c0       	rjmp	.+410    	; 0x3b66 <main+0x2156>
							pass[i]=key;
    39cc:	fe 01       	movw	r30, r28
    39ce:	ed 58       	subi	r30, 0x8D	; 141
    39d0:	fe 4f       	sbci	r31, 0xFE	; 254
    39d2:	80 81       	ld	r24, Z
    39d4:	28 2f       	mov	r18, r24
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	ce 01       	movw	r24, r28
    39da:	86 58       	subi	r24, 0x86	; 134
    39dc:	9e 4f       	sbci	r25, 0xFE	; 254
    39de:	dc 01       	movw	r26, r24
    39e0:	a2 0f       	add	r26, r18
    39e2:	b3 1f       	adc	r27, r19
    39e4:	fe 01       	movw	r30, r28
    39e6:	eb 58       	subi	r30, 0x8B	; 139
    39e8:	fe 4f       	sbci	r31, 0xFE	; 254
    39ea:	80 81       	ld	r24, Z
    39ec:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    39ee:	fe 01       	movw	r30, r28
    39f0:	eb 58       	subi	r30, 0x8B	; 139
    39f2:	fe 4f       	sbci	r31, 0xFE	; 254
    39f4:	80 81       	ld	r24, Z
    39f6:	80 5d       	subi	r24, 0xD0	; 208
    39f8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    39fc:	fe 01       	movw	r30, r28
    39fe:	e5 58       	subi	r30, 0x85	; 133
    3a00:	ff 4f       	sbci	r31, 0xFF	; 255
    3a02:	80 e0       	ldi	r24, 0x00	; 0
    3a04:	90 e0       	ldi	r25, 0x00	; 0
    3a06:	aa ef       	ldi	r26, 0xFA	; 250
    3a08:	b4 e4       	ldi	r27, 0x44	; 68
    3a0a:	80 83       	st	Z, r24
    3a0c:	91 83       	std	Z+1, r25	; 0x01
    3a0e:	a2 83       	std	Z+2, r26	; 0x02
    3a10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a12:	8e 01       	movw	r16, r28
    3a14:	09 58       	subi	r16, 0x89	; 137
    3a16:	1f 4f       	sbci	r17, 0xFF	; 255
    3a18:	fe 01       	movw	r30, r28
    3a1a:	e5 58       	subi	r30, 0x85	; 133
    3a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a1e:	60 81       	ld	r22, Z
    3a20:	71 81       	ldd	r23, Z+1	; 0x01
    3a22:	82 81       	ldd	r24, Z+2	; 0x02
    3a24:	93 81       	ldd	r25, Z+3	; 0x03
    3a26:	20 e0       	ldi	r18, 0x00	; 0
    3a28:	30 e0       	ldi	r19, 0x00	; 0
    3a2a:	4a ef       	ldi	r20, 0xFA	; 250
    3a2c:	54 e4       	ldi	r21, 0x44	; 68
    3a2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a32:	dc 01       	movw	r26, r24
    3a34:	cb 01       	movw	r24, r22
    3a36:	f8 01       	movw	r30, r16
    3a38:	80 83       	st	Z, r24
    3a3a:	91 83       	std	Z+1, r25	; 0x01
    3a3c:	a2 83       	std	Z+2, r26	; 0x02
    3a3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a40:	fe 01       	movw	r30, r28
    3a42:	e9 58       	subi	r30, 0x89	; 137
    3a44:	ff 4f       	sbci	r31, 0xFF	; 255
    3a46:	60 81       	ld	r22, Z
    3a48:	71 81       	ldd	r23, Z+1	; 0x01
    3a4a:	82 81       	ldd	r24, Z+2	; 0x02
    3a4c:	93 81       	ldd	r25, Z+3	; 0x03
    3a4e:	20 e0       	ldi	r18, 0x00	; 0
    3a50:	30 e0       	ldi	r19, 0x00	; 0
    3a52:	40 e8       	ldi	r20, 0x80	; 128
    3a54:	5f e3       	ldi	r21, 0x3F	; 63
    3a56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a5a:	88 23       	and	r24, r24
    3a5c:	44 f4       	brge	.+16     	; 0x3a6e <main+0x205e>
		__ticks = 1;
    3a5e:	fe 01       	movw	r30, r28
    3a60:	eb 58       	subi	r30, 0x8B	; 139
    3a62:	ff 4f       	sbci	r31, 0xFF	; 255
    3a64:	81 e0       	ldi	r24, 0x01	; 1
    3a66:	90 e0       	ldi	r25, 0x00	; 0
    3a68:	91 83       	std	Z+1, r25	; 0x01
    3a6a:	80 83       	st	Z, r24
    3a6c:	64 c0       	rjmp	.+200    	; 0x3b36 <main+0x2126>
	else if (__tmp > 65535)
    3a6e:	fe 01       	movw	r30, r28
    3a70:	e9 58       	subi	r30, 0x89	; 137
    3a72:	ff 4f       	sbci	r31, 0xFF	; 255
    3a74:	60 81       	ld	r22, Z
    3a76:	71 81       	ldd	r23, Z+1	; 0x01
    3a78:	82 81       	ldd	r24, Z+2	; 0x02
    3a7a:	93 81       	ldd	r25, Z+3	; 0x03
    3a7c:	20 e0       	ldi	r18, 0x00	; 0
    3a7e:	3f ef       	ldi	r19, 0xFF	; 255
    3a80:	4f e7       	ldi	r20, 0x7F	; 127
    3a82:	57 e4       	ldi	r21, 0x47	; 71
    3a84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a88:	18 16       	cp	r1, r24
    3a8a:	0c f0       	brlt	.+2      	; 0x3a8e <main+0x207e>
    3a8c:	43 c0       	rjmp	.+134    	; 0x3b14 <main+0x2104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a8e:	fe 01       	movw	r30, r28
    3a90:	e5 58       	subi	r30, 0x85	; 133
    3a92:	ff 4f       	sbci	r31, 0xFF	; 255
    3a94:	60 81       	ld	r22, Z
    3a96:	71 81       	ldd	r23, Z+1	; 0x01
    3a98:	82 81       	ldd	r24, Z+2	; 0x02
    3a9a:	93 81       	ldd	r25, Z+3	; 0x03
    3a9c:	20 e0       	ldi	r18, 0x00	; 0
    3a9e:	30 e0       	ldi	r19, 0x00	; 0
    3aa0:	40 e2       	ldi	r20, 0x20	; 32
    3aa2:	51 e4       	ldi	r21, 0x41	; 65
    3aa4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3aa8:	dc 01       	movw	r26, r24
    3aaa:	cb 01       	movw	r24, r22
    3aac:	8e 01       	movw	r16, r28
    3aae:	0b 58       	subi	r16, 0x8B	; 139
    3ab0:	1f 4f       	sbci	r17, 0xFF	; 255
    3ab2:	bc 01       	movw	r22, r24
    3ab4:	cd 01       	movw	r24, r26
    3ab6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3aba:	dc 01       	movw	r26, r24
    3abc:	cb 01       	movw	r24, r22
    3abe:	f8 01       	movw	r30, r16
    3ac0:	91 83       	std	Z+1, r25	; 0x01
    3ac2:	80 83       	st	Z, r24
    3ac4:	1f c0       	rjmp	.+62     	; 0x3b04 <main+0x20f4>
    3ac6:	fe 01       	movw	r30, r28
    3ac8:	ed 58       	subi	r30, 0x8D	; 141
    3aca:	ff 4f       	sbci	r31, 0xFF	; 255
    3acc:	88 ec       	ldi	r24, 0xC8	; 200
    3ace:	90 e0       	ldi	r25, 0x00	; 0
    3ad0:	91 83       	std	Z+1, r25	; 0x01
    3ad2:	80 83       	st	Z, r24
    3ad4:	fe 01       	movw	r30, r28
    3ad6:	ed 58       	subi	r30, 0x8D	; 141
    3ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    3ada:	80 81       	ld	r24, Z
    3adc:	91 81       	ldd	r25, Z+1	; 0x01
    3ade:	01 97       	sbiw	r24, 0x01	; 1
    3ae0:	f1 f7       	brne	.-4      	; 0x3ade <main+0x20ce>
    3ae2:	fe 01       	movw	r30, r28
    3ae4:	ed 58       	subi	r30, 0x8D	; 141
    3ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae8:	91 83       	std	Z+1, r25	; 0x01
    3aea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aec:	de 01       	movw	r26, r28
    3aee:	ab 58       	subi	r26, 0x8B	; 139
    3af0:	bf 4f       	sbci	r27, 0xFF	; 255
    3af2:	fe 01       	movw	r30, r28
    3af4:	eb 58       	subi	r30, 0x8B	; 139
    3af6:	ff 4f       	sbci	r31, 0xFF	; 255
    3af8:	80 81       	ld	r24, Z
    3afa:	91 81       	ldd	r25, Z+1	; 0x01
    3afc:	01 97       	sbiw	r24, 0x01	; 1
    3afe:	11 96       	adiw	r26, 0x01	; 1
    3b00:	9c 93       	st	X, r25
    3b02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b04:	fe 01       	movw	r30, r28
    3b06:	eb 58       	subi	r30, 0x8B	; 139
    3b08:	ff 4f       	sbci	r31, 0xFF	; 255
    3b0a:	80 81       	ld	r24, Z
    3b0c:	91 81       	ldd	r25, Z+1	; 0x01
    3b0e:	00 97       	sbiw	r24, 0x00	; 0
    3b10:	d1 f6       	brne	.-76     	; 0x3ac6 <main+0x20b6>
    3b12:	ff c4       	rjmp	.+2558   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b14:	8e 01       	movw	r16, r28
    3b16:	0b 58       	subi	r16, 0x8B	; 139
    3b18:	1f 4f       	sbci	r17, 0xFF	; 255
    3b1a:	fe 01       	movw	r30, r28
    3b1c:	e9 58       	subi	r30, 0x89	; 137
    3b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b20:	60 81       	ld	r22, Z
    3b22:	71 81       	ldd	r23, Z+1	; 0x01
    3b24:	82 81       	ldd	r24, Z+2	; 0x02
    3b26:	93 81       	ldd	r25, Z+3	; 0x03
    3b28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b2c:	dc 01       	movw	r26, r24
    3b2e:	cb 01       	movw	r24, r22
    3b30:	f8 01       	movw	r30, r16
    3b32:	91 83       	std	Z+1, r25	; 0x01
    3b34:	80 83       	st	Z, r24
    3b36:	de 01       	movw	r26, r28
    3b38:	af 58       	subi	r26, 0x8F	; 143
    3b3a:	bf 4f       	sbci	r27, 0xFF	; 255
    3b3c:	fe 01       	movw	r30, r28
    3b3e:	eb 58       	subi	r30, 0x8B	; 139
    3b40:	ff 4f       	sbci	r31, 0xFF	; 255
    3b42:	80 81       	ld	r24, Z
    3b44:	91 81       	ldd	r25, Z+1	; 0x01
    3b46:	11 96       	adiw	r26, 0x01	; 1
    3b48:	9c 93       	st	X, r25
    3b4a:	8e 93       	st	-X, r24
    3b4c:	fe 01       	movw	r30, r28
    3b4e:	ef 58       	subi	r30, 0x8F	; 143
    3b50:	ff 4f       	sbci	r31, 0xFF	; 255
    3b52:	80 81       	ld	r24, Z
    3b54:	91 81       	ldd	r25, Z+1	; 0x01
    3b56:	01 97       	sbiw	r24, 0x01	; 1
    3b58:	f1 f7       	brne	.-4      	; 0x3b56 <main+0x2146>
    3b5a:	fe 01       	movw	r30, r28
    3b5c:	ef 58       	subi	r30, 0x8F	; 143
    3b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b60:	91 83       	std	Z+1, r25	; 0x01
    3b62:	80 83       	st	Z, r24
    3b64:	d6 c4       	rjmp	.+2476   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==3){
    3b66:	fe 01       	movw	r30, r28
    3b68:	eb 58       	subi	r30, 0x8B	; 139
    3b6a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b6c:	80 81       	ld	r24, Z
    3b6e:	83 30       	cpi	r24, 0x03	; 3
    3b70:	09 f0       	breq	.+2      	; 0x3b74 <main+0x2164>
    3b72:	cd c0       	rjmp	.+410    	; 0x3d0e <main+0x22fe>
							pass[i]=key;
    3b74:	fe 01       	movw	r30, r28
    3b76:	ed 58       	subi	r30, 0x8D	; 141
    3b78:	fe 4f       	sbci	r31, 0xFE	; 254
    3b7a:	80 81       	ld	r24, Z
    3b7c:	28 2f       	mov	r18, r24
    3b7e:	30 e0       	ldi	r19, 0x00	; 0
    3b80:	ce 01       	movw	r24, r28
    3b82:	86 58       	subi	r24, 0x86	; 134
    3b84:	9e 4f       	sbci	r25, 0xFE	; 254
    3b86:	dc 01       	movw	r26, r24
    3b88:	a2 0f       	add	r26, r18
    3b8a:	b3 1f       	adc	r27, r19
    3b8c:	fe 01       	movw	r30, r28
    3b8e:	eb 58       	subi	r30, 0x8B	; 139
    3b90:	fe 4f       	sbci	r31, 0xFE	; 254
    3b92:	80 81       	ld	r24, Z
    3b94:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    3b96:	fe 01       	movw	r30, r28
    3b98:	eb 58       	subi	r30, 0x8B	; 139
    3b9a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b9c:	80 81       	ld	r24, Z
    3b9e:	80 5d       	subi	r24, 0xD0	; 208
    3ba0:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    3ba4:	fe 01       	movw	r30, r28
    3ba6:	e3 59       	subi	r30, 0x93	; 147
    3ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    3baa:	80 e0       	ldi	r24, 0x00	; 0
    3bac:	90 e0       	ldi	r25, 0x00	; 0
    3bae:	aa ef       	ldi	r26, 0xFA	; 250
    3bb0:	b4 e4       	ldi	r27, 0x44	; 68
    3bb2:	80 83       	st	Z, r24
    3bb4:	91 83       	std	Z+1, r25	; 0x01
    3bb6:	a2 83       	std	Z+2, r26	; 0x02
    3bb8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bba:	8e 01       	movw	r16, r28
    3bbc:	07 59       	subi	r16, 0x97	; 151
    3bbe:	1f 4f       	sbci	r17, 0xFF	; 255
    3bc0:	fe 01       	movw	r30, r28
    3bc2:	e3 59       	subi	r30, 0x93	; 147
    3bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bc6:	60 81       	ld	r22, Z
    3bc8:	71 81       	ldd	r23, Z+1	; 0x01
    3bca:	82 81       	ldd	r24, Z+2	; 0x02
    3bcc:	93 81       	ldd	r25, Z+3	; 0x03
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	4a ef       	ldi	r20, 0xFA	; 250
    3bd4:	54 e4       	ldi	r21, 0x44	; 68
    3bd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bda:	dc 01       	movw	r26, r24
    3bdc:	cb 01       	movw	r24, r22
    3bde:	f8 01       	movw	r30, r16
    3be0:	80 83       	st	Z, r24
    3be2:	91 83       	std	Z+1, r25	; 0x01
    3be4:	a2 83       	std	Z+2, r26	; 0x02
    3be6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3be8:	fe 01       	movw	r30, r28
    3bea:	e7 59       	subi	r30, 0x97	; 151
    3bec:	ff 4f       	sbci	r31, 0xFF	; 255
    3bee:	60 81       	ld	r22, Z
    3bf0:	71 81       	ldd	r23, Z+1	; 0x01
    3bf2:	82 81       	ldd	r24, Z+2	; 0x02
    3bf4:	93 81       	ldd	r25, Z+3	; 0x03
    3bf6:	20 e0       	ldi	r18, 0x00	; 0
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	40 e8       	ldi	r20, 0x80	; 128
    3bfc:	5f e3       	ldi	r21, 0x3F	; 63
    3bfe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c02:	88 23       	and	r24, r24
    3c04:	44 f4       	brge	.+16     	; 0x3c16 <main+0x2206>
		__ticks = 1;
    3c06:	fe 01       	movw	r30, r28
    3c08:	e9 59       	subi	r30, 0x99	; 153
    3c0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0c:	81 e0       	ldi	r24, 0x01	; 1
    3c0e:	90 e0       	ldi	r25, 0x00	; 0
    3c10:	91 83       	std	Z+1, r25	; 0x01
    3c12:	80 83       	st	Z, r24
    3c14:	64 c0       	rjmp	.+200    	; 0x3cde <main+0x22ce>
	else if (__tmp > 65535)
    3c16:	fe 01       	movw	r30, r28
    3c18:	e7 59       	subi	r30, 0x97	; 151
    3c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c1c:	60 81       	ld	r22, Z
    3c1e:	71 81       	ldd	r23, Z+1	; 0x01
    3c20:	82 81       	ldd	r24, Z+2	; 0x02
    3c22:	93 81       	ldd	r25, Z+3	; 0x03
    3c24:	20 e0       	ldi	r18, 0x00	; 0
    3c26:	3f ef       	ldi	r19, 0xFF	; 255
    3c28:	4f e7       	ldi	r20, 0x7F	; 127
    3c2a:	57 e4       	ldi	r21, 0x47	; 71
    3c2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c30:	18 16       	cp	r1, r24
    3c32:	0c f0       	brlt	.+2      	; 0x3c36 <main+0x2226>
    3c34:	43 c0       	rjmp	.+134    	; 0x3cbc <main+0x22ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c36:	fe 01       	movw	r30, r28
    3c38:	e3 59       	subi	r30, 0x93	; 147
    3c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c3c:	60 81       	ld	r22, Z
    3c3e:	71 81       	ldd	r23, Z+1	; 0x01
    3c40:	82 81       	ldd	r24, Z+2	; 0x02
    3c42:	93 81       	ldd	r25, Z+3	; 0x03
    3c44:	20 e0       	ldi	r18, 0x00	; 0
    3c46:	30 e0       	ldi	r19, 0x00	; 0
    3c48:	40 e2       	ldi	r20, 0x20	; 32
    3c4a:	51 e4       	ldi	r21, 0x41	; 65
    3c4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c50:	dc 01       	movw	r26, r24
    3c52:	cb 01       	movw	r24, r22
    3c54:	8e 01       	movw	r16, r28
    3c56:	09 59       	subi	r16, 0x99	; 153
    3c58:	1f 4f       	sbci	r17, 0xFF	; 255
    3c5a:	bc 01       	movw	r22, r24
    3c5c:	cd 01       	movw	r24, r26
    3c5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c62:	dc 01       	movw	r26, r24
    3c64:	cb 01       	movw	r24, r22
    3c66:	f8 01       	movw	r30, r16
    3c68:	91 83       	std	Z+1, r25	; 0x01
    3c6a:	80 83       	st	Z, r24
    3c6c:	1f c0       	rjmp	.+62     	; 0x3cac <main+0x229c>
    3c6e:	fe 01       	movw	r30, r28
    3c70:	eb 59       	subi	r30, 0x9B	; 155
    3c72:	ff 4f       	sbci	r31, 0xFF	; 255
    3c74:	88 ec       	ldi	r24, 0xC8	; 200
    3c76:	90 e0       	ldi	r25, 0x00	; 0
    3c78:	91 83       	std	Z+1, r25	; 0x01
    3c7a:	80 83       	st	Z, r24
    3c7c:	fe 01       	movw	r30, r28
    3c7e:	eb 59       	subi	r30, 0x9B	; 155
    3c80:	ff 4f       	sbci	r31, 0xFF	; 255
    3c82:	80 81       	ld	r24, Z
    3c84:	91 81       	ldd	r25, Z+1	; 0x01
    3c86:	01 97       	sbiw	r24, 0x01	; 1
    3c88:	f1 f7       	brne	.-4      	; 0x3c86 <main+0x2276>
    3c8a:	fe 01       	movw	r30, r28
    3c8c:	eb 59       	subi	r30, 0x9B	; 155
    3c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c90:	91 83       	std	Z+1, r25	; 0x01
    3c92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c94:	de 01       	movw	r26, r28
    3c96:	a9 59       	subi	r26, 0x99	; 153
    3c98:	bf 4f       	sbci	r27, 0xFF	; 255
    3c9a:	fe 01       	movw	r30, r28
    3c9c:	e9 59       	subi	r30, 0x99	; 153
    3c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca0:	80 81       	ld	r24, Z
    3ca2:	91 81       	ldd	r25, Z+1	; 0x01
    3ca4:	01 97       	sbiw	r24, 0x01	; 1
    3ca6:	11 96       	adiw	r26, 0x01	; 1
    3ca8:	9c 93       	st	X, r25
    3caa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cac:	fe 01       	movw	r30, r28
    3cae:	e9 59       	subi	r30, 0x99	; 153
    3cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb2:	80 81       	ld	r24, Z
    3cb4:	91 81       	ldd	r25, Z+1	; 0x01
    3cb6:	00 97       	sbiw	r24, 0x00	; 0
    3cb8:	d1 f6       	brne	.-76     	; 0x3c6e <main+0x225e>
    3cba:	2b c4       	rjmp	.+2134   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cbc:	8e 01       	movw	r16, r28
    3cbe:	09 59       	subi	r16, 0x99	; 153
    3cc0:	1f 4f       	sbci	r17, 0xFF	; 255
    3cc2:	fe 01       	movw	r30, r28
    3cc4:	e7 59       	subi	r30, 0x97	; 151
    3cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc8:	60 81       	ld	r22, Z
    3cca:	71 81       	ldd	r23, Z+1	; 0x01
    3ccc:	82 81       	ldd	r24, Z+2	; 0x02
    3cce:	93 81       	ldd	r25, Z+3	; 0x03
    3cd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cd4:	dc 01       	movw	r26, r24
    3cd6:	cb 01       	movw	r24, r22
    3cd8:	f8 01       	movw	r30, r16
    3cda:	91 83       	std	Z+1, r25	; 0x01
    3cdc:	80 83       	st	Z, r24
    3cde:	de 01       	movw	r26, r28
    3ce0:	ad 59       	subi	r26, 0x9D	; 157
    3ce2:	bf 4f       	sbci	r27, 0xFF	; 255
    3ce4:	fe 01       	movw	r30, r28
    3ce6:	e9 59       	subi	r30, 0x99	; 153
    3ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cea:	80 81       	ld	r24, Z
    3cec:	91 81       	ldd	r25, Z+1	; 0x01
    3cee:	11 96       	adiw	r26, 0x01	; 1
    3cf0:	9c 93       	st	X, r25
    3cf2:	8e 93       	st	-X, r24
    3cf4:	fe 01       	movw	r30, r28
    3cf6:	ed 59       	subi	r30, 0x9D	; 157
    3cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfa:	80 81       	ld	r24, Z
    3cfc:	91 81       	ldd	r25, Z+1	; 0x01
    3cfe:	01 97       	sbiw	r24, 0x01	; 1
    3d00:	f1 f7       	brne	.-4      	; 0x3cfe <main+0x22ee>
    3d02:	fe 01       	movw	r30, r28
    3d04:	ed 59       	subi	r30, 0x9D	; 157
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	91 83       	std	Z+1, r25	; 0x01
    3d0a:	80 83       	st	Z, r24
    3d0c:	02 c4       	rjmp	.+2052   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==4){
    3d0e:	fe 01       	movw	r30, r28
    3d10:	eb 58       	subi	r30, 0x8B	; 139
    3d12:	fe 4f       	sbci	r31, 0xFE	; 254
    3d14:	80 81       	ld	r24, Z
    3d16:	84 30       	cpi	r24, 0x04	; 4
    3d18:	09 f0       	breq	.+2      	; 0x3d1c <main+0x230c>
    3d1a:	cd c0       	rjmp	.+410    	; 0x3eb6 <main+0x24a6>
							pass[i]=key;
    3d1c:	fe 01       	movw	r30, r28
    3d1e:	ed 58       	subi	r30, 0x8D	; 141
    3d20:	fe 4f       	sbci	r31, 0xFE	; 254
    3d22:	80 81       	ld	r24, Z
    3d24:	28 2f       	mov	r18, r24
    3d26:	30 e0       	ldi	r19, 0x00	; 0
    3d28:	ce 01       	movw	r24, r28
    3d2a:	86 58       	subi	r24, 0x86	; 134
    3d2c:	9e 4f       	sbci	r25, 0xFE	; 254
    3d2e:	dc 01       	movw	r26, r24
    3d30:	a2 0f       	add	r26, r18
    3d32:	b3 1f       	adc	r27, r19
    3d34:	fe 01       	movw	r30, r28
    3d36:	eb 58       	subi	r30, 0x8B	; 139
    3d38:	fe 4f       	sbci	r31, 0xFE	; 254
    3d3a:	80 81       	ld	r24, Z
    3d3c:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    3d3e:	fe 01       	movw	r30, r28
    3d40:	eb 58       	subi	r30, 0x8B	; 139
    3d42:	fe 4f       	sbci	r31, 0xFE	; 254
    3d44:	80 81       	ld	r24, Z
    3d46:	80 5d       	subi	r24, 0xD0	; 208
    3d48:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    3d4c:	fe 01       	movw	r30, r28
    3d4e:	e1 5a       	subi	r30, 0xA1	; 161
    3d50:	ff 4f       	sbci	r31, 0xFF	; 255
    3d52:	80 e0       	ldi	r24, 0x00	; 0
    3d54:	90 e0       	ldi	r25, 0x00	; 0
    3d56:	aa ef       	ldi	r26, 0xFA	; 250
    3d58:	b4 e4       	ldi	r27, 0x44	; 68
    3d5a:	80 83       	st	Z, r24
    3d5c:	91 83       	std	Z+1, r25	; 0x01
    3d5e:	a2 83       	std	Z+2, r26	; 0x02
    3d60:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d62:	8e 01       	movw	r16, r28
    3d64:	05 5a       	subi	r16, 0xA5	; 165
    3d66:	1f 4f       	sbci	r17, 0xFF	; 255
    3d68:	fe 01       	movw	r30, r28
    3d6a:	e1 5a       	subi	r30, 0xA1	; 161
    3d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6e:	60 81       	ld	r22, Z
    3d70:	71 81       	ldd	r23, Z+1	; 0x01
    3d72:	82 81       	ldd	r24, Z+2	; 0x02
    3d74:	93 81       	ldd	r25, Z+3	; 0x03
    3d76:	20 e0       	ldi	r18, 0x00	; 0
    3d78:	30 e0       	ldi	r19, 0x00	; 0
    3d7a:	4a ef       	ldi	r20, 0xFA	; 250
    3d7c:	54 e4       	ldi	r21, 0x44	; 68
    3d7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d82:	dc 01       	movw	r26, r24
    3d84:	cb 01       	movw	r24, r22
    3d86:	f8 01       	movw	r30, r16
    3d88:	80 83       	st	Z, r24
    3d8a:	91 83       	std	Z+1, r25	; 0x01
    3d8c:	a2 83       	std	Z+2, r26	; 0x02
    3d8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d90:	fe 01       	movw	r30, r28
    3d92:	e5 5a       	subi	r30, 0xA5	; 165
    3d94:	ff 4f       	sbci	r31, 0xFF	; 255
    3d96:	60 81       	ld	r22, Z
    3d98:	71 81       	ldd	r23, Z+1	; 0x01
    3d9a:	82 81       	ldd	r24, Z+2	; 0x02
    3d9c:	93 81       	ldd	r25, Z+3	; 0x03
    3d9e:	20 e0       	ldi	r18, 0x00	; 0
    3da0:	30 e0       	ldi	r19, 0x00	; 0
    3da2:	40 e8       	ldi	r20, 0x80	; 128
    3da4:	5f e3       	ldi	r21, 0x3F	; 63
    3da6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3daa:	88 23       	and	r24, r24
    3dac:	44 f4       	brge	.+16     	; 0x3dbe <main+0x23ae>
		__ticks = 1;
    3dae:	fe 01       	movw	r30, r28
    3db0:	e7 5a       	subi	r30, 0xA7	; 167
    3db2:	ff 4f       	sbci	r31, 0xFF	; 255
    3db4:	81 e0       	ldi	r24, 0x01	; 1
    3db6:	90 e0       	ldi	r25, 0x00	; 0
    3db8:	91 83       	std	Z+1, r25	; 0x01
    3dba:	80 83       	st	Z, r24
    3dbc:	64 c0       	rjmp	.+200    	; 0x3e86 <main+0x2476>
	else if (__tmp > 65535)
    3dbe:	fe 01       	movw	r30, r28
    3dc0:	e5 5a       	subi	r30, 0xA5	; 165
    3dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc4:	60 81       	ld	r22, Z
    3dc6:	71 81       	ldd	r23, Z+1	; 0x01
    3dc8:	82 81       	ldd	r24, Z+2	; 0x02
    3dca:	93 81       	ldd	r25, Z+3	; 0x03
    3dcc:	20 e0       	ldi	r18, 0x00	; 0
    3dce:	3f ef       	ldi	r19, 0xFF	; 255
    3dd0:	4f e7       	ldi	r20, 0x7F	; 127
    3dd2:	57 e4       	ldi	r21, 0x47	; 71
    3dd4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3dd8:	18 16       	cp	r1, r24
    3dda:	0c f0       	brlt	.+2      	; 0x3dde <main+0x23ce>
    3ddc:	43 c0       	rjmp	.+134    	; 0x3e64 <main+0x2454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dde:	fe 01       	movw	r30, r28
    3de0:	e1 5a       	subi	r30, 0xA1	; 161
    3de2:	ff 4f       	sbci	r31, 0xFF	; 255
    3de4:	60 81       	ld	r22, Z
    3de6:	71 81       	ldd	r23, Z+1	; 0x01
    3de8:	82 81       	ldd	r24, Z+2	; 0x02
    3dea:	93 81       	ldd	r25, Z+3	; 0x03
    3dec:	20 e0       	ldi	r18, 0x00	; 0
    3dee:	30 e0       	ldi	r19, 0x00	; 0
    3df0:	40 e2       	ldi	r20, 0x20	; 32
    3df2:	51 e4       	ldi	r21, 0x41	; 65
    3df4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3df8:	dc 01       	movw	r26, r24
    3dfa:	cb 01       	movw	r24, r22
    3dfc:	8e 01       	movw	r16, r28
    3dfe:	07 5a       	subi	r16, 0xA7	; 167
    3e00:	1f 4f       	sbci	r17, 0xFF	; 255
    3e02:	bc 01       	movw	r22, r24
    3e04:	cd 01       	movw	r24, r26
    3e06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e0a:	dc 01       	movw	r26, r24
    3e0c:	cb 01       	movw	r24, r22
    3e0e:	f8 01       	movw	r30, r16
    3e10:	91 83       	std	Z+1, r25	; 0x01
    3e12:	80 83       	st	Z, r24
    3e14:	1f c0       	rjmp	.+62     	; 0x3e54 <main+0x2444>
    3e16:	fe 01       	movw	r30, r28
    3e18:	e9 5a       	subi	r30, 0xA9	; 169
    3e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1c:	88 ec       	ldi	r24, 0xC8	; 200
    3e1e:	90 e0       	ldi	r25, 0x00	; 0
    3e20:	91 83       	std	Z+1, r25	; 0x01
    3e22:	80 83       	st	Z, r24
    3e24:	fe 01       	movw	r30, r28
    3e26:	e9 5a       	subi	r30, 0xA9	; 169
    3e28:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2a:	80 81       	ld	r24, Z
    3e2c:	91 81       	ldd	r25, Z+1	; 0x01
    3e2e:	01 97       	sbiw	r24, 0x01	; 1
    3e30:	f1 f7       	brne	.-4      	; 0x3e2e <main+0x241e>
    3e32:	fe 01       	movw	r30, r28
    3e34:	e9 5a       	subi	r30, 0xA9	; 169
    3e36:	ff 4f       	sbci	r31, 0xFF	; 255
    3e38:	91 83       	std	Z+1, r25	; 0x01
    3e3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e3c:	de 01       	movw	r26, r28
    3e3e:	a7 5a       	subi	r26, 0xA7	; 167
    3e40:	bf 4f       	sbci	r27, 0xFF	; 255
    3e42:	fe 01       	movw	r30, r28
    3e44:	e7 5a       	subi	r30, 0xA7	; 167
    3e46:	ff 4f       	sbci	r31, 0xFF	; 255
    3e48:	80 81       	ld	r24, Z
    3e4a:	91 81       	ldd	r25, Z+1	; 0x01
    3e4c:	01 97       	sbiw	r24, 0x01	; 1
    3e4e:	11 96       	adiw	r26, 0x01	; 1
    3e50:	9c 93       	st	X, r25
    3e52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e54:	fe 01       	movw	r30, r28
    3e56:	e7 5a       	subi	r30, 0xA7	; 167
    3e58:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5a:	80 81       	ld	r24, Z
    3e5c:	91 81       	ldd	r25, Z+1	; 0x01
    3e5e:	00 97       	sbiw	r24, 0x00	; 0
    3e60:	d1 f6       	brne	.-76     	; 0x3e16 <main+0x2406>
    3e62:	57 c3       	rjmp	.+1710   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e64:	8e 01       	movw	r16, r28
    3e66:	07 5a       	subi	r16, 0xA7	; 167
    3e68:	1f 4f       	sbci	r17, 0xFF	; 255
    3e6a:	fe 01       	movw	r30, r28
    3e6c:	e5 5a       	subi	r30, 0xA5	; 165
    3e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e70:	60 81       	ld	r22, Z
    3e72:	71 81       	ldd	r23, Z+1	; 0x01
    3e74:	82 81       	ldd	r24, Z+2	; 0x02
    3e76:	93 81       	ldd	r25, Z+3	; 0x03
    3e78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e7c:	dc 01       	movw	r26, r24
    3e7e:	cb 01       	movw	r24, r22
    3e80:	f8 01       	movw	r30, r16
    3e82:	91 83       	std	Z+1, r25	; 0x01
    3e84:	80 83       	st	Z, r24
    3e86:	de 01       	movw	r26, r28
    3e88:	ab 5a       	subi	r26, 0xAB	; 171
    3e8a:	bf 4f       	sbci	r27, 0xFF	; 255
    3e8c:	fe 01       	movw	r30, r28
    3e8e:	e7 5a       	subi	r30, 0xA7	; 167
    3e90:	ff 4f       	sbci	r31, 0xFF	; 255
    3e92:	80 81       	ld	r24, Z
    3e94:	91 81       	ldd	r25, Z+1	; 0x01
    3e96:	11 96       	adiw	r26, 0x01	; 1
    3e98:	9c 93       	st	X, r25
    3e9a:	8e 93       	st	-X, r24
    3e9c:	fe 01       	movw	r30, r28
    3e9e:	eb 5a       	subi	r30, 0xAB	; 171
    3ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea2:	80 81       	ld	r24, Z
    3ea4:	91 81       	ldd	r25, Z+1	; 0x01
    3ea6:	01 97       	sbiw	r24, 0x01	; 1
    3ea8:	f1 f7       	brne	.-4      	; 0x3ea6 <main+0x2496>
    3eaa:	fe 01       	movw	r30, r28
    3eac:	eb 5a       	subi	r30, 0xAB	; 171
    3eae:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb0:	91 83       	std	Z+1, r25	; 0x01
    3eb2:	80 83       	st	Z, r24
    3eb4:	2e c3       	rjmp	.+1628   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==5){
    3eb6:	fe 01       	movw	r30, r28
    3eb8:	eb 58       	subi	r30, 0x8B	; 139
    3eba:	fe 4f       	sbci	r31, 0xFE	; 254
    3ebc:	80 81       	ld	r24, Z
    3ebe:	85 30       	cpi	r24, 0x05	; 5
    3ec0:	09 f0       	breq	.+2      	; 0x3ec4 <main+0x24b4>
    3ec2:	cd c0       	rjmp	.+410    	; 0x405e <main+0x264e>
							pass[i]=key;
    3ec4:	fe 01       	movw	r30, r28
    3ec6:	ed 58       	subi	r30, 0x8D	; 141
    3ec8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eca:	80 81       	ld	r24, Z
    3ecc:	28 2f       	mov	r18, r24
    3ece:	30 e0       	ldi	r19, 0x00	; 0
    3ed0:	ce 01       	movw	r24, r28
    3ed2:	86 58       	subi	r24, 0x86	; 134
    3ed4:	9e 4f       	sbci	r25, 0xFE	; 254
    3ed6:	dc 01       	movw	r26, r24
    3ed8:	a2 0f       	add	r26, r18
    3eda:	b3 1f       	adc	r27, r19
    3edc:	fe 01       	movw	r30, r28
    3ede:	eb 58       	subi	r30, 0x8B	; 139
    3ee0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee2:	80 81       	ld	r24, Z
    3ee4:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    3ee6:	fe 01       	movw	r30, r28
    3ee8:	eb 58       	subi	r30, 0x8B	; 139
    3eea:	fe 4f       	sbci	r31, 0xFE	; 254
    3eec:	80 81       	ld	r24, Z
    3eee:	80 5d       	subi	r24, 0xD0	; 208
    3ef0:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	ef 5a       	subi	r30, 0xAF	; 175
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	80 e0       	ldi	r24, 0x00	; 0
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	aa ef       	ldi	r26, 0xFA	; 250
    3f00:	b4 e4       	ldi	r27, 0x44	; 68
    3f02:	80 83       	st	Z, r24
    3f04:	91 83       	std	Z+1, r25	; 0x01
    3f06:	a2 83       	std	Z+2, r26	; 0x02
    3f08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f0a:	8e 01       	movw	r16, r28
    3f0c:	03 5b       	subi	r16, 0xB3	; 179
    3f0e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f10:	fe 01       	movw	r30, r28
    3f12:	ef 5a       	subi	r30, 0xAF	; 175
    3f14:	ff 4f       	sbci	r31, 0xFF	; 255
    3f16:	60 81       	ld	r22, Z
    3f18:	71 81       	ldd	r23, Z+1	; 0x01
    3f1a:	82 81       	ldd	r24, Z+2	; 0x02
    3f1c:	93 81       	ldd	r25, Z+3	; 0x03
    3f1e:	20 e0       	ldi	r18, 0x00	; 0
    3f20:	30 e0       	ldi	r19, 0x00	; 0
    3f22:	4a ef       	ldi	r20, 0xFA	; 250
    3f24:	54 e4       	ldi	r21, 0x44	; 68
    3f26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f2a:	dc 01       	movw	r26, r24
    3f2c:	cb 01       	movw	r24, r22
    3f2e:	f8 01       	movw	r30, r16
    3f30:	80 83       	st	Z, r24
    3f32:	91 83       	std	Z+1, r25	; 0x01
    3f34:	a2 83       	std	Z+2, r26	; 0x02
    3f36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f38:	fe 01       	movw	r30, r28
    3f3a:	e3 5b       	subi	r30, 0xB3	; 179
    3f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f3e:	60 81       	ld	r22, Z
    3f40:	71 81       	ldd	r23, Z+1	; 0x01
    3f42:	82 81       	ldd	r24, Z+2	; 0x02
    3f44:	93 81       	ldd	r25, Z+3	; 0x03
    3f46:	20 e0       	ldi	r18, 0x00	; 0
    3f48:	30 e0       	ldi	r19, 0x00	; 0
    3f4a:	40 e8       	ldi	r20, 0x80	; 128
    3f4c:	5f e3       	ldi	r21, 0x3F	; 63
    3f4e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f52:	88 23       	and	r24, r24
    3f54:	44 f4       	brge	.+16     	; 0x3f66 <main+0x2556>
		__ticks = 1;
    3f56:	fe 01       	movw	r30, r28
    3f58:	e5 5b       	subi	r30, 0xB5	; 181
    3f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5c:	81 e0       	ldi	r24, 0x01	; 1
    3f5e:	90 e0       	ldi	r25, 0x00	; 0
    3f60:	91 83       	std	Z+1, r25	; 0x01
    3f62:	80 83       	st	Z, r24
    3f64:	64 c0       	rjmp	.+200    	; 0x402e <main+0x261e>
	else if (__tmp > 65535)
    3f66:	fe 01       	movw	r30, r28
    3f68:	e3 5b       	subi	r30, 0xB3	; 179
    3f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f6c:	60 81       	ld	r22, Z
    3f6e:	71 81       	ldd	r23, Z+1	; 0x01
    3f70:	82 81       	ldd	r24, Z+2	; 0x02
    3f72:	93 81       	ldd	r25, Z+3	; 0x03
    3f74:	20 e0       	ldi	r18, 0x00	; 0
    3f76:	3f ef       	ldi	r19, 0xFF	; 255
    3f78:	4f e7       	ldi	r20, 0x7F	; 127
    3f7a:	57 e4       	ldi	r21, 0x47	; 71
    3f7c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f80:	18 16       	cp	r1, r24
    3f82:	0c f0       	brlt	.+2      	; 0x3f86 <main+0x2576>
    3f84:	43 c0       	rjmp	.+134    	; 0x400c <main+0x25fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f86:	fe 01       	movw	r30, r28
    3f88:	ef 5a       	subi	r30, 0xAF	; 175
    3f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8c:	60 81       	ld	r22, Z
    3f8e:	71 81       	ldd	r23, Z+1	; 0x01
    3f90:	82 81       	ldd	r24, Z+2	; 0x02
    3f92:	93 81       	ldd	r25, Z+3	; 0x03
    3f94:	20 e0       	ldi	r18, 0x00	; 0
    3f96:	30 e0       	ldi	r19, 0x00	; 0
    3f98:	40 e2       	ldi	r20, 0x20	; 32
    3f9a:	51 e4       	ldi	r21, 0x41	; 65
    3f9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fa0:	dc 01       	movw	r26, r24
    3fa2:	cb 01       	movw	r24, r22
    3fa4:	8e 01       	movw	r16, r28
    3fa6:	05 5b       	subi	r16, 0xB5	; 181
    3fa8:	1f 4f       	sbci	r17, 0xFF	; 255
    3faa:	bc 01       	movw	r22, r24
    3fac:	cd 01       	movw	r24, r26
    3fae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fb2:	dc 01       	movw	r26, r24
    3fb4:	cb 01       	movw	r24, r22
    3fb6:	f8 01       	movw	r30, r16
    3fb8:	91 83       	std	Z+1, r25	; 0x01
    3fba:	80 83       	st	Z, r24
    3fbc:	1f c0       	rjmp	.+62     	; 0x3ffc <main+0x25ec>
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	e7 5b       	subi	r30, 0xB7	; 183
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	88 ec       	ldi	r24, 0xC8	; 200
    3fc6:	90 e0       	ldi	r25, 0x00	; 0
    3fc8:	91 83       	std	Z+1, r25	; 0x01
    3fca:	80 83       	st	Z, r24
    3fcc:	fe 01       	movw	r30, r28
    3fce:	e7 5b       	subi	r30, 0xB7	; 183
    3fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd2:	80 81       	ld	r24, Z
    3fd4:	91 81       	ldd	r25, Z+1	; 0x01
    3fd6:	01 97       	sbiw	r24, 0x01	; 1
    3fd8:	f1 f7       	brne	.-4      	; 0x3fd6 <main+0x25c6>
    3fda:	fe 01       	movw	r30, r28
    3fdc:	e7 5b       	subi	r30, 0xB7	; 183
    3fde:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe0:	91 83       	std	Z+1, r25	; 0x01
    3fe2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fe4:	de 01       	movw	r26, r28
    3fe6:	a5 5b       	subi	r26, 0xB5	; 181
    3fe8:	bf 4f       	sbci	r27, 0xFF	; 255
    3fea:	fe 01       	movw	r30, r28
    3fec:	e5 5b       	subi	r30, 0xB5	; 181
    3fee:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff0:	80 81       	ld	r24, Z
    3ff2:	91 81       	ldd	r25, Z+1	; 0x01
    3ff4:	01 97       	sbiw	r24, 0x01	; 1
    3ff6:	11 96       	adiw	r26, 0x01	; 1
    3ff8:	9c 93       	st	X, r25
    3ffa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ffc:	fe 01       	movw	r30, r28
    3ffe:	e5 5b       	subi	r30, 0xB5	; 181
    4000:	ff 4f       	sbci	r31, 0xFF	; 255
    4002:	80 81       	ld	r24, Z
    4004:	91 81       	ldd	r25, Z+1	; 0x01
    4006:	00 97       	sbiw	r24, 0x00	; 0
    4008:	d1 f6       	brne	.-76     	; 0x3fbe <main+0x25ae>
    400a:	83 c2       	rjmp	.+1286   	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    400c:	8e 01       	movw	r16, r28
    400e:	05 5b       	subi	r16, 0xB5	; 181
    4010:	1f 4f       	sbci	r17, 0xFF	; 255
    4012:	fe 01       	movw	r30, r28
    4014:	e3 5b       	subi	r30, 0xB3	; 179
    4016:	ff 4f       	sbci	r31, 0xFF	; 255
    4018:	60 81       	ld	r22, Z
    401a:	71 81       	ldd	r23, Z+1	; 0x01
    401c:	82 81       	ldd	r24, Z+2	; 0x02
    401e:	93 81       	ldd	r25, Z+3	; 0x03
    4020:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4024:	dc 01       	movw	r26, r24
    4026:	cb 01       	movw	r24, r22
    4028:	f8 01       	movw	r30, r16
    402a:	91 83       	std	Z+1, r25	; 0x01
    402c:	80 83       	st	Z, r24
    402e:	de 01       	movw	r26, r28
    4030:	a9 5b       	subi	r26, 0xB9	; 185
    4032:	bf 4f       	sbci	r27, 0xFF	; 255
    4034:	fe 01       	movw	r30, r28
    4036:	e5 5b       	subi	r30, 0xB5	; 181
    4038:	ff 4f       	sbci	r31, 0xFF	; 255
    403a:	80 81       	ld	r24, Z
    403c:	91 81       	ldd	r25, Z+1	; 0x01
    403e:	11 96       	adiw	r26, 0x01	; 1
    4040:	9c 93       	st	X, r25
    4042:	8e 93       	st	-X, r24
    4044:	fe 01       	movw	r30, r28
    4046:	e9 5b       	subi	r30, 0xB9	; 185
    4048:	ff 4f       	sbci	r31, 0xFF	; 255
    404a:	80 81       	ld	r24, Z
    404c:	91 81       	ldd	r25, Z+1	; 0x01
    404e:	01 97       	sbiw	r24, 0x01	; 1
    4050:	f1 f7       	brne	.-4      	; 0x404e <main+0x263e>
    4052:	fe 01       	movw	r30, r28
    4054:	e9 5b       	subi	r30, 0xB9	; 185
    4056:	ff 4f       	sbci	r31, 0xFF	; 255
    4058:	91 83       	std	Z+1, r25	; 0x01
    405a:	80 83       	st	Z, r24
    405c:	5a c2       	rjmp	.+1204   	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==6){
    405e:	fe 01       	movw	r30, r28
    4060:	eb 58       	subi	r30, 0x8B	; 139
    4062:	fe 4f       	sbci	r31, 0xFE	; 254
    4064:	80 81       	ld	r24, Z
    4066:	86 30       	cpi	r24, 0x06	; 6
    4068:	09 f0       	breq	.+2      	; 0x406c <main+0x265c>
    406a:	9e c0       	rjmp	.+316    	; 0x41a8 <main+0x2798>
							pass[i]=key;
    406c:	fe 01       	movw	r30, r28
    406e:	ed 58       	subi	r30, 0x8D	; 141
    4070:	fe 4f       	sbci	r31, 0xFE	; 254
    4072:	80 81       	ld	r24, Z
    4074:	28 2f       	mov	r18, r24
    4076:	30 e0       	ldi	r19, 0x00	; 0
    4078:	ce 01       	movw	r24, r28
    407a:	86 58       	subi	r24, 0x86	; 134
    407c:	9e 4f       	sbci	r25, 0xFE	; 254
    407e:	dc 01       	movw	r26, r24
    4080:	a2 0f       	add	r26, r18
    4082:	b3 1f       	adc	r27, r19
    4084:	fe 01       	movw	r30, r28
    4086:	eb 58       	subi	r30, 0x8B	; 139
    4088:	fe 4f       	sbci	r31, 0xFE	; 254
    408a:	80 81       	ld	r24, Z
    408c:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    408e:	fe 01       	movw	r30, r28
    4090:	eb 58       	subi	r30, 0x8B	; 139
    4092:	fe 4f       	sbci	r31, 0xFE	; 254
    4094:	80 81       	ld	r24, Z
    4096:	80 5d       	subi	r24, 0xD0	; 208
    4098:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    409c:	fe 01       	movw	r30, r28
    409e:	ed 5b       	subi	r30, 0xBD	; 189
    40a0:	ff 4f       	sbci	r31, 0xFF	; 255
    40a2:	80 e0       	ldi	r24, 0x00	; 0
    40a4:	90 e0       	ldi	r25, 0x00	; 0
    40a6:	aa ef       	ldi	r26, 0xFA	; 250
    40a8:	b4 e4       	ldi	r27, 0x44	; 68
    40aa:	80 83       	st	Z, r24
    40ac:	91 83       	std	Z+1, r25	; 0x01
    40ae:	a2 83       	std	Z+2, r26	; 0x02
    40b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40b2:	8e 01       	movw	r16, r28
    40b4:	01 5c       	subi	r16, 0xC1	; 193
    40b6:	1f 4f       	sbci	r17, 0xFF	; 255
    40b8:	fe 01       	movw	r30, r28
    40ba:	ed 5b       	subi	r30, 0xBD	; 189
    40bc:	ff 4f       	sbci	r31, 0xFF	; 255
    40be:	60 81       	ld	r22, Z
    40c0:	71 81       	ldd	r23, Z+1	; 0x01
    40c2:	82 81       	ldd	r24, Z+2	; 0x02
    40c4:	93 81       	ldd	r25, Z+3	; 0x03
    40c6:	20 e0       	ldi	r18, 0x00	; 0
    40c8:	30 e0       	ldi	r19, 0x00	; 0
    40ca:	4a ef       	ldi	r20, 0xFA	; 250
    40cc:	54 e4       	ldi	r21, 0x44	; 68
    40ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40d2:	dc 01       	movw	r26, r24
    40d4:	cb 01       	movw	r24, r22
    40d6:	f8 01       	movw	r30, r16
    40d8:	80 83       	st	Z, r24
    40da:	91 83       	std	Z+1, r25	; 0x01
    40dc:	a2 83       	std	Z+2, r26	; 0x02
    40de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40e0:	fe 01       	movw	r30, r28
    40e2:	ff 96       	adiw	r30, 0x3f	; 63
    40e4:	60 81       	ld	r22, Z
    40e6:	71 81       	ldd	r23, Z+1	; 0x01
    40e8:	82 81       	ldd	r24, Z+2	; 0x02
    40ea:	93 81       	ldd	r25, Z+3	; 0x03
    40ec:	20 e0       	ldi	r18, 0x00	; 0
    40ee:	30 e0       	ldi	r19, 0x00	; 0
    40f0:	40 e8       	ldi	r20, 0x80	; 128
    40f2:	5f e3       	ldi	r21, 0x3F	; 63
    40f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    40f8:	88 23       	and	r24, r24
    40fa:	2c f4       	brge	.+10     	; 0x4106 <main+0x26f6>
		__ticks = 1;
    40fc:	81 e0       	ldi	r24, 0x01	; 1
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	9e af       	std	Y+62, r25	; 0x3e
    4102:	8d af       	std	Y+61, r24	; 0x3d
    4104:	46 c0       	rjmp	.+140    	; 0x4192 <main+0x2782>
	else if (__tmp > 65535)
    4106:	fe 01       	movw	r30, r28
    4108:	ff 96       	adiw	r30, 0x3f	; 63
    410a:	60 81       	ld	r22, Z
    410c:	71 81       	ldd	r23, Z+1	; 0x01
    410e:	82 81       	ldd	r24, Z+2	; 0x02
    4110:	93 81       	ldd	r25, Z+3	; 0x03
    4112:	20 e0       	ldi	r18, 0x00	; 0
    4114:	3f ef       	ldi	r19, 0xFF	; 255
    4116:	4f e7       	ldi	r20, 0x7F	; 127
    4118:	57 e4       	ldi	r21, 0x47	; 71
    411a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    411e:	18 16       	cp	r1, r24
    4120:	64 f5       	brge	.+88     	; 0x417a <main+0x276a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4122:	fe 01       	movw	r30, r28
    4124:	ed 5b       	subi	r30, 0xBD	; 189
    4126:	ff 4f       	sbci	r31, 0xFF	; 255
    4128:	60 81       	ld	r22, Z
    412a:	71 81       	ldd	r23, Z+1	; 0x01
    412c:	82 81       	ldd	r24, Z+2	; 0x02
    412e:	93 81       	ldd	r25, Z+3	; 0x03
    4130:	20 e0       	ldi	r18, 0x00	; 0
    4132:	30 e0       	ldi	r19, 0x00	; 0
    4134:	40 e2       	ldi	r20, 0x20	; 32
    4136:	51 e4       	ldi	r21, 0x41	; 65
    4138:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    413c:	dc 01       	movw	r26, r24
    413e:	cb 01       	movw	r24, r22
    4140:	bc 01       	movw	r22, r24
    4142:	cd 01       	movw	r24, r26
    4144:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4148:	dc 01       	movw	r26, r24
    414a:	cb 01       	movw	r24, r22
    414c:	9e af       	std	Y+62, r25	; 0x3e
    414e:	8d af       	std	Y+61, r24	; 0x3d
    4150:	0f c0       	rjmp	.+30     	; 0x4170 <main+0x2760>
    4152:	88 ec       	ldi	r24, 0xC8	; 200
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	9c af       	std	Y+60, r25	; 0x3c
    4158:	8b af       	std	Y+59, r24	; 0x3b
    415a:	8b ad       	ldd	r24, Y+59	; 0x3b
    415c:	9c ad       	ldd	r25, Y+60	; 0x3c
    415e:	01 97       	sbiw	r24, 0x01	; 1
    4160:	f1 f7       	brne	.-4      	; 0x415e <main+0x274e>
    4162:	9c af       	std	Y+60, r25	; 0x3c
    4164:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4166:	8d ad       	ldd	r24, Y+61	; 0x3d
    4168:	9e ad       	ldd	r25, Y+62	; 0x3e
    416a:	01 97       	sbiw	r24, 0x01	; 1
    416c:	9e af       	std	Y+62, r25	; 0x3e
    416e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4170:	8d ad       	ldd	r24, Y+61	; 0x3d
    4172:	9e ad       	ldd	r25, Y+62	; 0x3e
    4174:	00 97       	sbiw	r24, 0x00	; 0
    4176:	69 f7       	brne	.-38     	; 0x4152 <main+0x2742>
    4178:	cc c1       	rjmp	.+920    	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    417a:	fe 01       	movw	r30, r28
    417c:	ff 96       	adiw	r30, 0x3f	; 63
    417e:	60 81       	ld	r22, Z
    4180:	71 81       	ldd	r23, Z+1	; 0x01
    4182:	82 81       	ldd	r24, Z+2	; 0x02
    4184:	93 81       	ldd	r25, Z+3	; 0x03
    4186:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    418a:	dc 01       	movw	r26, r24
    418c:	cb 01       	movw	r24, r22
    418e:	9e af       	std	Y+62, r25	; 0x3e
    4190:	8d af       	std	Y+61, r24	; 0x3d
    4192:	8d ad       	ldd	r24, Y+61	; 0x3d
    4194:	9e ad       	ldd	r25, Y+62	; 0x3e
    4196:	9a af       	std	Y+58, r25	; 0x3a
    4198:	89 af       	std	Y+57, r24	; 0x39
    419a:	89 ad       	ldd	r24, Y+57	; 0x39
    419c:	9a ad       	ldd	r25, Y+58	; 0x3a
    419e:	01 97       	sbiw	r24, 0x01	; 1
    41a0:	f1 f7       	brne	.-4      	; 0x419e <main+0x278e>
    41a2:	9a af       	std	Y+58, r25	; 0x3a
    41a4:	89 af       	std	Y+57, r24	; 0x39
    41a6:	b5 c1       	rjmp	.+874    	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==7){
    41a8:	fe 01       	movw	r30, r28
    41aa:	eb 58       	subi	r30, 0x8B	; 139
    41ac:	fe 4f       	sbci	r31, 0xFE	; 254
    41ae:	80 81       	ld	r24, Z
    41b0:	87 30       	cpi	r24, 0x07	; 7
    41b2:	09 f0       	breq	.+2      	; 0x41b6 <main+0x27a6>
    41b4:	8b c0       	rjmp	.+278    	; 0x42cc <main+0x28bc>
							pass[i]=key;
    41b6:	fe 01       	movw	r30, r28
    41b8:	ed 58       	subi	r30, 0x8D	; 141
    41ba:	fe 4f       	sbci	r31, 0xFE	; 254
    41bc:	80 81       	ld	r24, Z
    41be:	28 2f       	mov	r18, r24
    41c0:	30 e0       	ldi	r19, 0x00	; 0
    41c2:	ce 01       	movw	r24, r28
    41c4:	86 58       	subi	r24, 0x86	; 134
    41c6:	9e 4f       	sbci	r25, 0xFE	; 254
    41c8:	dc 01       	movw	r26, r24
    41ca:	a2 0f       	add	r26, r18
    41cc:	b3 1f       	adc	r27, r19
    41ce:	fe 01       	movw	r30, r28
    41d0:	eb 58       	subi	r30, 0x8B	; 139
    41d2:	fe 4f       	sbci	r31, 0xFE	; 254
    41d4:	80 81       	ld	r24, Z
    41d6:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    41d8:	fe 01       	movw	r30, r28
    41da:	eb 58       	subi	r30, 0x8B	; 139
    41dc:	fe 4f       	sbci	r31, 0xFE	; 254
    41de:	80 81       	ld	r24, Z
    41e0:	80 5d       	subi	r24, 0xD0	; 208
    41e2:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    41e6:	80 e0       	ldi	r24, 0x00	; 0
    41e8:	90 e0       	ldi	r25, 0x00	; 0
    41ea:	aa ef       	ldi	r26, 0xFA	; 250
    41ec:	b4 e4       	ldi	r27, 0x44	; 68
    41ee:	8d ab       	std	Y+53, r24	; 0x35
    41f0:	9e ab       	std	Y+54, r25	; 0x36
    41f2:	af ab       	std	Y+55, r26	; 0x37
    41f4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41f6:	6d a9       	ldd	r22, Y+53	; 0x35
    41f8:	7e a9       	ldd	r23, Y+54	; 0x36
    41fa:	8f a9       	ldd	r24, Y+55	; 0x37
    41fc:	98 ad       	ldd	r25, Y+56	; 0x38
    41fe:	20 e0       	ldi	r18, 0x00	; 0
    4200:	30 e0       	ldi	r19, 0x00	; 0
    4202:	4a ef       	ldi	r20, 0xFA	; 250
    4204:	54 e4       	ldi	r21, 0x44	; 68
    4206:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    420a:	dc 01       	movw	r26, r24
    420c:	cb 01       	movw	r24, r22
    420e:	89 ab       	std	Y+49, r24	; 0x31
    4210:	9a ab       	std	Y+50, r25	; 0x32
    4212:	ab ab       	std	Y+51, r26	; 0x33
    4214:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4216:	69 a9       	ldd	r22, Y+49	; 0x31
    4218:	7a a9       	ldd	r23, Y+50	; 0x32
    421a:	8b a9       	ldd	r24, Y+51	; 0x33
    421c:	9c a9       	ldd	r25, Y+52	; 0x34
    421e:	20 e0       	ldi	r18, 0x00	; 0
    4220:	30 e0       	ldi	r19, 0x00	; 0
    4222:	40 e8       	ldi	r20, 0x80	; 128
    4224:	5f e3       	ldi	r21, 0x3F	; 63
    4226:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    422a:	88 23       	and	r24, r24
    422c:	2c f4       	brge	.+10     	; 0x4238 <main+0x2828>
		__ticks = 1;
    422e:	81 e0       	ldi	r24, 0x01	; 1
    4230:	90 e0       	ldi	r25, 0x00	; 0
    4232:	98 ab       	std	Y+48, r25	; 0x30
    4234:	8f a7       	std	Y+47, r24	; 0x2f
    4236:	3f c0       	rjmp	.+126    	; 0x42b6 <main+0x28a6>
	else if (__tmp > 65535)
    4238:	69 a9       	ldd	r22, Y+49	; 0x31
    423a:	7a a9       	ldd	r23, Y+50	; 0x32
    423c:	8b a9       	ldd	r24, Y+51	; 0x33
    423e:	9c a9       	ldd	r25, Y+52	; 0x34
    4240:	20 e0       	ldi	r18, 0x00	; 0
    4242:	3f ef       	ldi	r19, 0xFF	; 255
    4244:	4f e7       	ldi	r20, 0x7F	; 127
    4246:	57 e4       	ldi	r21, 0x47	; 71
    4248:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    424c:	18 16       	cp	r1, r24
    424e:	4c f5       	brge	.+82     	; 0x42a2 <main+0x2892>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4250:	6d a9       	ldd	r22, Y+53	; 0x35
    4252:	7e a9       	ldd	r23, Y+54	; 0x36
    4254:	8f a9       	ldd	r24, Y+55	; 0x37
    4256:	98 ad       	ldd	r25, Y+56	; 0x38
    4258:	20 e0       	ldi	r18, 0x00	; 0
    425a:	30 e0       	ldi	r19, 0x00	; 0
    425c:	40 e2       	ldi	r20, 0x20	; 32
    425e:	51 e4       	ldi	r21, 0x41	; 65
    4260:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4264:	dc 01       	movw	r26, r24
    4266:	cb 01       	movw	r24, r22
    4268:	bc 01       	movw	r22, r24
    426a:	cd 01       	movw	r24, r26
    426c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4270:	dc 01       	movw	r26, r24
    4272:	cb 01       	movw	r24, r22
    4274:	98 ab       	std	Y+48, r25	; 0x30
    4276:	8f a7       	std	Y+47, r24	; 0x2f
    4278:	0f c0       	rjmp	.+30     	; 0x4298 <main+0x2888>
    427a:	88 ec       	ldi	r24, 0xC8	; 200
    427c:	90 e0       	ldi	r25, 0x00	; 0
    427e:	9e a7       	std	Y+46, r25	; 0x2e
    4280:	8d a7       	std	Y+45, r24	; 0x2d
    4282:	8d a5       	ldd	r24, Y+45	; 0x2d
    4284:	9e a5       	ldd	r25, Y+46	; 0x2e
    4286:	01 97       	sbiw	r24, 0x01	; 1
    4288:	f1 f7       	brne	.-4      	; 0x4286 <main+0x2876>
    428a:	9e a7       	std	Y+46, r25	; 0x2e
    428c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    428e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4290:	98 a9       	ldd	r25, Y+48	; 0x30
    4292:	01 97       	sbiw	r24, 0x01	; 1
    4294:	98 ab       	std	Y+48, r25	; 0x30
    4296:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4298:	8f a5       	ldd	r24, Y+47	; 0x2f
    429a:	98 a9       	ldd	r25, Y+48	; 0x30
    429c:	00 97       	sbiw	r24, 0x00	; 0
    429e:	69 f7       	brne	.-38     	; 0x427a <main+0x286a>
    42a0:	38 c1       	rjmp	.+624    	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42a2:	69 a9       	ldd	r22, Y+49	; 0x31
    42a4:	7a a9       	ldd	r23, Y+50	; 0x32
    42a6:	8b a9       	ldd	r24, Y+51	; 0x33
    42a8:	9c a9       	ldd	r25, Y+52	; 0x34
    42aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42ae:	dc 01       	movw	r26, r24
    42b0:	cb 01       	movw	r24, r22
    42b2:	98 ab       	std	Y+48, r25	; 0x30
    42b4:	8f a7       	std	Y+47, r24	; 0x2f
    42b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    42b8:	98 a9       	ldd	r25, Y+48	; 0x30
    42ba:	9c a7       	std	Y+44, r25	; 0x2c
    42bc:	8b a7       	std	Y+43, r24	; 0x2b
    42be:	8b a5       	ldd	r24, Y+43	; 0x2b
    42c0:	9c a5       	ldd	r25, Y+44	; 0x2c
    42c2:	01 97       	sbiw	r24, 0x01	; 1
    42c4:	f1 f7       	brne	.-4      	; 0x42c2 <main+0x28b2>
    42c6:	9c a7       	std	Y+44, r25	; 0x2c
    42c8:	8b a7       	std	Y+43, r24	; 0x2b
    42ca:	23 c1       	rjmp	.+582    	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==8){
    42cc:	fe 01       	movw	r30, r28
    42ce:	eb 58       	subi	r30, 0x8B	; 139
    42d0:	fe 4f       	sbci	r31, 0xFE	; 254
    42d2:	80 81       	ld	r24, Z
    42d4:	88 30       	cpi	r24, 0x08	; 8
    42d6:	09 f0       	breq	.+2      	; 0x42da <main+0x28ca>
    42d8:	8b c0       	rjmp	.+278    	; 0x43f0 <main+0x29e0>
							pass[i]=key;
    42da:	fe 01       	movw	r30, r28
    42dc:	ed 58       	subi	r30, 0x8D	; 141
    42de:	fe 4f       	sbci	r31, 0xFE	; 254
    42e0:	80 81       	ld	r24, Z
    42e2:	28 2f       	mov	r18, r24
    42e4:	30 e0       	ldi	r19, 0x00	; 0
    42e6:	ce 01       	movw	r24, r28
    42e8:	86 58       	subi	r24, 0x86	; 134
    42ea:	9e 4f       	sbci	r25, 0xFE	; 254
    42ec:	dc 01       	movw	r26, r24
    42ee:	a2 0f       	add	r26, r18
    42f0:	b3 1f       	adc	r27, r19
    42f2:	fe 01       	movw	r30, r28
    42f4:	eb 58       	subi	r30, 0x8B	; 139
    42f6:	fe 4f       	sbci	r31, 0xFE	; 254
    42f8:	80 81       	ld	r24, Z
    42fa:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    42fc:	fe 01       	movw	r30, r28
    42fe:	eb 58       	subi	r30, 0x8B	; 139
    4300:	fe 4f       	sbci	r31, 0xFE	; 254
    4302:	80 81       	ld	r24, Z
    4304:	80 5d       	subi	r24, 0xD0	; 208
    4306:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    430a:	80 e0       	ldi	r24, 0x00	; 0
    430c:	90 e0       	ldi	r25, 0x00	; 0
    430e:	aa ef       	ldi	r26, 0xFA	; 250
    4310:	b4 e4       	ldi	r27, 0x44	; 68
    4312:	8f a3       	std	Y+39, r24	; 0x27
    4314:	98 a7       	std	Y+40, r25	; 0x28
    4316:	a9 a7       	std	Y+41, r26	; 0x29
    4318:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    431a:	6f a1       	ldd	r22, Y+39	; 0x27
    431c:	78 a5       	ldd	r23, Y+40	; 0x28
    431e:	89 a5       	ldd	r24, Y+41	; 0x29
    4320:	9a a5       	ldd	r25, Y+42	; 0x2a
    4322:	20 e0       	ldi	r18, 0x00	; 0
    4324:	30 e0       	ldi	r19, 0x00	; 0
    4326:	4a ef       	ldi	r20, 0xFA	; 250
    4328:	54 e4       	ldi	r21, 0x44	; 68
    432a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    432e:	dc 01       	movw	r26, r24
    4330:	cb 01       	movw	r24, r22
    4332:	8b a3       	std	Y+35, r24	; 0x23
    4334:	9c a3       	std	Y+36, r25	; 0x24
    4336:	ad a3       	std	Y+37, r26	; 0x25
    4338:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    433a:	6b a1       	ldd	r22, Y+35	; 0x23
    433c:	7c a1       	ldd	r23, Y+36	; 0x24
    433e:	8d a1       	ldd	r24, Y+37	; 0x25
    4340:	9e a1       	ldd	r25, Y+38	; 0x26
    4342:	20 e0       	ldi	r18, 0x00	; 0
    4344:	30 e0       	ldi	r19, 0x00	; 0
    4346:	40 e8       	ldi	r20, 0x80	; 128
    4348:	5f e3       	ldi	r21, 0x3F	; 63
    434a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    434e:	88 23       	and	r24, r24
    4350:	2c f4       	brge	.+10     	; 0x435c <main+0x294c>
		__ticks = 1;
    4352:	81 e0       	ldi	r24, 0x01	; 1
    4354:	90 e0       	ldi	r25, 0x00	; 0
    4356:	9a a3       	std	Y+34, r25	; 0x22
    4358:	89 a3       	std	Y+33, r24	; 0x21
    435a:	3f c0       	rjmp	.+126    	; 0x43da <main+0x29ca>
	else if (__tmp > 65535)
    435c:	6b a1       	ldd	r22, Y+35	; 0x23
    435e:	7c a1       	ldd	r23, Y+36	; 0x24
    4360:	8d a1       	ldd	r24, Y+37	; 0x25
    4362:	9e a1       	ldd	r25, Y+38	; 0x26
    4364:	20 e0       	ldi	r18, 0x00	; 0
    4366:	3f ef       	ldi	r19, 0xFF	; 255
    4368:	4f e7       	ldi	r20, 0x7F	; 127
    436a:	57 e4       	ldi	r21, 0x47	; 71
    436c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4370:	18 16       	cp	r1, r24
    4372:	4c f5       	brge	.+82     	; 0x43c6 <main+0x29b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4374:	6f a1       	ldd	r22, Y+39	; 0x27
    4376:	78 a5       	ldd	r23, Y+40	; 0x28
    4378:	89 a5       	ldd	r24, Y+41	; 0x29
    437a:	9a a5       	ldd	r25, Y+42	; 0x2a
    437c:	20 e0       	ldi	r18, 0x00	; 0
    437e:	30 e0       	ldi	r19, 0x00	; 0
    4380:	40 e2       	ldi	r20, 0x20	; 32
    4382:	51 e4       	ldi	r21, 0x41	; 65
    4384:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4388:	dc 01       	movw	r26, r24
    438a:	cb 01       	movw	r24, r22
    438c:	bc 01       	movw	r22, r24
    438e:	cd 01       	movw	r24, r26
    4390:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4394:	dc 01       	movw	r26, r24
    4396:	cb 01       	movw	r24, r22
    4398:	9a a3       	std	Y+34, r25	; 0x22
    439a:	89 a3       	std	Y+33, r24	; 0x21
    439c:	0f c0       	rjmp	.+30     	; 0x43bc <main+0x29ac>
    439e:	88 ec       	ldi	r24, 0xC8	; 200
    43a0:	90 e0       	ldi	r25, 0x00	; 0
    43a2:	98 a3       	std	Y+32, r25	; 0x20
    43a4:	8f 8f       	std	Y+31, r24	; 0x1f
    43a6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    43a8:	98 a1       	ldd	r25, Y+32	; 0x20
    43aa:	01 97       	sbiw	r24, 0x01	; 1
    43ac:	f1 f7       	brne	.-4      	; 0x43aa <main+0x299a>
    43ae:	98 a3       	std	Y+32, r25	; 0x20
    43b0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43b2:	89 a1       	ldd	r24, Y+33	; 0x21
    43b4:	9a a1       	ldd	r25, Y+34	; 0x22
    43b6:	01 97       	sbiw	r24, 0x01	; 1
    43b8:	9a a3       	std	Y+34, r25	; 0x22
    43ba:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43bc:	89 a1       	ldd	r24, Y+33	; 0x21
    43be:	9a a1       	ldd	r25, Y+34	; 0x22
    43c0:	00 97       	sbiw	r24, 0x00	; 0
    43c2:	69 f7       	brne	.-38     	; 0x439e <main+0x298e>
    43c4:	a6 c0       	rjmp	.+332    	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43c6:	6b a1       	ldd	r22, Y+35	; 0x23
    43c8:	7c a1       	ldd	r23, Y+36	; 0x24
    43ca:	8d a1       	ldd	r24, Y+37	; 0x25
    43cc:	9e a1       	ldd	r25, Y+38	; 0x26
    43ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43d2:	dc 01       	movw	r26, r24
    43d4:	cb 01       	movw	r24, r22
    43d6:	9a a3       	std	Y+34, r25	; 0x22
    43d8:	89 a3       	std	Y+33, r24	; 0x21
    43da:	89 a1       	ldd	r24, Y+33	; 0x21
    43dc:	9a a1       	ldd	r25, Y+34	; 0x22
    43de:	9e 8f       	std	Y+30, r25	; 0x1e
    43e0:	8d 8f       	std	Y+29, r24	; 0x1d
    43e2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    43e4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    43e6:	01 97       	sbiw	r24, 0x01	; 1
    43e8:	f1 f7       	brne	.-4      	; 0x43e6 <main+0x29d6>
    43ea:	9e 8f       	std	Y+30, r25	; 0x1e
    43ec:	8d 8f       	std	Y+29, r24	; 0x1d
    43ee:	91 c0       	rjmp	.+290    	; 0x4512 <main+0x2b02>
							_delay_ms(2000);
						}
						else if(key==9){
    43f0:	fe 01       	movw	r30, r28
    43f2:	eb 58       	subi	r30, 0x8B	; 139
    43f4:	fe 4f       	sbci	r31, 0xFE	; 254
    43f6:	80 81       	ld	r24, Z
    43f8:	89 30       	cpi	r24, 0x09	; 9
    43fa:	09 f0       	breq	.+2      	; 0x43fe <main+0x29ee>
    43fc:	8a c0       	rjmp	.+276    	; 0x4512 <main+0x2b02>
							pass[i]=key;
    43fe:	fe 01       	movw	r30, r28
    4400:	ed 58       	subi	r30, 0x8D	; 141
    4402:	fe 4f       	sbci	r31, 0xFE	; 254
    4404:	80 81       	ld	r24, Z
    4406:	28 2f       	mov	r18, r24
    4408:	30 e0       	ldi	r19, 0x00	; 0
    440a:	ce 01       	movw	r24, r28
    440c:	86 58       	subi	r24, 0x86	; 134
    440e:	9e 4f       	sbci	r25, 0xFE	; 254
    4410:	dc 01       	movw	r26, r24
    4412:	a2 0f       	add	r26, r18
    4414:	b3 1f       	adc	r27, r19
    4416:	fe 01       	movw	r30, r28
    4418:	eb 58       	subi	r30, 0x8B	; 139
    441a:	fe 4f       	sbci	r31, 0xFE	; 254
    441c:	80 81       	ld	r24, Z
    441e:	8c 93       	st	X, r24
							Lcd_vidWriteChar(key+'0');
    4420:	fe 01       	movw	r30, r28
    4422:	eb 58       	subi	r30, 0x8B	; 139
    4424:	fe 4f       	sbci	r31, 0xFE	; 254
    4426:	80 81       	ld	r24, Z
    4428:	80 5d       	subi	r24, 0xD0	; 208
    442a:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
    442e:	80 e0       	ldi	r24, 0x00	; 0
    4430:	90 e0       	ldi	r25, 0x00	; 0
    4432:	aa ef       	ldi	r26, 0xFA	; 250
    4434:	b4 e4       	ldi	r27, 0x44	; 68
    4436:	89 8f       	std	Y+25, r24	; 0x19
    4438:	9a 8f       	std	Y+26, r25	; 0x1a
    443a:	ab 8f       	std	Y+27, r26	; 0x1b
    443c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    443e:	69 8d       	ldd	r22, Y+25	; 0x19
    4440:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4442:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4444:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4446:	20 e0       	ldi	r18, 0x00	; 0
    4448:	30 e0       	ldi	r19, 0x00	; 0
    444a:	4a ef       	ldi	r20, 0xFA	; 250
    444c:	54 e4       	ldi	r21, 0x44	; 68
    444e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4452:	dc 01       	movw	r26, r24
    4454:	cb 01       	movw	r24, r22
    4456:	8d 8b       	std	Y+21, r24	; 0x15
    4458:	9e 8b       	std	Y+22, r25	; 0x16
    445a:	af 8b       	std	Y+23, r26	; 0x17
    445c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    445e:	6d 89       	ldd	r22, Y+21	; 0x15
    4460:	7e 89       	ldd	r23, Y+22	; 0x16
    4462:	8f 89       	ldd	r24, Y+23	; 0x17
    4464:	98 8d       	ldd	r25, Y+24	; 0x18
    4466:	20 e0       	ldi	r18, 0x00	; 0
    4468:	30 e0       	ldi	r19, 0x00	; 0
    446a:	40 e8       	ldi	r20, 0x80	; 128
    446c:	5f e3       	ldi	r21, 0x3F	; 63
    446e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4472:	88 23       	and	r24, r24
    4474:	2c f4       	brge	.+10     	; 0x4480 <main+0x2a70>
		__ticks = 1;
    4476:	81 e0       	ldi	r24, 0x01	; 1
    4478:	90 e0       	ldi	r25, 0x00	; 0
    447a:	9c 8b       	std	Y+20, r25	; 0x14
    447c:	8b 8b       	std	Y+19, r24	; 0x13
    447e:	3f c0       	rjmp	.+126    	; 0x44fe <main+0x2aee>
	else if (__tmp > 65535)
    4480:	6d 89       	ldd	r22, Y+21	; 0x15
    4482:	7e 89       	ldd	r23, Y+22	; 0x16
    4484:	8f 89       	ldd	r24, Y+23	; 0x17
    4486:	98 8d       	ldd	r25, Y+24	; 0x18
    4488:	20 e0       	ldi	r18, 0x00	; 0
    448a:	3f ef       	ldi	r19, 0xFF	; 255
    448c:	4f e7       	ldi	r20, 0x7F	; 127
    448e:	57 e4       	ldi	r21, 0x47	; 71
    4490:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4494:	18 16       	cp	r1, r24
    4496:	4c f5       	brge	.+82     	; 0x44ea <main+0x2ada>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4498:	69 8d       	ldd	r22, Y+25	; 0x19
    449a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    449c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    449e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    44a0:	20 e0       	ldi	r18, 0x00	; 0
    44a2:	30 e0       	ldi	r19, 0x00	; 0
    44a4:	40 e2       	ldi	r20, 0x20	; 32
    44a6:	51 e4       	ldi	r21, 0x41	; 65
    44a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44ac:	dc 01       	movw	r26, r24
    44ae:	cb 01       	movw	r24, r22
    44b0:	bc 01       	movw	r22, r24
    44b2:	cd 01       	movw	r24, r26
    44b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44b8:	dc 01       	movw	r26, r24
    44ba:	cb 01       	movw	r24, r22
    44bc:	9c 8b       	std	Y+20, r25	; 0x14
    44be:	8b 8b       	std	Y+19, r24	; 0x13
    44c0:	0f c0       	rjmp	.+30     	; 0x44e0 <main+0x2ad0>
    44c2:	88 ec       	ldi	r24, 0xC8	; 200
    44c4:	90 e0       	ldi	r25, 0x00	; 0
    44c6:	9a 8b       	std	Y+18, r25	; 0x12
    44c8:	89 8b       	std	Y+17, r24	; 0x11
    44ca:	89 89       	ldd	r24, Y+17	; 0x11
    44cc:	9a 89       	ldd	r25, Y+18	; 0x12
    44ce:	01 97       	sbiw	r24, 0x01	; 1
    44d0:	f1 f7       	brne	.-4      	; 0x44ce <main+0x2abe>
    44d2:	9a 8b       	std	Y+18, r25	; 0x12
    44d4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44d6:	8b 89       	ldd	r24, Y+19	; 0x13
    44d8:	9c 89       	ldd	r25, Y+20	; 0x14
    44da:	01 97       	sbiw	r24, 0x01	; 1
    44dc:	9c 8b       	std	Y+20, r25	; 0x14
    44de:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44e0:	8b 89       	ldd	r24, Y+19	; 0x13
    44e2:	9c 89       	ldd	r25, Y+20	; 0x14
    44e4:	00 97       	sbiw	r24, 0x00	; 0
    44e6:	69 f7       	brne	.-38     	; 0x44c2 <main+0x2ab2>
    44e8:	14 c0       	rjmp	.+40     	; 0x4512 <main+0x2b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44ea:	6d 89       	ldd	r22, Y+21	; 0x15
    44ec:	7e 89       	ldd	r23, Y+22	; 0x16
    44ee:	8f 89       	ldd	r24, Y+23	; 0x17
    44f0:	98 8d       	ldd	r25, Y+24	; 0x18
    44f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44f6:	dc 01       	movw	r26, r24
    44f8:	cb 01       	movw	r24, r22
    44fa:	9c 8b       	std	Y+20, r25	; 0x14
    44fc:	8b 8b       	std	Y+19, r24	; 0x13
    44fe:	8b 89       	ldd	r24, Y+19	; 0x13
    4500:	9c 89       	ldd	r25, Y+20	; 0x14
    4502:	98 8b       	std	Y+16, r25	; 0x10
    4504:	8f 87       	std	Y+15, r24	; 0x0f
    4506:	8f 85       	ldd	r24, Y+15	; 0x0f
    4508:	98 89       	ldd	r25, Y+16	; 0x10
    450a:	01 97       	sbiw	r24, 0x01	; 1
    450c:	f1 f7       	brne	.-4      	; 0x450a <main+0x2afa>
    450e:	98 8b       	std	Y+16, r25	; 0x10
    4510:	8f 87       	std	Y+15, r24	; 0x0f
						}


					}
				}
					loc2+=0x01;
    4512:	de 01       	movw	r26, r28
    4514:	a1 59       	subi	r26, 0x91	; 145
    4516:	be 4f       	sbci	r27, 0xFE	; 254
    4518:	fe 01       	movw	r30, r28
    451a:	e1 59       	subi	r30, 0x91	; 145
    451c:	fe 4f       	sbci	r31, 0xFE	; 254
    451e:	80 81       	ld	r24, Z
    4520:	8f 5f       	subi	r24, 0xFF	; 255
    4522:	8c 93       	st	X, r24
			}
		}

		else if(x==0){
			do{
				for(i=0; i<3; i++){
    4524:	de 01       	movw	r26, r28
    4526:	ad 58       	subi	r26, 0x8D	; 141
    4528:	be 4f       	sbci	r27, 0xFE	; 254
    452a:	fe 01       	movw	r30, r28
    452c:	ed 58       	subi	r30, 0x8D	; 141
    452e:	fe 4f       	sbci	r31, 0xFE	; 254
    4530:	80 81       	ld	r24, Z
    4532:	8f 5f       	subi	r24, 0xFF	; 255
    4534:	8c 93       	st	X, r24
    4536:	fe 01       	movw	r30, r28
    4538:	ed 58       	subi	r30, 0x8D	; 141
    453a:	fe 4f       	sbci	r31, 0xFE	; 254
    453c:	80 81       	ld	r24, Z
    453e:	83 30       	cpi	r24, 0x03	; 3
    4540:	08 f4       	brcc	.+2      	; 0x4544 <main+0x2b34>
    4542:	58 c8       	rjmp	.-3920   	; 0x35f4 <main+0x1be4>
					}
				}
					loc2+=0x01;
				}
				do{
					key=Keypad_u8GetKey();
    4544:	0e 94 47 08 	call	0x108e	; 0x108e <Keypad_u8GetKey>
    4548:	fe 01       	movw	r30, r28
    454a:	eb 58       	subi	r30, 0x8B	; 139
    454c:	fe 4f       	sbci	r31, 0xFE	; 254
    454e:	80 83       	st	Z, r24
				}
				while(key!='=');
    4550:	fe 01       	movw	r30, r28
    4552:	eb 58       	subi	r30, 0x8B	; 139
    4554:	fe 4f       	sbci	r31, 0xFE	; 254
    4556:	80 81       	ld	r24, Z
    4558:	8d 33       	cpi	r24, 0x3D	; 61
    455a:	a1 f7       	brne	.-24     	; 0x4544 <main+0x2b34>
				count1++;
    455c:	de 01       	movw	r26, r28
    455e:	af 58       	subi	r26, 0x8F	; 143
    4560:	be 4f       	sbci	r27, 0xFE	; 254
    4562:	fe 01       	movw	r30, r28
    4564:	ef 58       	subi	r30, 0x8F	; 143
    4566:	fe 4f       	sbci	r31, 0xFE	; 254
    4568:	80 81       	ld	r24, Z
    456a:	8f 5f       	subi	r24, 0xFF	; 255
    456c:	8c 93       	st	X, r24
			}
			while((strcmp(pass,pass1)!=0)&&(strcmp(pass,pass2)!=0)&&(strcmp(pass,pass3)!=0)&&(count1<3));
    456e:	ce 01       	movw	r24, r28
    4570:	86 58       	subi	r24, 0x86	; 134
    4572:	9e 4f       	sbci	r25, 0xFE	; 254
    4574:	9e 01       	movw	r18, r28
    4576:	21 57       	subi	r18, 0x71	; 113
    4578:	3e 4f       	sbci	r19, 0xFE	; 254
    457a:	b9 01       	movw	r22, r18
    457c:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    4580:	00 97       	sbiw	r24, 0x00	; 0
    4582:	f1 f0       	breq	.+60     	; 0x45c0 <main+0x2bb0>
    4584:	ce 01       	movw	r24, r28
    4586:	86 58       	subi	r24, 0x86	; 134
    4588:	9e 4f       	sbci	r25, 0xFE	; 254
    458a:	9e 01       	movw	r18, r28
    458c:	2d 56       	subi	r18, 0x6D	; 109
    458e:	3e 4f       	sbci	r19, 0xFE	; 254
    4590:	b9 01       	movw	r22, r18
    4592:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    4596:	00 97       	sbiw	r24, 0x00	; 0
    4598:	99 f0       	breq	.+38     	; 0x45c0 <main+0x2bb0>
    459a:	ce 01       	movw	r24, r28
    459c:	86 58       	subi	r24, 0x86	; 134
    459e:	9e 4f       	sbci	r25, 0xFE	; 254
    45a0:	9e 01       	movw	r18, r28
    45a2:	29 56       	subi	r18, 0x69	; 105
    45a4:	3e 4f       	sbci	r19, 0xFE	; 254
    45a6:	b9 01       	movw	r22, r18
    45a8:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    45ac:	00 97       	sbiw	r24, 0x00	; 0
    45ae:	41 f0       	breq	.+16     	; 0x45c0 <main+0x2bb0>
    45b0:	fe 01       	movw	r30, r28
    45b2:	ef 58       	subi	r30, 0x8F	; 143
    45b4:	fe 4f       	sbci	r31, 0xFE	; 254
    45b6:	80 81       	ld	r24, Z
    45b8:	83 30       	cpi	r24, 0x03	; 3
    45ba:	10 f4       	brcc	.+4      	; 0x45c0 <main+0x2bb0>
    45bc:	0c 94 f4 1a 	jmp	0x35e8	; 0x35e8 <main+0x1bd8>
			if((strcmp(pass,pass1)!=0)&&(strcmp(pass,pass2)!=0)&&(strcmp(pass,pass3)!=0)){
    45c0:	ce 01       	movw	r24, r28
    45c2:	86 58       	subi	r24, 0x86	; 134
    45c4:	9e 4f       	sbci	r25, 0xFE	; 254
    45c6:	9e 01       	movw	r18, r28
    45c8:	21 57       	subi	r18, 0x71	; 113
    45ca:	3e 4f       	sbci	r19, 0xFE	; 254
    45cc:	b9 01       	movw	r22, r18
    45ce:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    45d2:	00 97       	sbiw	r24, 0x00	; 0
    45d4:	11 f4       	brne	.+4      	; 0x45da <main+0x2bca>
    45d6:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
    45da:	ce 01       	movw	r24, r28
    45dc:	86 58       	subi	r24, 0x86	; 134
    45de:	9e 4f       	sbci	r25, 0xFE	; 254
    45e0:	9e 01       	movw	r18, r28
    45e2:	2d 56       	subi	r18, 0x6D	; 109
    45e4:	3e 4f       	sbci	r19, 0xFE	; 254
    45e6:	b9 01       	movw	r22, r18
    45e8:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    45ec:	00 97       	sbiw	r24, 0x00	; 0
    45ee:	11 f4       	brne	.+4      	; 0x45f4 <main+0x2be4>
    45f0:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
    45f4:	ce 01       	movw	r24, r28
    45f6:	86 58       	subi	r24, 0x86	; 134
    45f8:	9e 4f       	sbci	r25, 0xFE	; 254
    45fa:	9e 01       	movw	r18, r28
    45fc:	29 56       	subi	r18, 0x69	; 105
    45fe:	3e 4f       	sbci	r19, 0xFE	; 254
    4600:	b9 01       	movw	r22, r18
    4602:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <strcmp>
    4606:	00 97       	sbiw	r24, 0x00	; 0
    4608:	11 f4       	brne	.+4      	; 0x460e <main+0x2bfe>
    460a:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
				Lcd_vidSendCommand(0x01);
    460e:	81 e0       	ldi	r24, 0x01	; 1
    4610:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
				for(i=0; i<5; i++){
    4614:	fe 01       	movw	r30, r28
    4616:	ed 58       	subi	r30, 0x8D	; 141
    4618:	fe 4f       	sbci	r31, 0xFE	; 254
    461a:	10 82       	st	Z, r1
    461c:	27 c0       	rjmp	.+78     	; 0x466c <main+0x2c5c>
					Lcd_vidSendCommand(error_loc2);
    461e:	fe 01       	movw	r30, r28
    4620:	e3 59       	subi	r30, 0x93	; 147
    4622:	fe 4f       	sbci	r31, 0xFE	; 254
    4624:	80 81       	ld	r24, Z
    4626:	0e 94 8c 09 	call	0x1318	; 0x1318 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(error[i]);
    462a:	fe 01       	movw	r30, r28
    462c:	ed 58       	subi	r30, 0x8D	; 141
    462e:	fe 4f       	sbci	r31, 0xFE	; 254
    4630:	80 81       	ld	r24, Z
    4632:	28 2f       	mov	r18, r24
    4634:	30 e0       	ldi	r19, 0x00	; 0
    4636:	ce 01       	movw	r24, r28
    4638:	82 58       	subi	r24, 0x82	; 130
    463a:	9e 4f       	sbci	r25, 0xFE	; 254
    463c:	fc 01       	movw	r30, r24
    463e:	e2 0f       	add	r30, r18
    4640:	f3 1f       	adc	r31, r19
    4642:	80 81       	ld	r24, Z
    4644:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <Lcd_vidWriteChar>
					error_loc2+=0x01;
    4648:	de 01       	movw	r26, r28
    464a:	a3 59       	subi	r26, 0x93	; 147
    464c:	be 4f       	sbci	r27, 0xFE	; 254
    464e:	fe 01       	movw	r30, r28
    4650:	e3 59       	subi	r30, 0x93	; 147
    4652:	fe 4f       	sbci	r31, 0xFE	; 254
    4654:	80 81       	ld	r24, Z
    4656:	8f 5f       	subi	r24, 0xFF	; 255
    4658:	8c 93       	st	X, r24
				count1++;
			}
			while((strcmp(pass,pass1)!=0)&&(strcmp(pass,pass2)!=0)&&(strcmp(pass,pass3)!=0)&&(count1<3));
			if((strcmp(pass,pass1)!=0)&&(strcmp(pass,pass2)!=0)&&(strcmp(pass,pass3)!=0)){
				Lcd_vidSendCommand(0x01);
				for(i=0; i<5; i++){
    465a:	de 01       	movw	r26, r28
    465c:	ad 58       	subi	r26, 0x8D	; 141
    465e:	be 4f       	sbci	r27, 0xFE	; 254
    4660:	fe 01       	movw	r30, r28
    4662:	ed 58       	subi	r30, 0x8D	; 141
    4664:	fe 4f       	sbci	r31, 0xFE	; 254
    4666:	80 81       	ld	r24, Z
    4668:	8f 5f       	subi	r24, 0xFF	; 255
    466a:	8c 93       	st	X, r24
    466c:	fe 01       	movw	r30, r28
    466e:	ed 58       	subi	r30, 0x8D	; 141
    4670:	fe 4f       	sbci	r31, 0xFE	; 254
    4672:	80 81       	ld	r24, Z
    4674:	85 30       	cpi	r24, 0x05	; 5
    4676:	98 f2       	brcs	.-90     	; 0x461e <main+0x2c0e>
    4678:	80 e0       	ldi	r24, 0x00	; 0
    467a:	90 e4       	ldi	r25, 0x40	; 64
    467c:	ac e9       	ldi	r26, 0x9C	; 156
    467e:	b5 e4       	ldi	r27, 0x45	; 69
    4680:	8b 87       	std	Y+11, r24	; 0x0b
    4682:	9c 87       	std	Y+12, r25	; 0x0c
    4684:	ad 87       	std	Y+13, r26	; 0x0d
    4686:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4688:	6b 85       	ldd	r22, Y+11	; 0x0b
    468a:	7c 85       	ldd	r23, Y+12	; 0x0c
    468c:	8d 85       	ldd	r24, Y+13	; 0x0d
    468e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4690:	20 e0       	ldi	r18, 0x00	; 0
    4692:	30 e0       	ldi	r19, 0x00	; 0
    4694:	4a ef       	ldi	r20, 0xFA	; 250
    4696:	54 e4       	ldi	r21, 0x44	; 68
    4698:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    469c:	dc 01       	movw	r26, r24
    469e:	cb 01       	movw	r24, r22
    46a0:	8f 83       	std	Y+7, r24	; 0x07
    46a2:	98 87       	std	Y+8, r25	; 0x08
    46a4:	a9 87       	std	Y+9, r26	; 0x09
    46a6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    46a8:	6f 81       	ldd	r22, Y+7	; 0x07
    46aa:	78 85       	ldd	r23, Y+8	; 0x08
    46ac:	89 85       	ldd	r24, Y+9	; 0x09
    46ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    46b0:	20 e0       	ldi	r18, 0x00	; 0
    46b2:	30 e0       	ldi	r19, 0x00	; 0
    46b4:	40 e8       	ldi	r20, 0x80	; 128
    46b6:	5f e3       	ldi	r21, 0x3F	; 63
    46b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46bc:	88 23       	and	r24, r24
    46be:	2c f4       	brge	.+10     	; 0x46ca <main+0x2cba>
		__ticks = 1;
    46c0:	81 e0       	ldi	r24, 0x01	; 1
    46c2:	90 e0       	ldi	r25, 0x00	; 0
    46c4:	9e 83       	std	Y+6, r25	; 0x06
    46c6:	8d 83       	std	Y+5, r24	; 0x05
    46c8:	40 c0       	rjmp	.+128    	; 0x474a <main+0x2d3a>
	else if (__tmp > 65535)
    46ca:	6f 81       	ldd	r22, Y+7	; 0x07
    46cc:	78 85       	ldd	r23, Y+8	; 0x08
    46ce:	89 85       	ldd	r24, Y+9	; 0x09
    46d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    46d2:	20 e0       	ldi	r18, 0x00	; 0
    46d4:	3f ef       	ldi	r19, 0xFF	; 255
    46d6:	4f e7       	ldi	r20, 0x7F	; 127
    46d8:	57 e4       	ldi	r21, 0x47	; 71
    46da:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    46de:	18 16       	cp	r1, r24
    46e0:	54 f5       	brge	.+84     	; 0x4736 <main+0x2d26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46e2:	6b 85       	ldd	r22, Y+11	; 0x0b
    46e4:	7c 85       	ldd	r23, Y+12	; 0x0c
    46e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    46e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    46ea:	20 e0       	ldi	r18, 0x00	; 0
    46ec:	30 e0       	ldi	r19, 0x00	; 0
    46ee:	40 e2       	ldi	r20, 0x20	; 32
    46f0:	51 e4       	ldi	r21, 0x41	; 65
    46f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46f6:	dc 01       	movw	r26, r24
    46f8:	cb 01       	movw	r24, r22
    46fa:	bc 01       	movw	r22, r24
    46fc:	cd 01       	movw	r24, r26
    46fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4702:	dc 01       	movw	r26, r24
    4704:	cb 01       	movw	r24, r22
    4706:	9e 83       	std	Y+6, r25	; 0x06
    4708:	8d 83       	std	Y+5, r24	; 0x05
    470a:	0f c0       	rjmp	.+30     	; 0x472a <main+0x2d1a>
    470c:	88 ec       	ldi	r24, 0xC8	; 200
    470e:	90 e0       	ldi	r25, 0x00	; 0
    4710:	9c 83       	std	Y+4, r25	; 0x04
    4712:	8b 83       	std	Y+3, r24	; 0x03
    4714:	8b 81       	ldd	r24, Y+3	; 0x03
    4716:	9c 81       	ldd	r25, Y+4	; 0x04
    4718:	01 97       	sbiw	r24, 0x01	; 1
    471a:	f1 f7       	brne	.-4      	; 0x4718 <main+0x2d08>
    471c:	9c 83       	std	Y+4, r25	; 0x04
    471e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4720:	8d 81       	ldd	r24, Y+5	; 0x05
    4722:	9e 81       	ldd	r25, Y+6	; 0x06
    4724:	01 97       	sbiw	r24, 0x01	; 1
    4726:	9e 83       	std	Y+6, r25	; 0x06
    4728:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    472a:	8d 81       	ldd	r24, Y+5	; 0x05
    472c:	9e 81       	ldd	r25, Y+6	; 0x06
    472e:	00 97       	sbiw	r24, 0x00	; 0
    4730:	69 f7       	brne	.-38     	; 0x470c <main+0x2cfc>
    4732:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4736:	6f 81       	ldd	r22, Y+7	; 0x07
    4738:	78 85       	ldd	r23, Y+8	; 0x08
    473a:	89 85       	ldd	r24, Y+9	; 0x09
    473c:	9a 85       	ldd	r25, Y+10	; 0x0a
    473e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4742:	dc 01       	movw	r26, r24
    4744:	cb 01       	movw	r24, r22
    4746:	9e 83       	std	Y+6, r25	; 0x06
    4748:	8d 83       	std	Y+5, r24	; 0x05
    474a:	8d 81       	ldd	r24, Y+5	; 0x05
    474c:	9e 81       	ldd	r25, Y+6	; 0x06
    474e:	9a 83       	std	Y+2, r25	; 0x02
    4750:	89 83       	std	Y+1, r24	; 0x01
    4752:	89 81       	ldd	r24, Y+1	; 0x01
    4754:	9a 81       	ldd	r25, Y+2	; 0x02
    4756:	01 97       	sbiw	r24, 0x01	; 1
    4758:	f1 f7       	brne	.-4      	; 0x4756 <main+0x2d46>
    475a:	9a 83       	std	Y+2, r25	; 0x02
    475c:	89 83       	std	Y+1, r24	; 0x01
    475e:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <main+0x208>

00004762 <__prologue_saves__>:
    4762:	2f 92       	push	r2
    4764:	3f 92       	push	r3
    4766:	4f 92       	push	r4
    4768:	5f 92       	push	r5
    476a:	6f 92       	push	r6
    476c:	7f 92       	push	r7
    476e:	8f 92       	push	r8
    4770:	9f 92       	push	r9
    4772:	af 92       	push	r10
    4774:	bf 92       	push	r11
    4776:	cf 92       	push	r12
    4778:	df 92       	push	r13
    477a:	ef 92       	push	r14
    477c:	ff 92       	push	r15
    477e:	0f 93       	push	r16
    4780:	1f 93       	push	r17
    4782:	cf 93       	push	r28
    4784:	df 93       	push	r29
    4786:	cd b7       	in	r28, 0x3d	; 61
    4788:	de b7       	in	r29, 0x3e	; 62
    478a:	ca 1b       	sub	r28, r26
    478c:	db 0b       	sbc	r29, r27
    478e:	0f b6       	in	r0, 0x3f	; 63
    4790:	f8 94       	cli
    4792:	de bf       	out	0x3e, r29	; 62
    4794:	0f be       	out	0x3f, r0	; 63
    4796:	cd bf       	out	0x3d, r28	; 61
    4798:	09 94       	ijmp

0000479a <__epilogue_restores__>:
    479a:	2a 88       	ldd	r2, Y+18	; 0x12
    479c:	39 88       	ldd	r3, Y+17	; 0x11
    479e:	48 88       	ldd	r4, Y+16	; 0x10
    47a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    47a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    47a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    47a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    47a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    47aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    47ac:	b9 84       	ldd	r11, Y+9	; 0x09
    47ae:	c8 84       	ldd	r12, Y+8	; 0x08
    47b0:	df 80       	ldd	r13, Y+7	; 0x07
    47b2:	ee 80       	ldd	r14, Y+6	; 0x06
    47b4:	fd 80       	ldd	r15, Y+5	; 0x05
    47b6:	0c 81       	ldd	r16, Y+4	; 0x04
    47b8:	1b 81       	ldd	r17, Y+3	; 0x03
    47ba:	aa 81       	ldd	r26, Y+2	; 0x02
    47bc:	b9 81       	ldd	r27, Y+1	; 0x01
    47be:	ce 0f       	add	r28, r30
    47c0:	d1 1d       	adc	r29, r1
    47c2:	0f b6       	in	r0, 0x3f	; 63
    47c4:	f8 94       	cli
    47c6:	de bf       	out	0x3e, r29	; 62
    47c8:	0f be       	out	0x3f, r0	; 63
    47ca:	cd bf       	out	0x3d, r28	; 61
    47cc:	ed 01       	movw	r28, r26
    47ce:	08 95       	ret

000047d0 <strcmp>:
    47d0:	fb 01       	movw	r30, r22
    47d2:	dc 01       	movw	r26, r24
    47d4:	8d 91       	ld	r24, X+
    47d6:	01 90       	ld	r0, Z+
    47d8:	80 19       	sub	r24, r0
    47da:	01 10       	cpse	r0, r1
    47dc:	d9 f3       	breq	.-10     	; 0x47d4 <strcmp+0x4>
    47de:	99 0b       	sbc	r25, r25
    47e0:	08 95       	ret

000047e2 <_exit>:
    47e2:	f8 94       	cli

000047e4 <__stop_program>:
    47e4:	ff cf       	rjmp	.-2      	; 0x47e4 <__stop_program>

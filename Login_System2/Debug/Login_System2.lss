
Login_System2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007ad4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000bc  00800060  00007ad4  00007b68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  0080011c  0080011c  00007c24  2**0
                  ALLOC
  3 .stab         00005190  00000000  00000000  00007c24  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000da4  00000000  00000000  0000cdb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  0000db58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  0000dcb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  0000de47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  0000fe8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  00010f8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00011f10  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00012090  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  00012352  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00012be0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ed       	ldi	r30, 0xD4	; 212
      68:	fa e7       	ldi	r31, 0x7A	; 122
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 31       	cpi	r26, 0x1C	; 28
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ac e1       	ldi	r26, 0x1C	; 28
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 32       	cpi	r26, 0x2D	; 45
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 35 21 	call	0x426a	; 0x426a <main>
      8a:	0c 94 68 3d 	jmp	0x7ad0	; 0x7ad0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 31 3d 	jmp	0x7a62	; 0x7a62 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a9 ef       	ldi	r26, 0xF9	; 249
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 4d 3d 	jmp	0x7a9a	; 0x7a9a <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 3d 3d 	jmp	0x7a7a	; 0x7a7a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 59 3d 	jmp	0x7ab2	; 0x7ab2 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 3d 3d 	jmp	0x7a7a	; 0x7a7a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 59 3d 	jmp	0x7ab2	; 0x7ab2 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 31 3d 	jmp	0x7a62	; 0x7a62 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	89 ef       	ldi	r24, 0xF9	; 249
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 4d 3d 	jmp	0x7a9a	; 0x7a9a <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 39 3d 	jmp	0x7a72	; 0x7a72 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	69 ef       	ldi	r22, 0xF9	; 249
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 55 3d 	jmp	0x7aaa	; 0x7aaa <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 3d 3d 	jmp	0x7a7a	; 0x7a7a <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 59 3d 	jmp	0x7ab2	; 0x7ab2 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 3d 3d 	jmp	0x7a7a	; 0x7a7a <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 59 3d 	jmp	0x7ab2	; 0x7ab2 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 3d 3d 	jmp	0x7a7a	; 0x7a7a <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 59 3d 	jmp	0x7ab2	; 0x7ab2 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 41 3d 	jmp	0x7a82	; 0x7a82 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 5d 3d 	jmp	0x7aba	; 0x7aba <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <Adc_vidInit>:
#include"ADC_int.h"




void Adc_vidInit(void){
     c9e:	df 93       	push	r29
     ca0:	cf 93       	push	r28
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62

	CLR_BIT(ADMUX,7);	//7TH BIT REFS1	AVCC WITH EXTERNAL
     ca6:	a7 e2       	ldi	r26, 0x27	; 39
     ca8:	b0 e0       	ldi	r27, 0x00	; 0
     caa:	e7 e2       	ldi	r30, 0x27	; 39
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	80 81       	ld	r24, Z
     cb0:	8f 77       	andi	r24, 0x7F	; 127
     cb2:	8c 93       	st	X, r24
	SET_BIT(ADMUX,6);	//6TH BIT REFS0 CAPACITOR AT AREF pin
     cb4:	a7 e2       	ldi	r26, 0x27	; 39
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	e7 e2       	ldi	r30, 0x27	; 39
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	80 64       	ori	r24, 0x40	; 64
     cc0:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,5);	//RIGHT ADJUSTED IN ADLAR BIT
     cc2:	a7 e2       	ldi	r26, 0x27	; 39
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	e7 e2       	ldi	r30, 0x27	; 39
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	80 81       	ld	r24, Z
     ccc:	8f 7d       	andi	r24, 0xDF	; 223
     cce:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,4);	//ADC CHANNEL 0
     cd0:	a7 e2       	ldi	r26, 0x27	; 39
     cd2:	b0 e0       	ldi	r27, 0x00	; 0
     cd4:	e7 e2       	ldi	r30, 0x27	; 39
     cd6:	f0 e0       	ldi	r31, 0x00	; 0
     cd8:	80 81       	ld	r24, Z
     cda:	8f 7e       	andi	r24, 0xEF	; 239
     cdc:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,3);	//ADC CHANNEL 0
     cde:	a7 e2       	ldi	r26, 0x27	; 39
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	e7 e2       	ldi	r30, 0x27	; 39
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	87 7f       	andi	r24, 0xF7	; 247
     cea:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,2);	//ADC CHANNEL 0	page 212,213
     cec:	a7 e2       	ldi	r26, 0x27	; 39
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	e7 e2       	ldi	r30, 0x27	; 39
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	8b 7f       	andi	r24, 0xFB	; 251
     cf8:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,1);	//ADC CHANNEL 0
     cfa:	a7 e2       	ldi	r26, 0x27	; 39
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	e7 e2       	ldi	r30, 0x27	; 39
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	8d 7f       	andi	r24, 0xFD	; 253
     d06:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,0);	//ADC CHANNEL 0
     d08:	a7 e2       	ldi	r26, 0x27	; 39
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	e7 e2       	ldi	r30, 0x27	; 39
     d0e:	f0 e0       	ldi	r31, 0x00	; 0
     d10:	80 81       	ld	r24, Z
     d12:	8e 7f       	andi	r24, 0xFE	; 254
     d14:	8c 93       	st	X, r24

	SET_BIT(ADCSRA,7);	//ENABLE ADC ADEN
     d16:	a6 e2       	ldi	r26, 0x26	; 38
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	e6 e2       	ldi	r30, 0x26	; 38
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	80 81       	ld	r24, Z
     d20:	80 68       	ori	r24, 0x80	; 128
     d22:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,6);	//ADSC ADC START CONVERSION DISABLED
     d24:	a6 e2       	ldi	r26, 0x26	; 38
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	e6 e2       	ldi	r30, 0x26	; 38
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	8f 7b       	andi	r24, 0xBF	; 191
     d30:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,5);	//ADC AUTO TRIGGER ADATE DISABLED
     d32:	a6 e2       	ldi	r26, 0x26	; 38
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	e6 e2       	ldi	r30, 0x26	; 38
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	8f 7d       	andi	r24, 0xDF	; 223
     d3e:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,4);  //ADIF INTERRUPT FLAG CLEARED BY WRITING ONE TO IT
     d40:	a6 e2       	ldi	r26, 0x26	; 38
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	e6 e2       	ldi	r30, 0x26	; 38
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	80 81       	ld	r24, Z
     d4a:	80 61       	ori	r24, 0x10	; 16
     d4c:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,3);  //ADIE ADC INTERRUPT ENABLE CLEARED
     d4e:	a6 e2       	ldi	r26, 0x26	; 38
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	e6 e2       	ldi	r30, 0x26	; 38
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	87 7f       	andi	r24, 0xF7	; 247
     d5a:	8c 93       	st	X, r24

	CLR_BIT(ADCSRA,2);  //ADPS2		PRESCALER SELECTED TO 8 MHZ
     d5c:	a6 e2       	ldi	r26, 0x26	; 38
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
     d60:	e6 e2       	ldi	r30, 0x26	; 38
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	80 81       	ld	r24, Z
     d66:	8b 7f       	andi	r24, 0xFB	; 251
     d68:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,1);	//ADPS1		PRESCALER SELECTED TO 8 MHZ
     d6a:	a6 e2       	ldi	r26, 0x26	; 38
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	e6 e2       	ldi	r30, 0x26	; 38
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	80 81       	ld	r24, Z
     d74:	82 60       	ori	r24, 0x02	; 2
     d76:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,0);	//ADPS0		PRESCALER SELECTED TO 8 MHZ
     d78:	a6 e2       	ldi	r26, 0x26	; 38
     d7a:	b0 e0       	ldi	r27, 0x00	; 0
     d7c:	e6 e2       	ldi	r30, 0x26	; 38
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	8e 7f       	andi	r24, 0xFE	; 254
     d84:	8c 93       	st	X, r24
}
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <Adc_u16GetResult>:


u16 Adc_u16GetResult(u8 Chnl_Id){
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	00 d0       	rcall	.+0      	; 0xd92 <Adc_u16GetResult+0x6>
     d92:	0f 92       	push	r0
     d94:	cd b7       	in	r28, 0x3d	; 61
     d96:	de b7       	in	r29, 0x3e	; 62
     d98:	8b 83       	std	Y+3, r24	; 0x03
	u16 result=0;
     d9a:	1a 82       	std	Y+2, r1	; 0x02
     d9c:	19 82       	std	Y+1, r1	; 0x01
	ADMUX&=0b11100000;	//CLEAR 5 MUX BITS BEFORE SELECTING CHANNEL
     d9e:	a7 e2       	ldi	r26, 0x27	; 39
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e7 e2       	ldi	r30, 0x27	; 39
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	80 81       	ld	r24, Z
     da8:	80 7e       	andi	r24, 0xE0	; 224
     daa:	8c 93       	st	X, r24
	ADMUX|=(Chnl_Id&0b00011111);		//XOR-ING WITH OUTER 5 MUX BITS TO SELECT CHANNEL
     dac:	a7 e2       	ldi	r26, 0x27	; 39
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	e7 e2       	ldi	r30, 0x27	; 39
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	98 2f       	mov	r25, r24
     db8:	8b 81       	ldd	r24, Y+3	; 0x03
     dba:	8f 71       	andi	r24, 0x1F	; 31
     dbc:	89 2b       	or	r24, r25
     dbe:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,6); //START ADC
     dc0:	a6 e2       	ldi	r26, 0x26	; 38
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	e6 e2       	ldi	r30, 0x26	; 38
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	80 64       	ori	r24, 0x40	; 64
     dcc:	8c 93       	st	X, r24
	while(GET_BIT(ADCSRA,4)==0); //CHECK FOR ADIF FLAG
     dce:	e6 e2       	ldi	r30, 0x26	; 38
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	80 81       	ld	r24, Z
     dd4:	82 95       	swap	r24
     dd6:	8f 70       	andi	r24, 0x0F	; 15
     dd8:	88 2f       	mov	r24, r24
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	81 70       	andi	r24, 0x01	; 1
     dde:	90 70       	andi	r25, 0x00	; 0
     de0:	00 97       	sbiw	r24, 0x00	; 0
     de2:	a9 f3       	breq	.-22     	; 0xdce <Adc_u16GetResult+0x42>
	SET_BIT(ADCSRA,4);		//INTERRUPT FLAG CLEARED BY WRITING ONE
     de4:	a6 e2       	ldi	r26, 0x26	; 38
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	e6 e2       	ldi	r30, 0x26	; 38
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	80 61       	ori	r24, 0x10	; 16
     df0:	8c 93       	st	X, r24
	result=ADCL;			//RESULT CONTAINING THE LOWER 8 BITS OF THE ADC 10 BIT CHANNEL
     df2:	e4 e2       	ldi	r30, 0x24	; 36
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	80 81       	ld	r24, Z
     df8:	88 2f       	mov	r24, r24
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	9a 83       	std	Y+2, r25	; 0x02
     dfe:	89 83       	std	Y+1, r24	; 0x01
	result|=(ADCH<<8);		//RESULT CONTAINGING THE HIGHER BITS OF THE ADC 10 BIT CHANNEL BY XOR-ING THE (LEFT SHIFTED BY 8 BITS)
     e00:	e5 e2       	ldi	r30, 0x25	; 37
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	88 2f       	mov	r24, r24
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	98 2f       	mov	r25, r24
     e0c:	88 27       	eor	r24, r24
     e0e:	9c 01       	movw	r18, r24
     e10:	89 81       	ldd	r24, Y+1	; 0x01
     e12:	9a 81       	ldd	r25, Y+2	; 0x02
     e14:	82 2b       	or	r24, r18
     e16:	93 2b       	or	r25, r19
     e18:	9a 83       	std	Y+2, r25	; 0x02
     e1a:	89 83       	std	Y+1, r24	; 0x01
	return result;
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	9a 81       	ldd	r25, Y+2	; 0x02
}
     e20:	0f 90       	pop	r0
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	cf 91       	pop	r28
     e28:	df 91       	pop	r29
     e2a:	08 95       	ret

00000e2c <Dio_vidSetPinDir>:
#include"../Lib/Std_types.h"
#include"../Lib/Bit_math.h"
#include"Dio_int.h"
#include<avr/io.h>

void Dio_vidSetPinDir(u8 Pin, u8 Dir){
     e2c:	df 93       	push	r29
     e2e:	cf 93       	push	r28
     e30:	00 d0       	rcall	.+0      	; 0xe32 <Dio_vidSetPinDir+0x6>
     e32:	00 d0       	rcall	.+0      	; 0xe34 <Dio_vidSetPinDir+0x8>
     e34:	00 d0       	rcall	.+0      	; 0xe36 <Dio_vidSetPinDir+0xa>
     e36:	cd b7       	in	r28, 0x3d	; 61
     e38:	de b7       	in	r29, 0x3e	; 62
     e3a:	8b 83       	std	Y+3, r24	; 0x03
     e3c:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
     e3e:	8b 81       	ldd	r24, Y+3	; 0x03
     e40:	86 95       	lsr	r24
     e42:	86 95       	lsr	r24
     e44:	86 95       	lsr	r24
     e46:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
     e48:	8b 81       	ldd	r24, Y+3	; 0x03
     e4a:	87 70       	andi	r24, 0x07	; 7
     e4c:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
     e4e:	8a 81       	ldd	r24, Y+2	; 0x02
     e50:	28 2f       	mov	r18, r24
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	3e 83       	std	Y+6, r19	; 0x06
     e56:	2d 83       	std	Y+5, r18	; 0x05
     e58:	8d 81       	ldd	r24, Y+5	; 0x05
     e5a:	9e 81       	ldd	r25, Y+6	; 0x06
     e5c:	81 30       	cpi	r24, 0x01	; 1
     e5e:	91 05       	cpc	r25, r1
     e60:	09 f4       	brne	.+2      	; 0xe64 <Dio_vidSetPinDir+0x38>
     e62:	43 c0       	rjmp	.+134    	; 0xeea <Dio_vidSetPinDir+0xbe>
     e64:	2d 81       	ldd	r18, Y+5	; 0x05
     e66:	3e 81       	ldd	r19, Y+6	; 0x06
     e68:	22 30       	cpi	r18, 0x02	; 2
     e6a:	31 05       	cpc	r19, r1
     e6c:	2c f4       	brge	.+10     	; 0xe78 <Dio_vidSetPinDir+0x4c>
     e6e:	8d 81       	ldd	r24, Y+5	; 0x05
     e70:	9e 81       	ldd	r25, Y+6	; 0x06
     e72:	00 97       	sbiw	r24, 0x00	; 0
     e74:	71 f0       	breq	.+28     	; 0xe92 <Dio_vidSetPinDir+0x66>
     e76:	bc c0       	rjmp	.+376    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
     e78:	2d 81       	ldd	r18, Y+5	; 0x05
     e7a:	3e 81       	ldd	r19, Y+6	; 0x06
     e7c:	22 30       	cpi	r18, 0x02	; 2
     e7e:	31 05       	cpc	r19, r1
     e80:	09 f4       	brne	.+2      	; 0xe84 <Dio_vidSetPinDir+0x58>
     e82:	5f c0       	rjmp	.+190    	; 0xf42 <Dio_vidSetPinDir+0x116>
     e84:	8d 81       	ldd	r24, Y+5	; 0x05
     e86:	9e 81       	ldd	r25, Y+6	; 0x06
     e88:	83 30       	cpi	r24, 0x03	; 3
     e8a:	91 05       	cpc	r25, r1
     e8c:	09 f4       	brne	.+2      	; 0xe90 <Dio_vidSetPinDir+0x64>
     e8e:	85 c0       	rjmp	.+266    	; 0xf9a <Dio_vidSetPinDir+0x16e>
     e90:	af c0       	rjmp	.+350    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
	case 0:
		if(Dir==1){
     e92:	8c 81       	ldd	r24, Y+4	; 0x04
     e94:	81 30       	cpi	r24, 0x01	; 1
     e96:	a1 f4       	brne	.+40     	; 0xec0 <Dio_vidSetPinDir+0x94>
			SET_BIT(DDRA,PinLoc);
     e98:	aa e3       	ldi	r26, 0x3A	; 58
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	ea e3       	ldi	r30, 0x3A	; 58
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	80 81       	ld	r24, Z
     ea2:	48 2f       	mov	r20, r24
     ea4:	89 81       	ldd	r24, Y+1	; 0x01
     ea6:	28 2f       	mov	r18, r24
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	02 2e       	mov	r0, r18
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <Dio_vidSetPinDir+0x8a>
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	0a 94       	dec	r0
     eb8:	e2 f7       	brpl	.-8      	; 0xeb2 <Dio_vidSetPinDir+0x86>
     eba:	84 2b       	or	r24, r20
     ebc:	8c 93       	st	X, r24
     ebe:	98 c0       	rjmp	.+304    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRA,PinLoc);
     ec0:	aa e3       	ldi	r26, 0x3A	; 58
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	ea e3       	ldi	r30, 0x3A	; 58
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	48 2f       	mov	r20, r24
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	28 2f       	mov	r18, r24
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	02 2e       	mov	r0, r18
     ed8:	02 c0       	rjmp	.+4      	; 0xede <Dio_vidSetPinDir+0xb2>
     eda:	88 0f       	add	r24, r24
     edc:	99 1f       	adc	r25, r25
     ede:	0a 94       	dec	r0
     ee0:	e2 f7       	brpl	.-8      	; 0xeda <Dio_vidSetPinDir+0xae>
     ee2:	80 95       	com	r24
     ee4:	84 23       	and	r24, r20
     ee6:	8c 93       	st	X, r24
     ee8:	83 c0       	rjmp	.+262    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 1:
		if(Dir==1){
     eea:	8c 81       	ldd	r24, Y+4	; 0x04
     eec:	81 30       	cpi	r24, 0x01	; 1
     eee:	a1 f4       	brne	.+40     	; 0xf18 <Dio_vidSetPinDir+0xec>
			SET_BIT(DDRB,PinLoc);
     ef0:	a7 e3       	ldi	r26, 0x37	; 55
     ef2:	b0 e0       	ldi	r27, 0x00	; 0
     ef4:	e7 e3       	ldi	r30, 0x37	; 55
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	80 81       	ld	r24, Z
     efa:	48 2f       	mov	r20, r24
     efc:	89 81       	ldd	r24, Y+1	; 0x01
     efe:	28 2f       	mov	r18, r24
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	02 2e       	mov	r0, r18
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <Dio_vidSetPinDir+0xe2>
     f0a:	88 0f       	add	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	0a 94       	dec	r0
     f10:	e2 f7       	brpl	.-8      	; 0xf0a <Dio_vidSetPinDir+0xde>
     f12:	84 2b       	or	r24, r20
     f14:	8c 93       	st	X, r24
     f16:	6c c0       	rjmp	.+216    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRB,PinLoc);
     f18:	a7 e3       	ldi	r26, 0x37	; 55
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e7 e3       	ldi	r30, 0x37	; 55
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	80 81       	ld	r24, Z
     f22:	48 2f       	mov	r20, r24
     f24:	89 81       	ldd	r24, Y+1	; 0x01
     f26:	28 2f       	mov	r18, r24
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	02 2e       	mov	r0, r18
     f30:	02 c0       	rjmp	.+4      	; 0xf36 <Dio_vidSetPinDir+0x10a>
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	0a 94       	dec	r0
     f38:	e2 f7       	brpl	.-8      	; 0xf32 <Dio_vidSetPinDir+0x106>
     f3a:	80 95       	com	r24
     f3c:	84 23       	and	r24, r20
     f3e:	8c 93       	st	X, r24
     f40:	57 c0       	rjmp	.+174    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 2:
		if(Dir==1){
     f42:	8c 81       	ldd	r24, Y+4	; 0x04
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	a1 f4       	brne	.+40     	; 0xf70 <Dio_vidSetPinDir+0x144>
			SET_BIT(DDRC,PinLoc);
     f48:	a4 e3       	ldi	r26, 0x34	; 52
     f4a:	b0 e0       	ldi	r27, 0x00	; 0
     f4c:	e4 e3       	ldi	r30, 0x34	; 52
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	80 81       	ld	r24, Z
     f52:	48 2f       	mov	r20, r24
     f54:	89 81       	ldd	r24, Y+1	; 0x01
     f56:	28 2f       	mov	r18, r24
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	02 2e       	mov	r0, r18
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <Dio_vidSetPinDir+0x13a>
     f62:	88 0f       	add	r24, r24
     f64:	99 1f       	adc	r25, r25
     f66:	0a 94       	dec	r0
     f68:	e2 f7       	brpl	.-8      	; 0xf62 <Dio_vidSetPinDir+0x136>
     f6a:	84 2b       	or	r24, r20
     f6c:	8c 93       	st	X, r24
     f6e:	40 c0       	rjmp	.+128    	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRC,PinLoc);
     f70:	a4 e3       	ldi	r26, 0x34	; 52
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	e4 e3       	ldi	r30, 0x34	; 52
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	48 2f       	mov	r20, r24
     f7c:	89 81       	ldd	r24, Y+1	; 0x01
     f7e:	28 2f       	mov	r18, r24
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	02 2e       	mov	r0, r18
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <Dio_vidSetPinDir+0x162>
     f8a:	88 0f       	add	r24, r24
     f8c:	99 1f       	adc	r25, r25
     f8e:	0a 94       	dec	r0
     f90:	e2 f7       	brpl	.-8      	; 0xf8a <Dio_vidSetPinDir+0x15e>
     f92:	80 95       	com	r24
     f94:	84 23       	and	r24, r20
     f96:	8c 93       	st	X, r24
     f98:	2b c0       	rjmp	.+86     	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		break;
	case 3:
		if(Dir==1){
     f9a:	8c 81       	ldd	r24, Y+4	; 0x04
     f9c:	81 30       	cpi	r24, 0x01	; 1
     f9e:	a1 f4       	brne	.+40     	; 0xfc8 <Dio_vidSetPinDir+0x19c>
			SET_BIT(DDRD,PinLoc);
     fa0:	a1 e3       	ldi	r26, 0x31	; 49
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e1 e3       	ldi	r30, 0x31	; 49
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	48 2f       	mov	r20, r24
     fac:	89 81       	ldd	r24, Y+1	; 0x01
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	02 2e       	mov	r0, r18
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <Dio_vidSetPinDir+0x192>
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	0a 94       	dec	r0
     fc0:	e2 f7       	brpl	.-8      	; 0xfba <Dio_vidSetPinDir+0x18e>
     fc2:	84 2b       	or	r24, r20
     fc4:	8c 93       	st	X, r24
     fc6:	14 c0       	rjmp	.+40     	; 0xff0 <Dio_vidSetPinDir+0x1c4>
		}
		else {
			CLR_BIT(DDRD,PinLoc);
     fc8:	a1 e3       	ldi	r26, 0x31	; 49
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	e1 e3       	ldi	r30, 0x31	; 49
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	80 81       	ld	r24, Z
     fd2:	48 2f       	mov	r20, r24
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	28 2f       	mov	r18, r24
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	81 e0       	ldi	r24, 0x01	; 1
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	02 2e       	mov	r0, r18
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <Dio_vidSetPinDir+0x1ba>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	0a 94       	dec	r0
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <Dio_vidSetPinDir+0x1b6>
     fea:	80 95       	com	r24
     fec:	84 23       	and	r24, r20
     fee:	8c 93       	st	X, r24
		}
		break;
	}
}
     ff0:	26 96       	adiw	r28, 0x06	; 6
     ff2:	0f b6       	in	r0, 0x3f	; 63
     ff4:	f8 94       	cli
     ff6:	de bf       	out	0x3e, r29	; 62
     ff8:	0f be       	out	0x3f, r0	; 63
     ffa:	cd bf       	out	0x3d, r28	; 61
     ffc:	cf 91       	pop	r28
     ffe:	df 91       	pop	r29
    1000:	08 95       	ret

00001002 <Dio_vidSetPinVal>:

void Dio_vidSetPinVal(u8 Pin, u8 Val){
    1002:	df 93       	push	r29
    1004:	cf 93       	push	r28
    1006:	00 d0       	rcall	.+0      	; 0x1008 <Dio_vidSetPinVal+0x6>
    1008:	00 d0       	rcall	.+0      	; 0x100a <Dio_vidSetPinVal+0x8>
    100a:	00 d0       	rcall	.+0      	; 0x100c <Dio_vidSetPinVal+0xa>
    100c:	cd b7       	in	r28, 0x3d	; 61
    100e:	de b7       	in	r29, 0x3e	; 62
    1010:	8b 83       	std	Y+3, r24	; 0x03
    1012:	6c 83       	std	Y+4, r22	; 0x04
	u8 PortId;
	u8 PinLoc;
	PortId=Pin/8;
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	86 95       	lsr	r24
    1018:	86 95       	lsr	r24
    101a:	86 95       	lsr	r24
    101c:	8a 83       	std	Y+2, r24	; 0x02
	PinLoc=Pin%8;
    101e:	8b 81       	ldd	r24, Y+3	; 0x03
    1020:	87 70       	andi	r24, 0x07	; 7
    1022:	89 83       	std	Y+1, r24	; 0x01
	switch(PortId){
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	3e 83       	std	Y+6, r19	; 0x06
    102c:	2d 83       	std	Y+5, r18	; 0x05
    102e:	8d 81       	ldd	r24, Y+5	; 0x05
    1030:	9e 81       	ldd	r25, Y+6	; 0x06
    1032:	81 30       	cpi	r24, 0x01	; 1
    1034:	91 05       	cpc	r25, r1
    1036:	09 f4       	brne	.+2      	; 0x103a <Dio_vidSetPinVal+0x38>
    1038:	43 c0       	rjmp	.+134    	; 0x10c0 <Dio_vidSetPinVal+0xbe>
    103a:	2d 81       	ldd	r18, Y+5	; 0x05
    103c:	3e 81       	ldd	r19, Y+6	; 0x06
    103e:	22 30       	cpi	r18, 0x02	; 2
    1040:	31 05       	cpc	r19, r1
    1042:	2c f4       	brge	.+10     	; 0x104e <Dio_vidSetPinVal+0x4c>
    1044:	8d 81       	ldd	r24, Y+5	; 0x05
    1046:	9e 81       	ldd	r25, Y+6	; 0x06
    1048:	00 97       	sbiw	r24, 0x00	; 0
    104a:	71 f0       	breq	.+28     	; 0x1068 <Dio_vidSetPinVal+0x66>
    104c:	bc c0       	rjmp	.+376    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
    104e:	2d 81       	ldd	r18, Y+5	; 0x05
    1050:	3e 81       	ldd	r19, Y+6	; 0x06
    1052:	22 30       	cpi	r18, 0x02	; 2
    1054:	31 05       	cpc	r19, r1
    1056:	09 f4       	brne	.+2      	; 0x105a <Dio_vidSetPinVal+0x58>
    1058:	5f c0       	rjmp	.+190    	; 0x1118 <Dio_vidSetPinVal+0x116>
    105a:	8d 81       	ldd	r24, Y+5	; 0x05
    105c:	9e 81       	ldd	r25, Y+6	; 0x06
    105e:	83 30       	cpi	r24, 0x03	; 3
    1060:	91 05       	cpc	r25, r1
    1062:	09 f4       	brne	.+2      	; 0x1066 <Dio_vidSetPinVal+0x64>
    1064:	85 c0       	rjmp	.+266    	; 0x1170 <Dio_vidSetPinVal+0x16e>
    1066:	af c0       	rjmp	.+350    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
	case 0:
		if(Val==1){
    1068:	8c 81       	ldd	r24, Y+4	; 0x04
    106a:	81 30       	cpi	r24, 0x01	; 1
    106c:	a1 f4       	brne	.+40     	; 0x1096 <Dio_vidSetPinVal+0x94>
			SET_BIT(PORTA,PinLoc);
    106e:	ab e3       	ldi	r26, 0x3B	; 59
    1070:	b0 e0       	ldi	r27, 0x00	; 0
    1072:	eb e3       	ldi	r30, 0x3B	; 59
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	80 81       	ld	r24, Z
    1078:	48 2f       	mov	r20, r24
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	28 2f       	mov	r18, r24
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	02 2e       	mov	r0, r18
    1086:	02 c0       	rjmp	.+4      	; 0x108c <Dio_vidSetPinVal+0x8a>
    1088:	88 0f       	add	r24, r24
    108a:	99 1f       	adc	r25, r25
    108c:	0a 94       	dec	r0
    108e:	e2 f7       	brpl	.-8      	; 0x1088 <Dio_vidSetPinVal+0x86>
    1090:	84 2b       	or	r24, r20
    1092:	8c 93       	st	X, r24
    1094:	98 c0       	rjmp	.+304    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTA,PinLoc);
    1096:	ab e3       	ldi	r26, 0x3B	; 59
    1098:	b0 e0       	ldi	r27, 0x00	; 0
    109a:	eb e3       	ldi	r30, 0x3B	; 59
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	80 81       	ld	r24, Z
    10a0:	48 2f       	mov	r20, r24
    10a2:	89 81       	ldd	r24, Y+1	; 0x01
    10a4:	28 2f       	mov	r18, r24
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	81 e0       	ldi	r24, 0x01	; 1
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	02 2e       	mov	r0, r18
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <Dio_vidSetPinVal+0xb2>
    10b0:	88 0f       	add	r24, r24
    10b2:	99 1f       	adc	r25, r25
    10b4:	0a 94       	dec	r0
    10b6:	e2 f7       	brpl	.-8      	; 0x10b0 <Dio_vidSetPinVal+0xae>
    10b8:	80 95       	com	r24
    10ba:	84 23       	and	r24, r20
    10bc:	8c 93       	st	X, r24
    10be:	83 c0       	rjmp	.+262    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 1:
		if(Val==1){
    10c0:	8c 81       	ldd	r24, Y+4	; 0x04
    10c2:	81 30       	cpi	r24, 0x01	; 1
    10c4:	a1 f4       	brne	.+40     	; 0x10ee <Dio_vidSetPinVal+0xec>
			SET_BIT(PORTB,PinLoc);
    10c6:	a8 e3       	ldi	r26, 0x38	; 56
    10c8:	b0 e0       	ldi	r27, 0x00	; 0
    10ca:	e8 e3       	ldi	r30, 0x38	; 56
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	80 81       	ld	r24, Z
    10d0:	48 2f       	mov	r20, r24
    10d2:	89 81       	ldd	r24, Y+1	; 0x01
    10d4:	28 2f       	mov	r18, r24
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	02 2e       	mov	r0, r18
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <Dio_vidSetPinVal+0xe2>
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	0a 94       	dec	r0
    10e6:	e2 f7       	brpl	.-8      	; 0x10e0 <Dio_vidSetPinVal+0xde>
    10e8:	84 2b       	or	r24, r20
    10ea:	8c 93       	st	X, r24
    10ec:	6c c0       	rjmp	.+216    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTB,PinLoc);
    10ee:	a8 e3       	ldi	r26, 0x38	; 56
    10f0:	b0 e0       	ldi	r27, 0x00	; 0
    10f2:	e8 e3       	ldi	r30, 0x38	; 56
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	48 2f       	mov	r20, r24
    10fa:	89 81       	ldd	r24, Y+1	; 0x01
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	02 2e       	mov	r0, r18
    1106:	02 c0       	rjmp	.+4      	; 0x110c <Dio_vidSetPinVal+0x10a>
    1108:	88 0f       	add	r24, r24
    110a:	99 1f       	adc	r25, r25
    110c:	0a 94       	dec	r0
    110e:	e2 f7       	brpl	.-8      	; 0x1108 <Dio_vidSetPinVal+0x106>
    1110:	80 95       	com	r24
    1112:	84 23       	and	r24, r20
    1114:	8c 93       	st	X, r24
    1116:	57 c0       	rjmp	.+174    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 2:
		if(Val==1){
    1118:	8c 81       	ldd	r24, Y+4	; 0x04
    111a:	81 30       	cpi	r24, 0x01	; 1
    111c:	a1 f4       	brne	.+40     	; 0x1146 <Dio_vidSetPinVal+0x144>
			SET_BIT(PORTC,PinLoc);
    111e:	a5 e3       	ldi	r26, 0x35	; 53
    1120:	b0 e0       	ldi	r27, 0x00	; 0
    1122:	e5 e3       	ldi	r30, 0x35	; 53
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	80 81       	ld	r24, Z
    1128:	48 2f       	mov	r20, r24
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	28 2f       	mov	r18, r24
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	02 2e       	mov	r0, r18
    1136:	02 c0       	rjmp	.+4      	; 0x113c <Dio_vidSetPinVal+0x13a>
    1138:	88 0f       	add	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	0a 94       	dec	r0
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <Dio_vidSetPinVal+0x136>
    1140:	84 2b       	or	r24, r20
    1142:	8c 93       	st	X, r24
    1144:	40 c0       	rjmp	.+128    	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTC,PinLoc);
    1146:	a5 e3       	ldi	r26, 0x35	; 53
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	e5 e3       	ldi	r30, 0x35	; 53
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	80 81       	ld	r24, Z
    1150:	48 2f       	mov	r20, r24
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	28 2f       	mov	r18, r24
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	02 2e       	mov	r0, r18
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <Dio_vidSetPinVal+0x162>
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	0a 94       	dec	r0
    1166:	e2 f7       	brpl	.-8      	; 0x1160 <Dio_vidSetPinVal+0x15e>
    1168:	80 95       	com	r24
    116a:	84 23       	and	r24, r20
    116c:	8c 93       	st	X, r24
    116e:	2b c0       	rjmp	.+86     	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		break;
	case 3:
		if(Val==1){
    1170:	8c 81       	ldd	r24, Y+4	; 0x04
    1172:	81 30       	cpi	r24, 0x01	; 1
    1174:	a1 f4       	brne	.+40     	; 0x119e <Dio_vidSetPinVal+0x19c>
			SET_BIT(PORTD,PinLoc);
    1176:	a2 e3       	ldi	r26, 0x32	; 50
    1178:	b0 e0       	ldi	r27, 0x00	; 0
    117a:	e2 e3       	ldi	r30, 0x32	; 50
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	80 81       	ld	r24, Z
    1180:	48 2f       	mov	r20, r24
    1182:	89 81       	ldd	r24, Y+1	; 0x01
    1184:	28 2f       	mov	r18, r24
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	81 e0       	ldi	r24, 0x01	; 1
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	02 2e       	mov	r0, r18
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <Dio_vidSetPinVal+0x192>
    1190:	88 0f       	add	r24, r24
    1192:	99 1f       	adc	r25, r25
    1194:	0a 94       	dec	r0
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <Dio_vidSetPinVal+0x18e>
    1198:	84 2b       	or	r24, r20
    119a:	8c 93       	st	X, r24
    119c:	14 c0       	rjmp	.+40     	; 0x11c6 <Dio_vidSetPinVal+0x1c4>
		}
		else {
			CLR_BIT(PORTD,PinLoc);
    119e:	a2 e3       	ldi	r26, 0x32	; 50
    11a0:	b0 e0       	ldi	r27, 0x00	; 0
    11a2:	e2 e3       	ldi	r30, 0x32	; 50
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	80 81       	ld	r24, Z
    11a8:	48 2f       	mov	r20, r24
    11aa:	89 81       	ldd	r24, Y+1	; 0x01
    11ac:	28 2f       	mov	r18, r24
    11ae:	30 e0       	ldi	r19, 0x00	; 0
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	02 2e       	mov	r0, r18
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <Dio_vidSetPinVal+0x1ba>
    11b8:	88 0f       	add	r24, r24
    11ba:	99 1f       	adc	r25, r25
    11bc:	0a 94       	dec	r0
    11be:	e2 f7       	brpl	.-8      	; 0x11b8 <Dio_vidSetPinVal+0x1b6>
    11c0:	80 95       	com	r24
    11c2:	84 23       	and	r24, r20
    11c4:	8c 93       	st	X, r24
		}
		break;
	}
}
    11c6:	26 96       	adiw	r28, 0x06	; 6
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	cf 91       	pop	r28
    11d4:	df 91       	pop	r29
    11d6:	08 95       	ret

000011d8 <Keypad_vidInit>:
#undef F_CPU
#define F_CPU 8000000
#include<util/delay.h>
#include<avr/io.h>

void Keypad_vidInit(void){
    11d8:	df 93       	push	r29
    11da:	cf 93       	push	r28
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
	Keypad_PORT=0b00001111;	//Setting upper 4 bits to output and lower 4 to input
    11e0:	e1 e3       	ldi	r30, 0x31	; 49
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	8f e0       	ldi	r24, 0x0F	; 15
    11e6:	80 83       	st	Z, r24
	Keypad_PIN=0b11111111;	//Pulling up resistors for lower 4 bits and passing 5v through upper 4 bits
    11e8:	e2 e3       	ldi	r30, 0x32	; 50
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	8f ef       	ldi	r24, 0xFF	; 255
    11ee:	80 83       	st	Z, r24
	//>Indicating that we are not scanning for any button clicks right now
}
    11f0:	cf 91       	pop	r28
    11f2:	df 91       	pop	r29
    11f4:	08 95       	ret

000011f6 <Keypad_u8GetKey>:

u8 Keypad_u8GetKey(void){
    11f6:	df 93       	push	r29
    11f8:	cf 93       	push	r28
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	2a 97       	sbiw	r28, 0x0a	; 10
    1200:	0f b6       	in	r0, 0x3f	; 63
    1202:	f8 94       	cli
    1204:	de bf       	out	0x3e, r29	; 62
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	cd bf       	out	0x3d, r28	; 61
	u8 temp;
	CLR_BIT(Keypad_PIN,0);
    120a:	a2 e3       	ldi	r26, 0x32	; 50
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	e2 e3       	ldi	r30, 0x32	; 50
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	80 81       	ld	r24, Z
    1214:	8e 7f       	andi	r24, 0xFE	; 254
    1216:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    1218:	a2 e3       	ldi	r26, 0x32	; 50
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	e2 e3       	ldi	r30, 0x32	; 50
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	82 60       	ori	r24, 0x02	; 2
    1224:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    1226:	a2 e3       	ldi	r26, 0x32	; 50
    1228:	b0 e0       	ldi	r27, 0x00	; 0
    122a:	e2 e3       	ldi	r30, 0x32	; 50
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	80 81       	ld	r24, Z
    1230:	84 60       	ori	r24, 0x04	; 4
    1232:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    1234:	a2 e3       	ldi	r26, 0x32	; 50
    1236:	b0 e0       	ldi	r27, 0x00	; 0
    1238:	e2 e3       	ldi	r30, 0x32	; 50
    123a:	f0 e0       	ldi	r31, 0x00	; 0
    123c:	80 81       	ld	r24, Z
    123e:	88 60       	ori	r24, 0x08	; 8
    1240:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000); //Masking to get values of input pins solely
    1242:	e0 e3       	ldi	r30, 0x30	; 48
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	80 81       	ld	r24, Z
    1248:	80 7f       	andi	r24, 0xF0	; 240
    124a:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	28 2f       	mov	r18, r24
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	3a 87       	std	Y+10, r19	; 0x0a
    1254:	29 87       	std	Y+9, r18	; 0x09
    1256:	89 85       	ldd	r24, Y+9	; 0x09
    1258:	9a 85       	ldd	r25, Y+10	; 0x0a
    125a:	80 3b       	cpi	r24, 0xB0	; 176
    125c:	91 05       	cpc	r25, r1
    125e:	d9 f0       	breq	.+54     	; 0x1296 <Keypad_u8GetKey+0xa0>
    1260:	29 85       	ldd	r18, Y+9	; 0x09
    1262:	3a 85       	ldd	r19, Y+10	; 0x0a
    1264:	21 3b       	cpi	r18, 0xB1	; 177
    1266:	31 05       	cpc	r19, r1
    1268:	34 f4       	brge	.+12     	; 0x1276 <Keypad_u8GetKey+0x80>
    126a:	89 85       	ldd	r24, Y+9	; 0x09
    126c:	9a 85       	ldd	r25, Y+10	; 0x0a
    126e:	80 37       	cpi	r24, 0x70	; 112
    1270:	91 05       	cpc	r25, r1
    1272:	a1 f0       	breq	.+40     	; 0x129c <Keypad_u8GetKey+0xa6>
    1274:	16 c0       	rjmp	.+44     	; 0x12a2 <Keypad_u8GetKey+0xac>
    1276:	29 85       	ldd	r18, Y+9	; 0x09
    1278:	3a 85       	ldd	r19, Y+10	; 0x0a
    127a:	20 3d       	cpi	r18, 0xD0	; 208
    127c:	31 05       	cpc	r19, r1
    127e:	41 f0       	breq	.+16     	; 0x1290 <Keypad_u8GetKey+0x9a>
    1280:	89 85       	ldd	r24, Y+9	; 0x09
    1282:	9a 85       	ldd	r25, Y+10	; 0x0a
    1284:	80 3e       	cpi	r24, 0xE0	; 224
    1286:	91 05       	cpc	r25, r1
    1288:	61 f4       	brne	.+24     	; 0x12a2 <Keypad_u8GetKey+0xac>
	case 0b11100000:
		return 1;
    128a:	91 e0       	ldi	r25, 0x01	; 1
    128c:	98 87       	std	Y+8, r25	; 0x08
    128e:	ee c0       	rjmp	.+476    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 2;
    1290:	22 e0       	ldi	r18, 0x02	; 2
    1292:	28 87       	std	Y+8, r18	; 0x08
    1294:	eb c0       	rjmp	.+470    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 3;
    1296:	33 e0       	ldi	r19, 0x03	; 3
    1298:	38 87       	std	Y+8, r19	; 0x08
    129a:	e8 c0       	rjmp	.+464    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '+';
    129c:	8b e2       	ldi	r24, 0x2B	; 43
    129e:	88 87       	std	Y+8, r24	; 0x08
    12a0:	e5 c0       	rjmp	.+458    	; 0x146c <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    12a2:	a2 e3       	ldi	r26, 0x32	; 50
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	e2 e3       	ldi	r30, 0x32	; 50
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	80 81       	ld	r24, Z
    12ac:	81 60       	ori	r24, 0x01	; 1
    12ae:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,1);
    12b0:	a2 e3       	ldi	r26, 0x32	; 50
    12b2:	b0 e0       	ldi	r27, 0x00	; 0
    12b4:	e2 e3       	ldi	r30, 0x32	; 50
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	80 81       	ld	r24, Z
    12ba:	8d 7f       	andi	r24, 0xFD	; 253
    12bc:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    12be:	a2 e3       	ldi	r26, 0x32	; 50
    12c0:	b0 e0       	ldi	r27, 0x00	; 0
    12c2:	e2 e3       	ldi	r30, 0x32	; 50
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	80 81       	ld	r24, Z
    12c8:	84 60       	ori	r24, 0x04	; 4
    12ca:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    12cc:	a2 e3       	ldi	r26, 0x32	; 50
    12ce:	b0 e0       	ldi	r27, 0x00	; 0
    12d0:	e2 e3       	ldi	r30, 0x32	; 50
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	80 81       	ld	r24, Z
    12d6:	88 60       	ori	r24, 0x08	; 8
    12d8:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    12da:	e0 e3       	ldi	r30, 0x30	; 48
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	80 81       	ld	r24, Z
    12e0:	80 7f       	andi	r24, 0xF0	; 240
    12e2:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    12e4:	89 81       	ldd	r24, Y+1	; 0x01
    12e6:	28 2f       	mov	r18, r24
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	3f 83       	std	Y+7, r19	; 0x07
    12ec:	2e 83       	std	Y+6, r18	; 0x06
    12ee:	8e 81       	ldd	r24, Y+6	; 0x06
    12f0:	9f 81       	ldd	r25, Y+7	; 0x07
    12f2:	80 3b       	cpi	r24, 0xB0	; 176
    12f4:	91 05       	cpc	r25, r1
    12f6:	d9 f0       	breq	.+54     	; 0x132e <Keypad_u8GetKey+0x138>
    12f8:	2e 81       	ldd	r18, Y+6	; 0x06
    12fa:	3f 81       	ldd	r19, Y+7	; 0x07
    12fc:	21 3b       	cpi	r18, 0xB1	; 177
    12fe:	31 05       	cpc	r19, r1
    1300:	34 f4       	brge	.+12     	; 0x130e <Keypad_u8GetKey+0x118>
    1302:	8e 81       	ldd	r24, Y+6	; 0x06
    1304:	9f 81       	ldd	r25, Y+7	; 0x07
    1306:	80 37       	cpi	r24, 0x70	; 112
    1308:	91 05       	cpc	r25, r1
    130a:	a1 f0       	breq	.+40     	; 0x1334 <Keypad_u8GetKey+0x13e>
    130c:	16 c0       	rjmp	.+44     	; 0x133a <Keypad_u8GetKey+0x144>
    130e:	2e 81       	ldd	r18, Y+6	; 0x06
    1310:	3f 81       	ldd	r19, Y+7	; 0x07
    1312:	20 3d       	cpi	r18, 0xD0	; 208
    1314:	31 05       	cpc	r19, r1
    1316:	41 f0       	breq	.+16     	; 0x1328 <Keypad_u8GetKey+0x132>
    1318:	8e 81       	ldd	r24, Y+6	; 0x06
    131a:	9f 81       	ldd	r25, Y+7	; 0x07
    131c:	80 3e       	cpi	r24, 0xE0	; 224
    131e:	91 05       	cpc	r25, r1
    1320:	61 f4       	brne	.+24     	; 0x133a <Keypad_u8GetKey+0x144>
	case 0b11100000:
		return 4;
    1322:	94 e0       	ldi	r25, 0x04	; 4
    1324:	98 87       	std	Y+8, r25	; 0x08
    1326:	a2 c0       	rjmp	.+324    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 5;
    1328:	25 e0       	ldi	r18, 0x05	; 5
    132a:	28 87       	std	Y+8, r18	; 0x08
    132c:	9f c0       	rjmp	.+318    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 6;
    132e:	36 e0       	ldi	r19, 0x06	; 6
    1330:	38 87       	std	Y+8, r19	; 0x08
    1332:	9c c0       	rjmp	.+312    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '-';
    1334:	8d e2       	ldi	r24, 0x2D	; 45
    1336:	88 87       	std	Y+8, r24	; 0x08
    1338:	99 c0       	rjmp	.+306    	; 0x146c <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    133a:	a2 e3       	ldi	r26, 0x32	; 50
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	e2 e3       	ldi	r30, 0x32	; 50
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	80 81       	ld	r24, Z
    1344:	81 60       	ori	r24, 0x01	; 1
    1346:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    1348:	a2 e3       	ldi	r26, 0x32	; 50
    134a:	b0 e0       	ldi	r27, 0x00	; 0
    134c:	e2 e3       	ldi	r30, 0x32	; 50
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	80 81       	ld	r24, Z
    1352:	82 60       	ori	r24, 0x02	; 2
    1354:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,2);
    1356:	a2 e3       	ldi	r26, 0x32	; 50
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	e2 e3       	ldi	r30, 0x32	; 50
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	80 81       	ld	r24, Z
    1360:	8b 7f       	andi	r24, 0xFB	; 251
    1362:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,3);
    1364:	a2 e3       	ldi	r26, 0x32	; 50
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	e2 e3       	ldi	r30, 0x32	; 50
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	80 81       	ld	r24, Z
    136e:	88 60       	ori	r24, 0x08	; 8
    1370:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    1372:	e0 e3       	ldi	r30, 0x30	; 48
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	80 81       	ld	r24, Z
    1378:	80 7f       	andi	r24, 0xF0	; 240
    137a:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    137c:	89 81       	ldd	r24, Y+1	; 0x01
    137e:	28 2f       	mov	r18, r24
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	3d 83       	std	Y+5, r19	; 0x05
    1384:	2c 83       	std	Y+4, r18	; 0x04
    1386:	8c 81       	ldd	r24, Y+4	; 0x04
    1388:	9d 81       	ldd	r25, Y+5	; 0x05
    138a:	80 3b       	cpi	r24, 0xB0	; 176
    138c:	91 05       	cpc	r25, r1
    138e:	d9 f0       	breq	.+54     	; 0x13c6 <Keypad_u8GetKey+0x1d0>
    1390:	2c 81       	ldd	r18, Y+4	; 0x04
    1392:	3d 81       	ldd	r19, Y+5	; 0x05
    1394:	21 3b       	cpi	r18, 0xB1	; 177
    1396:	31 05       	cpc	r19, r1
    1398:	34 f4       	brge	.+12     	; 0x13a6 <Keypad_u8GetKey+0x1b0>
    139a:	8c 81       	ldd	r24, Y+4	; 0x04
    139c:	9d 81       	ldd	r25, Y+5	; 0x05
    139e:	80 37       	cpi	r24, 0x70	; 112
    13a0:	91 05       	cpc	r25, r1
    13a2:	a1 f0       	breq	.+40     	; 0x13cc <Keypad_u8GetKey+0x1d6>
    13a4:	16 c0       	rjmp	.+44     	; 0x13d2 <Keypad_u8GetKey+0x1dc>
    13a6:	2c 81       	ldd	r18, Y+4	; 0x04
    13a8:	3d 81       	ldd	r19, Y+5	; 0x05
    13aa:	20 3d       	cpi	r18, 0xD0	; 208
    13ac:	31 05       	cpc	r19, r1
    13ae:	41 f0       	breq	.+16     	; 0x13c0 <Keypad_u8GetKey+0x1ca>
    13b0:	8c 81       	ldd	r24, Y+4	; 0x04
    13b2:	9d 81       	ldd	r25, Y+5	; 0x05
    13b4:	80 3e       	cpi	r24, 0xE0	; 224
    13b6:	91 05       	cpc	r25, r1
    13b8:	61 f4       	brne	.+24     	; 0x13d2 <Keypad_u8GetKey+0x1dc>
	case 0b11100000:
		return 7;
    13ba:	97 e0       	ldi	r25, 0x07	; 7
    13bc:	98 87       	std	Y+8, r25	; 0x08
    13be:	56 c0       	rjmp	.+172    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 8;
    13c0:	28 e0       	ldi	r18, 0x08	; 8
    13c2:	28 87       	std	Y+8, r18	; 0x08
    13c4:	53 c0       	rjmp	.+166    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return 9;
    13c6:	39 e0       	ldi	r19, 0x09	; 9
    13c8:	38 87       	std	Y+8, r19	; 0x08
    13ca:	50 c0       	rjmp	.+160    	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '*';
    13cc:	8a e2       	ldi	r24, 0x2A	; 42
    13ce:	88 87       	std	Y+8, r24	; 0x08
    13d0:	4d c0       	rjmp	.+154    	; 0x146c <Keypad_u8GetKey+0x276>
	}
	SET_BIT(Keypad_PIN,0);
    13d2:	a2 e3       	ldi	r26, 0x32	; 50
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	e2 e3       	ldi	r30, 0x32	; 50
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	81 60       	ori	r24, 0x01	; 1
    13de:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,1);
    13e0:	a2 e3       	ldi	r26, 0x32	; 50
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	e2 e3       	ldi	r30, 0x32	; 50
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	82 60       	ori	r24, 0x02	; 2
    13ec:	8c 93       	st	X, r24
	SET_BIT(Keypad_PIN,2);
    13ee:	a2 e3       	ldi	r26, 0x32	; 50
    13f0:	b0 e0       	ldi	r27, 0x00	; 0
    13f2:	e2 e3       	ldi	r30, 0x32	; 50
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	84 60       	ori	r24, 0x04	; 4
    13fa:	8c 93       	st	X, r24
	CLR_BIT(Keypad_PIN,3);
    13fc:	a2 e3       	ldi	r26, 0x32	; 50
    13fe:	b0 e0       	ldi	r27, 0x00	; 0
    1400:	e2 e3       	ldi	r30, 0x32	; 50
    1402:	f0 e0       	ldi	r31, 0x00	; 0
    1404:	80 81       	ld	r24, Z
    1406:	87 7f       	andi	r24, 0xF7	; 247
    1408:	8c 93       	st	X, r24
	temp= Keypad_BIT& (0b11110000);
    140a:	e0 e3       	ldi	r30, 0x30	; 48
    140c:	f0 e0       	ldi	r31, 0x00	; 0
    140e:	80 81       	ld	r24, Z
    1410:	80 7f       	andi	r24, 0xF0	; 240
    1412:	89 83       	std	Y+1, r24	; 0x01

	switch(temp){
    1414:	89 81       	ldd	r24, Y+1	; 0x01
    1416:	28 2f       	mov	r18, r24
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	3b 83       	std	Y+3, r19	; 0x03
    141c:	2a 83       	std	Y+2, r18	; 0x02
    141e:	8a 81       	ldd	r24, Y+2	; 0x02
    1420:	9b 81       	ldd	r25, Y+3	; 0x03
    1422:	80 3b       	cpi	r24, 0xB0	; 176
    1424:	91 05       	cpc	r25, r1
    1426:	d1 f0       	breq	.+52     	; 0x145c <Keypad_u8GetKey+0x266>
    1428:	2a 81       	ldd	r18, Y+2	; 0x02
    142a:	3b 81       	ldd	r19, Y+3	; 0x03
    142c:	21 3b       	cpi	r18, 0xB1	; 177
    142e:	31 05       	cpc	r19, r1
    1430:	34 f4       	brge	.+12     	; 0x143e <Keypad_u8GetKey+0x248>
    1432:	8a 81       	ldd	r24, Y+2	; 0x02
    1434:	9b 81       	ldd	r25, Y+3	; 0x03
    1436:	80 37       	cpi	r24, 0x70	; 112
    1438:	91 05       	cpc	r25, r1
    143a:	99 f0       	breq	.+38     	; 0x1462 <Keypad_u8GetKey+0x26c>
    143c:	15 c0       	rjmp	.+42     	; 0x1468 <Keypad_u8GetKey+0x272>
    143e:	2a 81       	ldd	r18, Y+2	; 0x02
    1440:	3b 81       	ldd	r19, Y+3	; 0x03
    1442:	20 3d       	cpi	r18, 0xD0	; 208
    1444:	31 05       	cpc	r19, r1
    1446:	41 f0       	breq	.+16     	; 0x1458 <Keypad_u8GetKey+0x262>
    1448:	8a 81       	ldd	r24, Y+2	; 0x02
    144a:	9b 81       	ldd	r25, Y+3	; 0x03
    144c:	80 3e       	cpi	r24, 0xE0	; 224
    144e:	91 05       	cpc	r25, r1
    1450:	59 f4       	brne	.+22     	; 0x1468 <Keypad_u8GetKey+0x272>
	case 0b11100000:
		return '#';
    1452:	93 e2       	ldi	r25, 0x23	; 35
    1454:	98 87       	std	Y+8, r25	; 0x08
    1456:	0a c0       	rjmp	.+20     	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b11010000:
		return 0;
    1458:	18 86       	std	Y+8, r1	; 0x08
    145a:	08 c0       	rjmp	.+16     	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b10110000:
		return '=';
    145c:	2d e3       	ldi	r18, 0x3D	; 61
    145e:	28 87       	std	Y+8, r18	; 0x08
    1460:	05 c0       	rjmp	.+10     	; 0x146c <Keypad_u8GetKey+0x276>
	case 0b01110000:
		return '/';
    1462:	3f e2       	ldi	r19, 0x2F	; 47
    1464:	38 87       	std	Y+8, r19	; 0x08
    1466:	02 c0       	rjmp	.+4      	; 0x146c <Keypad_u8GetKey+0x276>
	}
	return KEYPAD_u8NO_KEY;
    1468:	8f ef       	ldi	r24, 0xFF	; 255
    146a:	88 87       	std	Y+8, r24	; 0x08
    146c:	88 85       	ldd	r24, Y+8	; 0x08
}
    146e:	2a 96       	adiw	r28, 0x0a	; 10
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	f8 94       	cli
    1474:	de bf       	out	0x3e, r29	; 62
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	cd bf       	out	0x3d, r28	; 61
    147a:	cf 91       	pop	r28
    147c:	df 91       	pop	r29
    147e:	08 95       	ret

00001480 <Lcd_vidSendCommand>:
#include"Dio_int.h"
#include"Lcd_cfg.h"
#include"Lcd_int.h"


void Lcd_vidSendCommand(u8 Cmd){
    1480:	df 93       	push	r29
    1482:	cf 93       	push	r28
    1484:	cd b7       	in	r28, 0x3d	; 61
    1486:	de b7       	in	r29, 0x3e	; 62
    1488:	2f 97       	sbiw	r28, 0x0f	; 15
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	f8 94       	cli
    148e:	de bf       	out	0x3e, r29	; 62
    1490:	0f be       	out	0x3f, r0	; 63
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	8f 87       	std	Y+15, r24	; 0x0f

	Dio_vidSetPinVal(LCD_u8RS_PIN,DIO_u8LOW);  //RS Pin cleared
    1496:	80 e0       	ldi	r24, 0x00	; 0
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN,DIO_u8LOW);  //RW Pin cleared because we always wanna write
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D0_PIN,GET_BIT(Cmd,0));
    14a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    14a8:	98 2f       	mov	r25, r24
    14aa:	91 70       	andi	r25, 0x01	; 1
    14ac:	80 e1       	ldi	r24, 0x10	; 16
    14ae:	69 2f       	mov	r22, r25
    14b0:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN,GET_BIT(Cmd,1));
    14b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    14b6:	86 95       	lsr	r24
    14b8:	98 2f       	mov	r25, r24
    14ba:	91 70       	andi	r25, 0x01	; 1
    14bc:	81 e1       	ldi	r24, 0x11	; 17
    14be:	69 2f       	mov	r22, r25
    14c0:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN,GET_BIT(Cmd,2));
    14c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    14c6:	86 95       	lsr	r24
    14c8:	86 95       	lsr	r24
    14ca:	98 2f       	mov	r25, r24
    14cc:	91 70       	andi	r25, 0x01	; 1
    14ce:	82 e1       	ldi	r24, 0x12	; 18
    14d0:	69 2f       	mov	r22, r25
    14d2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN,GET_BIT(Cmd,3));
    14d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    14d8:	86 95       	lsr	r24
    14da:	86 95       	lsr	r24
    14dc:	86 95       	lsr	r24
    14de:	98 2f       	mov	r25, r24
    14e0:	91 70       	andi	r25, 0x01	; 1
    14e2:	83 e1       	ldi	r24, 0x13	; 19
    14e4:	69 2f       	mov	r22, r25
    14e6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN,GET_BIT(Cmd,4));
    14ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    14ec:	82 95       	swap	r24
    14ee:	8f 70       	andi	r24, 0x0F	; 15
    14f0:	98 2f       	mov	r25, r24
    14f2:	91 70       	andi	r25, 0x01	; 1
    14f4:	84 e1       	ldi	r24, 0x14	; 20
    14f6:	69 2f       	mov	r22, r25
    14f8:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN,GET_BIT(Cmd,5));
    14fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14fe:	82 95       	swap	r24
    1500:	86 95       	lsr	r24
    1502:	87 70       	andi	r24, 0x07	; 7
    1504:	98 2f       	mov	r25, r24
    1506:	91 70       	andi	r25, 0x01	; 1
    1508:	85 e1       	ldi	r24, 0x15	; 21
    150a:	69 2f       	mov	r22, r25
    150c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN,GET_BIT(Cmd,6));
    1510:	8f 85       	ldd	r24, Y+15	; 0x0f
    1512:	82 95       	swap	r24
    1514:	86 95       	lsr	r24
    1516:	86 95       	lsr	r24
    1518:	83 70       	andi	r24, 0x03	; 3
    151a:	98 2f       	mov	r25, r24
    151c:	91 70       	andi	r25, 0x01	; 1
    151e:	86 e1       	ldi	r24, 0x16	; 22
    1520:	69 2f       	mov	r22, r25
    1522:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN,GET_BIT(Cmd,7));
    1526:	8f 85       	ldd	r24, Y+15	; 0x0f
    1528:	98 2f       	mov	r25, r24
    152a:	99 1f       	adc	r25, r25
    152c:	99 27       	eor	r25, r25
    152e:	99 1f       	adc	r25, r25
    1530:	87 e1       	ldi	r24, 0x17	; 23
    1532:	69 2f       	mov	r22, r25
    1534:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>

	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8HIGH); //EN
    1538:	82 e0       	ldi	r24, 0x02	; 2
    153a:	61 e0       	ldi	r22, 0x01	; 1
    153c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	a0 e0       	ldi	r26, 0x00	; 0
    1546:	b0 e4       	ldi	r27, 0x40	; 64
    1548:	8b 87       	std	Y+11, r24	; 0x0b
    154a:	9c 87       	std	Y+12, r25	; 0x0c
    154c:	ad 87       	std	Y+13, r26	; 0x0d
    154e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1550:	6b 85       	ldd	r22, Y+11	; 0x0b
    1552:	7c 85       	ldd	r23, Y+12	; 0x0c
    1554:	8d 85       	ldd	r24, Y+13	; 0x0d
    1556:	9e 85       	ldd	r25, Y+14	; 0x0e
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	4a ef       	ldi	r20, 0xFA	; 250
    155e:	54 e4       	ldi	r21, 0x44	; 68
    1560:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	8f 83       	std	Y+7, r24	; 0x07
    156a:	98 87       	std	Y+8, r25	; 0x08
    156c:	a9 87       	std	Y+9, r26	; 0x09
    156e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1570:	6f 81       	ldd	r22, Y+7	; 0x07
    1572:	78 85       	ldd	r23, Y+8	; 0x08
    1574:	89 85       	ldd	r24, Y+9	; 0x09
    1576:	9a 85       	ldd	r25, Y+10	; 0x0a
    1578:	20 e0       	ldi	r18, 0x00	; 0
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	40 e8       	ldi	r20, 0x80	; 128
    157e:	5f e3       	ldi	r21, 0x3F	; 63
    1580:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1584:	88 23       	and	r24, r24
    1586:	2c f4       	brge	.+10     	; 0x1592 <Lcd_vidSendCommand+0x112>
		__ticks = 1;
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	9e 83       	std	Y+6, r25	; 0x06
    158e:	8d 83       	std	Y+5, r24	; 0x05
    1590:	3f c0       	rjmp	.+126    	; 0x1610 <Lcd_vidSendCommand+0x190>
	else if (__tmp > 65535)
    1592:	6f 81       	ldd	r22, Y+7	; 0x07
    1594:	78 85       	ldd	r23, Y+8	; 0x08
    1596:	89 85       	ldd	r24, Y+9	; 0x09
    1598:	9a 85       	ldd	r25, Y+10	; 0x0a
    159a:	20 e0       	ldi	r18, 0x00	; 0
    159c:	3f ef       	ldi	r19, 0xFF	; 255
    159e:	4f e7       	ldi	r20, 0x7F	; 127
    15a0:	57 e4       	ldi	r21, 0x47	; 71
    15a2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    15a6:	18 16       	cp	r1, r24
    15a8:	4c f5       	brge	.+82     	; 0x15fc <Lcd_vidSendCommand+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15aa:	6b 85       	ldd	r22, Y+11	; 0x0b
    15ac:	7c 85       	ldd	r23, Y+12	; 0x0c
    15ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    15b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    15b2:	20 e0       	ldi	r18, 0x00	; 0
    15b4:	30 e0       	ldi	r19, 0x00	; 0
    15b6:	40 e2       	ldi	r20, 0x20	; 32
    15b8:	51 e4       	ldi	r21, 0x41	; 65
    15ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15be:	dc 01       	movw	r26, r24
    15c0:	cb 01       	movw	r24, r22
    15c2:	bc 01       	movw	r22, r24
    15c4:	cd 01       	movw	r24, r26
    15c6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ca:	dc 01       	movw	r26, r24
    15cc:	cb 01       	movw	r24, r22
    15ce:	9e 83       	std	Y+6, r25	; 0x06
    15d0:	8d 83       	std	Y+5, r24	; 0x05
    15d2:	0f c0       	rjmp	.+30     	; 0x15f2 <Lcd_vidSendCommand+0x172>
    15d4:	88 ec       	ldi	r24, 0xC8	; 200
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	9c 83       	std	Y+4, r25	; 0x04
    15da:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15dc:	8b 81       	ldd	r24, Y+3	; 0x03
    15de:	9c 81       	ldd	r25, Y+4	; 0x04
    15e0:	01 97       	sbiw	r24, 0x01	; 1
    15e2:	f1 f7       	brne	.-4      	; 0x15e0 <Lcd_vidSendCommand+0x160>
    15e4:	9c 83       	std	Y+4, r25	; 0x04
    15e6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e8:	8d 81       	ldd	r24, Y+5	; 0x05
    15ea:	9e 81       	ldd	r25, Y+6	; 0x06
    15ec:	01 97       	sbiw	r24, 0x01	; 1
    15ee:	9e 83       	std	Y+6, r25	; 0x06
    15f0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15f2:	8d 81       	ldd	r24, Y+5	; 0x05
    15f4:	9e 81       	ldd	r25, Y+6	; 0x06
    15f6:	00 97       	sbiw	r24, 0x00	; 0
    15f8:	69 f7       	brne	.-38     	; 0x15d4 <Lcd_vidSendCommand+0x154>
    15fa:	14 c0       	rjmp	.+40     	; 0x1624 <Lcd_vidSendCommand+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15fc:	6f 81       	ldd	r22, Y+7	; 0x07
    15fe:	78 85       	ldd	r23, Y+8	; 0x08
    1600:	89 85       	ldd	r24, Y+9	; 0x09
    1602:	9a 85       	ldd	r25, Y+10	; 0x0a
    1604:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	9e 83       	std	Y+6, r25	; 0x06
    160e:	8d 83       	std	Y+5, r24	; 0x05
    1610:	8d 81       	ldd	r24, Y+5	; 0x05
    1612:	9e 81       	ldd	r25, Y+6	; 0x06
    1614:	9a 83       	std	Y+2, r25	; 0x02
    1616:	89 83       	std	Y+1, r24	; 0x01
    1618:	89 81       	ldd	r24, Y+1	; 0x01
    161a:	9a 81       	ldd	r25, Y+2	; 0x02
    161c:	01 97       	sbiw	r24, 0x01	; 1
    161e:	f1 f7       	brne	.-4      	; 0x161c <Lcd_vidSendCommand+0x19c>
    1620:	9a 83       	std	Y+2, r25	; 0x02
    1622:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8LOW); //EN
    1624:	82 e0       	ldi	r24, 0x02	; 2
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
}
    162c:	2f 96       	adiw	r28, 0x0f	; 15
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	f8 94       	cli
    1632:	de bf       	out	0x3e, r29	; 62
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	cd bf       	out	0x3d, r28	; 61
    1638:	cf 91       	pop	r28
    163a:	df 91       	pop	r29
    163c:	08 95       	ret

0000163e <Lcd_vidWriteChar>:

void Lcd_vidWriteChar(u8 Char){
    163e:	df 93       	push	r29
    1640:	cf 93       	push	r28
    1642:	cd b7       	in	r28, 0x3d	; 61
    1644:	de b7       	in	r29, 0x3e	; 62
    1646:	2f 97       	sbiw	r28, 0x0f	; 15
    1648:	0f b6       	in	r0, 0x3f	; 63
    164a:	f8 94       	cli
    164c:	de bf       	out	0x3e, r29	; 62
    164e:	0f be       	out	0x3f, r0	; 63
    1650:	cd bf       	out	0x3d, r28	; 61
    1652:	8f 87       	std	Y+15, r24	; 0x0f
	Dio_vidSetPinVal(LCD_u8RS_PIN,DIO_u8HIGH);  //RS Pin set
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	61 e0       	ldi	r22, 0x01	; 1
    1658:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8RW_PIN,DIO_u8LOW);  //RW Pin cleared because we always wanna write
    165c:	81 e0       	ldi	r24, 0x01	; 1
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D0_PIN,GET_BIT(Char,0));
    1664:	8f 85       	ldd	r24, Y+15	; 0x0f
    1666:	98 2f       	mov	r25, r24
    1668:	91 70       	andi	r25, 0x01	; 1
    166a:	80 e1       	ldi	r24, 0x10	; 16
    166c:	69 2f       	mov	r22, r25
    166e:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D1_PIN,GET_BIT(Char,1));
    1672:	8f 85       	ldd	r24, Y+15	; 0x0f
    1674:	86 95       	lsr	r24
    1676:	98 2f       	mov	r25, r24
    1678:	91 70       	andi	r25, 0x01	; 1
    167a:	81 e1       	ldi	r24, 0x11	; 17
    167c:	69 2f       	mov	r22, r25
    167e:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D2_PIN,GET_BIT(Char,2));
    1682:	8f 85       	ldd	r24, Y+15	; 0x0f
    1684:	86 95       	lsr	r24
    1686:	86 95       	lsr	r24
    1688:	98 2f       	mov	r25, r24
    168a:	91 70       	andi	r25, 0x01	; 1
    168c:	82 e1       	ldi	r24, 0x12	; 18
    168e:	69 2f       	mov	r22, r25
    1690:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D3_PIN,GET_BIT(Char,3));
    1694:	8f 85       	ldd	r24, Y+15	; 0x0f
    1696:	86 95       	lsr	r24
    1698:	86 95       	lsr	r24
    169a:	86 95       	lsr	r24
    169c:	98 2f       	mov	r25, r24
    169e:	91 70       	andi	r25, 0x01	; 1
    16a0:	83 e1       	ldi	r24, 0x13	; 19
    16a2:	69 2f       	mov	r22, r25
    16a4:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D4_PIN,GET_BIT(Char,4));
    16a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    16aa:	82 95       	swap	r24
    16ac:	8f 70       	andi	r24, 0x0F	; 15
    16ae:	98 2f       	mov	r25, r24
    16b0:	91 70       	andi	r25, 0x01	; 1
    16b2:	84 e1       	ldi	r24, 0x14	; 20
    16b4:	69 2f       	mov	r22, r25
    16b6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D5_PIN,GET_BIT(Char,5));
    16ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    16bc:	82 95       	swap	r24
    16be:	86 95       	lsr	r24
    16c0:	87 70       	andi	r24, 0x07	; 7
    16c2:	98 2f       	mov	r25, r24
    16c4:	91 70       	andi	r25, 0x01	; 1
    16c6:	85 e1       	ldi	r24, 0x15	; 21
    16c8:	69 2f       	mov	r22, r25
    16ca:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D6_PIN,GET_BIT(Char,6));
    16ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    16d0:	82 95       	swap	r24
    16d2:	86 95       	lsr	r24
    16d4:	86 95       	lsr	r24
    16d6:	83 70       	andi	r24, 0x03	; 3
    16d8:	98 2f       	mov	r25, r24
    16da:	91 70       	andi	r25, 0x01	; 1
    16dc:	86 e1       	ldi	r24, 0x16	; 22
    16de:	69 2f       	mov	r22, r25
    16e0:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8D7_PIN,GET_BIT(Char,7));
    16e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    16e6:	98 2f       	mov	r25, r24
    16e8:	99 1f       	adc	r25, r25
    16ea:	99 27       	eor	r25, r25
    16ec:	99 1f       	adc	r25, r25
    16ee:	87 e1       	ldi	r24, 0x17	; 23
    16f0:	69 2f       	mov	r22, r25
    16f2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8HIGH);   //EN
    16f6:	82 e0       	ldi	r24, 0x02	; 2
    16f8:	61 e0       	ldi	r22, 0x01	; 1
    16fa:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	a0 e0       	ldi	r26, 0x00	; 0
    1704:	b0 e4       	ldi	r27, 0x40	; 64
    1706:	8b 87       	std	Y+11, r24	; 0x0b
    1708:	9c 87       	std	Y+12, r25	; 0x0c
    170a:	ad 87       	std	Y+13, r26	; 0x0d
    170c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    170e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1710:	7c 85       	ldd	r23, Y+12	; 0x0c
    1712:	8d 85       	ldd	r24, Y+13	; 0x0d
    1714:	9e 85       	ldd	r25, Y+14	; 0x0e
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	4a ef       	ldi	r20, 0xFA	; 250
    171c:	54 e4       	ldi	r21, 0x44	; 68
    171e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	8f 83       	std	Y+7, r24	; 0x07
    1728:	98 87       	std	Y+8, r25	; 0x08
    172a:	a9 87       	std	Y+9, r26	; 0x09
    172c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    172e:	6f 81       	ldd	r22, Y+7	; 0x07
    1730:	78 85       	ldd	r23, Y+8	; 0x08
    1732:	89 85       	ldd	r24, Y+9	; 0x09
    1734:	9a 85       	ldd	r25, Y+10	; 0x0a
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	40 e8       	ldi	r20, 0x80	; 128
    173c:	5f e3       	ldi	r21, 0x3F	; 63
    173e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1742:	88 23       	and	r24, r24
    1744:	2c f4       	brge	.+10     	; 0x1750 <Lcd_vidWriteChar+0x112>
		__ticks = 1;
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	9e 83       	std	Y+6, r25	; 0x06
    174c:	8d 83       	std	Y+5, r24	; 0x05
    174e:	3f c0       	rjmp	.+126    	; 0x17ce <Lcd_vidWriteChar+0x190>
	else if (__tmp > 65535)
    1750:	6f 81       	ldd	r22, Y+7	; 0x07
    1752:	78 85       	ldd	r23, Y+8	; 0x08
    1754:	89 85       	ldd	r24, Y+9	; 0x09
    1756:	9a 85       	ldd	r25, Y+10	; 0x0a
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	3f ef       	ldi	r19, 0xFF	; 255
    175c:	4f e7       	ldi	r20, 0x7F	; 127
    175e:	57 e4       	ldi	r21, 0x47	; 71
    1760:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1764:	18 16       	cp	r1, r24
    1766:	4c f5       	brge	.+82     	; 0x17ba <Lcd_vidWriteChar+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1768:	6b 85       	ldd	r22, Y+11	; 0x0b
    176a:	7c 85       	ldd	r23, Y+12	; 0x0c
    176c:	8d 85       	ldd	r24, Y+13	; 0x0d
    176e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	40 e2       	ldi	r20, 0x20	; 32
    1776:	51 e4       	ldi	r21, 0x41	; 65
    1778:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	bc 01       	movw	r22, r24
    1782:	cd 01       	movw	r24, r26
    1784:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1788:	dc 01       	movw	r26, r24
    178a:	cb 01       	movw	r24, r22
    178c:	9e 83       	std	Y+6, r25	; 0x06
    178e:	8d 83       	std	Y+5, r24	; 0x05
    1790:	0f c0       	rjmp	.+30     	; 0x17b0 <Lcd_vidWriteChar+0x172>
    1792:	88 ec       	ldi	r24, 0xC8	; 200
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	9c 83       	std	Y+4, r25	; 0x04
    1798:	8b 83       	std	Y+3, r24	; 0x03
    179a:	8b 81       	ldd	r24, Y+3	; 0x03
    179c:	9c 81       	ldd	r25, Y+4	; 0x04
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	f1 f7       	brne	.-4      	; 0x179e <Lcd_vidWriteChar+0x160>
    17a2:	9c 83       	std	Y+4, r25	; 0x04
    17a4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17a6:	8d 81       	ldd	r24, Y+5	; 0x05
    17a8:	9e 81       	ldd	r25, Y+6	; 0x06
    17aa:	01 97       	sbiw	r24, 0x01	; 1
    17ac:	9e 83       	std	Y+6, r25	; 0x06
    17ae:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b0:	8d 81       	ldd	r24, Y+5	; 0x05
    17b2:	9e 81       	ldd	r25, Y+6	; 0x06
    17b4:	00 97       	sbiw	r24, 0x00	; 0
    17b6:	69 f7       	brne	.-38     	; 0x1792 <Lcd_vidWriteChar+0x154>
    17b8:	14 c0       	rjmp	.+40     	; 0x17e2 <Lcd_vidWriteChar+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ba:	6f 81       	ldd	r22, Y+7	; 0x07
    17bc:	78 85       	ldd	r23, Y+8	; 0x08
    17be:	89 85       	ldd	r24, Y+9	; 0x09
    17c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    17c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	9e 83       	std	Y+6, r25	; 0x06
    17cc:	8d 83       	std	Y+5, r24	; 0x05
    17ce:	8d 81       	ldd	r24, Y+5	; 0x05
    17d0:	9e 81       	ldd	r25, Y+6	; 0x06
    17d2:	9a 83       	std	Y+2, r25	; 0x02
    17d4:	89 83       	std	Y+1, r24	; 0x01
    17d6:	89 81       	ldd	r24, Y+1	; 0x01
    17d8:	9a 81       	ldd	r25, Y+2	; 0x02
    17da:	01 97       	sbiw	r24, 0x01	; 1
    17dc:	f1 f7       	brne	.-4      	; 0x17da <Lcd_vidWriteChar+0x19c>
    17de:	9a 83       	std	Y+2, r25	; 0x02
    17e0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	Dio_vidSetPinVal(LCD_u8EN_PIN,DIO_u8LOW);   //EN
    17e2:	82 e0       	ldi	r24, 0x02	; 2
    17e4:	60 e0       	ldi	r22, 0x00	; 0
    17e6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
}
    17ea:	2f 96       	adiw	r28, 0x0f	; 15
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	f8 94       	cli
    17f0:	de bf       	out	0x3e, r29	; 62
    17f2:	0f be       	out	0x3f, r0	; 63
    17f4:	cd bf       	out	0x3d, r28	; 61
    17f6:	cf 91       	pop	r28
    17f8:	df 91       	pop	r29
    17fa:	08 95       	ret

000017fc <Lcd_vidInit>:

void Lcd_vidInit(void){
    17fc:	df 93       	push	r29
    17fe:	cf 93       	push	r28
    1800:	cd b7       	in	r28, 0x3d	; 61
    1802:	de b7       	in	r29, 0x3e	; 62
    1804:	aa 97       	sbiw	r28, 0x2a	; 42
    1806:	0f b6       	in	r0, 0x3f	; 63
    1808:	f8 94       	cli
    180a:	de bf       	out	0x3e, r29	; 62
    180c:	0f be       	out	0x3f, r0	; 63
    180e:	cd bf       	out	0x3d, r28	; 61

	Dio_vidSetPinDir(LCD_u8RS_PIN,DIO_u8OUTPUT);
    1810:	80 e0       	ldi	r24, 0x00	; 0
    1812:	61 e0       	ldi	r22, 0x01	; 1
    1814:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8RW_PIN,DIO_u8OUTPUT);
    1818:	81 e0       	ldi	r24, 0x01	; 1
    181a:	61 e0       	ldi	r22, 0x01	; 1
    181c:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8EN_PIN,DIO_u8OUTPUT);
    1820:	82 e0       	ldi	r24, 0x02	; 2
    1822:	61 e0       	ldi	r22, 0x01	; 1
    1824:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>

	Dio_vidSetPinDir(LCD_u8D0_PIN,DIO_u8OUTPUT);
    1828:	80 e1       	ldi	r24, 0x10	; 16
    182a:	61 e0       	ldi	r22, 0x01	; 1
    182c:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D1_PIN,DIO_u8OUTPUT);
    1830:	81 e1       	ldi	r24, 0x11	; 17
    1832:	61 e0       	ldi	r22, 0x01	; 1
    1834:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D2_PIN,DIO_u8OUTPUT);
    1838:	82 e1       	ldi	r24, 0x12	; 18
    183a:	61 e0       	ldi	r22, 0x01	; 1
    183c:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D3_PIN,DIO_u8OUTPUT);
    1840:	83 e1       	ldi	r24, 0x13	; 19
    1842:	61 e0       	ldi	r22, 0x01	; 1
    1844:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D4_PIN,DIO_u8OUTPUT);
    1848:	84 e1       	ldi	r24, 0x14	; 20
    184a:	61 e0       	ldi	r22, 0x01	; 1
    184c:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D5_PIN,DIO_u8OUTPUT);
    1850:	85 e1       	ldi	r24, 0x15	; 21
    1852:	61 e0       	ldi	r22, 0x01	; 1
    1854:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D6_PIN,DIO_u8OUTPUT);
    1858:	86 e1       	ldi	r24, 0x16	; 22
    185a:	61 e0       	ldi	r22, 0x01	; 1
    185c:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(LCD_u8D7_PIN,DIO_u8OUTPUT);
    1860:	87 e1       	ldi	r24, 0x17	; 23
    1862:	61 e0       	ldi	r22, 0x01	; 1
    1864:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>




	Lcd_vidSendCommand(LCD_u8_CMD_8_BIT_2x16_5x7); 	 //Function Set 8bit 2 line 5x7
    1868:	88 e3       	ldi	r24, 0x38	; 56
    186a:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
    186e:	80 e0       	ldi	r24, 0x00	; 0
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	a0 e0       	ldi	r26, 0x00	; 0
    1874:	b0 e4       	ldi	r27, 0x40	; 64
    1876:	8f a3       	std	Y+39, r24	; 0x27
    1878:	98 a7       	std	Y+40, r25	; 0x28
    187a:	a9 a7       	std	Y+41, r26	; 0x29
    187c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    187e:	6f a1       	ldd	r22, Y+39	; 0x27
    1880:	78 a5       	ldd	r23, Y+40	; 0x28
    1882:	89 a5       	ldd	r24, Y+41	; 0x29
    1884:	9a a5       	ldd	r25, Y+42	; 0x2a
    1886:	20 e0       	ldi	r18, 0x00	; 0
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	4a ef       	ldi	r20, 0xFA	; 250
    188c:	54 e4       	ldi	r21, 0x44	; 68
    188e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1892:	dc 01       	movw	r26, r24
    1894:	cb 01       	movw	r24, r22
    1896:	8b a3       	std	Y+35, r24	; 0x23
    1898:	9c a3       	std	Y+36, r25	; 0x24
    189a:	ad a3       	std	Y+37, r26	; 0x25
    189c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    189e:	6b a1       	ldd	r22, Y+35	; 0x23
    18a0:	7c a1       	ldd	r23, Y+36	; 0x24
    18a2:	8d a1       	ldd	r24, Y+37	; 0x25
    18a4:	9e a1       	ldd	r25, Y+38	; 0x26
    18a6:	20 e0       	ldi	r18, 0x00	; 0
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	40 e8       	ldi	r20, 0x80	; 128
    18ac:	5f e3       	ldi	r21, 0x3F	; 63
    18ae:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    18b2:	88 23       	and	r24, r24
    18b4:	2c f4       	brge	.+10     	; 0x18c0 <Lcd_vidInit+0xc4>
		__ticks = 1;
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	9a a3       	std	Y+34, r25	; 0x22
    18bc:	89 a3       	std	Y+33, r24	; 0x21
    18be:	3f c0       	rjmp	.+126    	; 0x193e <Lcd_vidInit+0x142>
	else if (__tmp > 65535)
    18c0:	6b a1       	ldd	r22, Y+35	; 0x23
    18c2:	7c a1       	ldd	r23, Y+36	; 0x24
    18c4:	8d a1       	ldd	r24, Y+37	; 0x25
    18c6:	9e a1       	ldd	r25, Y+38	; 0x26
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	3f ef       	ldi	r19, 0xFF	; 255
    18cc:	4f e7       	ldi	r20, 0x7F	; 127
    18ce:	57 e4       	ldi	r21, 0x47	; 71
    18d0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    18d4:	18 16       	cp	r1, r24
    18d6:	4c f5       	brge	.+82     	; 0x192a <Lcd_vidInit+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18d8:	6f a1       	ldd	r22, Y+39	; 0x27
    18da:	78 a5       	ldd	r23, Y+40	; 0x28
    18dc:	89 a5       	ldd	r24, Y+41	; 0x29
    18de:	9a a5       	ldd	r25, Y+42	; 0x2a
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	40 e2       	ldi	r20, 0x20	; 32
    18e6:	51 e4       	ldi	r21, 0x41	; 65
    18e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18ec:	dc 01       	movw	r26, r24
    18ee:	cb 01       	movw	r24, r22
    18f0:	bc 01       	movw	r22, r24
    18f2:	cd 01       	movw	r24, r26
    18f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18f8:	dc 01       	movw	r26, r24
    18fa:	cb 01       	movw	r24, r22
    18fc:	9a a3       	std	Y+34, r25	; 0x22
    18fe:	89 a3       	std	Y+33, r24	; 0x21
    1900:	0f c0       	rjmp	.+30     	; 0x1920 <Lcd_vidInit+0x124>
    1902:	88 ec       	ldi	r24, 0xC8	; 200
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	98 a3       	std	Y+32, r25	; 0x20
    1908:	8f 8f       	std	Y+31, r24	; 0x1f
    190a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    190c:	98 a1       	ldd	r25, Y+32	; 0x20
    190e:	01 97       	sbiw	r24, 0x01	; 1
    1910:	f1 f7       	brne	.-4      	; 0x190e <Lcd_vidInit+0x112>
    1912:	98 a3       	std	Y+32, r25	; 0x20
    1914:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1916:	89 a1       	ldd	r24, Y+33	; 0x21
    1918:	9a a1       	ldd	r25, Y+34	; 0x22
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	9a a3       	std	Y+34, r25	; 0x22
    191e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1920:	89 a1       	ldd	r24, Y+33	; 0x21
    1922:	9a a1       	ldd	r25, Y+34	; 0x22
    1924:	00 97       	sbiw	r24, 0x00	; 0
    1926:	69 f7       	brne	.-38     	; 0x1902 <Lcd_vidInit+0x106>
    1928:	14 c0       	rjmp	.+40     	; 0x1952 <Lcd_vidInit+0x156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    192a:	6b a1       	ldd	r22, Y+35	; 0x23
    192c:	7c a1       	ldd	r23, Y+36	; 0x24
    192e:	8d a1       	ldd	r24, Y+37	; 0x25
    1930:	9e a1       	ldd	r25, Y+38	; 0x26
    1932:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	9a a3       	std	Y+34, r25	; 0x22
    193c:	89 a3       	std	Y+33, r24	; 0x21
    193e:	89 a1       	ldd	r24, Y+33	; 0x21
    1940:	9a a1       	ldd	r25, Y+34	; 0x22
    1942:	9e 8f       	std	Y+30, r25	; 0x1e
    1944:	8d 8f       	std	Y+29, r24	; 0x1d
    1946:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1948:	9e 8d       	ldd	r25, Y+30	; 0x1e
    194a:	01 97       	sbiw	r24, 0x01	; 1
    194c:	f1 f7       	brne	.-4      	; 0x194a <Lcd_vidInit+0x14e>
    194e:	9e 8f       	std	Y+30, r25	; 0x1e
    1950:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8_CMD_DISP_ON_CURS_OFF); 	//Display ON Cursor OFF
    1952:	8c e0       	ldi	r24, 0x0C	; 12
    1954:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	a0 e0       	ldi	r26, 0x00	; 0
    195e:	b0 e4       	ldi	r27, 0x40	; 64
    1960:	89 8f       	std	Y+25, r24	; 0x19
    1962:	9a 8f       	std	Y+26, r25	; 0x1a
    1964:	ab 8f       	std	Y+27, r26	; 0x1b
    1966:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1968:	69 8d       	ldd	r22, Y+25	; 0x19
    196a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    196c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    196e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	4a ef       	ldi	r20, 0xFA	; 250
    1976:	54 e4       	ldi	r21, 0x44	; 68
    1978:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    197c:	dc 01       	movw	r26, r24
    197e:	cb 01       	movw	r24, r22
    1980:	8d 8b       	std	Y+21, r24	; 0x15
    1982:	9e 8b       	std	Y+22, r25	; 0x16
    1984:	af 8b       	std	Y+23, r26	; 0x17
    1986:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1988:	6d 89       	ldd	r22, Y+21	; 0x15
    198a:	7e 89       	ldd	r23, Y+22	; 0x16
    198c:	8f 89       	ldd	r24, Y+23	; 0x17
    198e:	98 8d       	ldd	r25, Y+24	; 0x18
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	40 e8       	ldi	r20, 0x80	; 128
    1996:	5f e3       	ldi	r21, 0x3F	; 63
    1998:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    199c:	88 23       	and	r24, r24
    199e:	2c f4       	brge	.+10     	; 0x19aa <Lcd_vidInit+0x1ae>
		__ticks = 1;
    19a0:	81 e0       	ldi	r24, 0x01	; 1
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	9c 8b       	std	Y+20, r25	; 0x14
    19a6:	8b 8b       	std	Y+19, r24	; 0x13
    19a8:	3f c0       	rjmp	.+126    	; 0x1a28 <Lcd_vidInit+0x22c>
	else if (__tmp > 65535)
    19aa:	6d 89       	ldd	r22, Y+21	; 0x15
    19ac:	7e 89       	ldd	r23, Y+22	; 0x16
    19ae:	8f 89       	ldd	r24, Y+23	; 0x17
    19b0:	98 8d       	ldd	r25, Y+24	; 0x18
    19b2:	20 e0       	ldi	r18, 0x00	; 0
    19b4:	3f ef       	ldi	r19, 0xFF	; 255
    19b6:	4f e7       	ldi	r20, 0x7F	; 127
    19b8:	57 e4       	ldi	r21, 0x47	; 71
    19ba:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    19be:	18 16       	cp	r1, r24
    19c0:	4c f5       	brge	.+82     	; 0x1a14 <Lcd_vidInit+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c2:	69 8d       	ldd	r22, Y+25	; 0x19
    19c4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19c8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19ca:	20 e0       	ldi	r18, 0x00	; 0
    19cc:	30 e0       	ldi	r19, 0x00	; 0
    19ce:	40 e2       	ldi	r20, 0x20	; 32
    19d0:	51 e4       	ldi	r21, 0x41	; 65
    19d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19d6:	dc 01       	movw	r26, r24
    19d8:	cb 01       	movw	r24, r22
    19da:	bc 01       	movw	r22, r24
    19dc:	cd 01       	movw	r24, r26
    19de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19e2:	dc 01       	movw	r26, r24
    19e4:	cb 01       	movw	r24, r22
    19e6:	9c 8b       	std	Y+20, r25	; 0x14
    19e8:	8b 8b       	std	Y+19, r24	; 0x13
    19ea:	0f c0       	rjmp	.+30     	; 0x1a0a <Lcd_vidInit+0x20e>
    19ec:	88 ec       	ldi	r24, 0xC8	; 200
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	9a 8b       	std	Y+18, r25	; 0x12
    19f2:	89 8b       	std	Y+17, r24	; 0x11
    19f4:	89 89       	ldd	r24, Y+17	; 0x11
    19f6:	9a 89       	ldd	r25, Y+18	; 0x12
    19f8:	01 97       	sbiw	r24, 0x01	; 1
    19fa:	f1 f7       	brne	.-4      	; 0x19f8 <Lcd_vidInit+0x1fc>
    19fc:	9a 8b       	std	Y+18, r25	; 0x12
    19fe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a00:	8b 89       	ldd	r24, Y+19	; 0x13
    1a02:	9c 89       	ldd	r25, Y+20	; 0x14
    1a04:	01 97       	sbiw	r24, 0x01	; 1
    1a06:	9c 8b       	std	Y+20, r25	; 0x14
    1a08:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a0a:	8b 89       	ldd	r24, Y+19	; 0x13
    1a0c:	9c 89       	ldd	r25, Y+20	; 0x14
    1a0e:	00 97       	sbiw	r24, 0x00	; 0
    1a10:	69 f7       	brne	.-38     	; 0x19ec <Lcd_vidInit+0x1f0>
    1a12:	14 c0       	rjmp	.+40     	; 0x1a3c <Lcd_vidInit+0x240>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a14:	6d 89       	ldd	r22, Y+21	; 0x15
    1a16:	7e 89       	ldd	r23, Y+22	; 0x16
    1a18:	8f 89       	ldd	r24, Y+23	; 0x17
    1a1a:	98 8d       	ldd	r25, Y+24	; 0x18
    1a1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	9c 8b       	std	Y+20, r25	; 0x14
    1a26:	8b 8b       	std	Y+19, r24	; 0x13
    1a28:	8b 89       	ldd	r24, Y+19	; 0x13
    1a2a:	9c 89       	ldd	r25, Y+20	; 0x14
    1a2c:	98 8b       	std	Y+16, r25	; 0x10
    1a2e:	8f 87       	std	Y+15, r24	; 0x0f
    1a30:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a32:	98 89       	ldd	r25, Y+16	; 0x10
    1a34:	01 97       	sbiw	r24, 0x01	; 1
    1a36:	f1 f7       	brne	.-4      	; 0x1a34 <Lcd_vidInit+0x238>
    1a38:	98 8b       	std	Y+16, r25	; 0x10
    1a3a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Lcd_vidSendCommand(LCD_u8_CMD_CLR_DISPLAY);	//Clear Display
    1a3c:	81 e0       	ldi	r24, 0x01	; 1
    1a3e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
    1a42:	80 e0       	ldi	r24, 0x00	; 0
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	a0 e0       	ldi	r26, 0x00	; 0
    1a48:	b0 e4       	ldi	r27, 0x40	; 64
    1a4a:	8b 87       	std	Y+11, r24	; 0x0b
    1a4c:	9c 87       	std	Y+12, r25	; 0x0c
    1a4e:	ad 87       	std	Y+13, r26	; 0x0d
    1a50:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a52:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a54:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a56:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	4a ef       	ldi	r20, 0xFA	; 250
    1a60:	54 e4       	ldi	r21, 0x44	; 68
    1a62:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a66:	dc 01       	movw	r26, r24
    1a68:	cb 01       	movw	r24, r22
    1a6a:	8f 83       	std	Y+7, r24	; 0x07
    1a6c:	98 87       	std	Y+8, r25	; 0x08
    1a6e:	a9 87       	std	Y+9, r26	; 0x09
    1a70:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a72:	6f 81       	ldd	r22, Y+7	; 0x07
    1a74:	78 85       	ldd	r23, Y+8	; 0x08
    1a76:	89 85       	ldd	r24, Y+9	; 0x09
    1a78:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a7a:	20 e0       	ldi	r18, 0x00	; 0
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
    1a7e:	40 e8       	ldi	r20, 0x80	; 128
    1a80:	5f e3       	ldi	r21, 0x3F	; 63
    1a82:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a86:	88 23       	and	r24, r24
    1a88:	2c f4       	brge	.+10     	; 0x1a94 <Lcd_vidInit+0x298>
		__ticks = 1;
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	9e 83       	std	Y+6, r25	; 0x06
    1a90:	8d 83       	std	Y+5, r24	; 0x05
    1a92:	3f c0       	rjmp	.+126    	; 0x1b12 <Lcd_vidInit+0x316>
	else if (__tmp > 65535)
    1a94:	6f 81       	ldd	r22, Y+7	; 0x07
    1a96:	78 85       	ldd	r23, Y+8	; 0x08
    1a98:	89 85       	ldd	r24, Y+9	; 0x09
    1a9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a9c:	20 e0       	ldi	r18, 0x00	; 0
    1a9e:	3f ef       	ldi	r19, 0xFF	; 255
    1aa0:	4f e7       	ldi	r20, 0x7F	; 127
    1aa2:	57 e4       	ldi	r21, 0x47	; 71
    1aa4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1aa8:	18 16       	cp	r1, r24
    1aaa:	4c f5       	brge	.+82     	; 0x1afe <Lcd_vidInit+0x302>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aac:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aae:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ab0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ab2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ab4:	20 e0       	ldi	r18, 0x00	; 0
    1ab6:	30 e0       	ldi	r19, 0x00	; 0
    1ab8:	40 e2       	ldi	r20, 0x20	; 32
    1aba:	51 e4       	ldi	r21, 0x41	; 65
    1abc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	cb 01       	movw	r24, r22
    1ac4:	bc 01       	movw	r22, r24
    1ac6:	cd 01       	movw	r24, r26
    1ac8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1acc:	dc 01       	movw	r26, r24
    1ace:	cb 01       	movw	r24, r22
    1ad0:	9e 83       	std	Y+6, r25	; 0x06
    1ad2:	8d 83       	std	Y+5, r24	; 0x05
    1ad4:	0f c0       	rjmp	.+30     	; 0x1af4 <Lcd_vidInit+0x2f8>
    1ad6:	88 ec       	ldi	r24, 0xC8	; 200
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	9c 83       	std	Y+4, r25	; 0x04
    1adc:	8b 83       	std	Y+3, r24	; 0x03
    1ade:	8b 81       	ldd	r24, Y+3	; 0x03
    1ae0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ae2:	01 97       	sbiw	r24, 0x01	; 1
    1ae4:	f1 f7       	brne	.-4      	; 0x1ae2 <Lcd_vidInit+0x2e6>
    1ae6:	9c 83       	std	Y+4, r25	; 0x04
    1ae8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aea:	8d 81       	ldd	r24, Y+5	; 0x05
    1aec:	9e 81       	ldd	r25, Y+6	; 0x06
    1aee:	01 97       	sbiw	r24, 0x01	; 1
    1af0:	9e 83       	std	Y+6, r25	; 0x06
    1af2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1af4:	8d 81       	ldd	r24, Y+5	; 0x05
    1af6:	9e 81       	ldd	r25, Y+6	; 0x06
    1af8:	00 97       	sbiw	r24, 0x00	; 0
    1afa:	69 f7       	brne	.-38     	; 0x1ad6 <Lcd_vidInit+0x2da>
    1afc:	14 c0       	rjmp	.+40     	; 0x1b26 <Lcd_vidInit+0x32a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1afe:	6f 81       	ldd	r22, Y+7	; 0x07
    1b00:	78 85       	ldd	r23, Y+8	; 0x08
    1b02:	89 85       	ldd	r24, Y+9	; 0x09
    1b04:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b06:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	9e 83       	std	Y+6, r25	; 0x06
    1b10:	8d 83       	std	Y+5, r24	; 0x05
    1b12:	8d 81       	ldd	r24, Y+5	; 0x05
    1b14:	9e 81       	ldd	r25, Y+6	; 0x06
    1b16:	9a 83       	std	Y+2, r25	; 0x02
    1b18:	89 83       	std	Y+1, r24	; 0x01
    1b1a:	89 81       	ldd	r24, Y+1	; 0x01
    1b1c:	9a 81       	ldd	r25, Y+2	; 0x02
    1b1e:	01 97       	sbiw	r24, 0x01	; 1
    1b20:	f1 f7       	brne	.-4      	; 0x1b1e <Lcd_vidInit+0x322>
    1b22:	9a 83       	std	Y+2, r25	; 0x02
    1b24:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    1b26:	aa 96       	adiw	r28, 0x2a	; 42
    1b28:	0f b6       	in	r0, 0x3f	; 63
    1b2a:	f8 94       	cli
    1b2c:	de bf       	out	0x3e, r29	; 62
    1b2e:	0f be       	out	0x3f, r0	; 63
    1b30:	cd bf       	out	0x3d, r28	; 61
    1b32:	cf 91       	pop	r28
    1b34:	df 91       	pop	r29
    1b36:	08 95       	ret

00001b38 <Lcd_MoveCursor>:

void Lcd_MoveCursor(u8 Pos){
    1b38:	df 93       	push	r29
    1b3a:	cf 93       	push	r28
    1b3c:	00 d0       	rcall	.+0      	; 0x1b3e <Lcd_MoveCursor+0x6>
    1b3e:	0f 92       	push	r0
    1b40:	cd b7       	in	r28, 0x3d	; 61
    1b42:	de b7       	in	r29, 0x3e	; 62
    1b44:	8b 83       	std	Y+3, r24	; 0x03
	for(int i=0; i<Pos; i++){
    1b46:	1a 82       	std	Y+2, r1	; 0x02
    1b48:	19 82       	std	Y+1, r1	; 0x01
    1b4a:	08 c0       	rjmp	.+16     	; 0x1b5c <Lcd_MoveCursor+0x24>
		Lcd_vidSendCommand(16);
    1b4c:	80 e1       	ldi	r24, 0x10	; 16
    1b4e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
	Lcd_vidSendCommand(LCD_u8_CMD_CLR_DISPLAY);	//Clear Display
	_delay_ms(2);
}

void Lcd_MoveCursor(u8 Pos){
	for(int i=0; i<Pos; i++){
    1b52:	89 81       	ldd	r24, Y+1	; 0x01
    1b54:	9a 81       	ldd	r25, Y+2	; 0x02
    1b56:	01 96       	adiw	r24, 0x01	; 1
    1b58:	9a 83       	std	Y+2, r25	; 0x02
    1b5a:	89 83       	std	Y+1, r24	; 0x01
    1b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b5e:	28 2f       	mov	r18, r24
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	89 81       	ldd	r24, Y+1	; 0x01
    1b64:	9a 81       	ldd	r25, Y+2	; 0x02
    1b66:	82 17       	cp	r24, r18
    1b68:	93 07       	cpc	r25, r19
    1b6a:	84 f3       	brlt	.-32     	; 0x1b4c <Lcd_MoveCursor+0x14>
		Lcd_vidSendCommand(16);
	}
}
    1b6c:	0f 90       	pop	r0
    1b6e:	0f 90       	pop	r0
    1b70:	0f 90       	pop	r0
    1b72:	cf 91       	pop	r28
    1b74:	df 91       	pop	r29
    1b76:	08 95       	ret

00001b78 <Lcd_vidPrintStr>:


void Lcd_vidPrintStr(char *word){
    1b78:	df 93       	push	r29
    1b7a:	cf 93       	push	r28
    1b7c:	00 d0       	rcall	.+0      	; 0x1b7e <Lcd_vidPrintStr+0x6>
    1b7e:	0f 92       	push	r0
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	9b 83       	std	Y+3, r25	; 0x03
    1b86:	8a 83       	std	Y+2, r24	; 0x02
    1b88:	0e c0       	rjmp	.+28     	; 0x1ba6 <Lcd_vidPrintStr+0x2e>
	u8 ii;
	while(word[ii]!='\0'){
		Lcd_vidWriteChar(word[ii]);
    1b8a:	89 81       	ldd	r24, Y+1	; 0x01
    1b8c:	28 2f       	mov	r18, r24
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	8a 81       	ldd	r24, Y+2	; 0x02
    1b92:	9b 81       	ldd	r25, Y+3	; 0x03
    1b94:	fc 01       	movw	r30, r24
    1b96:	e2 0f       	add	r30, r18
    1b98:	f3 1f       	adc	r31, r19
    1b9a:	80 81       	ld	r24, Z
    1b9c:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
		ii++;
    1ba0:	89 81       	ldd	r24, Y+1	; 0x01
    1ba2:	8f 5f       	subi	r24, 0xFF	; 255
    1ba4:	89 83       	std	Y+1, r24	; 0x01
}


void Lcd_vidPrintStr(char *word){
	u8 ii;
	while(word[ii]!='\0'){
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
    1ba8:	28 2f       	mov	r18, r24
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	8a 81       	ldd	r24, Y+2	; 0x02
    1bae:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb0:	fc 01       	movw	r30, r24
    1bb2:	e2 0f       	add	r30, r18
    1bb4:	f3 1f       	adc	r31, r19
    1bb6:	80 81       	ld	r24, Z
    1bb8:	88 23       	and	r24, r24
    1bba:	39 f7       	brne	.-50     	; 0x1b8a <Lcd_vidPrintStr+0x12>
		ii++;
	}



}
    1bbc:	0f 90       	pop	r0
    1bbe:	0f 90       	pop	r0
    1bc0:	0f 90       	pop	r0
    1bc2:	cf 91       	pop	r28
    1bc4:	df 91       	pop	r29
    1bc6:	08 95       	ret

00001bc8 <Stepper_vidInit>:
#include"Dio_int.h"
#include"Stepper_cfg.h"
#include"Stepper_int.h"
#include<avr/io.h>

void Stepper_vidInit(void){
    1bc8:	df 93       	push	r29
    1bca:	cf 93       	push	r28
    1bcc:	cd b7       	in	r28, 0x3d	; 61
    1bce:	de b7       	in	r29, 0x3e	; 62
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_A,DIO_u8OUTPUT);
    1bd0:	89 e0       	ldi	r24, 0x09	; 9
    1bd2:	61 e0       	ldi	r22, 0x01	; 1
    1bd4:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_B,DIO_u8OUTPUT);
    1bd8:	8a e0       	ldi	r24, 0x0A	; 10
    1bda:	61 e0       	ldi	r22, 0x01	; 1
    1bdc:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_C,DIO_u8OUTPUT);
    1be0:	8b e0       	ldi	r24, 0x0B	; 11
    1be2:	61 e0       	ldi	r22, 0x01	; 1
    1be4:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(Stepper_Motor_u8PIN_D,DIO_u8OUTPUT);
    1be8:	8c e0       	ldi	r24, 0x0C	; 12
    1bea:	61 e0       	ldi	r22, 0x01	; 1
    1bec:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
}
    1bf0:	cf 91       	pop	r28
    1bf2:	df 91       	pop	r29
    1bf4:	08 95       	ret

00001bf6 <Stepper_vidDirection>:

void Stepper_vidDirection(char direction, u8 angle){
    1bf6:	0f 93       	push	r16
    1bf8:	1f 93       	push	r17
    1bfa:	df 93       	push	r29
    1bfc:	cf 93       	push	r28
    1bfe:	cd b7       	in	r28, 0x3d	; 61
    1c00:	de b7       	in	r29, 0x3e	; 62
    1c02:	c7 58       	subi	r28, 0x87	; 135
    1c04:	d1 40       	sbci	r29, 0x01	; 1
    1c06:	0f b6       	in	r0, 0x3f	; 63
    1c08:	f8 94       	cli
    1c0a:	de bf       	out	0x3e, r29	; 62
    1c0c:	0f be       	out	0x3f, r0	; 63
    1c0e:	cd bf       	out	0x3d, r28	; 61
    1c10:	fe 01       	movw	r30, r28
    1c12:	ee 57       	subi	r30, 0x7E	; 126
    1c14:	fe 4f       	sbci	r31, 0xFE	; 254
    1c16:	80 83       	st	Z, r24
    1c18:	fe 01       	movw	r30, r28
    1c1a:	ed 57       	subi	r30, 0x7D	; 125
    1c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c1e:	60 83       	st	Z, r22
	u8 x;
	if(direction=='L'){
    1c20:	fe 01       	movw	r30, r28
    1c22:	ee 57       	subi	r30, 0x7E	; 126
    1c24:	fe 4f       	sbci	r31, 0xFE	; 254
    1c26:	80 81       	ld	r24, Z
    1c28:	8c 34       	cpi	r24, 0x4C	; 76
    1c2a:	11 f0       	breq	.+4      	; 0x1c30 <Stepper_vidDirection+0x3a>
    1c2c:	0c 94 2f 18 	jmp	0x305e	; 0x305e <Stepper_vidDirection+0x1468>
		switch(angle){
    1c30:	fe 01       	movw	r30, r28
    1c32:	ed 57       	subi	r30, 0x7D	; 125
    1c34:	fe 4f       	sbci	r31, 0xFE	; 254
    1c36:	80 81       	ld	r24, Z
    1c38:	28 2f       	mov	r18, r24
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	ca 57       	subi	r28, 0x7A	; 122
    1c3e:	de 4f       	sbci	r29, 0xFE	; 254
    1c40:	39 83       	std	Y+1, r19	; 0x01
    1c42:	28 83       	st	Y, r18
    1c44:	c6 58       	subi	r28, 0x86	; 134
    1c46:	d1 40       	sbci	r29, 0x01	; 1
    1c48:	ca 57       	subi	r28, 0x7A	; 122
    1c4a:	de 4f       	sbci	r29, 0xFE	; 254
    1c4c:	88 81       	ld	r24, Y
    1c4e:	99 81       	ldd	r25, Y+1	; 0x01
    1c50:	c6 58       	subi	r28, 0x86	; 134
    1c52:	d1 40       	sbci	r29, 0x01	; 1
    1c54:	8a 35       	cpi	r24, 0x5A	; 90
    1c56:	91 05       	cpc	r25, r1
    1c58:	61 f0       	breq	.+24     	; 0x1c72 <Stepper_vidDirection+0x7c>
    1c5a:	ca 57       	subi	r28, 0x7A	; 122
    1c5c:	de 4f       	sbci	r29, 0xFE	; 254
    1c5e:	e8 81       	ld	r30, Y
    1c60:	f9 81       	ldd	r31, Y+1	; 0x01
    1c62:	c6 58       	subi	r28, 0x86	; 134
    1c64:	d1 40       	sbci	r29, 0x01	; 1
    1c66:	e4 3b       	cpi	r30, 0xB4	; 180
    1c68:	f1 05       	cpc	r31, r1
    1c6a:	09 f4       	brne	.+2      	; 0x1c6e <Stepper_vidDirection+0x78>
    1c6c:	fd c4       	rjmp	.+2554   	; 0x2668 <Stepper_vidDirection+0xa72>
    1c6e:	0c 94 29 21 	jmp	0x4252	; 0x4252 <Stepper_vidDirection+0x265c>
		case 90:
			for(x=0; x<135; x++){
    1c72:	fe 01       	movw	r30, r28
    1c74:	ef 57       	subi	r30, 0x7F	; 127
    1c76:	fe 4f       	sbci	r31, 0xFE	; 254
    1c78:	10 82       	st	Z, r1
    1c7a:	ed c4       	rjmp	.+2522   	; 0x2656 <Stepper_vidDirection+0xa60>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1c7c:	89 e0       	ldi	r24, 0x09	; 9
    1c7e:	60 e0       	ldi	r22, 0x00	; 0
    1c80:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    1c84:	8a e0       	ldi	r24, 0x0A	; 10
    1c86:	60 e0       	ldi	r22, 0x00	; 0
    1c88:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    1c8c:	8b e0       	ldi	r24, 0x0B	; 11
    1c8e:	60 e0       	ldi	r22, 0x00	; 0
    1c90:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    1c94:	8c e0       	ldi	r24, 0x0C	; 12
    1c96:	61 e0       	ldi	r22, 0x01	; 1
    1c98:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    1c9c:	fe 01       	movw	r30, r28
    1c9e:	e3 58       	subi	r30, 0x83	; 131
    1ca0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca2:	80 e0       	ldi	r24, 0x00	; 0
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	aa e7       	ldi	r26, 0x7A	; 122
    1ca8:	b4 e4       	ldi	r27, 0x44	; 68
    1caa:	80 83       	st	Z, r24
    1cac:	91 83       	std	Z+1, r25	; 0x01
    1cae:	a2 83       	std	Z+2, r26	; 0x02
    1cb0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1cb2:	8e 01       	movw	r16, r28
    1cb4:	07 58       	subi	r16, 0x87	; 135
    1cb6:	1e 4f       	sbci	r17, 0xFE	; 254
    1cb8:	fe 01       	movw	r30, r28
    1cba:	e3 58       	subi	r30, 0x83	; 131
    1cbc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cbe:	60 81       	ld	r22, Z
    1cc0:	71 81       	ldd	r23, Z+1	; 0x01
    1cc2:	82 81       	ldd	r24, Z+2	; 0x02
    1cc4:	93 81       	ldd	r25, Z+3	; 0x03
    1cc6:	2b ea       	ldi	r18, 0xAB	; 171
    1cc8:	3a ea       	ldi	r19, 0xAA	; 170
    1cca:	4a e2       	ldi	r20, 0x2A	; 42
    1ccc:	50 e4       	ldi	r21, 0x40	; 64
    1cce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cd2:	dc 01       	movw	r26, r24
    1cd4:	cb 01       	movw	r24, r22
    1cd6:	f8 01       	movw	r30, r16
    1cd8:	80 83       	st	Z, r24
    1cda:	91 83       	std	Z+1, r25	; 0x01
    1cdc:	a2 83       	std	Z+2, r26	; 0x02
    1cde:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ce0:	fe 01       	movw	r30, r28
    1ce2:	e7 58       	subi	r30, 0x87	; 135
    1ce4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce6:	60 81       	ld	r22, Z
    1ce8:	71 81       	ldd	r23, Z+1	; 0x01
    1cea:	82 81       	ldd	r24, Z+2	; 0x02
    1cec:	93 81       	ldd	r25, Z+3	; 0x03
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	40 e8       	ldi	r20, 0x80	; 128
    1cf4:	5f e3       	ldi	r21, 0x3F	; 63
    1cf6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1cfa:	88 23       	and	r24, r24
    1cfc:	34 f4       	brge	.+12     	; 0x1d0a <Stepper_vidDirection+0x114>
		__ticks = 1;
    1cfe:	fe 01       	movw	r30, r28
    1d00:	e8 58       	subi	r30, 0x88	; 136
    1d02:	fe 4f       	sbci	r31, 0xFE	; 254
    1d04:	81 e0       	ldi	r24, 0x01	; 1
    1d06:	80 83       	st	Z, r24
    1d08:	e0 c0       	rjmp	.+448    	; 0x1eca <Stepper_vidDirection+0x2d4>
	else if (__tmp > 255)
    1d0a:	fe 01       	movw	r30, r28
    1d0c:	e7 58       	subi	r30, 0x87	; 135
    1d0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d10:	60 81       	ld	r22, Z
    1d12:	71 81       	ldd	r23, Z+1	; 0x01
    1d14:	82 81       	ldd	r24, Z+2	; 0x02
    1d16:	93 81       	ldd	r25, Z+3	; 0x03
    1d18:	20 e0       	ldi	r18, 0x00	; 0
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	4f e7       	ldi	r20, 0x7F	; 127
    1d1e:	53 e4       	ldi	r21, 0x43	; 67
    1d20:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1d24:	18 16       	cp	r1, r24
    1d26:	0c f0       	brlt	.+2      	; 0x1d2a <Stepper_vidDirection+0x134>
    1d28:	c0 c0       	rjmp	.+384    	; 0x1eaa <Stepper_vidDirection+0x2b4>
	{
		_delay_ms(__us / 1000.0);
    1d2a:	fe 01       	movw	r30, r28
    1d2c:	e3 58       	subi	r30, 0x83	; 131
    1d2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d30:	60 81       	ld	r22, Z
    1d32:	71 81       	ldd	r23, Z+1	; 0x01
    1d34:	82 81       	ldd	r24, Z+2	; 0x02
    1d36:	93 81       	ldd	r25, Z+3	; 0x03
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	4a e7       	ldi	r20, 0x7A	; 122
    1d3e:	54 e4       	ldi	r21, 0x44	; 68
    1d40:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	fe 01       	movw	r30, r28
    1d4a:	ec 58       	subi	r30, 0x8C	; 140
    1d4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d4e:	80 83       	st	Z, r24
    1d50:	91 83       	std	Z+1, r25	; 0x01
    1d52:	a2 83       	std	Z+2, r26	; 0x02
    1d54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d56:	8e 01       	movw	r16, r28
    1d58:	00 59       	subi	r16, 0x90	; 144
    1d5a:	1e 4f       	sbci	r17, 0xFE	; 254
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	ec 58       	subi	r30, 0x8C	; 140
    1d60:	fe 4f       	sbci	r31, 0xFE	; 254
    1d62:	60 81       	ld	r22, Z
    1d64:	71 81       	ldd	r23, Z+1	; 0x01
    1d66:	82 81       	ldd	r24, Z+2	; 0x02
    1d68:	93 81       	ldd	r25, Z+3	; 0x03
    1d6a:	20 e0       	ldi	r18, 0x00	; 0
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	4a ef       	ldi	r20, 0xFA	; 250
    1d70:	54 e4       	ldi	r21, 0x44	; 68
    1d72:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d76:	dc 01       	movw	r26, r24
    1d78:	cb 01       	movw	r24, r22
    1d7a:	f8 01       	movw	r30, r16
    1d7c:	80 83       	st	Z, r24
    1d7e:	91 83       	std	Z+1, r25	; 0x01
    1d80:	a2 83       	std	Z+2, r26	; 0x02
    1d82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d84:	fe 01       	movw	r30, r28
    1d86:	e0 59       	subi	r30, 0x90	; 144
    1d88:	fe 4f       	sbci	r31, 0xFE	; 254
    1d8a:	60 81       	ld	r22, Z
    1d8c:	71 81       	ldd	r23, Z+1	; 0x01
    1d8e:	82 81       	ldd	r24, Z+2	; 0x02
    1d90:	93 81       	ldd	r25, Z+3	; 0x03
    1d92:	20 e0       	ldi	r18, 0x00	; 0
    1d94:	30 e0       	ldi	r19, 0x00	; 0
    1d96:	40 e8       	ldi	r20, 0x80	; 128
    1d98:	5f e3       	ldi	r21, 0x3F	; 63
    1d9a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1d9e:	88 23       	and	r24, r24
    1da0:	44 f4       	brge	.+16     	; 0x1db2 <Stepper_vidDirection+0x1bc>
		__ticks = 1;
    1da2:	fe 01       	movw	r30, r28
    1da4:	e2 59       	subi	r30, 0x92	; 146
    1da6:	fe 4f       	sbci	r31, 0xFE	; 254
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	91 83       	std	Z+1, r25	; 0x01
    1dae:	80 83       	st	Z, r24
    1db0:	64 c0       	rjmp	.+200    	; 0x1e7a <Stepper_vidDirection+0x284>
	else if (__tmp > 65535)
    1db2:	fe 01       	movw	r30, r28
    1db4:	e0 59       	subi	r30, 0x90	; 144
    1db6:	fe 4f       	sbci	r31, 0xFE	; 254
    1db8:	60 81       	ld	r22, Z
    1dba:	71 81       	ldd	r23, Z+1	; 0x01
    1dbc:	82 81       	ldd	r24, Z+2	; 0x02
    1dbe:	93 81       	ldd	r25, Z+3	; 0x03
    1dc0:	20 e0       	ldi	r18, 0x00	; 0
    1dc2:	3f ef       	ldi	r19, 0xFF	; 255
    1dc4:	4f e7       	ldi	r20, 0x7F	; 127
    1dc6:	57 e4       	ldi	r21, 0x47	; 71
    1dc8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1dcc:	18 16       	cp	r1, r24
    1dce:	0c f0       	brlt	.+2      	; 0x1dd2 <Stepper_vidDirection+0x1dc>
    1dd0:	43 c0       	rjmp	.+134    	; 0x1e58 <Stepper_vidDirection+0x262>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	ec 58       	subi	r30, 0x8C	; 140
    1dd6:	fe 4f       	sbci	r31, 0xFE	; 254
    1dd8:	60 81       	ld	r22, Z
    1dda:	71 81       	ldd	r23, Z+1	; 0x01
    1ddc:	82 81       	ldd	r24, Z+2	; 0x02
    1dde:	93 81       	ldd	r25, Z+3	; 0x03
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	30 e0       	ldi	r19, 0x00	; 0
    1de4:	40 e2       	ldi	r20, 0x20	; 32
    1de6:	51 e4       	ldi	r21, 0x41	; 65
    1de8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dec:	dc 01       	movw	r26, r24
    1dee:	cb 01       	movw	r24, r22
    1df0:	8e 01       	movw	r16, r28
    1df2:	02 59       	subi	r16, 0x92	; 146
    1df4:	1e 4f       	sbci	r17, 0xFE	; 254
    1df6:	bc 01       	movw	r22, r24
    1df8:	cd 01       	movw	r24, r26
    1dfa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dfe:	dc 01       	movw	r26, r24
    1e00:	cb 01       	movw	r24, r22
    1e02:	f8 01       	movw	r30, r16
    1e04:	91 83       	std	Z+1, r25	; 0x01
    1e06:	80 83       	st	Z, r24
    1e08:	1f c0       	rjmp	.+62     	; 0x1e48 <Stepper_vidDirection+0x252>
    1e0a:	fe 01       	movw	r30, r28
    1e0c:	e4 59       	subi	r30, 0x94	; 148
    1e0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e10:	88 ec       	ldi	r24, 0xC8	; 200
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	91 83       	std	Z+1, r25	; 0x01
    1e16:	80 83       	st	Z, r24
    1e18:	fe 01       	movw	r30, r28
    1e1a:	e4 59       	subi	r30, 0x94	; 148
    1e1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1e:	80 81       	ld	r24, Z
    1e20:	91 81       	ldd	r25, Z+1	; 0x01
    1e22:	01 97       	sbiw	r24, 0x01	; 1
    1e24:	f1 f7       	brne	.-4      	; 0x1e22 <Stepper_vidDirection+0x22c>
    1e26:	fe 01       	movw	r30, r28
    1e28:	e4 59       	subi	r30, 0x94	; 148
    1e2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e2c:	91 83       	std	Z+1, r25	; 0x01
    1e2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e30:	de 01       	movw	r26, r28
    1e32:	a2 59       	subi	r26, 0x92	; 146
    1e34:	be 4f       	sbci	r27, 0xFE	; 254
    1e36:	fe 01       	movw	r30, r28
    1e38:	e2 59       	subi	r30, 0x92	; 146
    1e3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3c:	80 81       	ld	r24, Z
    1e3e:	91 81       	ldd	r25, Z+1	; 0x01
    1e40:	01 97       	sbiw	r24, 0x01	; 1
    1e42:	11 96       	adiw	r26, 0x01	; 1
    1e44:	9c 93       	st	X, r25
    1e46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e48:	fe 01       	movw	r30, r28
    1e4a:	e2 59       	subi	r30, 0x92	; 146
    1e4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e4e:	80 81       	ld	r24, Z
    1e50:	91 81       	ldd	r25, Z+1	; 0x01
    1e52:	00 97       	sbiw	r24, 0x00	; 0
    1e54:	d1 f6       	brne	.-76     	; 0x1e0a <Stepper_vidDirection+0x214>
    1e56:	4b c0       	rjmp	.+150    	; 0x1eee <Stepper_vidDirection+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e58:	8e 01       	movw	r16, r28
    1e5a:	02 59       	subi	r16, 0x92	; 146
    1e5c:	1e 4f       	sbci	r17, 0xFE	; 254
    1e5e:	fe 01       	movw	r30, r28
    1e60:	e0 59       	subi	r30, 0x90	; 144
    1e62:	fe 4f       	sbci	r31, 0xFE	; 254
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	82 81       	ldd	r24, Z+2	; 0x02
    1e6a:	93 81       	ldd	r25, Z+3	; 0x03
    1e6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e70:	dc 01       	movw	r26, r24
    1e72:	cb 01       	movw	r24, r22
    1e74:	f8 01       	movw	r30, r16
    1e76:	91 83       	std	Z+1, r25	; 0x01
    1e78:	80 83       	st	Z, r24
    1e7a:	de 01       	movw	r26, r28
    1e7c:	a6 59       	subi	r26, 0x96	; 150
    1e7e:	be 4f       	sbci	r27, 0xFE	; 254
    1e80:	fe 01       	movw	r30, r28
    1e82:	e2 59       	subi	r30, 0x92	; 146
    1e84:	fe 4f       	sbci	r31, 0xFE	; 254
    1e86:	80 81       	ld	r24, Z
    1e88:	91 81       	ldd	r25, Z+1	; 0x01
    1e8a:	11 96       	adiw	r26, 0x01	; 1
    1e8c:	9c 93       	st	X, r25
    1e8e:	8e 93       	st	-X, r24
    1e90:	fe 01       	movw	r30, r28
    1e92:	e6 59       	subi	r30, 0x96	; 150
    1e94:	fe 4f       	sbci	r31, 0xFE	; 254
    1e96:	80 81       	ld	r24, Z
    1e98:	91 81       	ldd	r25, Z+1	; 0x01
    1e9a:	01 97       	sbiw	r24, 0x01	; 1
    1e9c:	f1 f7       	brne	.-4      	; 0x1e9a <Stepper_vidDirection+0x2a4>
    1e9e:	fe 01       	movw	r30, r28
    1ea0:	e6 59       	subi	r30, 0x96	; 150
    1ea2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ea4:	91 83       	std	Z+1, r25	; 0x01
    1ea6:	80 83       	st	Z, r24
    1ea8:	22 c0       	rjmp	.+68     	; 0x1eee <Stepper_vidDirection+0x2f8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1eaa:	8e 01       	movw	r16, r28
    1eac:	08 58       	subi	r16, 0x88	; 136
    1eae:	1e 4f       	sbci	r17, 0xFE	; 254
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	e7 58       	subi	r30, 0x87	; 135
    1eb4:	fe 4f       	sbci	r31, 0xFE	; 254
    1eb6:	60 81       	ld	r22, Z
    1eb8:	71 81       	ldd	r23, Z+1	; 0x01
    1eba:	82 81       	ldd	r24, Z+2	; 0x02
    1ebc:	93 81       	ldd	r25, Z+3	; 0x03
    1ebe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	f8 01       	movw	r30, r16
    1ec8:	80 83       	st	Z, r24
    1eca:	de 01       	movw	r26, r28
    1ecc:	a7 59       	subi	r26, 0x97	; 151
    1ece:	be 4f       	sbci	r27, 0xFE	; 254
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	e8 58       	subi	r30, 0x88	; 136
    1ed4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ed6:	80 81       	ld	r24, Z
    1ed8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1eda:	fe 01       	movw	r30, r28
    1edc:	e7 59       	subi	r30, 0x97	; 151
    1ede:	fe 4f       	sbci	r31, 0xFE	; 254
    1ee0:	80 81       	ld	r24, Z
    1ee2:	8a 95       	dec	r24
    1ee4:	f1 f7       	brne	.-4      	; 0x1ee2 <Stepper_vidDirection+0x2ec>
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	e7 59       	subi	r30, 0x97	; 151
    1eea:	fe 4f       	sbci	r31, 0xFE	; 254
    1eec:	80 83       	st	Z, r24
				_delay_us(1000);

				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    1eee:	89 e0       	ldi	r24, 0x09	; 9
    1ef0:	60 e0       	ldi	r22, 0x00	; 0
    1ef2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    1ef6:	8a e0       	ldi	r24, 0x0A	; 10
    1ef8:	60 e0       	ldi	r22, 0x00	; 0
    1efa:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    1efe:	8b e0       	ldi	r24, 0x0B	; 11
    1f00:	61 e0       	ldi	r22, 0x01	; 1
    1f02:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    1f06:	8c e0       	ldi	r24, 0x0C	; 12
    1f08:	60 e0       	ldi	r22, 0x00	; 0
    1f0a:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    1f0e:	fe 01       	movw	r30, r28
    1f10:	eb 59       	subi	r30, 0x9B	; 155
    1f12:	fe 4f       	sbci	r31, 0xFE	; 254
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	aa e7       	ldi	r26, 0x7A	; 122
    1f1a:	b4 e4       	ldi	r27, 0x44	; 68
    1f1c:	80 83       	st	Z, r24
    1f1e:	91 83       	std	Z+1, r25	; 0x01
    1f20:	a2 83       	std	Z+2, r26	; 0x02
    1f22:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1f24:	8e 01       	movw	r16, r28
    1f26:	0f 59       	subi	r16, 0x9F	; 159
    1f28:	1e 4f       	sbci	r17, 0xFE	; 254
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	eb 59       	subi	r30, 0x9B	; 155
    1f2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f30:	60 81       	ld	r22, Z
    1f32:	71 81       	ldd	r23, Z+1	; 0x01
    1f34:	82 81       	ldd	r24, Z+2	; 0x02
    1f36:	93 81       	ldd	r25, Z+3	; 0x03
    1f38:	2b ea       	ldi	r18, 0xAB	; 171
    1f3a:	3a ea       	ldi	r19, 0xAA	; 170
    1f3c:	4a e2       	ldi	r20, 0x2A	; 42
    1f3e:	50 e4       	ldi	r21, 0x40	; 64
    1f40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f44:	dc 01       	movw	r26, r24
    1f46:	cb 01       	movw	r24, r22
    1f48:	f8 01       	movw	r30, r16
    1f4a:	80 83       	st	Z, r24
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	a2 83       	std	Z+2, r26	; 0x02
    1f50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f52:	fe 01       	movw	r30, r28
    1f54:	ef 59       	subi	r30, 0x9F	; 159
    1f56:	fe 4f       	sbci	r31, 0xFE	; 254
    1f58:	60 81       	ld	r22, Z
    1f5a:	71 81       	ldd	r23, Z+1	; 0x01
    1f5c:	82 81       	ldd	r24, Z+2	; 0x02
    1f5e:	93 81       	ldd	r25, Z+3	; 0x03
    1f60:	20 e0       	ldi	r18, 0x00	; 0
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	40 e8       	ldi	r20, 0x80	; 128
    1f66:	5f e3       	ldi	r21, 0x3F	; 63
    1f68:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f6c:	88 23       	and	r24, r24
    1f6e:	34 f4       	brge	.+12     	; 0x1f7c <Stepper_vidDirection+0x386>
		__ticks = 1;
    1f70:	fe 01       	movw	r30, r28
    1f72:	e0 5a       	subi	r30, 0xA0	; 160
    1f74:	fe 4f       	sbci	r31, 0xFE	; 254
    1f76:	81 e0       	ldi	r24, 0x01	; 1
    1f78:	80 83       	st	Z, r24
    1f7a:	e0 c0       	rjmp	.+448    	; 0x213c <Stepper_vidDirection+0x546>
	else if (__tmp > 255)
    1f7c:	fe 01       	movw	r30, r28
    1f7e:	ef 59       	subi	r30, 0x9F	; 159
    1f80:	fe 4f       	sbci	r31, 0xFE	; 254
    1f82:	60 81       	ld	r22, Z
    1f84:	71 81       	ldd	r23, Z+1	; 0x01
    1f86:	82 81       	ldd	r24, Z+2	; 0x02
    1f88:	93 81       	ldd	r25, Z+3	; 0x03
    1f8a:	20 e0       	ldi	r18, 0x00	; 0
    1f8c:	30 e0       	ldi	r19, 0x00	; 0
    1f8e:	4f e7       	ldi	r20, 0x7F	; 127
    1f90:	53 e4       	ldi	r21, 0x43	; 67
    1f92:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f96:	18 16       	cp	r1, r24
    1f98:	0c f0       	brlt	.+2      	; 0x1f9c <Stepper_vidDirection+0x3a6>
    1f9a:	c0 c0       	rjmp	.+384    	; 0x211c <Stepper_vidDirection+0x526>
	{
		_delay_ms(__us / 1000.0);
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	eb 59       	subi	r30, 0x9B	; 155
    1fa0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa2:	60 81       	ld	r22, Z
    1fa4:	71 81       	ldd	r23, Z+1	; 0x01
    1fa6:	82 81       	ldd	r24, Z+2	; 0x02
    1fa8:	93 81       	ldd	r25, Z+3	; 0x03
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	4a e7       	ldi	r20, 0x7A	; 122
    1fb0:	54 e4       	ldi	r21, 0x44	; 68
    1fb2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1fb6:	dc 01       	movw	r26, r24
    1fb8:	cb 01       	movw	r24, r22
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e4 5a       	subi	r30, 0xA4	; 164
    1fbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1fc0:	80 83       	st	Z, r24
    1fc2:	91 83       	std	Z+1, r25	; 0x01
    1fc4:	a2 83       	std	Z+2, r26	; 0x02
    1fc6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fc8:	8e 01       	movw	r16, r28
    1fca:	08 5a       	subi	r16, 0xA8	; 168
    1fcc:	1e 4f       	sbci	r17, 0xFE	; 254
    1fce:	fe 01       	movw	r30, r28
    1fd0:	e4 5a       	subi	r30, 0xA4	; 164
    1fd2:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd4:	60 81       	ld	r22, Z
    1fd6:	71 81       	ldd	r23, Z+1	; 0x01
    1fd8:	82 81       	ldd	r24, Z+2	; 0x02
    1fda:	93 81       	ldd	r25, Z+3	; 0x03
    1fdc:	20 e0       	ldi	r18, 0x00	; 0
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	4a ef       	ldi	r20, 0xFA	; 250
    1fe2:	54 e4       	ldi	r21, 0x44	; 68
    1fe4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fe8:	dc 01       	movw	r26, r24
    1fea:	cb 01       	movw	r24, r22
    1fec:	f8 01       	movw	r30, r16
    1fee:	80 83       	st	Z, r24
    1ff0:	91 83       	std	Z+1, r25	; 0x01
    1ff2:	a2 83       	std	Z+2, r26	; 0x02
    1ff4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e8 5a       	subi	r30, 0xA8	; 168
    1ffa:	fe 4f       	sbci	r31, 0xFE	; 254
    1ffc:	60 81       	ld	r22, Z
    1ffe:	71 81       	ldd	r23, Z+1	; 0x01
    2000:	82 81       	ldd	r24, Z+2	; 0x02
    2002:	93 81       	ldd	r25, Z+3	; 0x03
    2004:	20 e0       	ldi	r18, 0x00	; 0
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	40 e8       	ldi	r20, 0x80	; 128
    200a:	5f e3       	ldi	r21, 0x3F	; 63
    200c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2010:	88 23       	and	r24, r24
    2012:	44 f4       	brge	.+16     	; 0x2024 <Stepper_vidDirection+0x42e>
		__ticks = 1;
    2014:	fe 01       	movw	r30, r28
    2016:	ea 5a       	subi	r30, 0xAA	; 170
    2018:	fe 4f       	sbci	r31, 0xFE	; 254
    201a:	81 e0       	ldi	r24, 0x01	; 1
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	91 83       	std	Z+1, r25	; 0x01
    2020:	80 83       	st	Z, r24
    2022:	64 c0       	rjmp	.+200    	; 0x20ec <Stepper_vidDirection+0x4f6>
	else if (__tmp > 65535)
    2024:	fe 01       	movw	r30, r28
    2026:	e8 5a       	subi	r30, 0xA8	; 168
    2028:	fe 4f       	sbci	r31, 0xFE	; 254
    202a:	60 81       	ld	r22, Z
    202c:	71 81       	ldd	r23, Z+1	; 0x01
    202e:	82 81       	ldd	r24, Z+2	; 0x02
    2030:	93 81       	ldd	r25, Z+3	; 0x03
    2032:	20 e0       	ldi	r18, 0x00	; 0
    2034:	3f ef       	ldi	r19, 0xFF	; 255
    2036:	4f e7       	ldi	r20, 0x7F	; 127
    2038:	57 e4       	ldi	r21, 0x47	; 71
    203a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    203e:	18 16       	cp	r1, r24
    2040:	0c f0       	brlt	.+2      	; 0x2044 <Stepper_vidDirection+0x44e>
    2042:	43 c0       	rjmp	.+134    	; 0x20ca <Stepper_vidDirection+0x4d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2044:	fe 01       	movw	r30, r28
    2046:	e4 5a       	subi	r30, 0xA4	; 164
    2048:	fe 4f       	sbci	r31, 0xFE	; 254
    204a:	60 81       	ld	r22, Z
    204c:	71 81       	ldd	r23, Z+1	; 0x01
    204e:	82 81       	ldd	r24, Z+2	; 0x02
    2050:	93 81       	ldd	r25, Z+3	; 0x03
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	40 e2       	ldi	r20, 0x20	; 32
    2058:	51 e4       	ldi	r21, 0x41	; 65
    205a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    205e:	dc 01       	movw	r26, r24
    2060:	cb 01       	movw	r24, r22
    2062:	8e 01       	movw	r16, r28
    2064:	0a 5a       	subi	r16, 0xAA	; 170
    2066:	1e 4f       	sbci	r17, 0xFE	; 254
    2068:	bc 01       	movw	r22, r24
    206a:	cd 01       	movw	r24, r26
    206c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2070:	dc 01       	movw	r26, r24
    2072:	cb 01       	movw	r24, r22
    2074:	f8 01       	movw	r30, r16
    2076:	91 83       	std	Z+1, r25	; 0x01
    2078:	80 83       	st	Z, r24
    207a:	1f c0       	rjmp	.+62     	; 0x20ba <Stepper_vidDirection+0x4c4>
    207c:	fe 01       	movw	r30, r28
    207e:	ec 5a       	subi	r30, 0xAC	; 172
    2080:	fe 4f       	sbci	r31, 0xFE	; 254
    2082:	88 ec       	ldi	r24, 0xC8	; 200
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	91 83       	std	Z+1, r25	; 0x01
    2088:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    208a:	fe 01       	movw	r30, r28
    208c:	ec 5a       	subi	r30, 0xAC	; 172
    208e:	fe 4f       	sbci	r31, 0xFE	; 254
    2090:	80 81       	ld	r24, Z
    2092:	91 81       	ldd	r25, Z+1	; 0x01
    2094:	01 97       	sbiw	r24, 0x01	; 1
    2096:	f1 f7       	brne	.-4      	; 0x2094 <Stepper_vidDirection+0x49e>
    2098:	fe 01       	movw	r30, r28
    209a:	ec 5a       	subi	r30, 0xAC	; 172
    209c:	fe 4f       	sbci	r31, 0xFE	; 254
    209e:	91 83       	std	Z+1, r25	; 0x01
    20a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20a2:	de 01       	movw	r26, r28
    20a4:	aa 5a       	subi	r26, 0xAA	; 170
    20a6:	be 4f       	sbci	r27, 0xFE	; 254
    20a8:	fe 01       	movw	r30, r28
    20aa:	ea 5a       	subi	r30, 0xAA	; 170
    20ac:	fe 4f       	sbci	r31, 0xFE	; 254
    20ae:	80 81       	ld	r24, Z
    20b0:	91 81       	ldd	r25, Z+1	; 0x01
    20b2:	01 97       	sbiw	r24, 0x01	; 1
    20b4:	11 96       	adiw	r26, 0x01	; 1
    20b6:	9c 93       	st	X, r25
    20b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20ba:	fe 01       	movw	r30, r28
    20bc:	ea 5a       	subi	r30, 0xAA	; 170
    20be:	fe 4f       	sbci	r31, 0xFE	; 254
    20c0:	80 81       	ld	r24, Z
    20c2:	91 81       	ldd	r25, Z+1	; 0x01
    20c4:	00 97       	sbiw	r24, 0x00	; 0
    20c6:	d1 f6       	brne	.-76     	; 0x207c <Stepper_vidDirection+0x486>
    20c8:	4b c0       	rjmp	.+150    	; 0x2160 <Stepper_vidDirection+0x56a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20ca:	8e 01       	movw	r16, r28
    20cc:	0a 5a       	subi	r16, 0xAA	; 170
    20ce:	1e 4f       	sbci	r17, 0xFE	; 254
    20d0:	fe 01       	movw	r30, r28
    20d2:	e8 5a       	subi	r30, 0xA8	; 168
    20d4:	fe 4f       	sbci	r31, 0xFE	; 254
    20d6:	60 81       	ld	r22, Z
    20d8:	71 81       	ldd	r23, Z+1	; 0x01
    20da:	82 81       	ldd	r24, Z+2	; 0x02
    20dc:	93 81       	ldd	r25, Z+3	; 0x03
    20de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20e2:	dc 01       	movw	r26, r24
    20e4:	cb 01       	movw	r24, r22
    20e6:	f8 01       	movw	r30, r16
    20e8:	91 83       	std	Z+1, r25	; 0x01
    20ea:	80 83       	st	Z, r24
    20ec:	de 01       	movw	r26, r28
    20ee:	ae 5a       	subi	r26, 0xAE	; 174
    20f0:	be 4f       	sbci	r27, 0xFE	; 254
    20f2:	fe 01       	movw	r30, r28
    20f4:	ea 5a       	subi	r30, 0xAA	; 170
    20f6:	fe 4f       	sbci	r31, 0xFE	; 254
    20f8:	80 81       	ld	r24, Z
    20fa:	91 81       	ldd	r25, Z+1	; 0x01
    20fc:	11 96       	adiw	r26, 0x01	; 1
    20fe:	9c 93       	st	X, r25
    2100:	8e 93       	st	-X, r24
    2102:	fe 01       	movw	r30, r28
    2104:	ee 5a       	subi	r30, 0xAE	; 174
    2106:	fe 4f       	sbci	r31, 0xFE	; 254
    2108:	80 81       	ld	r24, Z
    210a:	91 81       	ldd	r25, Z+1	; 0x01
    210c:	01 97       	sbiw	r24, 0x01	; 1
    210e:	f1 f7       	brne	.-4      	; 0x210c <Stepper_vidDirection+0x516>
    2110:	fe 01       	movw	r30, r28
    2112:	ee 5a       	subi	r30, 0xAE	; 174
    2114:	fe 4f       	sbci	r31, 0xFE	; 254
    2116:	91 83       	std	Z+1, r25	; 0x01
    2118:	80 83       	st	Z, r24
    211a:	22 c0       	rjmp	.+68     	; 0x2160 <Stepper_vidDirection+0x56a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    211c:	8e 01       	movw	r16, r28
    211e:	00 5a       	subi	r16, 0xA0	; 160
    2120:	1e 4f       	sbci	r17, 0xFE	; 254
    2122:	fe 01       	movw	r30, r28
    2124:	ef 59       	subi	r30, 0x9F	; 159
    2126:	fe 4f       	sbci	r31, 0xFE	; 254
    2128:	60 81       	ld	r22, Z
    212a:	71 81       	ldd	r23, Z+1	; 0x01
    212c:	82 81       	ldd	r24, Z+2	; 0x02
    212e:	93 81       	ldd	r25, Z+3	; 0x03
    2130:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2134:	dc 01       	movw	r26, r24
    2136:	cb 01       	movw	r24, r22
    2138:	f8 01       	movw	r30, r16
    213a:	80 83       	st	Z, r24
    213c:	de 01       	movw	r26, r28
    213e:	af 5a       	subi	r26, 0xAF	; 175
    2140:	be 4f       	sbci	r27, 0xFE	; 254
    2142:	fe 01       	movw	r30, r28
    2144:	e0 5a       	subi	r30, 0xA0	; 160
    2146:	fe 4f       	sbci	r31, 0xFE	; 254
    2148:	80 81       	ld	r24, Z
    214a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    214c:	fe 01       	movw	r30, r28
    214e:	ef 5a       	subi	r30, 0xAF	; 175
    2150:	fe 4f       	sbci	r31, 0xFE	; 254
    2152:	80 81       	ld	r24, Z
    2154:	8a 95       	dec	r24
    2156:	f1 f7       	brne	.-4      	; 0x2154 <Stepper_vidDirection+0x55e>
    2158:	fe 01       	movw	r30, r28
    215a:	ef 5a       	subi	r30, 0xAF	; 175
    215c:	fe 4f       	sbci	r31, 0xFE	; 254
    215e:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    2160:	89 e0       	ldi	r24, 0x09	; 9
    2162:	60 e0       	ldi	r22, 0x00	; 0
    2164:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    2168:	8a e0       	ldi	r24, 0x0A	; 10
    216a:	61 e0       	ldi	r22, 0x01	; 1
    216c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2170:	8b e0       	ldi	r24, 0x0B	; 11
    2172:	60 e0       	ldi	r22, 0x00	; 0
    2174:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2178:	8c e0       	ldi	r24, 0x0C	; 12
    217a:	60 e0       	ldi	r22, 0x00	; 0
    217c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    2180:	fe 01       	movw	r30, r28
    2182:	e3 5b       	subi	r30, 0xB3	; 179
    2184:	fe 4f       	sbci	r31, 0xFE	; 254
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	aa e7       	ldi	r26, 0x7A	; 122
    218c:	b4 e4       	ldi	r27, 0x44	; 68
    218e:	80 83       	st	Z, r24
    2190:	91 83       	std	Z+1, r25	; 0x01
    2192:	a2 83       	std	Z+2, r26	; 0x02
    2194:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2196:	8e 01       	movw	r16, r28
    2198:	07 5b       	subi	r16, 0xB7	; 183
    219a:	1e 4f       	sbci	r17, 0xFE	; 254
    219c:	fe 01       	movw	r30, r28
    219e:	e3 5b       	subi	r30, 0xB3	; 179
    21a0:	fe 4f       	sbci	r31, 0xFE	; 254
    21a2:	60 81       	ld	r22, Z
    21a4:	71 81       	ldd	r23, Z+1	; 0x01
    21a6:	82 81       	ldd	r24, Z+2	; 0x02
    21a8:	93 81       	ldd	r25, Z+3	; 0x03
    21aa:	2b ea       	ldi	r18, 0xAB	; 171
    21ac:	3a ea       	ldi	r19, 0xAA	; 170
    21ae:	4a e2       	ldi	r20, 0x2A	; 42
    21b0:	50 e4       	ldi	r21, 0x40	; 64
    21b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21b6:	dc 01       	movw	r26, r24
    21b8:	cb 01       	movw	r24, r22
    21ba:	f8 01       	movw	r30, r16
    21bc:	80 83       	st	Z, r24
    21be:	91 83       	std	Z+1, r25	; 0x01
    21c0:	a2 83       	std	Z+2, r26	; 0x02
    21c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21c4:	fe 01       	movw	r30, r28
    21c6:	e7 5b       	subi	r30, 0xB7	; 183
    21c8:	fe 4f       	sbci	r31, 0xFE	; 254
    21ca:	60 81       	ld	r22, Z
    21cc:	71 81       	ldd	r23, Z+1	; 0x01
    21ce:	82 81       	ldd	r24, Z+2	; 0x02
    21d0:	93 81       	ldd	r25, Z+3	; 0x03
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	40 e8       	ldi	r20, 0x80	; 128
    21d8:	5f e3       	ldi	r21, 0x3F	; 63
    21da:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    21de:	88 23       	and	r24, r24
    21e0:	34 f4       	brge	.+12     	; 0x21ee <Stepper_vidDirection+0x5f8>
		__ticks = 1;
    21e2:	fe 01       	movw	r30, r28
    21e4:	e8 5b       	subi	r30, 0xB8	; 184
    21e6:	fe 4f       	sbci	r31, 0xFE	; 254
    21e8:	81 e0       	ldi	r24, 0x01	; 1
    21ea:	80 83       	st	Z, r24
    21ec:	e0 c0       	rjmp	.+448    	; 0x23ae <Stepper_vidDirection+0x7b8>
	else if (__tmp > 255)
    21ee:	fe 01       	movw	r30, r28
    21f0:	e7 5b       	subi	r30, 0xB7	; 183
    21f2:	fe 4f       	sbci	r31, 0xFE	; 254
    21f4:	60 81       	ld	r22, Z
    21f6:	71 81       	ldd	r23, Z+1	; 0x01
    21f8:	82 81       	ldd	r24, Z+2	; 0x02
    21fa:	93 81       	ldd	r25, Z+3	; 0x03
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	4f e7       	ldi	r20, 0x7F	; 127
    2202:	53 e4       	ldi	r21, 0x43	; 67
    2204:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2208:	18 16       	cp	r1, r24
    220a:	0c f0       	brlt	.+2      	; 0x220e <Stepper_vidDirection+0x618>
    220c:	c0 c0       	rjmp	.+384    	; 0x238e <Stepper_vidDirection+0x798>
	{
		_delay_ms(__us / 1000.0);
    220e:	fe 01       	movw	r30, r28
    2210:	e3 5b       	subi	r30, 0xB3	; 179
    2212:	fe 4f       	sbci	r31, 0xFE	; 254
    2214:	60 81       	ld	r22, Z
    2216:	71 81       	ldd	r23, Z+1	; 0x01
    2218:	82 81       	ldd	r24, Z+2	; 0x02
    221a:	93 81       	ldd	r25, Z+3	; 0x03
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	4a e7       	ldi	r20, 0x7A	; 122
    2222:	54 e4       	ldi	r21, 0x44	; 68
    2224:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2228:	dc 01       	movw	r26, r24
    222a:	cb 01       	movw	r24, r22
    222c:	fe 01       	movw	r30, r28
    222e:	ec 5b       	subi	r30, 0xBC	; 188
    2230:	fe 4f       	sbci	r31, 0xFE	; 254
    2232:	80 83       	st	Z, r24
    2234:	91 83       	std	Z+1, r25	; 0x01
    2236:	a2 83       	std	Z+2, r26	; 0x02
    2238:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    223a:	8e 01       	movw	r16, r28
    223c:	00 5c       	subi	r16, 0xC0	; 192
    223e:	1e 4f       	sbci	r17, 0xFE	; 254
    2240:	fe 01       	movw	r30, r28
    2242:	ec 5b       	subi	r30, 0xBC	; 188
    2244:	fe 4f       	sbci	r31, 0xFE	; 254
    2246:	60 81       	ld	r22, Z
    2248:	71 81       	ldd	r23, Z+1	; 0x01
    224a:	82 81       	ldd	r24, Z+2	; 0x02
    224c:	93 81       	ldd	r25, Z+3	; 0x03
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	4a ef       	ldi	r20, 0xFA	; 250
    2254:	54 e4       	ldi	r21, 0x44	; 68
    2256:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    225a:	dc 01       	movw	r26, r24
    225c:	cb 01       	movw	r24, r22
    225e:	f8 01       	movw	r30, r16
    2260:	80 83       	st	Z, r24
    2262:	91 83       	std	Z+1, r25	; 0x01
    2264:	a2 83       	std	Z+2, r26	; 0x02
    2266:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2268:	fe 01       	movw	r30, r28
    226a:	e0 5c       	subi	r30, 0xC0	; 192
    226c:	fe 4f       	sbci	r31, 0xFE	; 254
    226e:	60 81       	ld	r22, Z
    2270:	71 81       	ldd	r23, Z+1	; 0x01
    2272:	82 81       	ldd	r24, Z+2	; 0x02
    2274:	93 81       	ldd	r25, Z+3	; 0x03
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	30 e0       	ldi	r19, 0x00	; 0
    227a:	40 e8       	ldi	r20, 0x80	; 128
    227c:	5f e3       	ldi	r21, 0x3F	; 63
    227e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2282:	88 23       	and	r24, r24
    2284:	44 f4       	brge	.+16     	; 0x2296 <Stepper_vidDirection+0x6a0>
		__ticks = 1;
    2286:	fe 01       	movw	r30, r28
    2288:	e2 5c       	subi	r30, 0xC2	; 194
    228a:	fe 4f       	sbci	r31, 0xFE	; 254
    228c:	81 e0       	ldi	r24, 0x01	; 1
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	91 83       	std	Z+1, r25	; 0x01
    2292:	80 83       	st	Z, r24
    2294:	64 c0       	rjmp	.+200    	; 0x235e <Stepper_vidDirection+0x768>
	else if (__tmp > 65535)
    2296:	fe 01       	movw	r30, r28
    2298:	e0 5c       	subi	r30, 0xC0	; 192
    229a:	fe 4f       	sbci	r31, 0xFE	; 254
    229c:	60 81       	ld	r22, Z
    229e:	71 81       	ldd	r23, Z+1	; 0x01
    22a0:	82 81       	ldd	r24, Z+2	; 0x02
    22a2:	93 81       	ldd	r25, Z+3	; 0x03
    22a4:	20 e0       	ldi	r18, 0x00	; 0
    22a6:	3f ef       	ldi	r19, 0xFF	; 255
    22a8:	4f e7       	ldi	r20, 0x7F	; 127
    22aa:	57 e4       	ldi	r21, 0x47	; 71
    22ac:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    22b0:	18 16       	cp	r1, r24
    22b2:	0c f0       	brlt	.+2      	; 0x22b6 <Stepper_vidDirection+0x6c0>
    22b4:	43 c0       	rjmp	.+134    	; 0x233c <Stepper_vidDirection+0x746>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22b6:	fe 01       	movw	r30, r28
    22b8:	ec 5b       	subi	r30, 0xBC	; 188
    22ba:	fe 4f       	sbci	r31, 0xFE	; 254
    22bc:	60 81       	ld	r22, Z
    22be:	71 81       	ldd	r23, Z+1	; 0x01
    22c0:	82 81       	ldd	r24, Z+2	; 0x02
    22c2:	93 81       	ldd	r25, Z+3	; 0x03
    22c4:	20 e0       	ldi	r18, 0x00	; 0
    22c6:	30 e0       	ldi	r19, 0x00	; 0
    22c8:	40 e2       	ldi	r20, 0x20	; 32
    22ca:	51 e4       	ldi	r21, 0x41	; 65
    22cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22d0:	dc 01       	movw	r26, r24
    22d2:	cb 01       	movw	r24, r22
    22d4:	8e 01       	movw	r16, r28
    22d6:	02 5c       	subi	r16, 0xC2	; 194
    22d8:	1e 4f       	sbci	r17, 0xFE	; 254
    22da:	bc 01       	movw	r22, r24
    22dc:	cd 01       	movw	r24, r26
    22de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	f8 01       	movw	r30, r16
    22e8:	91 83       	std	Z+1, r25	; 0x01
    22ea:	80 83       	st	Z, r24
    22ec:	1f c0       	rjmp	.+62     	; 0x232c <Stepper_vidDirection+0x736>
    22ee:	fe 01       	movw	r30, r28
    22f0:	e4 5c       	subi	r30, 0xC4	; 196
    22f2:	fe 4f       	sbci	r31, 0xFE	; 254
    22f4:	88 ec       	ldi	r24, 0xC8	; 200
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	91 83       	std	Z+1, r25	; 0x01
    22fa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    22fc:	fe 01       	movw	r30, r28
    22fe:	e4 5c       	subi	r30, 0xC4	; 196
    2300:	fe 4f       	sbci	r31, 0xFE	; 254
    2302:	80 81       	ld	r24, Z
    2304:	91 81       	ldd	r25, Z+1	; 0x01
    2306:	01 97       	sbiw	r24, 0x01	; 1
    2308:	f1 f7       	brne	.-4      	; 0x2306 <Stepper_vidDirection+0x710>
    230a:	fe 01       	movw	r30, r28
    230c:	e4 5c       	subi	r30, 0xC4	; 196
    230e:	fe 4f       	sbci	r31, 0xFE	; 254
    2310:	91 83       	std	Z+1, r25	; 0x01
    2312:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2314:	de 01       	movw	r26, r28
    2316:	a2 5c       	subi	r26, 0xC2	; 194
    2318:	be 4f       	sbci	r27, 0xFE	; 254
    231a:	fe 01       	movw	r30, r28
    231c:	e2 5c       	subi	r30, 0xC2	; 194
    231e:	fe 4f       	sbci	r31, 0xFE	; 254
    2320:	80 81       	ld	r24, Z
    2322:	91 81       	ldd	r25, Z+1	; 0x01
    2324:	01 97       	sbiw	r24, 0x01	; 1
    2326:	11 96       	adiw	r26, 0x01	; 1
    2328:	9c 93       	st	X, r25
    232a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    232c:	fe 01       	movw	r30, r28
    232e:	e2 5c       	subi	r30, 0xC2	; 194
    2330:	fe 4f       	sbci	r31, 0xFE	; 254
    2332:	80 81       	ld	r24, Z
    2334:	91 81       	ldd	r25, Z+1	; 0x01
    2336:	00 97       	sbiw	r24, 0x00	; 0
    2338:	d1 f6       	brne	.-76     	; 0x22ee <Stepper_vidDirection+0x6f8>
    233a:	4b c0       	rjmp	.+150    	; 0x23d2 <Stepper_vidDirection+0x7dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    233c:	8e 01       	movw	r16, r28
    233e:	02 5c       	subi	r16, 0xC2	; 194
    2340:	1e 4f       	sbci	r17, 0xFE	; 254
    2342:	fe 01       	movw	r30, r28
    2344:	e0 5c       	subi	r30, 0xC0	; 192
    2346:	fe 4f       	sbci	r31, 0xFE	; 254
    2348:	60 81       	ld	r22, Z
    234a:	71 81       	ldd	r23, Z+1	; 0x01
    234c:	82 81       	ldd	r24, Z+2	; 0x02
    234e:	93 81       	ldd	r25, Z+3	; 0x03
    2350:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2354:	dc 01       	movw	r26, r24
    2356:	cb 01       	movw	r24, r22
    2358:	f8 01       	movw	r30, r16
    235a:	91 83       	std	Z+1, r25	; 0x01
    235c:	80 83       	st	Z, r24
    235e:	de 01       	movw	r26, r28
    2360:	a6 5c       	subi	r26, 0xC6	; 198
    2362:	be 4f       	sbci	r27, 0xFE	; 254
    2364:	fe 01       	movw	r30, r28
    2366:	e2 5c       	subi	r30, 0xC2	; 194
    2368:	fe 4f       	sbci	r31, 0xFE	; 254
    236a:	80 81       	ld	r24, Z
    236c:	91 81       	ldd	r25, Z+1	; 0x01
    236e:	11 96       	adiw	r26, 0x01	; 1
    2370:	9c 93       	st	X, r25
    2372:	8e 93       	st	-X, r24
    2374:	fe 01       	movw	r30, r28
    2376:	e6 5c       	subi	r30, 0xC6	; 198
    2378:	fe 4f       	sbci	r31, 0xFE	; 254
    237a:	80 81       	ld	r24, Z
    237c:	91 81       	ldd	r25, Z+1	; 0x01
    237e:	01 97       	sbiw	r24, 0x01	; 1
    2380:	f1 f7       	brne	.-4      	; 0x237e <Stepper_vidDirection+0x788>
    2382:	fe 01       	movw	r30, r28
    2384:	e6 5c       	subi	r30, 0xC6	; 198
    2386:	fe 4f       	sbci	r31, 0xFE	; 254
    2388:	91 83       	std	Z+1, r25	; 0x01
    238a:	80 83       	st	Z, r24
    238c:	22 c0       	rjmp	.+68     	; 0x23d2 <Stepper_vidDirection+0x7dc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    238e:	8e 01       	movw	r16, r28
    2390:	08 5b       	subi	r16, 0xB8	; 184
    2392:	1e 4f       	sbci	r17, 0xFE	; 254
    2394:	fe 01       	movw	r30, r28
    2396:	e7 5b       	subi	r30, 0xB7	; 183
    2398:	fe 4f       	sbci	r31, 0xFE	; 254
    239a:	60 81       	ld	r22, Z
    239c:	71 81       	ldd	r23, Z+1	; 0x01
    239e:	82 81       	ldd	r24, Z+2	; 0x02
    23a0:	93 81       	ldd	r25, Z+3	; 0x03
    23a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23a6:	dc 01       	movw	r26, r24
    23a8:	cb 01       	movw	r24, r22
    23aa:	f8 01       	movw	r30, r16
    23ac:	80 83       	st	Z, r24
    23ae:	de 01       	movw	r26, r28
    23b0:	a7 5c       	subi	r26, 0xC7	; 199
    23b2:	be 4f       	sbci	r27, 0xFE	; 254
    23b4:	fe 01       	movw	r30, r28
    23b6:	e8 5b       	subi	r30, 0xB8	; 184
    23b8:	fe 4f       	sbci	r31, 0xFE	; 254
    23ba:	80 81       	ld	r24, Z
    23bc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    23be:	fe 01       	movw	r30, r28
    23c0:	e7 5c       	subi	r30, 0xC7	; 199
    23c2:	fe 4f       	sbci	r31, 0xFE	; 254
    23c4:	80 81       	ld	r24, Z
    23c6:	8a 95       	dec	r24
    23c8:	f1 f7       	brne	.-4      	; 0x23c6 <Stepper_vidDirection+0x7d0>
    23ca:	fe 01       	movw	r30, r28
    23cc:	e7 5c       	subi	r30, 0xC7	; 199
    23ce:	fe 4f       	sbci	r31, 0xFE	; 254
    23d0:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    23d2:	89 e0       	ldi	r24, 0x09	; 9
    23d4:	61 e0       	ldi	r22, 0x01	; 1
    23d6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    23da:	8a e0       	ldi	r24, 0x0A	; 10
    23dc:	60 e0       	ldi	r22, 0x00	; 0
    23de:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    23e2:	8b e0       	ldi	r24, 0x0B	; 11
    23e4:	60 e0       	ldi	r22, 0x00	; 0
    23e6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    23ea:	8c e0       	ldi	r24, 0x0C	; 12
    23ec:	60 e0       	ldi	r22, 0x00	; 0
    23ee:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    23f2:	fe 01       	movw	r30, r28
    23f4:	eb 5c       	subi	r30, 0xCB	; 203
    23f6:	fe 4f       	sbci	r31, 0xFE	; 254
    23f8:	80 e0       	ldi	r24, 0x00	; 0
    23fa:	90 e0       	ldi	r25, 0x00	; 0
    23fc:	aa e7       	ldi	r26, 0x7A	; 122
    23fe:	b4 e4       	ldi	r27, 0x44	; 68
    2400:	80 83       	st	Z, r24
    2402:	91 83       	std	Z+1, r25	; 0x01
    2404:	a2 83       	std	Z+2, r26	; 0x02
    2406:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2408:	8e 01       	movw	r16, r28
    240a:	0f 5c       	subi	r16, 0xCF	; 207
    240c:	1e 4f       	sbci	r17, 0xFE	; 254
    240e:	fe 01       	movw	r30, r28
    2410:	eb 5c       	subi	r30, 0xCB	; 203
    2412:	fe 4f       	sbci	r31, 0xFE	; 254
    2414:	60 81       	ld	r22, Z
    2416:	71 81       	ldd	r23, Z+1	; 0x01
    2418:	82 81       	ldd	r24, Z+2	; 0x02
    241a:	93 81       	ldd	r25, Z+3	; 0x03
    241c:	2b ea       	ldi	r18, 0xAB	; 171
    241e:	3a ea       	ldi	r19, 0xAA	; 170
    2420:	4a e2       	ldi	r20, 0x2A	; 42
    2422:	50 e4       	ldi	r21, 0x40	; 64
    2424:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	f8 01       	movw	r30, r16
    242e:	80 83       	st	Z, r24
    2430:	91 83       	std	Z+1, r25	; 0x01
    2432:	a2 83       	std	Z+2, r26	; 0x02
    2434:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2436:	fe 01       	movw	r30, r28
    2438:	ef 5c       	subi	r30, 0xCF	; 207
    243a:	fe 4f       	sbci	r31, 0xFE	; 254
    243c:	60 81       	ld	r22, Z
    243e:	71 81       	ldd	r23, Z+1	; 0x01
    2440:	82 81       	ldd	r24, Z+2	; 0x02
    2442:	93 81       	ldd	r25, Z+3	; 0x03
    2444:	20 e0       	ldi	r18, 0x00	; 0
    2446:	30 e0       	ldi	r19, 0x00	; 0
    2448:	40 e8       	ldi	r20, 0x80	; 128
    244a:	5f e3       	ldi	r21, 0x3F	; 63
    244c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2450:	88 23       	and	r24, r24
    2452:	34 f4       	brge	.+12     	; 0x2460 <Stepper_vidDirection+0x86a>
		__ticks = 1;
    2454:	fe 01       	movw	r30, r28
    2456:	e0 5d       	subi	r30, 0xD0	; 208
    2458:	fe 4f       	sbci	r31, 0xFE	; 254
    245a:	81 e0       	ldi	r24, 0x01	; 1
    245c:	80 83       	st	Z, r24
    245e:	e0 c0       	rjmp	.+448    	; 0x2620 <Stepper_vidDirection+0xa2a>
	else if (__tmp > 255)
    2460:	fe 01       	movw	r30, r28
    2462:	ef 5c       	subi	r30, 0xCF	; 207
    2464:	fe 4f       	sbci	r31, 0xFE	; 254
    2466:	60 81       	ld	r22, Z
    2468:	71 81       	ldd	r23, Z+1	; 0x01
    246a:	82 81       	ldd	r24, Z+2	; 0x02
    246c:	93 81       	ldd	r25, Z+3	; 0x03
    246e:	20 e0       	ldi	r18, 0x00	; 0
    2470:	30 e0       	ldi	r19, 0x00	; 0
    2472:	4f e7       	ldi	r20, 0x7F	; 127
    2474:	53 e4       	ldi	r21, 0x43	; 67
    2476:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    247a:	18 16       	cp	r1, r24
    247c:	0c f0       	brlt	.+2      	; 0x2480 <Stepper_vidDirection+0x88a>
    247e:	c0 c0       	rjmp	.+384    	; 0x2600 <Stepper_vidDirection+0xa0a>
	{
		_delay_ms(__us / 1000.0);
    2480:	fe 01       	movw	r30, r28
    2482:	eb 5c       	subi	r30, 0xCB	; 203
    2484:	fe 4f       	sbci	r31, 0xFE	; 254
    2486:	60 81       	ld	r22, Z
    2488:	71 81       	ldd	r23, Z+1	; 0x01
    248a:	82 81       	ldd	r24, Z+2	; 0x02
    248c:	93 81       	ldd	r25, Z+3	; 0x03
    248e:	20 e0       	ldi	r18, 0x00	; 0
    2490:	30 e0       	ldi	r19, 0x00	; 0
    2492:	4a e7       	ldi	r20, 0x7A	; 122
    2494:	54 e4       	ldi	r21, 0x44	; 68
    2496:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    249a:	dc 01       	movw	r26, r24
    249c:	cb 01       	movw	r24, r22
    249e:	fe 01       	movw	r30, r28
    24a0:	e4 5d       	subi	r30, 0xD4	; 212
    24a2:	fe 4f       	sbci	r31, 0xFE	; 254
    24a4:	80 83       	st	Z, r24
    24a6:	91 83       	std	Z+1, r25	; 0x01
    24a8:	a2 83       	std	Z+2, r26	; 0x02
    24aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24ac:	8e 01       	movw	r16, r28
    24ae:	08 5d       	subi	r16, 0xD8	; 216
    24b0:	1e 4f       	sbci	r17, 0xFE	; 254
    24b2:	fe 01       	movw	r30, r28
    24b4:	e4 5d       	subi	r30, 0xD4	; 212
    24b6:	fe 4f       	sbci	r31, 0xFE	; 254
    24b8:	60 81       	ld	r22, Z
    24ba:	71 81       	ldd	r23, Z+1	; 0x01
    24bc:	82 81       	ldd	r24, Z+2	; 0x02
    24be:	93 81       	ldd	r25, Z+3	; 0x03
    24c0:	20 e0       	ldi	r18, 0x00	; 0
    24c2:	30 e0       	ldi	r19, 0x00	; 0
    24c4:	4a ef       	ldi	r20, 0xFA	; 250
    24c6:	54 e4       	ldi	r21, 0x44	; 68
    24c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24cc:	dc 01       	movw	r26, r24
    24ce:	cb 01       	movw	r24, r22
    24d0:	f8 01       	movw	r30, r16
    24d2:	80 83       	st	Z, r24
    24d4:	91 83       	std	Z+1, r25	; 0x01
    24d6:	a2 83       	std	Z+2, r26	; 0x02
    24d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24da:	fe 01       	movw	r30, r28
    24dc:	e8 5d       	subi	r30, 0xD8	; 216
    24de:	fe 4f       	sbci	r31, 0xFE	; 254
    24e0:	60 81       	ld	r22, Z
    24e2:	71 81       	ldd	r23, Z+1	; 0x01
    24e4:	82 81       	ldd	r24, Z+2	; 0x02
    24e6:	93 81       	ldd	r25, Z+3	; 0x03
    24e8:	20 e0       	ldi	r18, 0x00	; 0
    24ea:	30 e0       	ldi	r19, 0x00	; 0
    24ec:	40 e8       	ldi	r20, 0x80	; 128
    24ee:	5f e3       	ldi	r21, 0x3F	; 63
    24f0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    24f4:	88 23       	and	r24, r24
    24f6:	44 f4       	brge	.+16     	; 0x2508 <Stepper_vidDirection+0x912>
		__ticks = 1;
    24f8:	fe 01       	movw	r30, r28
    24fa:	ea 5d       	subi	r30, 0xDA	; 218
    24fc:	fe 4f       	sbci	r31, 0xFE	; 254
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	90 e0       	ldi	r25, 0x00	; 0
    2502:	91 83       	std	Z+1, r25	; 0x01
    2504:	80 83       	st	Z, r24
    2506:	64 c0       	rjmp	.+200    	; 0x25d0 <Stepper_vidDirection+0x9da>
	else if (__tmp > 65535)
    2508:	fe 01       	movw	r30, r28
    250a:	e8 5d       	subi	r30, 0xD8	; 216
    250c:	fe 4f       	sbci	r31, 0xFE	; 254
    250e:	60 81       	ld	r22, Z
    2510:	71 81       	ldd	r23, Z+1	; 0x01
    2512:	82 81       	ldd	r24, Z+2	; 0x02
    2514:	93 81       	ldd	r25, Z+3	; 0x03
    2516:	20 e0       	ldi	r18, 0x00	; 0
    2518:	3f ef       	ldi	r19, 0xFF	; 255
    251a:	4f e7       	ldi	r20, 0x7F	; 127
    251c:	57 e4       	ldi	r21, 0x47	; 71
    251e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2522:	18 16       	cp	r1, r24
    2524:	0c f0       	brlt	.+2      	; 0x2528 <Stepper_vidDirection+0x932>
    2526:	43 c0       	rjmp	.+134    	; 0x25ae <Stepper_vidDirection+0x9b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2528:	fe 01       	movw	r30, r28
    252a:	e4 5d       	subi	r30, 0xD4	; 212
    252c:	fe 4f       	sbci	r31, 0xFE	; 254
    252e:	60 81       	ld	r22, Z
    2530:	71 81       	ldd	r23, Z+1	; 0x01
    2532:	82 81       	ldd	r24, Z+2	; 0x02
    2534:	93 81       	ldd	r25, Z+3	; 0x03
    2536:	20 e0       	ldi	r18, 0x00	; 0
    2538:	30 e0       	ldi	r19, 0x00	; 0
    253a:	40 e2       	ldi	r20, 0x20	; 32
    253c:	51 e4       	ldi	r21, 0x41	; 65
    253e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2542:	dc 01       	movw	r26, r24
    2544:	cb 01       	movw	r24, r22
    2546:	8e 01       	movw	r16, r28
    2548:	0a 5d       	subi	r16, 0xDA	; 218
    254a:	1e 4f       	sbci	r17, 0xFE	; 254
    254c:	bc 01       	movw	r22, r24
    254e:	cd 01       	movw	r24, r26
    2550:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2554:	dc 01       	movw	r26, r24
    2556:	cb 01       	movw	r24, r22
    2558:	f8 01       	movw	r30, r16
    255a:	91 83       	std	Z+1, r25	; 0x01
    255c:	80 83       	st	Z, r24
    255e:	1f c0       	rjmp	.+62     	; 0x259e <Stepper_vidDirection+0x9a8>
    2560:	fe 01       	movw	r30, r28
    2562:	ec 5d       	subi	r30, 0xDC	; 220
    2564:	fe 4f       	sbci	r31, 0xFE	; 254
    2566:	88 ec       	ldi	r24, 0xC8	; 200
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	91 83       	std	Z+1, r25	; 0x01
    256c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    256e:	fe 01       	movw	r30, r28
    2570:	ec 5d       	subi	r30, 0xDC	; 220
    2572:	fe 4f       	sbci	r31, 0xFE	; 254
    2574:	80 81       	ld	r24, Z
    2576:	91 81       	ldd	r25, Z+1	; 0x01
    2578:	01 97       	sbiw	r24, 0x01	; 1
    257a:	f1 f7       	brne	.-4      	; 0x2578 <Stepper_vidDirection+0x982>
    257c:	fe 01       	movw	r30, r28
    257e:	ec 5d       	subi	r30, 0xDC	; 220
    2580:	fe 4f       	sbci	r31, 0xFE	; 254
    2582:	91 83       	std	Z+1, r25	; 0x01
    2584:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2586:	de 01       	movw	r26, r28
    2588:	aa 5d       	subi	r26, 0xDA	; 218
    258a:	be 4f       	sbci	r27, 0xFE	; 254
    258c:	fe 01       	movw	r30, r28
    258e:	ea 5d       	subi	r30, 0xDA	; 218
    2590:	fe 4f       	sbci	r31, 0xFE	; 254
    2592:	80 81       	ld	r24, Z
    2594:	91 81       	ldd	r25, Z+1	; 0x01
    2596:	01 97       	sbiw	r24, 0x01	; 1
    2598:	11 96       	adiw	r26, 0x01	; 1
    259a:	9c 93       	st	X, r25
    259c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    259e:	fe 01       	movw	r30, r28
    25a0:	ea 5d       	subi	r30, 0xDA	; 218
    25a2:	fe 4f       	sbci	r31, 0xFE	; 254
    25a4:	80 81       	ld	r24, Z
    25a6:	91 81       	ldd	r25, Z+1	; 0x01
    25a8:	00 97       	sbiw	r24, 0x00	; 0
    25aa:	d1 f6       	brne	.-76     	; 0x2560 <Stepper_vidDirection+0x96a>
    25ac:	4b c0       	rjmp	.+150    	; 0x2644 <Stepper_vidDirection+0xa4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25ae:	8e 01       	movw	r16, r28
    25b0:	0a 5d       	subi	r16, 0xDA	; 218
    25b2:	1e 4f       	sbci	r17, 0xFE	; 254
    25b4:	fe 01       	movw	r30, r28
    25b6:	e8 5d       	subi	r30, 0xD8	; 216
    25b8:	fe 4f       	sbci	r31, 0xFE	; 254
    25ba:	60 81       	ld	r22, Z
    25bc:	71 81       	ldd	r23, Z+1	; 0x01
    25be:	82 81       	ldd	r24, Z+2	; 0x02
    25c0:	93 81       	ldd	r25, Z+3	; 0x03
    25c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25c6:	dc 01       	movw	r26, r24
    25c8:	cb 01       	movw	r24, r22
    25ca:	f8 01       	movw	r30, r16
    25cc:	91 83       	std	Z+1, r25	; 0x01
    25ce:	80 83       	st	Z, r24
    25d0:	de 01       	movw	r26, r28
    25d2:	ae 5d       	subi	r26, 0xDE	; 222
    25d4:	be 4f       	sbci	r27, 0xFE	; 254
    25d6:	fe 01       	movw	r30, r28
    25d8:	ea 5d       	subi	r30, 0xDA	; 218
    25da:	fe 4f       	sbci	r31, 0xFE	; 254
    25dc:	80 81       	ld	r24, Z
    25de:	91 81       	ldd	r25, Z+1	; 0x01
    25e0:	11 96       	adiw	r26, 0x01	; 1
    25e2:	9c 93       	st	X, r25
    25e4:	8e 93       	st	-X, r24
    25e6:	fe 01       	movw	r30, r28
    25e8:	ee 5d       	subi	r30, 0xDE	; 222
    25ea:	fe 4f       	sbci	r31, 0xFE	; 254
    25ec:	80 81       	ld	r24, Z
    25ee:	91 81       	ldd	r25, Z+1	; 0x01
    25f0:	01 97       	sbiw	r24, 0x01	; 1
    25f2:	f1 f7       	brne	.-4      	; 0x25f0 <Stepper_vidDirection+0x9fa>
    25f4:	fe 01       	movw	r30, r28
    25f6:	ee 5d       	subi	r30, 0xDE	; 222
    25f8:	fe 4f       	sbci	r31, 0xFE	; 254
    25fa:	91 83       	std	Z+1, r25	; 0x01
    25fc:	80 83       	st	Z, r24
    25fe:	22 c0       	rjmp	.+68     	; 0x2644 <Stepper_vidDirection+0xa4e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2600:	8e 01       	movw	r16, r28
    2602:	00 5d       	subi	r16, 0xD0	; 208
    2604:	1e 4f       	sbci	r17, 0xFE	; 254
    2606:	fe 01       	movw	r30, r28
    2608:	ef 5c       	subi	r30, 0xCF	; 207
    260a:	fe 4f       	sbci	r31, 0xFE	; 254
    260c:	60 81       	ld	r22, Z
    260e:	71 81       	ldd	r23, Z+1	; 0x01
    2610:	82 81       	ldd	r24, Z+2	; 0x02
    2612:	93 81       	ldd	r25, Z+3	; 0x03
    2614:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2618:	dc 01       	movw	r26, r24
    261a:	cb 01       	movw	r24, r22
    261c:	f8 01       	movw	r30, r16
    261e:	80 83       	st	Z, r24
    2620:	de 01       	movw	r26, r28
    2622:	af 5d       	subi	r26, 0xDF	; 223
    2624:	be 4f       	sbci	r27, 0xFE	; 254
    2626:	fe 01       	movw	r30, r28
    2628:	e0 5d       	subi	r30, 0xD0	; 208
    262a:	fe 4f       	sbci	r31, 0xFE	; 254
    262c:	80 81       	ld	r24, Z
    262e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2630:	fe 01       	movw	r30, r28
    2632:	ef 5d       	subi	r30, 0xDF	; 223
    2634:	fe 4f       	sbci	r31, 0xFE	; 254
    2636:	80 81       	ld	r24, Z
    2638:	8a 95       	dec	r24
    263a:	f1 f7       	brne	.-4      	; 0x2638 <Stepper_vidDirection+0xa42>
    263c:	fe 01       	movw	r30, r28
    263e:	ef 5d       	subi	r30, 0xDF	; 223
    2640:	fe 4f       	sbci	r31, 0xFE	; 254
    2642:	80 83       	st	Z, r24
void Stepper_vidDirection(char direction, u8 angle){
	u8 x;
	if(direction=='L'){
		switch(angle){
		case 90:
			for(x=0; x<135; x++){
    2644:	de 01       	movw	r26, r28
    2646:	af 57       	subi	r26, 0x7F	; 127
    2648:	be 4f       	sbci	r27, 0xFE	; 254
    264a:	fe 01       	movw	r30, r28
    264c:	ef 57       	subi	r30, 0x7F	; 127
    264e:	fe 4f       	sbci	r31, 0xFE	; 254
    2650:	80 81       	ld	r24, Z
    2652:	8f 5f       	subi	r24, 0xFF	; 255
    2654:	8c 93       	st	X, r24
    2656:	fe 01       	movw	r30, r28
    2658:	ef 57       	subi	r30, 0x7F	; 127
    265a:	fe 4f       	sbci	r31, 0xFE	; 254
    265c:	80 81       	ld	r24, Z
    265e:	87 38       	cpi	r24, 0x87	; 135
    2660:	08 f4       	brcc	.+2      	; 0x2664 <Stepper_vidDirection+0xa6e>
    2662:	0c cb       	rjmp	.-2536   	; 0x1c7c <Stepper_vidDirection+0x86>
    2664:	0c 94 29 21 	jmp	0x4252	; 0x4252 <Stepper_vidDirection+0x265c>
				_delay_us(1000);
			}
			break;

		case 180:
			for(x=0; x<250; x++){
    2668:	fe 01       	movw	r30, r28
    266a:	ef 57       	subi	r30, 0x7F	; 127
    266c:	fe 4f       	sbci	r31, 0xFE	; 254
    266e:	10 82       	st	Z, r1
    2670:	ed c4       	rjmp	.+2522   	; 0x304c <Stepper_vidDirection+0x1456>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    2672:	89 e0       	ldi	r24, 0x09	; 9
    2674:	60 e0       	ldi	r22, 0x00	; 0
    2676:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    267a:	8a e0       	ldi	r24, 0x0A	; 10
    267c:	60 e0       	ldi	r22, 0x00	; 0
    267e:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2682:	8b e0       	ldi	r24, 0x0B	; 11
    2684:	60 e0       	ldi	r22, 0x00	; 0
    2686:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    268a:	8c e0       	ldi	r24, 0x0C	; 12
    268c:	61 e0       	ldi	r22, 0x01	; 1
    268e:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    2692:	fe 01       	movw	r30, r28
    2694:	e3 5e       	subi	r30, 0xE3	; 227
    2696:	fe 4f       	sbci	r31, 0xFE	; 254
    2698:	80 e0       	ldi	r24, 0x00	; 0
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	aa e7       	ldi	r26, 0x7A	; 122
    269e:	b4 e4       	ldi	r27, 0x44	; 68
    26a0:	80 83       	st	Z, r24
    26a2:	91 83       	std	Z+1, r25	; 0x01
    26a4:	a2 83       	std	Z+2, r26	; 0x02
    26a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    26a8:	8e 01       	movw	r16, r28
    26aa:	07 5e       	subi	r16, 0xE7	; 231
    26ac:	1e 4f       	sbci	r17, 0xFE	; 254
    26ae:	fe 01       	movw	r30, r28
    26b0:	e3 5e       	subi	r30, 0xE3	; 227
    26b2:	fe 4f       	sbci	r31, 0xFE	; 254
    26b4:	60 81       	ld	r22, Z
    26b6:	71 81       	ldd	r23, Z+1	; 0x01
    26b8:	82 81       	ldd	r24, Z+2	; 0x02
    26ba:	93 81       	ldd	r25, Z+3	; 0x03
    26bc:	2b ea       	ldi	r18, 0xAB	; 171
    26be:	3a ea       	ldi	r19, 0xAA	; 170
    26c0:	4a e2       	ldi	r20, 0x2A	; 42
    26c2:	50 e4       	ldi	r21, 0x40	; 64
    26c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26c8:	dc 01       	movw	r26, r24
    26ca:	cb 01       	movw	r24, r22
    26cc:	f8 01       	movw	r30, r16
    26ce:	80 83       	st	Z, r24
    26d0:	91 83       	std	Z+1, r25	; 0x01
    26d2:	a2 83       	std	Z+2, r26	; 0x02
    26d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26d6:	fe 01       	movw	r30, r28
    26d8:	e7 5e       	subi	r30, 0xE7	; 231
    26da:	fe 4f       	sbci	r31, 0xFE	; 254
    26dc:	60 81       	ld	r22, Z
    26de:	71 81       	ldd	r23, Z+1	; 0x01
    26e0:	82 81       	ldd	r24, Z+2	; 0x02
    26e2:	93 81       	ldd	r25, Z+3	; 0x03
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	40 e8       	ldi	r20, 0x80	; 128
    26ea:	5f e3       	ldi	r21, 0x3F	; 63
    26ec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    26f0:	88 23       	and	r24, r24
    26f2:	34 f4       	brge	.+12     	; 0x2700 <Stepper_vidDirection+0xb0a>
		__ticks = 1;
    26f4:	fe 01       	movw	r30, r28
    26f6:	e8 5e       	subi	r30, 0xE8	; 232
    26f8:	fe 4f       	sbci	r31, 0xFE	; 254
    26fa:	81 e0       	ldi	r24, 0x01	; 1
    26fc:	80 83       	st	Z, r24
    26fe:	e0 c0       	rjmp	.+448    	; 0x28c0 <Stepper_vidDirection+0xcca>
	else if (__tmp > 255)
    2700:	fe 01       	movw	r30, r28
    2702:	e7 5e       	subi	r30, 0xE7	; 231
    2704:	fe 4f       	sbci	r31, 0xFE	; 254
    2706:	60 81       	ld	r22, Z
    2708:	71 81       	ldd	r23, Z+1	; 0x01
    270a:	82 81       	ldd	r24, Z+2	; 0x02
    270c:	93 81       	ldd	r25, Z+3	; 0x03
    270e:	20 e0       	ldi	r18, 0x00	; 0
    2710:	30 e0       	ldi	r19, 0x00	; 0
    2712:	4f e7       	ldi	r20, 0x7F	; 127
    2714:	53 e4       	ldi	r21, 0x43	; 67
    2716:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    271a:	18 16       	cp	r1, r24
    271c:	0c f0       	brlt	.+2      	; 0x2720 <Stepper_vidDirection+0xb2a>
    271e:	c0 c0       	rjmp	.+384    	; 0x28a0 <Stepper_vidDirection+0xcaa>
	{
		_delay_ms(__us / 1000.0);
    2720:	fe 01       	movw	r30, r28
    2722:	e3 5e       	subi	r30, 0xE3	; 227
    2724:	fe 4f       	sbci	r31, 0xFE	; 254
    2726:	60 81       	ld	r22, Z
    2728:	71 81       	ldd	r23, Z+1	; 0x01
    272a:	82 81       	ldd	r24, Z+2	; 0x02
    272c:	93 81       	ldd	r25, Z+3	; 0x03
    272e:	20 e0       	ldi	r18, 0x00	; 0
    2730:	30 e0       	ldi	r19, 0x00	; 0
    2732:	4a e7       	ldi	r20, 0x7A	; 122
    2734:	54 e4       	ldi	r21, 0x44	; 68
    2736:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    273a:	dc 01       	movw	r26, r24
    273c:	cb 01       	movw	r24, r22
    273e:	fe 01       	movw	r30, r28
    2740:	ec 5e       	subi	r30, 0xEC	; 236
    2742:	fe 4f       	sbci	r31, 0xFE	; 254
    2744:	80 83       	st	Z, r24
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	a2 83       	std	Z+2, r26	; 0x02
    274a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    274c:	8e 01       	movw	r16, r28
    274e:	00 5f       	subi	r16, 0xF0	; 240
    2750:	1e 4f       	sbci	r17, 0xFE	; 254
    2752:	fe 01       	movw	r30, r28
    2754:	ec 5e       	subi	r30, 0xEC	; 236
    2756:	fe 4f       	sbci	r31, 0xFE	; 254
    2758:	60 81       	ld	r22, Z
    275a:	71 81       	ldd	r23, Z+1	; 0x01
    275c:	82 81       	ldd	r24, Z+2	; 0x02
    275e:	93 81       	ldd	r25, Z+3	; 0x03
    2760:	20 e0       	ldi	r18, 0x00	; 0
    2762:	30 e0       	ldi	r19, 0x00	; 0
    2764:	4a ef       	ldi	r20, 0xFA	; 250
    2766:	54 e4       	ldi	r21, 0x44	; 68
    2768:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    276c:	dc 01       	movw	r26, r24
    276e:	cb 01       	movw	r24, r22
    2770:	f8 01       	movw	r30, r16
    2772:	80 83       	st	Z, r24
    2774:	91 83       	std	Z+1, r25	; 0x01
    2776:	a2 83       	std	Z+2, r26	; 0x02
    2778:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    277a:	fe 01       	movw	r30, r28
    277c:	e0 5f       	subi	r30, 0xF0	; 240
    277e:	fe 4f       	sbci	r31, 0xFE	; 254
    2780:	60 81       	ld	r22, Z
    2782:	71 81       	ldd	r23, Z+1	; 0x01
    2784:	82 81       	ldd	r24, Z+2	; 0x02
    2786:	93 81       	ldd	r25, Z+3	; 0x03
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	40 e8       	ldi	r20, 0x80	; 128
    278e:	5f e3       	ldi	r21, 0x3F	; 63
    2790:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2794:	88 23       	and	r24, r24
    2796:	44 f4       	brge	.+16     	; 0x27a8 <Stepper_vidDirection+0xbb2>
		__ticks = 1;
    2798:	fe 01       	movw	r30, r28
    279a:	e2 5f       	subi	r30, 0xF2	; 242
    279c:	fe 4f       	sbci	r31, 0xFE	; 254
    279e:	81 e0       	ldi	r24, 0x01	; 1
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	91 83       	std	Z+1, r25	; 0x01
    27a4:	80 83       	st	Z, r24
    27a6:	64 c0       	rjmp	.+200    	; 0x2870 <Stepper_vidDirection+0xc7a>
	else if (__tmp > 65535)
    27a8:	fe 01       	movw	r30, r28
    27aa:	e0 5f       	subi	r30, 0xF0	; 240
    27ac:	fe 4f       	sbci	r31, 0xFE	; 254
    27ae:	60 81       	ld	r22, Z
    27b0:	71 81       	ldd	r23, Z+1	; 0x01
    27b2:	82 81       	ldd	r24, Z+2	; 0x02
    27b4:	93 81       	ldd	r25, Z+3	; 0x03
    27b6:	20 e0       	ldi	r18, 0x00	; 0
    27b8:	3f ef       	ldi	r19, 0xFF	; 255
    27ba:	4f e7       	ldi	r20, 0x7F	; 127
    27bc:	57 e4       	ldi	r21, 0x47	; 71
    27be:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    27c2:	18 16       	cp	r1, r24
    27c4:	0c f0       	brlt	.+2      	; 0x27c8 <Stepper_vidDirection+0xbd2>
    27c6:	43 c0       	rjmp	.+134    	; 0x284e <Stepper_vidDirection+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27c8:	fe 01       	movw	r30, r28
    27ca:	ec 5e       	subi	r30, 0xEC	; 236
    27cc:	fe 4f       	sbci	r31, 0xFE	; 254
    27ce:	60 81       	ld	r22, Z
    27d0:	71 81       	ldd	r23, Z+1	; 0x01
    27d2:	82 81       	ldd	r24, Z+2	; 0x02
    27d4:	93 81       	ldd	r25, Z+3	; 0x03
    27d6:	20 e0       	ldi	r18, 0x00	; 0
    27d8:	30 e0       	ldi	r19, 0x00	; 0
    27da:	40 e2       	ldi	r20, 0x20	; 32
    27dc:	51 e4       	ldi	r21, 0x41	; 65
    27de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27e2:	dc 01       	movw	r26, r24
    27e4:	cb 01       	movw	r24, r22
    27e6:	8e 01       	movw	r16, r28
    27e8:	02 5f       	subi	r16, 0xF2	; 242
    27ea:	1e 4f       	sbci	r17, 0xFE	; 254
    27ec:	bc 01       	movw	r22, r24
    27ee:	cd 01       	movw	r24, r26
    27f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27f4:	dc 01       	movw	r26, r24
    27f6:	cb 01       	movw	r24, r22
    27f8:	f8 01       	movw	r30, r16
    27fa:	91 83       	std	Z+1, r25	; 0x01
    27fc:	80 83       	st	Z, r24
    27fe:	1f c0       	rjmp	.+62     	; 0x283e <Stepper_vidDirection+0xc48>
    2800:	fe 01       	movw	r30, r28
    2802:	e4 5f       	subi	r30, 0xF4	; 244
    2804:	fe 4f       	sbci	r31, 0xFE	; 254
    2806:	88 ec       	ldi	r24, 0xC8	; 200
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	91 83       	std	Z+1, r25	; 0x01
    280c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    280e:	fe 01       	movw	r30, r28
    2810:	e4 5f       	subi	r30, 0xF4	; 244
    2812:	fe 4f       	sbci	r31, 0xFE	; 254
    2814:	80 81       	ld	r24, Z
    2816:	91 81       	ldd	r25, Z+1	; 0x01
    2818:	01 97       	sbiw	r24, 0x01	; 1
    281a:	f1 f7       	brne	.-4      	; 0x2818 <Stepper_vidDirection+0xc22>
    281c:	fe 01       	movw	r30, r28
    281e:	e4 5f       	subi	r30, 0xF4	; 244
    2820:	fe 4f       	sbci	r31, 0xFE	; 254
    2822:	91 83       	std	Z+1, r25	; 0x01
    2824:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2826:	de 01       	movw	r26, r28
    2828:	a2 5f       	subi	r26, 0xF2	; 242
    282a:	be 4f       	sbci	r27, 0xFE	; 254
    282c:	fe 01       	movw	r30, r28
    282e:	e2 5f       	subi	r30, 0xF2	; 242
    2830:	fe 4f       	sbci	r31, 0xFE	; 254
    2832:	80 81       	ld	r24, Z
    2834:	91 81       	ldd	r25, Z+1	; 0x01
    2836:	01 97       	sbiw	r24, 0x01	; 1
    2838:	11 96       	adiw	r26, 0x01	; 1
    283a:	9c 93       	st	X, r25
    283c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    283e:	fe 01       	movw	r30, r28
    2840:	e2 5f       	subi	r30, 0xF2	; 242
    2842:	fe 4f       	sbci	r31, 0xFE	; 254
    2844:	80 81       	ld	r24, Z
    2846:	91 81       	ldd	r25, Z+1	; 0x01
    2848:	00 97       	sbiw	r24, 0x00	; 0
    284a:	d1 f6       	brne	.-76     	; 0x2800 <Stepper_vidDirection+0xc0a>
    284c:	4b c0       	rjmp	.+150    	; 0x28e4 <Stepper_vidDirection+0xcee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    284e:	8e 01       	movw	r16, r28
    2850:	02 5f       	subi	r16, 0xF2	; 242
    2852:	1e 4f       	sbci	r17, 0xFE	; 254
    2854:	fe 01       	movw	r30, r28
    2856:	e0 5f       	subi	r30, 0xF0	; 240
    2858:	fe 4f       	sbci	r31, 0xFE	; 254
    285a:	60 81       	ld	r22, Z
    285c:	71 81       	ldd	r23, Z+1	; 0x01
    285e:	82 81       	ldd	r24, Z+2	; 0x02
    2860:	93 81       	ldd	r25, Z+3	; 0x03
    2862:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2866:	dc 01       	movw	r26, r24
    2868:	cb 01       	movw	r24, r22
    286a:	f8 01       	movw	r30, r16
    286c:	91 83       	std	Z+1, r25	; 0x01
    286e:	80 83       	st	Z, r24
    2870:	de 01       	movw	r26, r28
    2872:	a6 5f       	subi	r26, 0xF6	; 246
    2874:	be 4f       	sbci	r27, 0xFE	; 254
    2876:	fe 01       	movw	r30, r28
    2878:	e2 5f       	subi	r30, 0xF2	; 242
    287a:	fe 4f       	sbci	r31, 0xFE	; 254
    287c:	80 81       	ld	r24, Z
    287e:	91 81       	ldd	r25, Z+1	; 0x01
    2880:	11 96       	adiw	r26, 0x01	; 1
    2882:	9c 93       	st	X, r25
    2884:	8e 93       	st	-X, r24
    2886:	fe 01       	movw	r30, r28
    2888:	e6 5f       	subi	r30, 0xF6	; 246
    288a:	fe 4f       	sbci	r31, 0xFE	; 254
    288c:	80 81       	ld	r24, Z
    288e:	91 81       	ldd	r25, Z+1	; 0x01
    2890:	01 97       	sbiw	r24, 0x01	; 1
    2892:	f1 f7       	brne	.-4      	; 0x2890 <Stepper_vidDirection+0xc9a>
    2894:	fe 01       	movw	r30, r28
    2896:	e6 5f       	subi	r30, 0xF6	; 246
    2898:	fe 4f       	sbci	r31, 0xFE	; 254
    289a:	91 83       	std	Z+1, r25	; 0x01
    289c:	80 83       	st	Z, r24
    289e:	22 c0       	rjmp	.+68     	; 0x28e4 <Stepper_vidDirection+0xcee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    28a0:	8e 01       	movw	r16, r28
    28a2:	08 5e       	subi	r16, 0xE8	; 232
    28a4:	1e 4f       	sbci	r17, 0xFE	; 254
    28a6:	fe 01       	movw	r30, r28
    28a8:	e7 5e       	subi	r30, 0xE7	; 231
    28aa:	fe 4f       	sbci	r31, 0xFE	; 254
    28ac:	60 81       	ld	r22, Z
    28ae:	71 81       	ldd	r23, Z+1	; 0x01
    28b0:	82 81       	ldd	r24, Z+2	; 0x02
    28b2:	93 81       	ldd	r25, Z+3	; 0x03
    28b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    28b8:	dc 01       	movw	r26, r24
    28ba:	cb 01       	movw	r24, r22
    28bc:	f8 01       	movw	r30, r16
    28be:	80 83       	st	Z, r24
    28c0:	de 01       	movw	r26, r28
    28c2:	a7 5f       	subi	r26, 0xF7	; 247
    28c4:	be 4f       	sbci	r27, 0xFE	; 254
    28c6:	fe 01       	movw	r30, r28
    28c8:	e8 5e       	subi	r30, 0xE8	; 232
    28ca:	fe 4f       	sbci	r31, 0xFE	; 254
    28cc:	80 81       	ld	r24, Z
    28ce:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    28d0:	fe 01       	movw	r30, r28
    28d2:	e7 5f       	subi	r30, 0xF7	; 247
    28d4:	fe 4f       	sbci	r31, 0xFE	; 254
    28d6:	80 81       	ld	r24, Z
    28d8:	8a 95       	dec	r24
    28da:	f1 f7       	brne	.-4      	; 0x28d8 <Stepper_vidDirection+0xce2>
    28dc:	fe 01       	movw	r30, r28
    28de:	e7 5f       	subi	r30, 0xF7	; 247
    28e0:	fe 4f       	sbci	r31, 0xFE	; 254
    28e2:	80 83       	st	Z, r24
				_delay_us(1000);

				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    28e4:	89 e0       	ldi	r24, 0x09	; 9
    28e6:	60 e0       	ldi	r22, 0x00	; 0
    28e8:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    28ec:	8a e0       	ldi	r24, 0x0A	; 10
    28ee:	60 e0       	ldi	r22, 0x00	; 0
    28f0:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    28f4:	8b e0       	ldi	r24, 0x0B	; 11
    28f6:	61 e0       	ldi	r22, 0x01	; 1
    28f8:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    28fc:	8c e0       	ldi	r24, 0x0C	; 12
    28fe:	60 e0       	ldi	r22, 0x00	; 0
    2900:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    2904:	fe 01       	movw	r30, r28
    2906:	eb 5f       	subi	r30, 0xFB	; 251
    2908:	fe 4f       	sbci	r31, 0xFE	; 254
    290a:	80 e0       	ldi	r24, 0x00	; 0
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	aa e7       	ldi	r26, 0x7A	; 122
    2910:	b4 e4       	ldi	r27, 0x44	; 68
    2912:	80 83       	st	Z, r24
    2914:	91 83       	std	Z+1, r25	; 0x01
    2916:	a2 83       	std	Z+2, r26	; 0x02
    2918:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    291a:	8e 01       	movw	r16, r28
    291c:	0f 5f       	subi	r16, 0xFF	; 255
    291e:	1e 4f       	sbci	r17, 0xFE	; 254
    2920:	fe 01       	movw	r30, r28
    2922:	eb 5f       	subi	r30, 0xFB	; 251
    2924:	fe 4f       	sbci	r31, 0xFE	; 254
    2926:	60 81       	ld	r22, Z
    2928:	71 81       	ldd	r23, Z+1	; 0x01
    292a:	82 81       	ldd	r24, Z+2	; 0x02
    292c:	93 81       	ldd	r25, Z+3	; 0x03
    292e:	2b ea       	ldi	r18, 0xAB	; 171
    2930:	3a ea       	ldi	r19, 0xAA	; 170
    2932:	4a e2       	ldi	r20, 0x2A	; 42
    2934:	50 e4       	ldi	r21, 0x40	; 64
    2936:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    293a:	dc 01       	movw	r26, r24
    293c:	cb 01       	movw	r24, r22
    293e:	f8 01       	movw	r30, r16
    2940:	80 83       	st	Z, r24
    2942:	91 83       	std	Z+1, r25	; 0x01
    2944:	a2 83       	std	Z+2, r26	; 0x02
    2946:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2948:	fe 01       	movw	r30, r28
    294a:	ef 5f       	subi	r30, 0xFF	; 255
    294c:	fe 4f       	sbci	r31, 0xFE	; 254
    294e:	60 81       	ld	r22, Z
    2950:	71 81       	ldd	r23, Z+1	; 0x01
    2952:	82 81       	ldd	r24, Z+2	; 0x02
    2954:	93 81       	ldd	r25, Z+3	; 0x03
    2956:	20 e0       	ldi	r18, 0x00	; 0
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	40 e8       	ldi	r20, 0x80	; 128
    295c:	5f e3       	ldi	r21, 0x3F	; 63
    295e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2962:	88 23       	and	r24, r24
    2964:	34 f4       	brge	.+12     	; 0x2972 <Stepper_vidDirection+0xd7c>
		__ticks = 1;
    2966:	fe 01       	movw	r30, r28
    2968:	e0 50       	subi	r30, 0x00	; 0
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	81 e0       	ldi	r24, 0x01	; 1
    296e:	80 83       	st	Z, r24
    2970:	e0 c0       	rjmp	.+448    	; 0x2b32 <Stepper_vidDirection+0xf3c>
	else if (__tmp > 255)
    2972:	fe 01       	movw	r30, r28
    2974:	ef 5f       	subi	r30, 0xFF	; 255
    2976:	fe 4f       	sbci	r31, 0xFE	; 254
    2978:	60 81       	ld	r22, Z
    297a:	71 81       	ldd	r23, Z+1	; 0x01
    297c:	82 81       	ldd	r24, Z+2	; 0x02
    297e:	93 81       	ldd	r25, Z+3	; 0x03
    2980:	20 e0       	ldi	r18, 0x00	; 0
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	4f e7       	ldi	r20, 0x7F	; 127
    2986:	53 e4       	ldi	r21, 0x43	; 67
    2988:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    298c:	18 16       	cp	r1, r24
    298e:	0c f0       	brlt	.+2      	; 0x2992 <Stepper_vidDirection+0xd9c>
    2990:	c0 c0       	rjmp	.+384    	; 0x2b12 <Stepper_vidDirection+0xf1c>
	{
		_delay_ms(__us / 1000.0);
    2992:	fe 01       	movw	r30, r28
    2994:	eb 5f       	subi	r30, 0xFB	; 251
    2996:	fe 4f       	sbci	r31, 0xFE	; 254
    2998:	60 81       	ld	r22, Z
    299a:	71 81       	ldd	r23, Z+1	; 0x01
    299c:	82 81       	ldd	r24, Z+2	; 0x02
    299e:	93 81       	ldd	r25, Z+3	; 0x03
    29a0:	20 e0       	ldi	r18, 0x00	; 0
    29a2:	30 e0       	ldi	r19, 0x00	; 0
    29a4:	4a e7       	ldi	r20, 0x7A	; 122
    29a6:	54 e4       	ldi	r21, 0x44	; 68
    29a8:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    29ac:	dc 01       	movw	r26, r24
    29ae:	cb 01       	movw	r24, r22
    29b0:	fe 01       	movw	r30, r28
    29b2:	e4 50       	subi	r30, 0x04	; 4
    29b4:	ff 4f       	sbci	r31, 0xFF	; 255
    29b6:	80 83       	st	Z, r24
    29b8:	91 83       	std	Z+1, r25	; 0x01
    29ba:	a2 83       	std	Z+2, r26	; 0x02
    29bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29be:	8e 01       	movw	r16, r28
    29c0:	08 50       	subi	r16, 0x08	; 8
    29c2:	1f 4f       	sbci	r17, 0xFF	; 255
    29c4:	fe 01       	movw	r30, r28
    29c6:	e4 50       	subi	r30, 0x04	; 4
    29c8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ca:	60 81       	ld	r22, Z
    29cc:	71 81       	ldd	r23, Z+1	; 0x01
    29ce:	82 81       	ldd	r24, Z+2	; 0x02
    29d0:	93 81       	ldd	r25, Z+3	; 0x03
    29d2:	20 e0       	ldi	r18, 0x00	; 0
    29d4:	30 e0       	ldi	r19, 0x00	; 0
    29d6:	4a ef       	ldi	r20, 0xFA	; 250
    29d8:	54 e4       	ldi	r21, 0x44	; 68
    29da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29de:	dc 01       	movw	r26, r24
    29e0:	cb 01       	movw	r24, r22
    29e2:	f8 01       	movw	r30, r16
    29e4:	80 83       	st	Z, r24
    29e6:	91 83       	std	Z+1, r25	; 0x01
    29e8:	a2 83       	std	Z+2, r26	; 0x02
    29ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29ec:	fe 01       	movw	r30, r28
    29ee:	e8 50       	subi	r30, 0x08	; 8
    29f0:	ff 4f       	sbci	r31, 0xFF	; 255
    29f2:	60 81       	ld	r22, Z
    29f4:	71 81       	ldd	r23, Z+1	; 0x01
    29f6:	82 81       	ldd	r24, Z+2	; 0x02
    29f8:	93 81       	ldd	r25, Z+3	; 0x03
    29fa:	20 e0       	ldi	r18, 0x00	; 0
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	40 e8       	ldi	r20, 0x80	; 128
    2a00:	5f e3       	ldi	r21, 0x3F	; 63
    2a02:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2a06:	88 23       	and	r24, r24
    2a08:	44 f4       	brge	.+16     	; 0x2a1a <Stepper_vidDirection+0xe24>
		__ticks = 1;
    2a0a:	fe 01       	movw	r30, r28
    2a0c:	ea 50       	subi	r30, 0x0A	; 10
    2a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a10:	81 e0       	ldi	r24, 0x01	; 1
    2a12:	90 e0       	ldi	r25, 0x00	; 0
    2a14:	91 83       	std	Z+1, r25	; 0x01
    2a16:	80 83       	st	Z, r24
    2a18:	64 c0       	rjmp	.+200    	; 0x2ae2 <Stepper_vidDirection+0xeec>
	else if (__tmp > 65535)
    2a1a:	fe 01       	movw	r30, r28
    2a1c:	e8 50       	subi	r30, 0x08	; 8
    2a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a20:	60 81       	ld	r22, Z
    2a22:	71 81       	ldd	r23, Z+1	; 0x01
    2a24:	82 81       	ldd	r24, Z+2	; 0x02
    2a26:	93 81       	ldd	r25, Z+3	; 0x03
    2a28:	20 e0       	ldi	r18, 0x00	; 0
    2a2a:	3f ef       	ldi	r19, 0xFF	; 255
    2a2c:	4f e7       	ldi	r20, 0x7F	; 127
    2a2e:	57 e4       	ldi	r21, 0x47	; 71
    2a30:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2a34:	18 16       	cp	r1, r24
    2a36:	0c f0       	brlt	.+2      	; 0x2a3a <Stepper_vidDirection+0xe44>
    2a38:	43 c0       	rjmp	.+134    	; 0x2ac0 <Stepper_vidDirection+0xeca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a3a:	fe 01       	movw	r30, r28
    2a3c:	e4 50       	subi	r30, 0x04	; 4
    2a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a40:	60 81       	ld	r22, Z
    2a42:	71 81       	ldd	r23, Z+1	; 0x01
    2a44:	82 81       	ldd	r24, Z+2	; 0x02
    2a46:	93 81       	ldd	r25, Z+3	; 0x03
    2a48:	20 e0       	ldi	r18, 0x00	; 0
    2a4a:	30 e0       	ldi	r19, 0x00	; 0
    2a4c:	40 e2       	ldi	r20, 0x20	; 32
    2a4e:	51 e4       	ldi	r21, 0x41	; 65
    2a50:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a54:	dc 01       	movw	r26, r24
    2a56:	cb 01       	movw	r24, r22
    2a58:	8e 01       	movw	r16, r28
    2a5a:	0a 50       	subi	r16, 0x0A	; 10
    2a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a5e:	bc 01       	movw	r22, r24
    2a60:	cd 01       	movw	r24, r26
    2a62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a66:	dc 01       	movw	r26, r24
    2a68:	cb 01       	movw	r24, r22
    2a6a:	f8 01       	movw	r30, r16
    2a6c:	91 83       	std	Z+1, r25	; 0x01
    2a6e:	80 83       	st	Z, r24
    2a70:	1f c0       	rjmp	.+62     	; 0x2ab0 <Stepper_vidDirection+0xeba>
    2a72:	fe 01       	movw	r30, r28
    2a74:	ec 50       	subi	r30, 0x0C	; 12
    2a76:	ff 4f       	sbci	r31, 0xFF	; 255
    2a78:	88 ec       	ldi	r24, 0xC8	; 200
    2a7a:	90 e0       	ldi	r25, 0x00	; 0
    2a7c:	91 83       	std	Z+1, r25	; 0x01
    2a7e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2a80:	fe 01       	movw	r30, r28
    2a82:	ec 50       	subi	r30, 0x0C	; 12
    2a84:	ff 4f       	sbci	r31, 0xFF	; 255
    2a86:	80 81       	ld	r24, Z
    2a88:	91 81       	ldd	r25, Z+1	; 0x01
    2a8a:	01 97       	sbiw	r24, 0x01	; 1
    2a8c:	f1 f7       	brne	.-4      	; 0x2a8a <Stepper_vidDirection+0xe94>
    2a8e:	fe 01       	movw	r30, r28
    2a90:	ec 50       	subi	r30, 0x0C	; 12
    2a92:	ff 4f       	sbci	r31, 0xFF	; 255
    2a94:	91 83       	std	Z+1, r25	; 0x01
    2a96:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a98:	de 01       	movw	r26, r28
    2a9a:	aa 50       	subi	r26, 0x0A	; 10
    2a9c:	bf 4f       	sbci	r27, 0xFF	; 255
    2a9e:	fe 01       	movw	r30, r28
    2aa0:	ea 50       	subi	r30, 0x0A	; 10
    2aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa4:	80 81       	ld	r24, Z
    2aa6:	91 81       	ldd	r25, Z+1	; 0x01
    2aa8:	01 97       	sbiw	r24, 0x01	; 1
    2aaa:	11 96       	adiw	r26, 0x01	; 1
    2aac:	9c 93       	st	X, r25
    2aae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	ea 50       	subi	r30, 0x0A	; 10
    2ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab6:	80 81       	ld	r24, Z
    2ab8:	91 81       	ldd	r25, Z+1	; 0x01
    2aba:	00 97       	sbiw	r24, 0x00	; 0
    2abc:	d1 f6       	brne	.-76     	; 0x2a72 <Stepper_vidDirection+0xe7c>
    2abe:	4b c0       	rjmp	.+150    	; 0x2b56 <Stepper_vidDirection+0xf60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ac0:	8e 01       	movw	r16, r28
    2ac2:	0a 50       	subi	r16, 0x0A	; 10
    2ac4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ac6:	fe 01       	movw	r30, r28
    2ac8:	e8 50       	subi	r30, 0x08	; 8
    2aca:	ff 4f       	sbci	r31, 0xFF	; 255
    2acc:	60 81       	ld	r22, Z
    2ace:	71 81       	ldd	r23, Z+1	; 0x01
    2ad0:	82 81       	ldd	r24, Z+2	; 0x02
    2ad2:	93 81       	ldd	r25, Z+3	; 0x03
    2ad4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ad8:	dc 01       	movw	r26, r24
    2ada:	cb 01       	movw	r24, r22
    2adc:	f8 01       	movw	r30, r16
    2ade:	91 83       	std	Z+1, r25	; 0x01
    2ae0:	80 83       	st	Z, r24
    2ae2:	de 01       	movw	r26, r28
    2ae4:	ae 50       	subi	r26, 0x0E	; 14
    2ae6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ae8:	fe 01       	movw	r30, r28
    2aea:	ea 50       	subi	r30, 0x0A	; 10
    2aec:	ff 4f       	sbci	r31, 0xFF	; 255
    2aee:	80 81       	ld	r24, Z
    2af0:	91 81       	ldd	r25, Z+1	; 0x01
    2af2:	11 96       	adiw	r26, 0x01	; 1
    2af4:	9c 93       	st	X, r25
    2af6:	8e 93       	st	-X, r24
    2af8:	fe 01       	movw	r30, r28
    2afa:	ee 50       	subi	r30, 0x0E	; 14
    2afc:	ff 4f       	sbci	r31, 0xFF	; 255
    2afe:	80 81       	ld	r24, Z
    2b00:	91 81       	ldd	r25, Z+1	; 0x01
    2b02:	01 97       	sbiw	r24, 0x01	; 1
    2b04:	f1 f7       	brne	.-4      	; 0x2b02 <Stepper_vidDirection+0xf0c>
    2b06:	fe 01       	movw	r30, r28
    2b08:	ee 50       	subi	r30, 0x0E	; 14
    2b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0c:	91 83       	std	Z+1, r25	; 0x01
    2b0e:	80 83       	st	Z, r24
    2b10:	22 c0       	rjmp	.+68     	; 0x2b56 <Stepper_vidDirection+0xf60>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2b12:	8e 01       	movw	r16, r28
    2b14:	00 50       	subi	r16, 0x00	; 0
    2b16:	1f 4f       	sbci	r17, 0xFF	; 255
    2b18:	fe 01       	movw	r30, r28
    2b1a:	ef 5f       	subi	r30, 0xFF	; 255
    2b1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b2a:	dc 01       	movw	r26, r24
    2b2c:	cb 01       	movw	r24, r22
    2b2e:	f8 01       	movw	r30, r16
    2b30:	80 83       	st	Z, r24
    2b32:	de 01       	movw	r26, r28
    2b34:	af 50       	subi	r26, 0x0F	; 15
    2b36:	bf 4f       	sbci	r27, 0xFF	; 255
    2b38:	fe 01       	movw	r30, r28
    2b3a:	e0 50       	subi	r30, 0x00	; 0
    2b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3e:	80 81       	ld	r24, Z
    2b40:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2b42:	fe 01       	movw	r30, r28
    2b44:	ef 50       	subi	r30, 0x0F	; 15
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	80 81       	ld	r24, Z
    2b4a:	8a 95       	dec	r24
    2b4c:	f1 f7       	brne	.-4      	; 0x2b4a <Stepper_vidDirection+0xf54>
    2b4e:	fe 01       	movw	r30, r28
    2b50:	ef 50       	subi	r30, 0x0F	; 15
    2b52:	ff 4f       	sbci	r31, 0xFF	; 255
    2b54:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    2b56:	89 e0       	ldi	r24, 0x09	; 9
    2b58:	60 e0       	ldi	r22, 0x00	; 0
    2b5a:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    2b5e:	8a e0       	ldi	r24, 0x0A	; 10
    2b60:	61 e0       	ldi	r22, 0x01	; 1
    2b62:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2b66:	8b e0       	ldi	r24, 0x0B	; 11
    2b68:	60 e0       	ldi	r22, 0x00	; 0
    2b6a:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2b6e:	8c e0       	ldi	r24, 0x0C	; 12
    2b70:	60 e0       	ldi	r22, 0x00	; 0
    2b72:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    2b76:	fe 01       	movw	r30, r28
    2b78:	e3 51       	subi	r30, 0x13	; 19
    2b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7c:	80 e0       	ldi	r24, 0x00	; 0
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	aa e7       	ldi	r26, 0x7A	; 122
    2b82:	b4 e4       	ldi	r27, 0x44	; 68
    2b84:	80 83       	st	Z, r24
    2b86:	91 83       	std	Z+1, r25	; 0x01
    2b88:	a2 83       	std	Z+2, r26	; 0x02
    2b8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2b8c:	8e 01       	movw	r16, r28
    2b8e:	07 51       	subi	r16, 0x17	; 23
    2b90:	1f 4f       	sbci	r17, 0xFF	; 255
    2b92:	fe 01       	movw	r30, r28
    2b94:	e3 51       	subi	r30, 0x13	; 19
    2b96:	ff 4f       	sbci	r31, 0xFF	; 255
    2b98:	60 81       	ld	r22, Z
    2b9a:	71 81       	ldd	r23, Z+1	; 0x01
    2b9c:	82 81       	ldd	r24, Z+2	; 0x02
    2b9e:	93 81       	ldd	r25, Z+3	; 0x03
    2ba0:	2b ea       	ldi	r18, 0xAB	; 171
    2ba2:	3a ea       	ldi	r19, 0xAA	; 170
    2ba4:	4a e2       	ldi	r20, 0x2A	; 42
    2ba6:	50 e4       	ldi	r21, 0x40	; 64
    2ba8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bac:	dc 01       	movw	r26, r24
    2bae:	cb 01       	movw	r24, r22
    2bb0:	f8 01       	movw	r30, r16
    2bb2:	80 83       	st	Z, r24
    2bb4:	91 83       	std	Z+1, r25	; 0x01
    2bb6:	a2 83       	std	Z+2, r26	; 0x02
    2bb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bba:	fe 01       	movw	r30, r28
    2bbc:	e7 51       	subi	r30, 0x17	; 23
    2bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc0:	60 81       	ld	r22, Z
    2bc2:	71 81       	ldd	r23, Z+1	; 0x01
    2bc4:	82 81       	ldd	r24, Z+2	; 0x02
    2bc6:	93 81       	ldd	r25, Z+3	; 0x03
    2bc8:	20 e0       	ldi	r18, 0x00	; 0
    2bca:	30 e0       	ldi	r19, 0x00	; 0
    2bcc:	40 e8       	ldi	r20, 0x80	; 128
    2bce:	5f e3       	ldi	r21, 0x3F	; 63
    2bd0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2bd4:	88 23       	and	r24, r24
    2bd6:	34 f4       	brge	.+12     	; 0x2be4 <Stepper_vidDirection+0xfee>
		__ticks = 1;
    2bd8:	fe 01       	movw	r30, r28
    2bda:	e8 51       	subi	r30, 0x18	; 24
    2bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bde:	81 e0       	ldi	r24, 0x01	; 1
    2be0:	80 83       	st	Z, r24
    2be2:	e0 c0       	rjmp	.+448    	; 0x2da4 <Stepper_vidDirection+0x11ae>
	else if (__tmp > 255)
    2be4:	fe 01       	movw	r30, r28
    2be6:	e7 51       	subi	r30, 0x17	; 23
    2be8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bea:	60 81       	ld	r22, Z
    2bec:	71 81       	ldd	r23, Z+1	; 0x01
    2bee:	82 81       	ldd	r24, Z+2	; 0x02
    2bf0:	93 81       	ldd	r25, Z+3	; 0x03
    2bf2:	20 e0       	ldi	r18, 0x00	; 0
    2bf4:	30 e0       	ldi	r19, 0x00	; 0
    2bf6:	4f e7       	ldi	r20, 0x7F	; 127
    2bf8:	53 e4       	ldi	r21, 0x43	; 67
    2bfa:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2bfe:	18 16       	cp	r1, r24
    2c00:	0c f0       	brlt	.+2      	; 0x2c04 <Stepper_vidDirection+0x100e>
    2c02:	c0 c0       	rjmp	.+384    	; 0x2d84 <Stepper_vidDirection+0x118e>
	{
		_delay_ms(__us / 1000.0);
    2c04:	fe 01       	movw	r30, r28
    2c06:	e3 51       	subi	r30, 0x13	; 19
    2c08:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0a:	60 81       	ld	r22, Z
    2c0c:	71 81       	ldd	r23, Z+1	; 0x01
    2c0e:	82 81       	ldd	r24, Z+2	; 0x02
    2c10:	93 81       	ldd	r25, Z+3	; 0x03
    2c12:	20 e0       	ldi	r18, 0x00	; 0
    2c14:	30 e0       	ldi	r19, 0x00	; 0
    2c16:	4a e7       	ldi	r20, 0x7A	; 122
    2c18:	54 e4       	ldi	r21, 0x44	; 68
    2c1a:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	fe 01       	movw	r30, r28
    2c24:	ec 51       	subi	r30, 0x1C	; 28
    2c26:	ff 4f       	sbci	r31, 0xFF	; 255
    2c28:	80 83       	st	Z, r24
    2c2a:	91 83       	std	Z+1, r25	; 0x01
    2c2c:	a2 83       	std	Z+2, r26	; 0x02
    2c2e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c30:	8e 01       	movw	r16, r28
    2c32:	00 52       	subi	r16, 0x20	; 32
    2c34:	1f 4f       	sbci	r17, 0xFF	; 255
    2c36:	fe 01       	movw	r30, r28
    2c38:	ec 51       	subi	r30, 0x1C	; 28
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	60 81       	ld	r22, Z
    2c3e:	71 81       	ldd	r23, Z+1	; 0x01
    2c40:	82 81       	ldd	r24, Z+2	; 0x02
    2c42:	93 81       	ldd	r25, Z+3	; 0x03
    2c44:	20 e0       	ldi	r18, 0x00	; 0
    2c46:	30 e0       	ldi	r19, 0x00	; 0
    2c48:	4a ef       	ldi	r20, 0xFA	; 250
    2c4a:	54 e4       	ldi	r21, 0x44	; 68
    2c4c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c50:	dc 01       	movw	r26, r24
    2c52:	cb 01       	movw	r24, r22
    2c54:	f8 01       	movw	r30, r16
    2c56:	80 83       	st	Z, r24
    2c58:	91 83       	std	Z+1, r25	; 0x01
    2c5a:	a2 83       	std	Z+2, r26	; 0x02
    2c5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c5e:	fe 01       	movw	r30, r28
    2c60:	e0 52       	subi	r30, 0x20	; 32
    2c62:	ff 4f       	sbci	r31, 0xFF	; 255
    2c64:	60 81       	ld	r22, Z
    2c66:	71 81       	ldd	r23, Z+1	; 0x01
    2c68:	82 81       	ldd	r24, Z+2	; 0x02
    2c6a:	93 81       	ldd	r25, Z+3	; 0x03
    2c6c:	20 e0       	ldi	r18, 0x00	; 0
    2c6e:	30 e0       	ldi	r19, 0x00	; 0
    2c70:	40 e8       	ldi	r20, 0x80	; 128
    2c72:	5f e3       	ldi	r21, 0x3F	; 63
    2c74:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2c78:	88 23       	and	r24, r24
    2c7a:	44 f4       	brge	.+16     	; 0x2c8c <Stepper_vidDirection+0x1096>
		__ticks = 1;
    2c7c:	fe 01       	movw	r30, r28
    2c7e:	e2 52       	subi	r30, 0x22	; 34
    2c80:	ff 4f       	sbci	r31, 0xFF	; 255
    2c82:	81 e0       	ldi	r24, 0x01	; 1
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	91 83       	std	Z+1, r25	; 0x01
    2c88:	80 83       	st	Z, r24
    2c8a:	64 c0       	rjmp	.+200    	; 0x2d54 <Stepper_vidDirection+0x115e>
	else if (__tmp > 65535)
    2c8c:	fe 01       	movw	r30, r28
    2c8e:	e0 52       	subi	r30, 0x20	; 32
    2c90:	ff 4f       	sbci	r31, 0xFF	; 255
    2c92:	60 81       	ld	r22, Z
    2c94:	71 81       	ldd	r23, Z+1	; 0x01
    2c96:	82 81       	ldd	r24, Z+2	; 0x02
    2c98:	93 81       	ldd	r25, Z+3	; 0x03
    2c9a:	20 e0       	ldi	r18, 0x00	; 0
    2c9c:	3f ef       	ldi	r19, 0xFF	; 255
    2c9e:	4f e7       	ldi	r20, 0x7F	; 127
    2ca0:	57 e4       	ldi	r21, 0x47	; 71
    2ca2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2ca6:	18 16       	cp	r1, r24
    2ca8:	0c f0       	brlt	.+2      	; 0x2cac <Stepper_vidDirection+0x10b6>
    2caa:	43 c0       	rjmp	.+134    	; 0x2d32 <Stepper_vidDirection+0x113c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cac:	fe 01       	movw	r30, r28
    2cae:	ec 51       	subi	r30, 0x1C	; 28
    2cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb2:	60 81       	ld	r22, Z
    2cb4:	71 81       	ldd	r23, Z+1	; 0x01
    2cb6:	82 81       	ldd	r24, Z+2	; 0x02
    2cb8:	93 81       	ldd	r25, Z+3	; 0x03
    2cba:	20 e0       	ldi	r18, 0x00	; 0
    2cbc:	30 e0       	ldi	r19, 0x00	; 0
    2cbe:	40 e2       	ldi	r20, 0x20	; 32
    2cc0:	51 e4       	ldi	r21, 0x41	; 65
    2cc2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cc6:	dc 01       	movw	r26, r24
    2cc8:	cb 01       	movw	r24, r22
    2cca:	8e 01       	movw	r16, r28
    2ccc:	02 52       	subi	r16, 0x22	; 34
    2cce:	1f 4f       	sbci	r17, 0xFF	; 255
    2cd0:	bc 01       	movw	r22, r24
    2cd2:	cd 01       	movw	r24, r26
    2cd4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2cd8:	dc 01       	movw	r26, r24
    2cda:	cb 01       	movw	r24, r22
    2cdc:	f8 01       	movw	r30, r16
    2cde:	91 83       	std	Z+1, r25	; 0x01
    2ce0:	80 83       	st	Z, r24
    2ce2:	1f c0       	rjmp	.+62     	; 0x2d22 <Stepper_vidDirection+0x112c>
    2ce4:	fe 01       	movw	r30, r28
    2ce6:	e4 52       	subi	r30, 0x24	; 36
    2ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cea:	88 ec       	ldi	r24, 0xC8	; 200
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	91 83       	std	Z+1, r25	; 0x01
    2cf0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2cf2:	fe 01       	movw	r30, r28
    2cf4:	e4 52       	subi	r30, 0x24	; 36
    2cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf8:	80 81       	ld	r24, Z
    2cfa:	91 81       	ldd	r25, Z+1	; 0x01
    2cfc:	01 97       	sbiw	r24, 0x01	; 1
    2cfe:	f1 f7       	brne	.-4      	; 0x2cfc <Stepper_vidDirection+0x1106>
    2d00:	fe 01       	movw	r30, r28
    2d02:	e4 52       	subi	r30, 0x24	; 36
    2d04:	ff 4f       	sbci	r31, 0xFF	; 255
    2d06:	91 83       	std	Z+1, r25	; 0x01
    2d08:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d0a:	de 01       	movw	r26, r28
    2d0c:	a2 52       	subi	r26, 0x22	; 34
    2d0e:	bf 4f       	sbci	r27, 0xFF	; 255
    2d10:	fe 01       	movw	r30, r28
    2d12:	e2 52       	subi	r30, 0x22	; 34
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	80 81       	ld	r24, Z
    2d18:	91 81       	ldd	r25, Z+1	; 0x01
    2d1a:	01 97       	sbiw	r24, 0x01	; 1
    2d1c:	11 96       	adiw	r26, 0x01	; 1
    2d1e:	9c 93       	st	X, r25
    2d20:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d22:	fe 01       	movw	r30, r28
    2d24:	e2 52       	subi	r30, 0x22	; 34
    2d26:	ff 4f       	sbci	r31, 0xFF	; 255
    2d28:	80 81       	ld	r24, Z
    2d2a:	91 81       	ldd	r25, Z+1	; 0x01
    2d2c:	00 97       	sbiw	r24, 0x00	; 0
    2d2e:	d1 f6       	brne	.-76     	; 0x2ce4 <Stepper_vidDirection+0x10ee>
    2d30:	4b c0       	rjmp	.+150    	; 0x2dc8 <Stepper_vidDirection+0x11d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d32:	8e 01       	movw	r16, r28
    2d34:	02 52       	subi	r16, 0x22	; 34
    2d36:	1f 4f       	sbci	r17, 0xFF	; 255
    2d38:	fe 01       	movw	r30, r28
    2d3a:	e0 52       	subi	r30, 0x20	; 32
    2d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3e:	60 81       	ld	r22, Z
    2d40:	71 81       	ldd	r23, Z+1	; 0x01
    2d42:	82 81       	ldd	r24, Z+2	; 0x02
    2d44:	93 81       	ldd	r25, Z+3	; 0x03
    2d46:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d4a:	dc 01       	movw	r26, r24
    2d4c:	cb 01       	movw	r24, r22
    2d4e:	f8 01       	movw	r30, r16
    2d50:	91 83       	std	Z+1, r25	; 0x01
    2d52:	80 83       	st	Z, r24
    2d54:	de 01       	movw	r26, r28
    2d56:	a6 52       	subi	r26, 0x26	; 38
    2d58:	bf 4f       	sbci	r27, 0xFF	; 255
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e2 52       	subi	r30, 0x22	; 34
    2d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d60:	80 81       	ld	r24, Z
    2d62:	91 81       	ldd	r25, Z+1	; 0x01
    2d64:	11 96       	adiw	r26, 0x01	; 1
    2d66:	9c 93       	st	X, r25
    2d68:	8e 93       	st	-X, r24
    2d6a:	fe 01       	movw	r30, r28
    2d6c:	e6 52       	subi	r30, 0x26	; 38
    2d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d70:	80 81       	ld	r24, Z
    2d72:	91 81       	ldd	r25, Z+1	; 0x01
    2d74:	01 97       	sbiw	r24, 0x01	; 1
    2d76:	f1 f7       	brne	.-4      	; 0x2d74 <Stepper_vidDirection+0x117e>
    2d78:	fe 01       	movw	r30, r28
    2d7a:	e6 52       	subi	r30, 0x26	; 38
    2d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7e:	91 83       	std	Z+1, r25	; 0x01
    2d80:	80 83       	st	Z, r24
    2d82:	22 c0       	rjmp	.+68     	; 0x2dc8 <Stepper_vidDirection+0x11d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2d84:	8e 01       	movw	r16, r28
    2d86:	08 51       	subi	r16, 0x18	; 24
    2d88:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	e7 51       	subi	r30, 0x17	; 23
    2d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d9c:	dc 01       	movw	r26, r24
    2d9e:	cb 01       	movw	r24, r22
    2da0:	f8 01       	movw	r30, r16
    2da2:	80 83       	st	Z, r24
    2da4:	de 01       	movw	r26, r28
    2da6:	a7 52       	subi	r26, 0x27	; 39
    2da8:	bf 4f       	sbci	r27, 0xFF	; 255
    2daa:	fe 01       	movw	r30, r28
    2dac:	e8 51       	subi	r30, 0x18	; 24
    2dae:	ff 4f       	sbci	r31, 0xFF	; 255
    2db0:	80 81       	ld	r24, Z
    2db2:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2db4:	fe 01       	movw	r30, r28
    2db6:	e7 52       	subi	r30, 0x27	; 39
    2db8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dba:	80 81       	ld	r24, Z
    2dbc:	8a 95       	dec	r24
    2dbe:	f1 f7       	brne	.-4      	; 0x2dbc <Stepper_vidDirection+0x11c6>
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	e7 52       	subi	r30, 0x27	; 39
    2dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc6:	80 83       	st	Z, r24
				_delay_us(1000);


				Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    2dc8:	89 e0       	ldi	r24, 0x09	; 9
    2dca:	61 e0       	ldi	r22, 0x01	; 1
    2dcc:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    2dd0:	8a e0       	ldi	r24, 0x0A	; 10
    2dd2:	60 e0       	ldi	r22, 0x00	; 0
    2dd4:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    2dd8:	8b e0       	ldi	r24, 0x0B	; 11
    2dda:	60 e0       	ldi	r22, 0x00	; 0
    2ddc:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
				Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    2de0:	8c e0       	ldi	r24, 0x0C	; 12
    2de2:	60 e0       	ldi	r22, 0x00	; 0
    2de4:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    2de8:	fe 01       	movw	r30, r28
    2dea:	eb 52       	subi	r30, 0x2B	; 43
    2dec:	ff 4f       	sbci	r31, 0xFF	; 255
    2dee:	80 e0       	ldi	r24, 0x00	; 0
    2df0:	90 e0       	ldi	r25, 0x00	; 0
    2df2:	aa e7       	ldi	r26, 0x7A	; 122
    2df4:	b4 e4       	ldi	r27, 0x44	; 68
    2df6:	80 83       	st	Z, r24
    2df8:	91 83       	std	Z+1, r25	; 0x01
    2dfa:	a2 83       	std	Z+2, r26	; 0x02
    2dfc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2dfe:	8e 01       	movw	r16, r28
    2e00:	0f 52       	subi	r16, 0x2F	; 47
    2e02:	1f 4f       	sbci	r17, 0xFF	; 255
    2e04:	fe 01       	movw	r30, r28
    2e06:	eb 52       	subi	r30, 0x2B	; 43
    2e08:	ff 4f       	sbci	r31, 0xFF	; 255
    2e0a:	60 81       	ld	r22, Z
    2e0c:	71 81       	ldd	r23, Z+1	; 0x01
    2e0e:	82 81       	ldd	r24, Z+2	; 0x02
    2e10:	93 81       	ldd	r25, Z+3	; 0x03
    2e12:	2b ea       	ldi	r18, 0xAB	; 171
    2e14:	3a ea       	ldi	r19, 0xAA	; 170
    2e16:	4a e2       	ldi	r20, 0x2A	; 42
    2e18:	50 e4       	ldi	r21, 0x40	; 64
    2e1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e1e:	dc 01       	movw	r26, r24
    2e20:	cb 01       	movw	r24, r22
    2e22:	f8 01       	movw	r30, r16
    2e24:	80 83       	st	Z, r24
    2e26:	91 83       	std	Z+1, r25	; 0x01
    2e28:	a2 83       	std	Z+2, r26	; 0x02
    2e2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	ef 52       	subi	r30, 0x2F	; 47
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	60 81       	ld	r22, Z
    2e34:	71 81       	ldd	r23, Z+1	; 0x01
    2e36:	82 81       	ldd	r24, Z+2	; 0x02
    2e38:	93 81       	ldd	r25, Z+3	; 0x03
    2e3a:	20 e0       	ldi	r18, 0x00	; 0
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	40 e8       	ldi	r20, 0x80	; 128
    2e40:	5f e3       	ldi	r21, 0x3F	; 63
    2e42:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2e46:	88 23       	and	r24, r24
    2e48:	34 f4       	brge	.+12     	; 0x2e56 <Stepper_vidDirection+0x1260>
		__ticks = 1;
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	e0 53       	subi	r30, 0x30	; 48
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	81 e0       	ldi	r24, 0x01	; 1
    2e52:	80 83       	st	Z, r24
    2e54:	e0 c0       	rjmp	.+448    	; 0x3016 <Stepper_vidDirection+0x1420>
	else if (__tmp > 255)
    2e56:	fe 01       	movw	r30, r28
    2e58:	ef 52       	subi	r30, 0x2F	; 47
    2e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5c:	60 81       	ld	r22, Z
    2e5e:	71 81       	ldd	r23, Z+1	; 0x01
    2e60:	82 81       	ldd	r24, Z+2	; 0x02
    2e62:	93 81       	ldd	r25, Z+3	; 0x03
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	30 e0       	ldi	r19, 0x00	; 0
    2e68:	4f e7       	ldi	r20, 0x7F	; 127
    2e6a:	53 e4       	ldi	r21, 0x43	; 67
    2e6c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2e70:	18 16       	cp	r1, r24
    2e72:	0c f0       	brlt	.+2      	; 0x2e76 <Stepper_vidDirection+0x1280>
    2e74:	c0 c0       	rjmp	.+384    	; 0x2ff6 <Stepper_vidDirection+0x1400>
	{
		_delay_ms(__us / 1000.0);
    2e76:	fe 01       	movw	r30, r28
    2e78:	eb 52       	subi	r30, 0x2B	; 43
    2e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7c:	60 81       	ld	r22, Z
    2e7e:	71 81       	ldd	r23, Z+1	; 0x01
    2e80:	82 81       	ldd	r24, Z+2	; 0x02
    2e82:	93 81       	ldd	r25, Z+3	; 0x03
    2e84:	20 e0       	ldi	r18, 0x00	; 0
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	4a e7       	ldi	r20, 0x7A	; 122
    2e8a:	54 e4       	ldi	r21, 0x44	; 68
    2e8c:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2e90:	dc 01       	movw	r26, r24
    2e92:	cb 01       	movw	r24, r22
    2e94:	fe 01       	movw	r30, r28
    2e96:	e4 53       	subi	r30, 0x34	; 52
    2e98:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9a:	80 83       	st	Z, r24
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	a2 83       	std	Z+2, r26	; 0x02
    2ea0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ea2:	8e 01       	movw	r16, r28
    2ea4:	08 53       	subi	r16, 0x38	; 56
    2ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ea8:	fe 01       	movw	r30, r28
    2eaa:	e4 53       	subi	r30, 0x34	; 52
    2eac:	ff 4f       	sbci	r31, 0xFF	; 255
    2eae:	60 81       	ld	r22, Z
    2eb0:	71 81       	ldd	r23, Z+1	; 0x01
    2eb2:	82 81       	ldd	r24, Z+2	; 0x02
    2eb4:	93 81       	ldd	r25, Z+3	; 0x03
    2eb6:	20 e0       	ldi	r18, 0x00	; 0
    2eb8:	30 e0       	ldi	r19, 0x00	; 0
    2eba:	4a ef       	ldi	r20, 0xFA	; 250
    2ebc:	54 e4       	ldi	r21, 0x44	; 68
    2ebe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ec2:	dc 01       	movw	r26, r24
    2ec4:	cb 01       	movw	r24, r22
    2ec6:	f8 01       	movw	r30, r16
    2ec8:	80 83       	st	Z, r24
    2eca:	91 83       	std	Z+1, r25	; 0x01
    2ecc:	a2 83       	std	Z+2, r26	; 0x02
    2ece:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ed0:	fe 01       	movw	r30, r28
    2ed2:	e8 53       	subi	r30, 0x38	; 56
    2ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed6:	60 81       	ld	r22, Z
    2ed8:	71 81       	ldd	r23, Z+1	; 0x01
    2eda:	82 81       	ldd	r24, Z+2	; 0x02
    2edc:	93 81       	ldd	r25, Z+3	; 0x03
    2ede:	20 e0       	ldi	r18, 0x00	; 0
    2ee0:	30 e0       	ldi	r19, 0x00	; 0
    2ee2:	40 e8       	ldi	r20, 0x80	; 128
    2ee4:	5f e3       	ldi	r21, 0x3F	; 63
    2ee6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2eea:	88 23       	and	r24, r24
    2eec:	44 f4       	brge	.+16     	; 0x2efe <Stepper_vidDirection+0x1308>
		__ticks = 1;
    2eee:	fe 01       	movw	r30, r28
    2ef0:	ea 53       	subi	r30, 0x3A	; 58
    2ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef4:	81 e0       	ldi	r24, 0x01	; 1
    2ef6:	90 e0       	ldi	r25, 0x00	; 0
    2ef8:	91 83       	std	Z+1, r25	; 0x01
    2efa:	80 83       	st	Z, r24
    2efc:	64 c0       	rjmp	.+200    	; 0x2fc6 <Stepper_vidDirection+0x13d0>
	else if (__tmp > 65535)
    2efe:	fe 01       	movw	r30, r28
    2f00:	e8 53       	subi	r30, 0x38	; 56
    2f02:	ff 4f       	sbci	r31, 0xFF	; 255
    2f04:	60 81       	ld	r22, Z
    2f06:	71 81       	ldd	r23, Z+1	; 0x01
    2f08:	82 81       	ldd	r24, Z+2	; 0x02
    2f0a:	93 81       	ldd	r25, Z+3	; 0x03
    2f0c:	20 e0       	ldi	r18, 0x00	; 0
    2f0e:	3f ef       	ldi	r19, 0xFF	; 255
    2f10:	4f e7       	ldi	r20, 0x7F	; 127
    2f12:	57 e4       	ldi	r21, 0x47	; 71
    2f14:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2f18:	18 16       	cp	r1, r24
    2f1a:	0c f0       	brlt	.+2      	; 0x2f1e <Stepper_vidDirection+0x1328>
    2f1c:	43 c0       	rjmp	.+134    	; 0x2fa4 <Stepper_vidDirection+0x13ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f1e:	fe 01       	movw	r30, r28
    2f20:	e4 53       	subi	r30, 0x34	; 52
    2f22:	ff 4f       	sbci	r31, 0xFF	; 255
    2f24:	60 81       	ld	r22, Z
    2f26:	71 81       	ldd	r23, Z+1	; 0x01
    2f28:	82 81       	ldd	r24, Z+2	; 0x02
    2f2a:	93 81       	ldd	r25, Z+3	; 0x03
    2f2c:	20 e0       	ldi	r18, 0x00	; 0
    2f2e:	30 e0       	ldi	r19, 0x00	; 0
    2f30:	40 e2       	ldi	r20, 0x20	; 32
    2f32:	51 e4       	ldi	r21, 0x41	; 65
    2f34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2f38:	dc 01       	movw	r26, r24
    2f3a:	cb 01       	movw	r24, r22
    2f3c:	8e 01       	movw	r16, r28
    2f3e:	0a 53       	subi	r16, 0x3A	; 58
    2f40:	1f 4f       	sbci	r17, 0xFF	; 255
    2f42:	bc 01       	movw	r22, r24
    2f44:	cd 01       	movw	r24, r26
    2f46:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f4a:	dc 01       	movw	r26, r24
    2f4c:	cb 01       	movw	r24, r22
    2f4e:	f8 01       	movw	r30, r16
    2f50:	91 83       	std	Z+1, r25	; 0x01
    2f52:	80 83       	st	Z, r24
    2f54:	1f c0       	rjmp	.+62     	; 0x2f94 <Stepper_vidDirection+0x139e>
    2f56:	fe 01       	movw	r30, r28
    2f58:	ec 53       	subi	r30, 0x3C	; 60
    2f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f5c:	88 ec       	ldi	r24, 0xC8	; 200
    2f5e:	90 e0       	ldi	r25, 0x00	; 0
    2f60:	91 83       	std	Z+1, r25	; 0x01
    2f62:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2f64:	fe 01       	movw	r30, r28
    2f66:	ec 53       	subi	r30, 0x3C	; 60
    2f68:	ff 4f       	sbci	r31, 0xFF	; 255
    2f6a:	80 81       	ld	r24, Z
    2f6c:	91 81       	ldd	r25, Z+1	; 0x01
    2f6e:	01 97       	sbiw	r24, 0x01	; 1
    2f70:	f1 f7       	brne	.-4      	; 0x2f6e <Stepper_vidDirection+0x1378>
    2f72:	fe 01       	movw	r30, r28
    2f74:	ec 53       	subi	r30, 0x3C	; 60
    2f76:	ff 4f       	sbci	r31, 0xFF	; 255
    2f78:	91 83       	std	Z+1, r25	; 0x01
    2f7a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f7c:	de 01       	movw	r26, r28
    2f7e:	aa 53       	subi	r26, 0x3A	; 58
    2f80:	bf 4f       	sbci	r27, 0xFF	; 255
    2f82:	fe 01       	movw	r30, r28
    2f84:	ea 53       	subi	r30, 0x3A	; 58
    2f86:	ff 4f       	sbci	r31, 0xFF	; 255
    2f88:	80 81       	ld	r24, Z
    2f8a:	91 81       	ldd	r25, Z+1	; 0x01
    2f8c:	01 97       	sbiw	r24, 0x01	; 1
    2f8e:	11 96       	adiw	r26, 0x01	; 1
    2f90:	9c 93       	st	X, r25
    2f92:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f94:	fe 01       	movw	r30, r28
    2f96:	ea 53       	subi	r30, 0x3A	; 58
    2f98:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9a:	80 81       	ld	r24, Z
    2f9c:	91 81       	ldd	r25, Z+1	; 0x01
    2f9e:	00 97       	sbiw	r24, 0x00	; 0
    2fa0:	d1 f6       	brne	.-76     	; 0x2f56 <Stepper_vidDirection+0x1360>
    2fa2:	4b c0       	rjmp	.+150    	; 0x303a <Stepper_vidDirection+0x1444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fa4:	8e 01       	movw	r16, r28
    2fa6:	0a 53       	subi	r16, 0x3A	; 58
    2fa8:	1f 4f       	sbci	r17, 0xFF	; 255
    2faa:	fe 01       	movw	r30, r28
    2fac:	e8 53       	subi	r30, 0x38	; 56
    2fae:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb0:	60 81       	ld	r22, Z
    2fb2:	71 81       	ldd	r23, Z+1	; 0x01
    2fb4:	82 81       	ldd	r24, Z+2	; 0x02
    2fb6:	93 81       	ldd	r25, Z+3	; 0x03
    2fb8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2fbc:	dc 01       	movw	r26, r24
    2fbe:	cb 01       	movw	r24, r22
    2fc0:	f8 01       	movw	r30, r16
    2fc2:	91 83       	std	Z+1, r25	; 0x01
    2fc4:	80 83       	st	Z, r24
    2fc6:	de 01       	movw	r26, r28
    2fc8:	ae 53       	subi	r26, 0x3E	; 62
    2fca:	bf 4f       	sbci	r27, 0xFF	; 255
    2fcc:	fe 01       	movw	r30, r28
    2fce:	ea 53       	subi	r30, 0x3A	; 58
    2fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd2:	80 81       	ld	r24, Z
    2fd4:	91 81       	ldd	r25, Z+1	; 0x01
    2fd6:	11 96       	adiw	r26, 0x01	; 1
    2fd8:	9c 93       	st	X, r25
    2fda:	8e 93       	st	-X, r24
    2fdc:	fe 01       	movw	r30, r28
    2fde:	ee 53       	subi	r30, 0x3E	; 62
    2fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe2:	80 81       	ld	r24, Z
    2fe4:	91 81       	ldd	r25, Z+1	; 0x01
    2fe6:	01 97       	sbiw	r24, 0x01	; 1
    2fe8:	f1 f7       	brne	.-4      	; 0x2fe6 <Stepper_vidDirection+0x13f0>
    2fea:	fe 01       	movw	r30, r28
    2fec:	ee 53       	subi	r30, 0x3E	; 62
    2fee:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff0:	91 83       	std	Z+1, r25	; 0x01
    2ff2:	80 83       	st	Z, r24
    2ff4:	22 c0       	rjmp	.+68     	; 0x303a <Stepper_vidDirection+0x1444>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2ff6:	8e 01       	movw	r16, r28
    2ff8:	00 53       	subi	r16, 0x30	; 48
    2ffa:	1f 4f       	sbci	r17, 0xFF	; 255
    2ffc:	fe 01       	movw	r30, r28
    2ffe:	ef 52       	subi	r30, 0x2F	; 47
    3000:	ff 4f       	sbci	r31, 0xFF	; 255
    3002:	60 81       	ld	r22, Z
    3004:	71 81       	ldd	r23, Z+1	; 0x01
    3006:	82 81       	ldd	r24, Z+2	; 0x02
    3008:	93 81       	ldd	r25, Z+3	; 0x03
    300a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    300e:	dc 01       	movw	r26, r24
    3010:	cb 01       	movw	r24, r22
    3012:	f8 01       	movw	r30, r16
    3014:	80 83       	st	Z, r24
    3016:	de 01       	movw	r26, r28
    3018:	af 53       	subi	r26, 0x3F	; 63
    301a:	bf 4f       	sbci	r27, 0xFF	; 255
    301c:	fe 01       	movw	r30, r28
    301e:	e0 53       	subi	r30, 0x30	; 48
    3020:	ff 4f       	sbci	r31, 0xFF	; 255
    3022:	80 81       	ld	r24, Z
    3024:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3026:	fe 01       	movw	r30, r28
    3028:	ef 53       	subi	r30, 0x3F	; 63
    302a:	ff 4f       	sbci	r31, 0xFF	; 255
    302c:	80 81       	ld	r24, Z
    302e:	8a 95       	dec	r24
    3030:	f1 f7       	brne	.-4      	; 0x302e <Stepper_vidDirection+0x1438>
    3032:	fe 01       	movw	r30, r28
    3034:	ef 53       	subi	r30, 0x3F	; 63
    3036:	ff 4f       	sbci	r31, 0xFF	; 255
    3038:	80 83       	st	Z, r24
				_delay_us(1000);
			}
			break;

		case 180:
			for(x=0; x<250; x++){
    303a:	de 01       	movw	r26, r28
    303c:	af 57       	subi	r26, 0x7F	; 127
    303e:	be 4f       	sbci	r27, 0xFE	; 254
    3040:	fe 01       	movw	r30, r28
    3042:	ef 57       	subi	r30, 0x7F	; 127
    3044:	fe 4f       	sbci	r31, 0xFE	; 254
    3046:	80 81       	ld	r24, Z
    3048:	8f 5f       	subi	r24, 0xFF	; 255
    304a:	8c 93       	st	X, r24
    304c:	fe 01       	movw	r30, r28
    304e:	ef 57       	subi	r30, 0x7F	; 127
    3050:	fe 4f       	sbci	r31, 0xFE	; 254
    3052:	80 81       	ld	r24, Z
    3054:	8a 3f       	cpi	r24, 0xFA	; 250
    3056:	08 f4       	brcc	.+2      	; 0x305a <Stepper_vidDirection+0x1464>
    3058:	0c cb       	rjmp	.-2536   	; 0x2672 <Stepper_vidDirection+0xa7c>
    305a:	0c 94 29 21 	jmp	0x4252	; 0x4252 <Stepper_vidDirection+0x265c>

		}
	}


		else if(direction=='R'){
    305e:	fe 01       	movw	r30, r28
    3060:	ee 57       	subi	r30, 0x7E	; 126
    3062:	fe 4f       	sbci	r31, 0xFE	; 254
    3064:	80 81       	ld	r24, Z
    3066:	82 35       	cpi	r24, 0x52	; 82
    3068:	11 f0       	breq	.+4      	; 0x306e <Stepper_vidDirection+0x1478>
    306a:	0c 94 29 21 	jmp	0x4252	; 0x4252 <Stepper_vidDirection+0x265c>
			switch(angle){
    306e:	fe 01       	movw	r30, r28
    3070:	ed 57       	subi	r30, 0x7D	; 125
    3072:	fe 4f       	sbci	r31, 0xFE	; 254
    3074:	80 81       	ld	r24, Z
    3076:	28 2f       	mov	r18, r24
    3078:	30 e0       	ldi	r19, 0x00	; 0
    307a:	cc 57       	subi	r28, 0x7C	; 124
    307c:	de 4f       	sbci	r29, 0xFE	; 254
    307e:	39 83       	std	Y+1, r19	; 0x01
    3080:	28 83       	st	Y, r18
    3082:	c4 58       	subi	r28, 0x84	; 132
    3084:	d1 40       	sbci	r29, 0x01	; 1
    3086:	cc 57       	subi	r28, 0x7C	; 124
    3088:	de 4f       	sbci	r29, 0xFE	; 254
    308a:	88 81       	ld	r24, Y
    308c:	99 81       	ldd	r25, Y+1	; 0x01
    308e:	c4 58       	subi	r28, 0x84	; 132
    3090:	d1 40       	sbci	r29, 0x01	; 1
    3092:	8a 35       	cpi	r24, 0x5A	; 90
    3094:	91 05       	cpc	r25, r1
    3096:	61 f0       	breq	.+24     	; 0x30b0 <Stepper_vidDirection+0x14ba>
    3098:	cc 57       	subi	r28, 0x7C	; 124
    309a:	de 4f       	sbci	r29, 0xFE	; 254
    309c:	e8 81       	ld	r30, Y
    309e:	f9 81       	ldd	r31, Y+1	; 0x01
    30a0:	c4 58       	subi	r28, 0x84	; 132
    30a2:	d1 40       	sbci	r29, 0x01	; 1
    30a4:	e4 3b       	cpi	r30, 0xB4	; 180
    30a6:	f1 05       	cpc	r31, r1
    30a8:	09 f4       	brne	.+2      	; 0x30ac <Stepper_vidDirection+0x14b6>
    30aa:	fc c4       	rjmp	.+2552   	; 0x3aa4 <Stepper_vidDirection+0x1eae>
    30ac:	0c 94 29 21 	jmp	0x4252	; 0x4252 <Stepper_vidDirection+0x265c>
			case 90:

				for(x=0; x<135; x++){
    30b0:	fe 01       	movw	r30, r28
    30b2:	ef 57       	subi	r30, 0x7F	; 127
    30b4:	fe 4f       	sbci	r31, 0xFE	; 254
    30b6:	10 82       	st	Z, r1
    30b8:	ed c4       	rjmp	.+2522   	; 0x3a94 <Stepper_vidDirection+0x1e9e>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    30ba:	89 e0       	ldi	r24, 0x09	; 9
    30bc:	61 e0       	ldi	r22, 0x01	; 1
    30be:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    30c2:	8a e0       	ldi	r24, 0x0A	; 10
    30c4:	60 e0       	ldi	r22, 0x00	; 0
    30c6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    30ca:	8b e0       	ldi	r24, 0x0B	; 11
    30cc:	60 e0       	ldi	r22, 0x00	; 0
    30ce:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    30d2:	8c e0       	ldi	r24, 0x0C	; 12
    30d4:	60 e0       	ldi	r22, 0x00	; 0
    30d6:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    30da:	fe 01       	movw	r30, r28
    30dc:	e3 54       	subi	r30, 0x43	; 67
    30de:	ff 4f       	sbci	r31, 0xFF	; 255
    30e0:	80 e0       	ldi	r24, 0x00	; 0
    30e2:	90 e8       	ldi	r25, 0x80	; 128
    30e4:	a4 e5       	ldi	r26, 0x54	; 84
    30e6:	b4 e4       	ldi	r27, 0x44	; 68
    30e8:	80 83       	st	Z, r24
    30ea:	91 83       	std	Z+1, r25	; 0x01
    30ec:	a2 83       	std	Z+2, r26	; 0x02
    30ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    30f0:	8e 01       	movw	r16, r28
    30f2:	07 54       	subi	r16, 0x47	; 71
    30f4:	1f 4f       	sbci	r17, 0xFF	; 255
    30f6:	fe 01       	movw	r30, r28
    30f8:	e3 54       	subi	r30, 0x43	; 67
    30fa:	ff 4f       	sbci	r31, 0xFF	; 255
    30fc:	60 81       	ld	r22, Z
    30fe:	71 81       	ldd	r23, Z+1	; 0x01
    3100:	82 81       	ldd	r24, Z+2	; 0x02
    3102:	93 81       	ldd	r25, Z+3	; 0x03
    3104:	2b ea       	ldi	r18, 0xAB	; 171
    3106:	3a ea       	ldi	r19, 0xAA	; 170
    3108:	4a e2       	ldi	r20, 0x2A	; 42
    310a:	50 e4       	ldi	r21, 0x40	; 64
    310c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3110:	dc 01       	movw	r26, r24
    3112:	cb 01       	movw	r24, r22
    3114:	f8 01       	movw	r30, r16
    3116:	80 83       	st	Z, r24
    3118:	91 83       	std	Z+1, r25	; 0x01
    311a:	a2 83       	std	Z+2, r26	; 0x02
    311c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    311e:	fe 01       	movw	r30, r28
    3120:	e7 54       	subi	r30, 0x47	; 71
    3122:	ff 4f       	sbci	r31, 0xFF	; 255
    3124:	60 81       	ld	r22, Z
    3126:	71 81       	ldd	r23, Z+1	; 0x01
    3128:	82 81       	ldd	r24, Z+2	; 0x02
    312a:	93 81       	ldd	r25, Z+3	; 0x03
    312c:	20 e0       	ldi	r18, 0x00	; 0
    312e:	30 e0       	ldi	r19, 0x00	; 0
    3130:	40 e8       	ldi	r20, 0x80	; 128
    3132:	5f e3       	ldi	r21, 0x3F	; 63
    3134:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3138:	88 23       	and	r24, r24
    313a:	34 f4       	brge	.+12     	; 0x3148 <Stepper_vidDirection+0x1552>
		__ticks = 1;
    313c:	fe 01       	movw	r30, r28
    313e:	e8 54       	subi	r30, 0x48	; 72
    3140:	ff 4f       	sbci	r31, 0xFF	; 255
    3142:	81 e0       	ldi	r24, 0x01	; 1
    3144:	80 83       	st	Z, r24
    3146:	e0 c0       	rjmp	.+448    	; 0x3308 <Stepper_vidDirection+0x1712>
	else if (__tmp > 255)
    3148:	fe 01       	movw	r30, r28
    314a:	e7 54       	subi	r30, 0x47	; 71
    314c:	ff 4f       	sbci	r31, 0xFF	; 255
    314e:	60 81       	ld	r22, Z
    3150:	71 81       	ldd	r23, Z+1	; 0x01
    3152:	82 81       	ldd	r24, Z+2	; 0x02
    3154:	93 81       	ldd	r25, Z+3	; 0x03
    3156:	20 e0       	ldi	r18, 0x00	; 0
    3158:	30 e0       	ldi	r19, 0x00	; 0
    315a:	4f e7       	ldi	r20, 0x7F	; 127
    315c:	53 e4       	ldi	r21, 0x43	; 67
    315e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3162:	18 16       	cp	r1, r24
    3164:	0c f0       	brlt	.+2      	; 0x3168 <Stepper_vidDirection+0x1572>
    3166:	c0 c0       	rjmp	.+384    	; 0x32e8 <Stepper_vidDirection+0x16f2>
	{
		_delay_ms(__us / 1000.0);
    3168:	fe 01       	movw	r30, r28
    316a:	e3 54       	subi	r30, 0x43	; 67
    316c:	ff 4f       	sbci	r31, 0xFF	; 255
    316e:	60 81       	ld	r22, Z
    3170:	71 81       	ldd	r23, Z+1	; 0x01
    3172:	82 81       	ldd	r24, Z+2	; 0x02
    3174:	93 81       	ldd	r25, Z+3	; 0x03
    3176:	20 e0       	ldi	r18, 0x00	; 0
    3178:	30 e0       	ldi	r19, 0x00	; 0
    317a:	4a e7       	ldi	r20, 0x7A	; 122
    317c:	54 e4       	ldi	r21, 0x44	; 68
    317e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3182:	dc 01       	movw	r26, r24
    3184:	cb 01       	movw	r24, r22
    3186:	fe 01       	movw	r30, r28
    3188:	ec 54       	subi	r30, 0x4C	; 76
    318a:	ff 4f       	sbci	r31, 0xFF	; 255
    318c:	80 83       	st	Z, r24
    318e:	91 83       	std	Z+1, r25	; 0x01
    3190:	a2 83       	std	Z+2, r26	; 0x02
    3192:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3194:	8e 01       	movw	r16, r28
    3196:	00 55       	subi	r16, 0x50	; 80
    3198:	1f 4f       	sbci	r17, 0xFF	; 255
    319a:	fe 01       	movw	r30, r28
    319c:	ec 54       	subi	r30, 0x4C	; 76
    319e:	ff 4f       	sbci	r31, 0xFF	; 255
    31a0:	60 81       	ld	r22, Z
    31a2:	71 81       	ldd	r23, Z+1	; 0x01
    31a4:	82 81       	ldd	r24, Z+2	; 0x02
    31a6:	93 81       	ldd	r25, Z+3	; 0x03
    31a8:	20 e0       	ldi	r18, 0x00	; 0
    31aa:	30 e0       	ldi	r19, 0x00	; 0
    31ac:	4a ef       	ldi	r20, 0xFA	; 250
    31ae:	54 e4       	ldi	r21, 0x44	; 68
    31b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31b4:	dc 01       	movw	r26, r24
    31b6:	cb 01       	movw	r24, r22
    31b8:	f8 01       	movw	r30, r16
    31ba:	80 83       	st	Z, r24
    31bc:	91 83       	std	Z+1, r25	; 0x01
    31be:	a2 83       	std	Z+2, r26	; 0x02
    31c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31c2:	fe 01       	movw	r30, r28
    31c4:	e0 55       	subi	r30, 0x50	; 80
    31c6:	ff 4f       	sbci	r31, 0xFF	; 255
    31c8:	60 81       	ld	r22, Z
    31ca:	71 81       	ldd	r23, Z+1	; 0x01
    31cc:	82 81       	ldd	r24, Z+2	; 0x02
    31ce:	93 81       	ldd	r25, Z+3	; 0x03
    31d0:	20 e0       	ldi	r18, 0x00	; 0
    31d2:	30 e0       	ldi	r19, 0x00	; 0
    31d4:	40 e8       	ldi	r20, 0x80	; 128
    31d6:	5f e3       	ldi	r21, 0x3F	; 63
    31d8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    31dc:	88 23       	and	r24, r24
    31de:	44 f4       	brge	.+16     	; 0x31f0 <Stepper_vidDirection+0x15fa>
		__ticks = 1;
    31e0:	fe 01       	movw	r30, r28
    31e2:	e2 55       	subi	r30, 0x52	; 82
    31e4:	ff 4f       	sbci	r31, 0xFF	; 255
    31e6:	81 e0       	ldi	r24, 0x01	; 1
    31e8:	90 e0       	ldi	r25, 0x00	; 0
    31ea:	91 83       	std	Z+1, r25	; 0x01
    31ec:	80 83       	st	Z, r24
    31ee:	64 c0       	rjmp	.+200    	; 0x32b8 <Stepper_vidDirection+0x16c2>
	else if (__tmp > 65535)
    31f0:	fe 01       	movw	r30, r28
    31f2:	e0 55       	subi	r30, 0x50	; 80
    31f4:	ff 4f       	sbci	r31, 0xFF	; 255
    31f6:	60 81       	ld	r22, Z
    31f8:	71 81       	ldd	r23, Z+1	; 0x01
    31fa:	82 81       	ldd	r24, Z+2	; 0x02
    31fc:	93 81       	ldd	r25, Z+3	; 0x03
    31fe:	20 e0       	ldi	r18, 0x00	; 0
    3200:	3f ef       	ldi	r19, 0xFF	; 255
    3202:	4f e7       	ldi	r20, 0x7F	; 127
    3204:	57 e4       	ldi	r21, 0x47	; 71
    3206:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    320a:	18 16       	cp	r1, r24
    320c:	0c f0       	brlt	.+2      	; 0x3210 <Stepper_vidDirection+0x161a>
    320e:	43 c0       	rjmp	.+134    	; 0x3296 <Stepper_vidDirection+0x16a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3210:	fe 01       	movw	r30, r28
    3212:	ec 54       	subi	r30, 0x4C	; 76
    3214:	ff 4f       	sbci	r31, 0xFF	; 255
    3216:	60 81       	ld	r22, Z
    3218:	71 81       	ldd	r23, Z+1	; 0x01
    321a:	82 81       	ldd	r24, Z+2	; 0x02
    321c:	93 81       	ldd	r25, Z+3	; 0x03
    321e:	20 e0       	ldi	r18, 0x00	; 0
    3220:	30 e0       	ldi	r19, 0x00	; 0
    3222:	40 e2       	ldi	r20, 0x20	; 32
    3224:	51 e4       	ldi	r21, 0x41	; 65
    3226:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    322a:	dc 01       	movw	r26, r24
    322c:	cb 01       	movw	r24, r22
    322e:	8e 01       	movw	r16, r28
    3230:	02 55       	subi	r16, 0x52	; 82
    3232:	1f 4f       	sbci	r17, 0xFF	; 255
    3234:	bc 01       	movw	r22, r24
    3236:	cd 01       	movw	r24, r26
    3238:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    323c:	dc 01       	movw	r26, r24
    323e:	cb 01       	movw	r24, r22
    3240:	f8 01       	movw	r30, r16
    3242:	91 83       	std	Z+1, r25	; 0x01
    3244:	80 83       	st	Z, r24
    3246:	1f c0       	rjmp	.+62     	; 0x3286 <Stepper_vidDirection+0x1690>
    3248:	fe 01       	movw	r30, r28
    324a:	e4 55       	subi	r30, 0x54	; 84
    324c:	ff 4f       	sbci	r31, 0xFF	; 255
    324e:	88 ec       	ldi	r24, 0xC8	; 200
    3250:	90 e0       	ldi	r25, 0x00	; 0
    3252:	91 83       	std	Z+1, r25	; 0x01
    3254:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3256:	fe 01       	movw	r30, r28
    3258:	e4 55       	subi	r30, 0x54	; 84
    325a:	ff 4f       	sbci	r31, 0xFF	; 255
    325c:	80 81       	ld	r24, Z
    325e:	91 81       	ldd	r25, Z+1	; 0x01
    3260:	01 97       	sbiw	r24, 0x01	; 1
    3262:	f1 f7       	brne	.-4      	; 0x3260 <Stepper_vidDirection+0x166a>
    3264:	fe 01       	movw	r30, r28
    3266:	e4 55       	subi	r30, 0x54	; 84
    3268:	ff 4f       	sbci	r31, 0xFF	; 255
    326a:	91 83       	std	Z+1, r25	; 0x01
    326c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    326e:	de 01       	movw	r26, r28
    3270:	a2 55       	subi	r26, 0x52	; 82
    3272:	bf 4f       	sbci	r27, 0xFF	; 255
    3274:	fe 01       	movw	r30, r28
    3276:	e2 55       	subi	r30, 0x52	; 82
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	80 81       	ld	r24, Z
    327c:	91 81       	ldd	r25, Z+1	; 0x01
    327e:	01 97       	sbiw	r24, 0x01	; 1
    3280:	11 96       	adiw	r26, 0x01	; 1
    3282:	9c 93       	st	X, r25
    3284:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3286:	fe 01       	movw	r30, r28
    3288:	e2 55       	subi	r30, 0x52	; 82
    328a:	ff 4f       	sbci	r31, 0xFF	; 255
    328c:	80 81       	ld	r24, Z
    328e:	91 81       	ldd	r25, Z+1	; 0x01
    3290:	00 97       	sbiw	r24, 0x00	; 0
    3292:	d1 f6       	brne	.-76     	; 0x3248 <Stepper_vidDirection+0x1652>
    3294:	4b c0       	rjmp	.+150    	; 0x332c <Stepper_vidDirection+0x1736>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3296:	8e 01       	movw	r16, r28
    3298:	02 55       	subi	r16, 0x52	; 82
    329a:	1f 4f       	sbci	r17, 0xFF	; 255
    329c:	fe 01       	movw	r30, r28
    329e:	e0 55       	subi	r30, 0x50	; 80
    32a0:	ff 4f       	sbci	r31, 0xFF	; 255
    32a2:	60 81       	ld	r22, Z
    32a4:	71 81       	ldd	r23, Z+1	; 0x01
    32a6:	82 81       	ldd	r24, Z+2	; 0x02
    32a8:	93 81       	ldd	r25, Z+3	; 0x03
    32aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32ae:	dc 01       	movw	r26, r24
    32b0:	cb 01       	movw	r24, r22
    32b2:	f8 01       	movw	r30, r16
    32b4:	91 83       	std	Z+1, r25	; 0x01
    32b6:	80 83       	st	Z, r24
    32b8:	de 01       	movw	r26, r28
    32ba:	a6 55       	subi	r26, 0x56	; 86
    32bc:	bf 4f       	sbci	r27, 0xFF	; 255
    32be:	fe 01       	movw	r30, r28
    32c0:	e2 55       	subi	r30, 0x52	; 82
    32c2:	ff 4f       	sbci	r31, 0xFF	; 255
    32c4:	80 81       	ld	r24, Z
    32c6:	91 81       	ldd	r25, Z+1	; 0x01
    32c8:	11 96       	adiw	r26, 0x01	; 1
    32ca:	9c 93       	st	X, r25
    32cc:	8e 93       	st	-X, r24
    32ce:	fe 01       	movw	r30, r28
    32d0:	e6 55       	subi	r30, 0x56	; 86
    32d2:	ff 4f       	sbci	r31, 0xFF	; 255
    32d4:	80 81       	ld	r24, Z
    32d6:	91 81       	ldd	r25, Z+1	; 0x01
    32d8:	01 97       	sbiw	r24, 0x01	; 1
    32da:	f1 f7       	brne	.-4      	; 0x32d8 <Stepper_vidDirection+0x16e2>
    32dc:	fe 01       	movw	r30, r28
    32de:	e6 55       	subi	r30, 0x56	; 86
    32e0:	ff 4f       	sbci	r31, 0xFF	; 255
    32e2:	91 83       	std	Z+1, r25	; 0x01
    32e4:	80 83       	st	Z, r24
    32e6:	22 c0       	rjmp	.+68     	; 0x332c <Stepper_vidDirection+0x1736>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    32e8:	8e 01       	movw	r16, r28
    32ea:	08 54       	subi	r16, 0x48	; 72
    32ec:	1f 4f       	sbci	r17, 0xFF	; 255
    32ee:	fe 01       	movw	r30, r28
    32f0:	e7 54       	subi	r30, 0x47	; 71
    32f2:	ff 4f       	sbci	r31, 0xFF	; 255
    32f4:	60 81       	ld	r22, Z
    32f6:	71 81       	ldd	r23, Z+1	; 0x01
    32f8:	82 81       	ldd	r24, Z+2	; 0x02
    32fa:	93 81       	ldd	r25, Z+3	; 0x03
    32fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3300:	dc 01       	movw	r26, r24
    3302:	cb 01       	movw	r24, r22
    3304:	f8 01       	movw	r30, r16
    3306:	80 83       	st	Z, r24
    3308:	de 01       	movw	r26, r28
    330a:	a7 55       	subi	r26, 0x57	; 87
    330c:	bf 4f       	sbci	r27, 0xFF	; 255
    330e:	fe 01       	movw	r30, r28
    3310:	e8 54       	subi	r30, 0x48	; 72
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	80 81       	ld	r24, Z
    3316:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3318:	fe 01       	movw	r30, r28
    331a:	e7 55       	subi	r30, 0x57	; 87
    331c:	ff 4f       	sbci	r31, 0xFF	; 255
    331e:	80 81       	ld	r24, Z
    3320:	8a 95       	dec	r24
    3322:	f1 f7       	brne	.-4      	; 0x3320 <Stepper_vidDirection+0x172a>
    3324:	fe 01       	movw	r30, r28
    3326:	e7 55       	subi	r30, 0x57	; 87
    3328:	ff 4f       	sbci	r31, 0xFF	; 255
    332a:	80 83       	st	Z, r24
					_delay_us(850);

					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    332c:	89 e0       	ldi	r24, 0x09	; 9
    332e:	60 e0       	ldi	r22, 0x00	; 0
    3330:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    3334:	8a e0       	ldi	r24, 0x0A	; 10
    3336:	61 e0       	ldi	r22, 0x01	; 1
    3338:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    333c:	8b e0       	ldi	r24, 0x0B	; 11
    333e:	60 e0       	ldi	r22, 0x00	; 0
    3340:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    3344:	8c e0       	ldi	r24, 0x0C	; 12
    3346:	60 e0       	ldi	r22, 0x00	; 0
    3348:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    334c:	fe 01       	movw	r30, r28
    334e:	eb 55       	subi	r30, 0x5B	; 91
    3350:	ff 4f       	sbci	r31, 0xFF	; 255
    3352:	80 e0       	ldi	r24, 0x00	; 0
    3354:	90 e8       	ldi	r25, 0x80	; 128
    3356:	a4 e5       	ldi	r26, 0x54	; 84
    3358:	b4 e4       	ldi	r27, 0x44	; 68
    335a:	80 83       	st	Z, r24
    335c:	91 83       	std	Z+1, r25	; 0x01
    335e:	a2 83       	std	Z+2, r26	; 0x02
    3360:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3362:	8e 01       	movw	r16, r28
    3364:	0f 55       	subi	r16, 0x5F	; 95
    3366:	1f 4f       	sbci	r17, 0xFF	; 255
    3368:	fe 01       	movw	r30, r28
    336a:	eb 55       	subi	r30, 0x5B	; 91
    336c:	ff 4f       	sbci	r31, 0xFF	; 255
    336e:	60 81       	ld	r22, Z
    3370:	71 81       	ldd	r23, Z+1	; 0x01
    3372:	82 81       	ldd	r24, Z+2	; 0x02
    3374:	93 81       	ldd	r25, Z+3	; 0x03
    3376:	2b ea       	ldi	r18, 0xAB	; 171
    3378:	3a ea       	ldi	r19, 0xAA	; 170
    337a:	4a e2       	ldi	r20, 0x2A	; 42
    337c:	50 e4       	ldi	r21, 0x40	; 64
    337e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3382:	dc 01       	movw	r26, r24
    3384:	cb 01       	movw	r24, r22
    3386:	f8 01       	movw	r30, r16
    3388:	80 83       	st	Z, r24
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	a2 83       	std	Z+2, r26	; 0x02
    338e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3390:	fe 01       	movw	r30, r28
    3392:	ef 55       	subi	r30, 0x5F	; 95
    3394:	ff 4f       	sbci	r31, 0xFF	; 255
    3396:	60 81       	ld	r22, Z
    3398:	71 81       	ldd	r23, Z+1	; 0x01
    339a:	82 81       	ldd	r24, Z+2	; 0x02
    339c:	93 81       	ldd	r25, Z+3	; 0x03
    339e:	20 e0       	ldi	r18, 0x00	; 0
    33a0:	30 e0       	ldi	r19, 0x00	; 0
    33a2:	40 e8       	ldi	r20, 0x80	; 128
    33a4:	5f e3       	ldi	r21, 0x3F	; 63
    33a6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    33aa:	88 23       	and	r24, r24
    33ac:	34 f4       	brge	.+12     	; 0x33ba <Stepper_vidDirection+0x17c4>
		__ticks = 1;
    33ae:	fe 01       	movw	r30, r28
    33b0:	e0 56       	subi	r30, 0x60	; 96
    33b2:	ff 4f       	sbci	r31, 0xFF	; 255
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	80 83       	st	Z, r24
    33b8:	e0 c0       	rjmp	.+448    	; 0x357a <Stepper_vidDirection+0x1984>
	else if (__tmp > 255)
    33ba:	fe 01       	movw	r30, r28
    33bc:	ef 55       	subi	r30, 0x5F	; 95
    33be:	ff 4f       	sbci	r31, 0xFF	; 255
    33c0:	60 81       	ld	r22, Z
    33c2:	71 81       	ldd	r23, Z+1	; 0x01
    33c4:	82 81       	ldd	r24, Z+2	; 0x02
    33c6:	93 81       	ldd	r25, Z+3	; 0x03
    33c8:	20 e0       	ldi	r18, 0x00	; 0
    33ca:	30 e0       	ldi	r19, 0x00	; 0
    33cc:	4f e7       	ldi	r20, 0x7F	; 127
    33ce:	53 e4       	ldi	r21, 0x43	; 67
    33d0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    33d4:	18 16       	cp	r1, r24
    33d6:	0c f0       	brlt	.+2      	; 0x33da <Stepper_vidDirection+0x17e4>
    33d8:	c0 c0       	rjmp	.+384    	; 0x355a <Stepper_vidDirection+0x1964>
	{
		_delay_ms(__us / 1000.0);
    33da:	fe 01       	movw	r30, r28
    33dc:	eb 55       	subi	r30, 0x5B	; 91
    33de:	ff 4f       	sbci	r31, 0xFF	; 255
    33e0:	60 81       	ld	r22, Z
    33e2:	71 81       	ldd	r23, Z+1	; 0x01
    33e4:	82 81       	ldd	r24, Z+2	; 0x02
    33e6:	93 81       	ldd	r25, Z+3	; 0x03
    33e8:	20 e0       	ldi	r18, 0x00	; 0
    33ea:	30 e0       	ldi	r19, 0x00	; 0
    33ec:	4a e7       	ldi	r20, 0x7A	; 122
    33ee:	54 e4       	ldi	r21, 0x44	; 68
    33f0:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    33f4:	dc 01       	movw	r26, r24
    33f6:	cb 01       	movw	r24, r22
    33f8:	fe 01       	movw	r30, r28
    33fa:	e4 56       	subi	r30, 0x64	; 100
    33fc:	ff 4f       	sbci	r31, 0xFF	; 255
    33fe:	80 83       	st	Z, r24
    3400:	91 83       	std	Z+1, r25	; 0x01
    3402:	a2 83       	std	Z+2, r26	; 0x02
    3404:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3406:	8e 01       	movw	r16, r28
    3408:	08 56       	subi	r16, 0x68	; 104
    340a:	1f 4f       	sbci	r17, 0xFF	; 255
    340c:	fe 01       	movw	r30, r28
    340e:	e4 56       	subi	r30, 0x64	; 100
    3410:	ff 4f       	sbci	r31, 0xFF	; 255
    3412:	60 81       	ld	r22, Z
    3414:	71 81       	ldd	r23, Z+1	; 0x01
    3416:	82 81       	ldd	r24, Z+2	; 0x02
    3418:	93 81       	ldd	r25, Z+3	; 0x03
    341a:	20 e0       	ldi	r18, 0x00	; 0
    341c:	30 e0       	ldi	r19, 0x00	; 0
    341e:	4a ef       	ldi	r20, 0xFA	; 250
    3420:	54 e4       	ldi	r21, 0x44	; 68
    3422:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3426:	dc 01       	movw	r26, r24
    3428:	cb 01       	movw	r24, r22
    342a:	f8 01       	movw	r30, r16
    342c:	80 83       	st	Z, r24
    342e:	91 83       	std	Z+1, r25	; 0x01
    3430:	a2 83       	std	Z+2, r26	; 0x02
    3432:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3434:	fe 01       	movw	r30, r28
    3436:	e8 56       	subi	r30, 0x68	; 104
    3438:	ff 4f       	sbci	r31, 0xFF	; 255
    343a:	60 81       	ld	r22, Z
    343c:	71 81       	ldd	r23, Z+1	; 0x01
    343e:	82 81       	ldd	r24, Z+2	; 0x02
    3440:	93 81       	ldd	r25, Z+3	; 0x03
    3442:	20 e0       	ldi	r18, 0x00	; 0
    3444:	30 e0       	ldi	r19, 0x00	; 0
    3446:	40 e8       	ldi	r20, 0x80	; 128
    3448:	5f e3       	ldi	r21, 0x3F	; 63
    344a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    344e:	88 23       	and	r24, r24
    3450:	44 f4       	brge	.+16     	; 0x3462 <Stepper_vidDirection+0x186c>
		__ticks = 1;
    3452:	fe 01       	movw	r30, r28
    3454:	ea 56       	subi	r30, 0x6A	; 106
    3456:	ff 4f       	sbci	r31, 0xFF	; 255
    3458:	81 e0       	ldi	r24, 0x01	; 1
    345a:	90 e0       	ldi	r25, 0x00	; 0
    345c:	91 83       	std	Z+1, r25	; 0x01
    345e:	80 83       	st	Z, r24
    3460:	64 c0       	rjmp	.+200    	; 0x352a <Stepper_vidDirection+0x1934>
	else if (__tmp > 65535)
    3462:	fe 01       	movw	r30, r28
    3464:	e8 56       	subi	r30, 0x68	; 104
    3466:	ff 4f       	sbci	r31, 0xFF	; 255
    3468:	60 81       	ld	r22, Z
    346a:	71 81       	ldd	r23, Z+1	; 0x01
    346c:	82 81       	ldd	r24, Z+2	; 0x02
    346e:	93 81       	ldd	r25, Z+3	; 0x03
    3470:	20 e0       	ldi	r18, 0x00	; 0
    3472:	3f ef       	ldi	r19, 0xFF	; 255
    3474:	4f e7       	ldi	r20, 0x7F	; 127
    3476:	57 e4       	ldi	r21, 0x47	; 71
    3478:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    347c:	18 16       	cp	r1, r24
    347e:	0c f0       	brlt	.+2      	; 0x3482 <Stepper_vidDirection+0x188c>
    3480:	43 c0       	rjmp	.+134    	; 0x3508 <Stepper_vidDirection+0x1912>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3482:	fe 01       	movw	r30, r28
    3484:	e4 56       	subi	r30, 0x64	; 100
    3486:	ff 4f       	sbci	r31, 0xFF	; 255
    3488:	60 81       	ld	r22, Z
    348a:	71 81       	ldd	r23, Z+1	; 0x01
    348c:	82 81       	ldd	r24, Z+2	; 0x02
    348e:	93 81       	ldd	r25, Z+3	; 0x03
    3490:	20 e0       	ldi	r18, 0x00	; 0
    3492:	30 e0       	ldi	r19, 0x00	; 0
    3494:	40 e2       	ldi	r20, 0x20	; 32
    3496:	51 e4       	ldi	r21, 0x41	; 65
    3498:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    349c:	dc 01       	movw	r26, r24
    349e:	cb 01       	movw	r24, r22
    34a0:	8e 01       	movw	r16, r28
    34a2:	0a 56       	subi	r16, 0x6A	; 106
    34a4:	1f 4f       	sbci	r17, 0xFF	; 255
    34a6:	bc 01       	movw	r22, r24
    34a8:	cd 01       	movw	r24, r26
    34aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34ae:	dc 01       	movw	r26, r24
    34b0:	cb 01       	movw	r24, r22
    34b2:	f8 01       	movw	r30, r16
    34b4:	91 83       	std	Z+1, r25	; 0x01
    34b6:	80 83       	st	Z, r24
    34b8:	1f c0       	rjmp	.+62     	; 0x34f8 <Stepper_vidDirection+0x1902>
    34ba:	fe 01       	movw	r30, r28
    34bc:	ec 56       	subi	r30, 0x6C	; 108
    34be:	ff 4f       	sbci	r31, 0xFF	; 255
    34c0:	88 ec       	ldi	r24, 0xC8	; 200
    34c2:	90 e0       	ldi	r25, 0x00	; 0
    34c4:	91 83       	std	Z+1, r25	; 0x01
    34c6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    34c8:	fe 01       	movw	r30, r28
    34ca:	ec 56       	subi	r30, 0x6C	; 108
    34cc:	ff 4f       	sbci	r31, 0xFF	; 255
    34ce:	80 81       	ld	r24, Z
    34d0:	91 81       	ldd	r25, Z+1	; 0x01
    34d2:	01 97       	sbiw	r24, 0x01	; 1
    34d4:	f1 f7       	brne	.-4      	; 0x34d2 <Stepper_vidDirection+0x18dc>
    34d6:	fe 01       	movw	r30, r28
    34d8:	ec 56       	subi	r30, 0x6C	; 108
    34da:	ff 4f       	sbci	r31, 0xFF	; 255
    34dc:	91 83       	std	Z+1, r25	; 0x01
    34de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e0:	de 01       	movw	r26, r28
    34e2:	aa 56       	subi	r26, 0x6A	; 106
    34e4:	bf 4f       	sbci	r27, 0xFF	; 255
    34e6:	fe 01       	movw	r30, r28
    34e8:	ea 56       	subi	r30, 0x6A	; 106
    34ea:	ff 4f       	sbci	r31, 0xFF	; 255
    34ec:	80 81       	ld	r24, Z
    34ee:	91 81       	ldd	r25, Z+1	; 0x01
    34f0:	01 97       	sbiw	r24, 0x01	; 1
    34f2:	11 96       	adiw	r26, 0x01	; 1
    34f4:	9c 93       	st	X, r25
    34f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f8:	fe 01       	movw	r30, r28
    34fa:	ea 56       	subi	r30, 0x6A	; 106
    34fc:	ff 4f       	sbci	r31, 0xFF	; 255
    34fe:	80 81       	ld	r24, Z
    3500:	91 81       	ldd	r25, Z+1	; 0x01
    3502:	00 97       	sbiw	r24, 0x00	; 0
    3504:	d1 f6       	brne	.-76     	; 0x34ba <Stepper_vidDirection+0x18c4>
    3506:	4b c0       	rjmp	.+150    	; 0x359e <Stepper_vidDirection+0x19a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3508:	8e 01       	movw	r16, r28
    350a:	0a 56       	subi	r16, 0x6A	; 106
    350c:	1f 4f       	sbci	r17, 0xFF	; 255
    350e:	fe 01       	movw	r30, r28
    3510:	e8 56       	subi	r30, 0x68	; 104
    3512:	ff 4f       	sbci	r31, 0xFF	; 255
    3514:	60 81       	ld	r22, Z
    3516:	71 81       	ldd	r23, Z+1	; 0x01
    3518:	82 81       	ldd	r24, Z+2	; 0x02
    351a:	93 81       	ldd	r25, Z+3	; 0x03
    351c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3520:	dc 01       	movw	r26, r24
    3522:	cb 01       	movw	r24, r22
    3524:	f8 01       	movw	r30, r16
    3526:	91 83       	std	Z+1, r25	; 0x01
    3528:	80 83       	st	Z, r24
    352a:	de 01       	movw	r26, r28
    352c:	ae 56       	subi	r26, 0x6E	; 110
    352e:	bf 4f       	sbci	r27, 0xFF	; 255
    3530:	fe 01       	movw	r30, r28
    3532:	ea 56       	subi	r30, 0x6A	; 106
    3534:	ff 4f       	sbci	r31, 0xFF	; 255
    3536:	80 81       	ld	r24, Z
    3538:	91 81       	ldd	r25, Z+1	; 0x01
    353a:	11 96       	adiw	r26, 0x01	; 1
    353c:	9c 93       	st	X, r25
    353e:	8e 93       	st	-X, r24
    3540:	fe 01       	movw	r30, r28
    3542:	ee 56       	subi	r30, 0x6E	; 110
    3544:	ff 4f       	sbci	r31, 0xFF	; 255
    3546:	80 81       	ld	r24, Z
    3548:	91 81       	ldd	r25, Z+1	; 0x01
    354a:	01 97       	sbiw	r24, 0x01	; 1
    354c:	f1 f7       	brne	.-4      	; 0x354a <Stepper_vidDirection+0x1954>
    354e:	fe 01       	movw	r30, r28
    3550:	ee 56       	subi	r30, 0x6E	; 110
    3552:	ff 4f       	sbci	r31, 0xFF	; 255
    3554:	91 83       	std	Z+1, r25	; 0x01
    3556:	80 83       	st	Z, r24
    3558:	22 c0       	rjmp	.+68     	; 0x359e <Stepper_vidDirection+0x19a8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    355a:	8e 01       	movw	r16, r28
    355c:	00 56       	subi	r16, 0x60	; 96
    355e:	1f 4f       	sbci	r17, 0xFF	; 255
    3560:	fe 01       	movw	r30, r28
    3562:	ef 55       	subi	r30, 0x5F	; 95
    3564:	ff 4f       	sbci	r31, 0xFF	; 255
    3566:	60 81       	ld	r22, Z
    3568:	71 81       	ldd	r23, Z+1	; 0x01
    356a:	82 81       	ldd	r24, Z+2	; 0x02
    356c:	93 81       	ldd	r25, Z+3	; 0x03
    356e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3572:	dc 01       	movw	r26, r24
    3574:	cb 01       	movw	r24, r22
    3576:	f8 01       	movw	r30, r16
    3578:	80 83       	st	Z, r24
    357a:	de 01       	movw	r26, r28
    357c:	af 56       	subi	r26, 0x6F	; 111
    357e:	bf 4f       	sbci	r27, 0xFF	; 255
    3580:	fe 01       	movw	r30, r28
    3582:	e0 56       	subi	r30, 0x60	; 96
    3584:	ff 4f       	sbci	r31, 0xFF	; 255
    3586:	80 81       	ld	r24, Z
    3588:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    358a:	fe 01       	movw	r30, r28
    358c:	ef 56       	subi	r30, 0x6F	; 111
    358e:	ff 4f       	sbci	r31, 0xFF	; 255
    3590:	80 81       	ld	r24, Z
    3592:	8a 95       	dec	r24
    3594:	f1 f7       	brne	.-4      	; 0x3592 <Stepper_vidDirection+0x199c>
    3596:	fe 01       	movw	r30, r28
    3598:	ef 56       	subi	r30, 0x6F	; 111
    359a:	ff 4f       	sbci	r31, 0xFF	; 255
    359c:	80 83       	st	Z, r24
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    359e:	89 e0       	ldi	r24, 0x09	; 9
    35a0:	60 e0       	ldi	r22, 0x00	; 0
    35a2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    35a6:	8a e0       	ldi	r24, 0x0A	; 10
    35a8:	60 e0       	ldi	r22, 0x00	; 0
    35aa:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    35ae:	8b e0       	ldi	r24, 0x0B	; 11
    35b0:	61 e0       	ldi	r22, 0x01	; 1
    35b2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    35b6:	8c e0       	ldi	r24, 0x0C	; 12
    35b8:	60 e0       	ldi	r22, 0x00	; 0
    35ba:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    35be:	fe 01       	movw	r30, r28
    35c0:	e3 57       	subi	r30, 0x73	; 115
    35c2:	ff 4f       	sbci	r31, 0xFF	; 255
    35c4:	80 e0       	ldi	r24, 0x00	; 0
    35c6:	90 e8       	ldi	r25, 0x80	; 128
    35c8:	a4 e5       	ldi	r26, 0x54	; 84
    35ca:	b4 e4       	ldi	r27, 0x44	; 68
    35cc:	80 83       	st	Z, r24
    35ce:	91 83       	std	Z+1, r25	; 0x01
    35d0:	a2 83       	std	Z+2, r26	; 0x02
    35d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    35d4:	8e 01       	movw	r16, r28
    35d6:	07 57       	subi	r16, 0x77	; 119
    35d8:	1f 4f       	sbci	r17, 0xFF	; 255
    35da:	fe 01       	movw	r30, r28
    35dc:	e3 57       	subi	r30, 0x73	; 115
    35de:	ff 4f       	sbci	r31, 0xFF	; 255
    35e0:	60 81       	ld	r22, Z
    35e2:	71 81       	ldd	r23, Z+1	; 0x01
    35e4:	82 81       	ldd	r24, Z+2	; 0x02
    35e6:	93 81       	ldd	r25, Z+3	; 0x03
    35e8:	2b ea       	ldi	r18, 0xAB	; 171
    35ea:	3a ea       	ldi	r19, 0xAA	; 170
    35ec:	4a e2       	ldi	r20, 0x2A	; 42
    35ee:	50 e4       	ldi	r21, 0x40	; 64
    35f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    35f4:	dc 01       	movw	r26, r24
    35f6:	cb 01       	movw	r24, r22
    35f8:	f8 01       	movw	r30, r16
    35fa:	80 83       	st	Z, r24
    35fc:	91 83       	std	Z+1, r25	; 0x01
    35fe:	a2 83       	std	Z+2, r26	; 0x02
    3600:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3602:	fe 01       	movw	r30, r28
    3604:	e7 57       	subi	r30, 0x77	; 119
    3606:	ff 4f       	sbci	r31, 0xFF	; 255
    3608:	60 81       	ld	r22, Z
    360a:	71 81       	ldd	r23, Z+1	; 0x01
    360c:	82 81       	ldd	r24, Z+2	; 0x02
    360e:	93 81       	ldd	r25, Z+3	; 0x03
    3610:	20 e0       	ldi	r18, 0x00	; 0
    3612:	30 e0       	ldi	r19, 0x00	; 0
    3614:	40 e8       	ldi	r20, 0x80	; 128
    3616:	5f e3       	ldi	r21, 0x3F	; 63
    3618:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    361c:	88 23       	and	r24, r24
    361e:	34 f4       	brge	.+12     	; 0x362c <Stepper_vidDirection+0x1a36>
		__ticks = 1;
    3620:	fe 01       	movw	r30, r28
    3622:	e8 57       	subi	r30, 0x78	; 120
    3624:	ff 4f       	sbci	r31, 0xFF	; 255
    3626:	81 e0       	ldi	r24, 0x01	; 1
    3628:	80 83       	st	Z, r24
    362a:	e0 c0       	rjmp	.+448    	; 0x37ec <Stepper_vidDirection+0x1bf6>
	else if (__tmp > 255)
    362c:	fe 01       	movw	r30, r28
    362e:	e7 57       	subi	r30, 0x77	; 119
    3630:	ff 4f       	sbci	r31, 0xFF	; 255
    3632:	60 81       	ld	r22, Z
    3634:	71 81       	ldd	r23, Z+1	; 0x01
    3636:	82 81       	ldd	r24, Z+2	; 0x02
    3638:	93 81       	ldd	r25, Z+3	; 0x03
    363a:	20 e0       	ldi	r18, 0x00	; 0
    363c:	30 e0       	ldi	r19, 0x00	; 0
    363e:	4f e7       	ldi	r20, 0x7F	; 127
    3640:	53 e4       	ldi	r21, 0x43	; 67
    3642:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3646:	18 16       	cp	r1, r24
    3648:	0c f0       	brlt	.+2      	; 0x364c <Stepper_vidDirection+0x1a56>
    364a:	c0 c0       	rjmp	.+384    	; 0x37cc <Stepper_vidDirection+0x1bd6>
	{
		_delay_ms(__us / 1000.0);
    364c:	fe 01       	movw	r30, r28
    364e:	e3 57       	subi	r30, 0x73	; 115
    3650:	ff 4f       	sbci	r31, 0xFF	; 255
    3652:	60 81       	ld	r22, Z
    3654:	71 81       	ldd	r23, Z+1	; 0x01
    3656:	82 81       	ldd	r24, Z+2	; 0x02
    3658:	93 81       	ldd	r25, Z+3	; 0x03
    365a:	20 e0       	ldi	r18, 0x00	; 0
    365c:	30 e0       	ldi	r19, 0x00	; 0
    365e:	4a e7       	ldi	r20, 0x7A	; 122
    3660:	54 e4       	ldi	r21, 0x44	; 68
    3662:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3666:	dc 01       	movw	r26, r24
    3668:	cb 01       	movw	r24, r22
    366a:	fe 01       	movw	r30, r28
    366c:	ec 57       	subi	r30, 0x7C	; 124
    366e:	ff 4f       	sbci	r31, 0xFF	; 255
    3670:	80 83       	st	Z, r24
    3672:	91 83       	std	Z+1, r25	; 0x01
    3674:	a2 83       	std	Z+2, r26	; 0x02
    3676:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3678:	8e 01       	movw	r16, r28
    367a:	00 58       	subi	r16, 0x80	; 128
    367c:	1f 4f       	sbci	r17, 0xFF	; 255
    367e:	fe 01       	movw	r30, r28
    3680:	ec 57       	subi	r30, 0x7C	; 124
    3682:	ff 4f       	sbci	r31, 0xFF	; 255
    3684:	60 81       	ld	r22, Z
    3686:	71 81       	ldd	r23, Z+1	; 0x01
    3688:	82 81       	ldd	r24, Z+2	; 0x02
    368a:	93 81       	ldd	r25, Z+3	; 0x03
    368c:	20 e0       	ldi	r18, 0x00	; 0
    368e:	30 e0       	ldi	r19, 0x00	; 0
    3690:	4a ef       	ldi	r20, 0xFA	; 250
    3692:	54 e4       	ldi	r21, 0x44	; 68
    3694:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3698:	dc 01       	movw	r26, r24
    369a:	cb 01       	movw	r24, r22
    369c:	f8 01       	movw	r30, r16
    369e:	80 83       	st	Z, r24
    36a0:	91 83       	std	Z+1, r25	; 0x01
    36a2:	a2 83       	std	Z+2, r26	; 0x02
    36a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36a6:	fe 01       	movw	r30, r28
    36a8:	e0 58       	subi	r30, 0x80	; 128
    36aa:	ff 4f       	sbci	r31, 0xFF	; 255
    36ac:	60 81       	ld	r22, Z
    36ae:	71 81       	ldd	r23, Z+1	; 0x01
    36b0:	82 81       	ldd	r24, Z+2	; 0x02
    36b2:	93 81       	ldd	r25, Z+3	; 0x03
    36b4:	20 e0       	ldi	r18, 0x00	; 0
    36b6:	30 e0       	ldi	r19, 0x00	; 0
    36b8:	40 e8       	ldi	r20, 0x80	; 128
    36ba:	5f e3       	ldi	r21, 0x3F	; 63
    36bc:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    36c0:	88 23       	and	r24, r24
    36c2:	44 f4       	brge	.+16     	; 0x36d4 <Stepper_vidDirection+0x1ade>
		__ticks = 1;
    36c4:	fe 01       	movw	r30, r28
    36c6:	e2 58       	subi	r30, 0x82	; 130
    36c8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ca:	81 e0       	ldi	r24, 0x01	; 1
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	91 83       	std	Z+1, r25	; 0x01
    36d0:	80 83       	st	Z, r24
    36d2:	64 c0       	rjmp	.+200    	; 0x379c <Stepper_vidDirection+0x1ba6>
	else if (__tmp > 65535)
    36d4:	fe 01       	movw	r30, r28
    36d6:	e0 58       	subi	r30, 0x80	; 128
    36d8:	ff 4f       	sbci	r31, 0xFF	; 255
    36da:	60 81       	ld	r22, Z
    36dc:	71 81       	ldd	r23, Z+1	; 0x01
    36de:	82 81       	ldd	r24, Z+2	; 0x02
    36e0:	93 81       	ldd	r25, Z+3	; 0x03
    36e2:	20 e0       	ldi	r18, 0x00	; 0
    36e4:	3f ef       	ldi	r19, 0xFF	; 255
    36e6:	4f e7       	ldi	r20, 0x7F	; 127
    36e8:	57 e4       	ldi	r21, 0x47	; 71
    36ea:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    36ee:	18 16       	cp	r1, r24
    36f0:	0c f0       	brlt	.+2      	; 0x36f4 <Stepper_vidDirection+0x1afe>
    36f2:	43 c0       	rjmp	.+134    	; 0x377a <Stepper_vidDirection+0x1b84>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36f4:	fe 01       	movw	r30, r28
    36f6:	ec 57       	subi	r30, 0x7C	; 124
    36f8:	ff 4f       	sbci	r31, 0xFF	; 255
    36fa:	60 81       	ld	r22, Z
    36fc:	71 81       	ldd	r23, Z+1	; 0x01
    36fe:	82 81       	ldd	r24, Z+2	; 0x02
    3700:	93 81       	ldd	r25, Z+3	; 0x03
    3702:	20 e0       	ldi	r18, 0x00	; 0
    3704:	30 e0       	ldi	r19, 0x00	; 0
    3706:	40 e2       	ldi	r20, 0x20	; 32
    3708:	51 e4       	ldi	r21, 0x41	; 65
    370a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    370e:	dc 01       	movw	r26, r24
    3710:	cb 01       	movw	r24, r22
    3712:	8e 01       	movw	r16, r28
    3714:	02 58       	subi	r16, 0x82	; 130
    3716:	1f 4f       	sbci	r17, 0xFF	; 255
    3718:	bc 01       	movw	r22, r24
    371a:	cd 01       	movw	r24, r26
    371c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3720:	dc 01       	movw	r26, r24
    3722:	cb 01       	movw	r24, r22
    3724:	f8 01       	movw	r30, r16
    3726:	91 83       	std	Z+1, r25	; 0x01
    3728:	80 83       	st	Z, r24
    372a:	1f c0       	rjmp	.+62     	; 0x376a <Stepper_vidDirection+0x1b74>
    372c:	fe 01       	movw	r30, r28
    372e:	e4 58       	subi	r30, 0x84	; 132
    3730:	ff 4f       	sbci	r31, 0xFF	; 255
    3732:	88 ec       	ldi	r24, 0xC8	; 200
    3734:	90 e0       	ldi	r25, 0x00	; 0
    3736:	91 83       	std	Z+1, r25	; 0x01
    3738:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    373a:	fe 01       	movw	r30, r28
    373c:	e4 58       	subi	r30, 0x84	; 132
    373e:	ff 4f       	sbci	r31, 0xFF	; 255
    3740:	80 81       	ld	r24, Z
    3742:	91 81       	ldd	r25, Z+1	; 0x01
    3744:	01 97       	sbiw	r24, 0x01	; 1
    3746:	f1 f7       	brne	.-4      	; 0x3744 <Stepper_vidDirection+0x1b4e>
    3748:	fe 01       	movw	r30, r28
    374a:	e4 58       	subi	r30, 0x84	; 132
    374c:	ff 4f       	sbci	r31, 0xFF	; 255
    374e:	91 83       	std	Z+1, r25	; 0x01
    3750:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3752:	de 01       	movw	r26, r28
    3754:	a2 58       	subi	r26, 0x82	; 130
    3756:	bf 4f       	sbci	r27, 0xFF	; 255
    3758:	fe 01       	movw	r30, r28
    375a:	e2 58       	subi	r30, 0x82	; 130
    375c:	ff 4f       	sbci	r31, 0xFF	; 255
    375e:	80 81       	ld	r24, Z
    3760:	91 81       	ldd	r25, Z+1	; 0x01
    3762:	01 97       	sbiw	r24, 0x01	; 1
    3764:	11 96       	adiw	r26, 0x01	; 1
    3766:	9c 93       	st	X, r25
    3768:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    376a:	fe 01       	movw	r30, r28
    376c:	e2 58       	subi	r30, 0x82	; 130
    376e:	ff 4f       	sbci	r31, 0xFF	; 255
    3770:	80 81       	ld	r24, Z
    3772:	91 81       	ldd	r25, Z+1	; 0x01
    3774:	00 97       	sbiw	r24, 0x00	; 0
    3776:	d1 f6       	brne	.-76     	; 0x372c <Stepper_vidDirection+0x1b36>
    3778:	4b c0       	rjmp	.+150    	; 0x3810 <Stepper_vidDirection+0x1c1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    377a:	8e 01       	movw	r16, r28
    377c:	02 58       	subi	r16, 0x82	; 130
    377e:	1f 4f       	sbci	r17, 0xFF	; 255
    3780:	fe 01       	movw	r30, r28
    3782:	e0 58       	subi	r30, 0x80	; 128
    3784:	ff 4f       	sbci	r31, 0xFF	; 255
    3786:	60 81       	ld	r22, Z
    3788:	71 81       	ldd	r23, Z+1	; 0x01
    378a:	82 81       	ldd	r24, Z+2	; 0x02
    378c:	93 81       	ldd	r25, Z+3	; 0x03
    378e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3792:	dc 01       	movw	r26, r24
    3794:	cb 01       	movw	r24, r22
    3796:	f8 01       	movw	r30, r16
    3798:	91 83       	std	Z+1, r25	; 0x01
    379a:	80 83       	st	Z, r24
    379c:	de 01       	movw	r26, r28
    379e:	a6 58       	subi	r26, 0x86	; 134
    37a0:	bf 4f       	sbci	r27, 0xFF	; 255
    37a2:	fe 01       	movw	r30, r28
    37a4:	e2 58       	subi	r30, 0x82	; 130
    37a6:	ff 4f       	sbci	r31, 0xFF	; 255
    37a8:	80 81       	ld	r24, Z
    37aa:	91 81       	ldd	r25, Z+1	; 0x01
    37ac:	11 96       	adiw	r26, 0x01	; 1
    37ae:	9c 93       	st	X, r25
    37b0:	8e 93       	st	-X, r24
    37b2:	fe 01       	movw	r30, r28
    37b4:	e6 58       	subi	r30, 0x86	; 134
    37b6:	ff 4f       	sbci	r31, 0xFF	; 255
    37b8:	80 81       	ld	r24, Z
    37ba:	91 81       	ldd	r25, Z+1	; 0x01
    37bc:	01 97       	sbiw	r24, 0x01	; 1
    37be:	f1 f7       	brne	.-4      	; 0x37bc <Stepper_vidDirection+0x1bc6>
    37c0:	fe 01       	movw	r30, r28
    37c2:	e6 58       	subi	r30, 0x86	; 134
    37c4:	ff 4f       	sbci	r31, 0xFF	; 255
    37c6:	91 83       	std	Z+1, r25	; 0x01
    37c8:	80 83       	st	Z, r24
    37ca:	22 c0       	rjmp	.+68     	; 0x3810 <Stepper_vidDirection+0x1c1a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    37cc:	8e 01       	movw	r16, r28
    37ce:	08 57       	subi	r16, 0x78	; 120
    37d0:	1f 4f       	sbci	r17, 0xFF	; 255
    37d2:	fe 01       	movw	r30, r28
    37d4:	e7 57       	subi	r30, 0x77	; 119
    37d6:	ff 4f       	sbci	r31, 0xFF	; 255
    37d8:	60 81       	ld	r22, Z
    37da:	71 81       	ldd	r23, Z+1	; 0x01
    37dc:	82 81       	ldd	r24, Z+2	; 0x02
    37de:	93 81       	ldd	r25, Z+3	; 0x03
    37e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37e4:	dc 01       	movw	r26, r24
    37e6:	cb 01       	movw	r24, r22
    37e8:	f8 01       	movw	r30, r16
    37ea:	80 83       	st	Z, r24
    37ec:	de 01       	movw	r26, r28
    37ee:	a7 58       	subi	r26, 0x87	; 135
    37f0:	bf 4f       	sbci	r27, 0xFF	; 255
    37f2:	fe 01       	movw	r30, r28
    37f4:	e8 57       	subi	r30, 0x78	; 120
    37f6:	ff 4f       	sbci	r31, 0xFF	; 255
    37f8:	80 81       	ld	r24, Z
    37fa:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    37fc:	fe 01       	movw	r30, r28
    37fe:	e7 58       	subi	r30, 0x87	; 135
    3800:	ff 4f       	sbci	r31, 0xFF	; 255
    3802:	80 81       	ld	r24, Z
    3804:	8a 95       	dec	r24
    3806:	f1 f7       	brne	.-4      	; 0x3804 <Stepper_vidDirection+0x1c0e>
    3808:	fe 01       	movw	r30, r28
    380a:	e7 58       	subi	r30, 0x87	; 135
    380c:	ff 4f       	sbci	r31, 0xFF	; 255
    380e:	80 83       	st	Z, r24
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    3810:	89 e0       	ldi	r24, 0x09	; 9
    3812:	60 e0       	ldi	r22, 0x00	; 0
    3814:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    3818:	8a e0       	ldi	r24, 0x0A	; 10
    381a:	60 e0       	ldi	r22, 0x00	; 0
    381c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    3820:	8b e0       	ldi	r24, 0x0B	; 11
    3822:	60 e0       	ldi	r22, 0x00	; 0
    3824:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    3828:	8c e0       	ldi	r24, 0x0C	; 12
    382a:	61 e0       	ldi	r22, 0x01	; 1
    382c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    3830:	fe 01       	movw	r30, r28
    3832:	eb 58       	subi	r30, 0x8B	; 139
    3834:	ff 4f       	sbci	r31, 0xFF	; 255
    3836:	80 e0       	ldi	r24, 0x00	; 0
    3838:	90 e8       	ldi	r25, 0x80	; 128
    383a:	a4 e5       	ldi	r26, 0x54	; 84
    383c:	b4 e4       	ldi	r27, 0x44	; 68
    383e:	80 83       	st	Z, r24
    3840:	91 83       	std	Z+1, r25	; 0x01
    3842:	a2 83       	std	Z+2, r26	; 0x02
    3844:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3846:	8e 01       	movw	r16, r28
    3848:	0f 58       	subi	r16, 0x8F	; 143
    384a:	1f 4f       	sbci	r17, 0xFF	; 255
    384c:	fe 01       	movw	r30, r28
    384e:	eb 58       	subi	r30, 0x8B	; 139
    3850:	ff 4f       	sbci	r31, 0xFF	; 255
    3852:	60 81       	ld	r22, Z
    3854:	71 81       	ldd	r23, Z+1	; 0x01
    3856:	82 81       	ldd	r24, Z+2	; 0x02
    3858:	93 81       	ldd	r25, Z+3	; 0x03
    385a:	2b ea       	ldi	r18, 0xAB	; 171
    385c:	3a ea       	ldi	r19, 0xAA	; 170
    385e:	4a e2       	ldi	r20, 0x2A	; 42
    3860:	50 e4       	ldi	r21, 0x40	; 64
    3862:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3866:	dc 01       	movw	r26, r24
    3868:	cb 01       	movw	r24, r22
    386a:	f8 01       	movw	r30, r16
    386c:	80 83       	st	Z, r24
    386e:	91 83       	std	Z+1, r25	; 0x01
    3870:	a2 83       	std	Z+2, r26	; 0x02
    3872:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3874:	fe 01       	movw	r30, r28
    3876:	ef 58       	subi	r30, 0x8F	; 143
    3878:	ff 4f       	sbci	r31, 0xFF	; 255
    387a:	60 81       	ld	r22, Z
    387c:	71 81       	ldd	r23, Z+1	; 0x01
    387e:	82 81       	ldd	r24, Z+2	; 0x02
    3880:	93 81       	ldd	r25, Z+3	; 0x03
    3882:	20 e0       	ldi	r18, 0x00	; 0
    3884:	30 e0       	ldi	r19, 0x00	; 0
    3886:	40 e8       	ldi	r20, 0x80	; 128
    3888:	5f e3       	ldi	r21, 0x3F	; 63
    388a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    388e:	88 23       	and	r24, r24
    3890:	34 f4       	brge	.+12     	; 0x389e <Stepper_vidDirection+0x1ca8>
		__ticks = 1;
    3892:	fe 01       	movw	r30, r28
    3894:	e0 59       	subi	r30, 0x90	; 144
    3896:	ff 4f       	sbci	r31, 0xFF	; 255
    3898:	81 e0       	ldi	r24, 0x01	; 1
    389a:	80 83       	st	Z, r24
    389c:	e0 c0       	rjmp	.+448    	; 0x3a5e <Stepper_vidDirection+0x1e68>
	else if (__tmp > 255)
    389e:	fe 01       	movw	r30, r28
    38a0:	ef 58       	subi	r30, 0x8F	; 143
    38a2:	ff 4f       	sbci	r31, 0xFF	; 255
    38a4:	60 81       	ld	r22, Z
    38a6:	71 81       	ldd	r23, Z+1	; 0x01
    38a8:	82 81       	ldd	r24, Z+2	; 0x02
    38aa:	93 81       	ldd	r25, Z+3	; 0x03
    38ac:	20 e0       	ldi	r18, 0x00	; 0
    38ae:	30 e0       	ldi	r19, 0x00	; 0
    38b0:	4f e7       	ldi	r20, 0x7F	; 127
    38b2:	53 e4       	ldi	r21, 0x43	; 67
    38b4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    38b8:	18 16       	cp	r1, r24
    38ba:	0c f0       	brlt	.+2      	; 0x38be <Stepper_vidDirection+0x1cc8>
    38bc:	c0 c0       	rjmp	.+384    	; 0x3a3e <Stepper_vidDirection+0x1e48>
	{
		_delay_ms(__us / 1000.0);
    38be:	fe 01       	movw	r30, r28
    38c0:	eb 58       	subi	r30, 0x8B	; 139
    38c2:	ff 4f       	sbci	r31, 0xFF	; 255
    38c4:	60 81       	ld	r22, Z
    38c6:	71 81       	ldd	r23, Z+1	; 0x01
    38c8:	82 81       	ldd	r24, Z+2	; 0x02
    38ca:	93 81       	ldd	r25, Z+3	; 0x03
    38cc:	20 e0       	ldi	r18, 0x00	; 0
    38ce:	30 e0       	ldi	r19, 0x00	; 0
    38d0:	4a e7       	ldi	r20, 0x7A	; 122
    38d2:	54 e4       	ldi	r21, 0x44	; 68
    38d4:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    38d8:	dc 01       	movw	r26, r24
    38da:	cb 01       	movw	r24, r22
    38dc:	fe 01       	movw	r30, r28
    38de:	e4 59       	subi	r30, 0x94	; 148
    38e0:	ff 4f       	sbci	r31, 0xFF	; 255
    38e2:	80 83       	st	Z, r24
    38e4:	91 83       	std	Z+1, r25	; 0x01
    38e6:	a2 83       	std	Z+2, r26	; 0x02
    38e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38ea:	8e 01       	movw	r16, r28
    38ec:	08 59       	subi	r16, 0x98	; 152
    38ee:	1f 4f       	sbci	r17, 0xFF	; 255
    38f0:	fe 01       	movw	r30, r28
    38f2:	e4 59       	subi	r30, 0x94	; 148
    38f4:	ff 4f       	sbci	r31, 0xFF	; 255
    38f6:	60 81       	ld	r22, Z
    38f8:	71 81       	ldd	r23, Z+1	; 0x01
    38fa:	82 81       	ldd	r24, Z+2	; 0x02
    38fc:	93 81       	ldd	r25, Z+3	; 0x03
    38fe:	20 e0       	ldi	r18, 0x00	; 0
    3900:	30 e0       	ldi	r19, 0x00	; 0
    3902:	4a ef       	ldi	r20, 0xFA	; 250
    3904:	54 e4       	ldi	r21, 0x44	; 68
    3906:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    390a:	dc 01       	movw	r26, r24
    390c:	cb 01       	movw	r24, r22
    390e:	f8 01       	movw	r30, r16
    3910:	80 83       	st	Z, r24
    3912:	91 83       	std	Z+1, r25	; 0x01
    3914:	a2 83       	std	Z+2, r26	; 0x02
    3916:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3918:	fe 01       	movw	r30, r28
    391a:	e8 59       	subi	r30, 0x98	; 152
    391c:	ff 4f       	sbci	r31, 0xFF	; 255
    391e:	60 81       	ld	r22, Z
    3920:	71 81       	ldd	r23, Z+1	; 0x01
    3922:	82 81       	ldd	r24, Z+2	; 0x02
    3924:	93 81       	ldd	r25, Z+3	; 0x03
    3926:	20 e0       	ldi	r18, 0x00	; 0
    3928:	30 e0       	ldi	r19, 0x00	; 0
    392a:	40 e8       	ldi	r20, 0x80	; 128
    392c:	5f e3       	ldi	r21, 0x3F	; 63
    392e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3932:	88 23       	and	r24, r24
    3934:	44 f4       	brge	.+16     	; 0x3946 <Stepper_vidDirection+0x1d50>
		__ticks = 1;
    3936:	fe 01       	movw	r30, r28
    3938:	ea 59       	subi	r30, 0x9A	; 154
    393a:	ff 4f       	sbci	r31, 0xFF	; 255
    393c:	81 e0       	ldi	r24, 0x01	; 1
    393e:	90 e0       	ldi	r25, 0x00	; 0
    3940:	91 83       	std	Z+1, r25	; 0x01
    3942:	80 83       	st	Z, r24
    3944:	64 c0       	rjmp	.+200    	; 0x3a0e <Stepper_vidDirection+0x1e18>
	else if (__tmp > 65535)
    3946:	fe 01       	movw	r30, r28
    3948:	e8 59       	subi	r30, 0x98	; 152
    394a:	ff 4f       	sbci	r31, 0xFF	; 255
    394c:	60 81       	ld	r22, Z
    394e:	71 81       	ldd	r23, Z+1	; 0x01
    3950:	82 81       	ldd	r24, Z+2	; 0x02
    3952:	93 81       	ldd	r25, Z+3	; 0x03
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	3f ef       	ldi	r19, 0xFF	; 255
    3958:	4f e7       	ldi	r20, 0x7F	; 127
    395a:	57 e4       	ldi	r21, 0x47	; 71
    395c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3960:	18 16       	cp	r1, r24
    3962:	0c f0       	brlt	.+2      	; 0x3966 <Stepper_vidDirection+0x1d70>
    3964:	43 c0       	rjmp	.+134    	; 0x39ec <Stepper_vidDirection+0x1df6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3966:	fe 01       	movw	r30, r28
    3968:	e4 59       	subi	r30, 0x94	; 148
    396a:	ff 4f       	sbci	r31, 0xFF	; 255
    396c:	60 81       	ld	r22, Z
    396e:	71 81       	ldd	r23, Z+1	; 0x01
    3970:	82 81       	ldd	r24, Z+2	; 0x02
    3972:	93 81       	ldd	r25, Z+3	; 0x03
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	30 e0       	ldi	r19, 0x00	; 0
    3978:	40 e2       	ldi	r20, 0x20	; 32
    397a:	51 e4       	ldi	r21, 0x41	; 65
    397c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3980:	dc 01       	movw	r26, r24
    3982:	cb 01       	movw	r24, r22
    3984:	8e 01       	movw	r16, r28
    3986:	0a 59       	subi	r16, 0x9A	; 154
    3988:	1f 4f       	sbci	r17, 0xFF	; 255
    398a:	bc 01       	movw	r22, r24
    398c:	cd 01       	movw	r24, r26
    398e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3992:	dc 01       	movw	r26, r24
    3994:	cb 01       	movw	r24, r22
    3996:	f8 01       	movw	r30, r16
    3998:	91 83       	std	Z+1, r25	; 0x01
    399a:	80 83       	st	Z, r24
    399c:	1f c0       	rjmp	.+62     	; 0x39dc <Stepper_vidDirection+0x1de6>
    399e:	fe 01       	movw	r30, r28
    39a0:	ec 59       	subi	r30, 0x9C	; 156
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	88 ec       	ldi	r24, 0xC8	; 200
    39a6:	90 e0       	ldi	r25, 0x00	; 0
    39a8:	91 83       	std	Z+1, r25	; 0x01
    39aa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    39ac:	fe 01       	movw	r30, r28
    39ae:	ec 59       	subi	r30, 0x9C	; 156
    39b0:	ff 4f       	sbci	r31, 0xFF	; 255
    39b2:	80 81       	ld	r24, Z
    39b4:	91 81       	ldd	r25, Z+1	; 0x01
    39b6:	01 97       	sbiw	r24, 0x01	; 1
    39b8:	f1 f7       	brne	.-4      	; 0x39b6 <Stepper_vidDirection+0x1dc0>
    39ba:	fe 01       	movw	r30, r28
    39bc:	ec 59       	subi	r30, 0x9C	; 156
    39be:	ff 4f       	sbci	r31, 0xFF	; 255
    39c0:	91 83       	std	Z+1, r25	; 0x01
    39c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39c4:	de 01       	movw	r26, r28
    39c6:	aa 59       	subi	r26, 0x9A	; 154
    39c8:	bf 4f       	sbci	r27, 0xFF	; 255
    39ca:	fe 01       	movw	r30, r28
    39cc:	ea 59       	subi	r30, 0x9A	; 154
    39ce:	ff 4f       	sbci	r31, 0xFF	; 255
    39d0:	80 81       	ld	r24, Z
    39d2:	91 81       	ldd	r25, Z+1	; 0x01
    39d4:	01 97       	sbiw	r24, 0x01	; 1
    39d6:	11 96       	adiw	r26, 0x01	; 1
    39d8:	9c 93       	st	X, r25
    39da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39dc:	fe 01       	movw	r30, r28
    39de:	ea 59       	subi	r30, 0x9A	; 154
    39e0:	ff 4f       	sbci	r31, 0xFF	; 255
    39e2:	80 81       	ld	r24, Z
    39e4:	91 81       	ldd	r25, Z+1	; 0x01
    39e6:	00 97       	sbiw	r24, 0x00	; 0
    39e8:	d1 f6       	brne	.-76     	; 0x399e <Stepper_vidDirection+0x1da8>
    39ea:	4b c0       	rjmp	.+150    	; 0x3a82 <Stepper_vidDirection+0x1e8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39ec:	8e 01       	movw	r16, r28
    39ee:	0a 59       	subi	r16, 0x9A	; 154
    39f0:	1f 4f       	sbci	r17, 0xFF	; 255
    39f2:	fe 01       	movw	r30, r28
    39f4:	e8 59       	subi	r30, 0x98	; 152
    39f6:	ff 4f       	sbci	r31, 0xFF	; 255
    39f8:	60 81       	ld	r22, Z
    39fa:	71 81       	ldd	r23, Z+1	; 0x01
    39fc:	82 81       	ldd	r24, Z+2	; 0x02
    39fe:	93 81       	ldd	r25, Z+3	; 0x03
    3a00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a04:	dc 01       	movw	r26, r24
    3a06:	cb 01       	movw	r24, r22
    3a08:	f8 01       	movw	r30, r16
    3a0a:	91 83       	std	Z+1, r25	; 0x01
    3a0c:	80 83       	st	Z, r24
    3a0e:	de 01       	movw	r26, r28
    3a10:	ae 59       	subi	r26, 0x9E	; 158
    3a12:	bf 4f       	sbci	r27, 0xFF	; 255
    3a14:	fe 01       	movw	r30, r28
    3a16:	ea 59       	subi	r30, 0x9A	; 154
    3a18:	ff 4f       	sbci	r31, 0xFF	; 255
    3a1a:	80 81       	ld	r24, Z
    3a1c:	91 81       	ldd	r25, Z+1	; 0x01
    3a1e:	11 96       	adiw	r26, 0x01	; 1
    3a20:	9c 93       	st	X, r25
    3a22:	8e 93       	st	-X, r24
    3a24:	fe 01       	movw	r30, r28
    3a26:	ee 59       	subi	r30, 0x9E	; 158
    3a28:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2a:	80 81       	ld	r24, Z
    3a2c:	91 81       	ldd	r25, Z+1	; 0x01
    3a2e:	01 97       	sbiw	r24, 0x01	; 1
    3a30:	f1 f7       	brne	.-4      	; 0x3a2e <Stepper_vidDirection+0x1e38>
    3a32:	fe 01       	movw	r30, r28
    3a34:	ee 59       	subi	r30, 0x9E	; 158
    3a36:	ff 4f       	sbci	r31, 0xFF	; 255
    3a38:	91 83       	std	Z+1, r25	; 0x01
    3a3a:	80 83       	st	Z, r24
    3a3c:	22 c0       	rjmp	.+68     	; 0x3a82 <Stepper_vidDirection+0x1e8c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3a3e:	8e 01       	movw	r16, r28
    3a40:	00 59       	subi	r16, 0x90	; 144
    3a42:	1f 4f       	sbci	r17, 0xFF	; 255
    3a44:	fe 01       	movw	r30, r28
    3a46:	ef 58       	subi	r30, 0x8F	; 143
    3a48:	ff 4f       	sbci	r31, 0xFF	; 255
    3a4a:	60 81       	ld	r22, Z
    3a4c:	71 81       	ldd	r23, Z+1	; 0x01
    3a4e:	82 81       	ldd	r24, Z+2	; 0x02
    3a50:	93 81       	ldd	r25, Z+3	; 0x03
    3a52:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a56:	dc 01       	movw	r26, r24
    3a58:	cb 01       	movw	r24, r22
    3a5a:	f8 01       	movw	r30, r16
    3a5c:	80 83       	st	Z, r24
    3a5e:	de 01       	movw	r26, r28
    3a60:	af 59       	subi	r26, 0x9F	; 159
    3a62:	bf 4f       	sbci	r27, 0xFF	; 255
    3a64:	fe 01       	movw	r30, r28
    3a66:	e0 59       	subi	r30, 0x90	; 144
    3a68:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6a:	80 81       	ld	r24, Z
    3a6c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3a6e:	fe 01       	movw	r30, r28
    3a70:	ef 59       	subi	r30, 0x9F	; 159
    3a72:	ff 4f       	sbci	r31, 0xFF	; 255
    3a74:	80 81       	ld	r24, Z
    3a76:	8a 95       	dec	r24
    3a78:	f1 f7       	brne	.-4      	; 0x3a76 <Stepper_vidDirection+0x1e80>
    3a7a:	fe 01       	movw	r30, r28
    3a7c:	ef 59       	subi	r30, 0x9F	; 159
    3a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a80:	80 83       	st	Z, r24

		else if(direction=='R'){
			switch(angle){
			case 90:

				for(x=0; x<135; x++){
    3a82:	de 01       	movw	r26, r28
    3a84:	af 57       	subi	r26, 0x7F	; 127
    3a86:	be 4f       	sbci	r27, 0xFE	; 254
    3a88:	fe 01       	movw	r30, r28
    3a8a:	ef 57       	subi	r30, 0x7F	; 127
    3a8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3a8e:	80 81       	ld	r24, Z
    3a90:	8f 5f       	subi	r24, 0xFF	; 255
    3a92:	8c 93       	st	X, r24
    3a94:	fe 01       	movw	r30, r28
    3a96:	ef 57       	subi	r30, 0x7F	; 127
    3a98:	fe 4f       	sbci	r31, 0xFE	; 254
    3a9a:	80 81       	ld	r24, Z
    3a9c:	87 38       	cpi	r24, 0x87	; 135
    3a9e:	08 f4       	brcc	.+2      	; 0x3aa2 <Stepper_vidDirection+0x1eac>
    3aa0:	0c cb       	rjmp	.-2536   	; 0x30ba <Stepper_vidDirection+0x14c4>
    3aa2:	d7 c3       	rjmp	.+1966   	; 0x4252 <Stepper_vidDirection+0x265c>
					_delay_us(850);
				}
				break;

			case 180:
				for(x=0; x<250; x++){
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	ef 57       	subi	r30, 0x7F	; 127
    3aa8:	fe 4f       	sbci	r31, 0xFE	; 254
    3aaa:	10 82       	st	Z, r1
    3aac:	cb c3       	rjmp	.+1942   	; 0x4244 <Stepper_vidDirection+0x264e>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8HIGH);
    3aae:	89 e0       	ldi	r24, 0x09	; 9
    3ab0:	61 e0       	ldi	r22, 0x01	; 1
    3ab2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    3ab6:	8a e0       	ldi	r24, 0x0A	; 10
    3ab8:	60 e0       	ldi	r22, 0x00	; 0
    3aba:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    3abe:	8b e0       	ldi	r24, 0x0B	; 11
    3ac0:	60 e0       	ldi	r22, 0x00	; 0
    3ac2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    3ac6:	8c e0       	ldi	r24, 0x0C	; 12
    3ac8:	60 e0       	ldi	r22, 0x00	; 0
    3aca:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    3ace:	fe 01       	movw	r30, r28
    3ad0:	e3 5a       	subi	r30, 0xA3	; 163
    3ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad4:	80 e0       	ldi	r24, 0x00	; 0
    3ad6:	90 e8       	ldi	r25, 0x80	; 128
    3ad8:	a4 e5       	ldi	r26, 0x54	; 84
    3ada:	b4 e4       	ldi	r27, 0x44	; 68
    3adc:	80 83       	st	Z, r24
    3ade:	91 83       	std	Z+1, r25	; 0x01
    3ae0:	a2 83       	std	Z+2, r26	; 0x02
    3ae2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3ae4:	8e 01       	movw	r16, r28
    3ae6:	07 5a       	subi	r16, 0xA7	; 167
    3ae8:	1f 4f       	sbci	r17, 0xFF	; 255
    3aea:	fe 01       	movw	r30, r28
    3aec:	e3 5a       	subi	r30, 0xA3	; 163
    3aee:	ff 4f       	sbci	r31, 0xFF	; 255
    3af0:	60 81       	ld	r22, Z
    3af2:	71 81       	ldd	r23, Z+1	; 0x01
    3af4:	82 81       	ldd	r24, Z+2	; 0x02
    3af6:	93 81       	ldd	r25, Z+3	; 0x03
    3af8:	2b ea       	ldi	r18, 0xAB	; 171
    3afa:	3a ea       	ldi	r19, 0xAA	; 170
    3afc:	4a e2       	ldi	r20, 0x2A	; 42
    3afe:	50 e4       	ldi	r21, 0x40	; 64
    3b00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b04:	dc 01       	movw	r26, r24
    3b06:	cb 01       	movw	r24, r22
    3b08:	f8 01       	movw	r30, r16
    3b0a:	80 83       	st	Z, r24
    3b0c:	91 83       	std	Z+1, r25	; 0x01
    3b0e:	a2 83       	std	Z+2, r26	; 0x02
    3b10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b12:	fe 01       	movw	r30, r28
    3b14:	e7 5a       	subi	r30, 0xA7	; 167
    3b16:	ff 4f       	sbci	r31, 0xFF	; 255
    3b18:	60 81       	ld	r22, Z
    3b1a:	71 81       	ldd	r23, Z+1	; 0x01
    3b1c:	82 81       	ldd	r24, Z+2	; 0x02
    3b1e:	93 81       	ldd	r25, Z+3	; 0x03
    3b20:	20 e0       	ldi	r18, 0x00	; 0
    3b22:	30 e0       	ldi	r19, 0x00	; 0
    3b24:	40 e8       	ldi	r20, 0x80	; 128
    3b26:	5f e3       	ldi	r21, 0x3F	; 63
    3b28:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3b2c:	88 23       	and	r24, r24
    3b2e:	34 f4       	brge	.+12     	; 0x3b3c <Stepper_vidDirection+0x1f46>
		__ticks = 1;
    3b30:	fe 01       	movw	r30, r28
    3b32:	e8 5a       	subi	r30, 0xA8	; 168
    3b34:	ff 4f       	sbci	r31, 0xFF	; 255
    3b36:	81 e0       	ldi	r24, 0x01	; 1
    3b38:	80 83       	st	Z, r24
    3b3a:	e0 c0       	rjmp	.+448    	; 0x3cfc <Stepper_vidDirection+0x2106>
	else if (__tmp > 255)
    3b3c:	fe 01       	movw	r30, r28
    3b3e:	e7 5a       	subi	r30, 0xA7	; 167
    3b40:	ff 4f       	sbci	r31, 0xFF	; 255
    3b42:	60 81       	ld	r22, Z
    3b44:	71 81       	ldd	r23, Z+1	; 0x01
    3b46:	82 81       	ldd	r24, Z+2	; 0x02
    3b48:	93 81       	ldd	r25, Z+3	; 0x03
    3b4a:	20 e0       	ldi	r18, 0x00	; 0
    3b4c:	30 e0       	ldi	r19, 0x00	; 0
    3b4e:	4f e7       	ldi	r20, 0x7F	; 127
    3b50:	53 e4       	ldi	r21, 0x43	; 67
    3b52:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3b56:	18 16       	cp	r1, r24
    3b58:	0c f0       	brlt	.+2      	; 0x3b5c <Stepper_vidDirection+0x1f66>
    3b5a:	c0 c0       	rjmp	.+384    	; 0x3cdc <Stepper_vidDirection+0x20e6>
	{
		_delay_ms(__us / 1000.0);
    3b5c:	fe 01       	movw	r30, r28
    3b5e:	e3 5a       	subi	r30, 0xA3	; 163
    3b60:	ff 4f       	sbci	r31, 0xFF	; 255
    3b62:	60 81       	ld	r22, Z
    3b64:	71 81       	ldd	r23, Z+1	; 0x01
    3b66:	82 81       	ldd	r24, Z+2	; 0x02
    3b68:	93 81       	ldd	r25, Z+3	; 0x03
    3b6a:	20 e0       	ldi	r18, 0x00	; 0
    3b6c:	30 e0       	ldi	r19, 0x00	; 0
    3b6e:	4a e7       	ldi	r20, 0x7A	; 122
    3b70:	54 e4       	ldi	r21, 0x44	; 68
    3b72:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3b76:	dc 01       	movw	r26, r24
    3b78:	cb 01       	movw	r24, r22
    3b7a:	fe 01       	movw	r30, r28
    3b7c:	ec 5a       	subi	r30, 0xAC	; 172
    3b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b80:	80 83       	st	Z, r24
    3b82:	91 83       	std	Z+1, r25	; 0x01
    3b84:	a2 83       	std	Z+2, r26	; 0x02
    3b86:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b88:	8e 01       	movw	r16, r28
    3b8a:	00 5b       	subi	r16, 0xB0	; 176
    3b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b8e:	fe 01       	movw	r30, r28
    3b90:	ec 5a       	subi	r30, 0xAC	; 172
    3b92:	ff 4f       	sbci	r31, 0xFF	; 255
    3b94:	60 81       	ld	r22, Z
    3b96:	71 81       	ldd	r23, Z+1	; 0x01
    3b98:	82 81       	ldd	r24, Z+2	; 0x02
    3b9a:	93 81       	ldd	r25, Z+3	; 0x03
    3b9c:	20 e0       	ldi	r18, 0x00	; 0
    3b9e:	30 e0       	ldi	r19, 0x00	; 0
    3ba0:	4a ef       	ldi	r20, 0xFA	; 250
    3ba2:	54 e4       	ldi	r21, 0x44	; 68
    3ba4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3ba8:	dc 01       	movw	r26, r24
    3baa:	cb 01       	movw	r24, r22
    3bac:	f8 01       	movw	r30, r16
    3bae:	80 83       	st	Z, r24
    3bb0:	91 83       	std	Z+1, r25	; 0x01
    3bb2:	a2 83       	std	Z+2, r26	; 0x02
    3bb4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bb6:	fe 01       	movw	r30, r28
    3bb8:	e0 5b       	subi	r30, 0xB0	; 176
    3bba:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbc:	60 81       	ld	r22, Z
    3bbe:	71 81       	ldd	r23, Z+1	; 0x01
    3bc0:	82 81       	ldd	r24, Z+2	; 0x02
    3bc2:	93 81       	ldd	r25, Z+3	; 0x03
    3bc4:	20 e0       	ldi	r18, 0x00	; 0
    3bc6:	30 e0       	ldi	r19, 0x00	; 0
    3bc8:	40 e8       	ldi	r20, 0x80	; 128
    3bca:	5f e3       	ldi	r21, 0x3F	; 63
    3bcc:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3bd0:	88 23       	and	r24, r24
    3bd2:	44 f4       	brge	.+16     	; 0x3be4 <Stepper_vidDirection+0x1fee>
		__ticks = 1;
    3bd4:	fe 01       	movw	r30, r28
    3bd6:	e2 5b       	subi	r30, 0xB2	; 178
    3bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bda:	81 e0       	ldi	r24, 0x01	; 1
    3bdc:	90 e0       	ldi	r25, 0x00	; 0
    3bde:	91 83       	std	Z+1, r25	; 0x01
    3be0:	80 83       	st	Z, r24
    3be2:	64 c0       	rjmp	.+200    	; 0x3cac <Stepper_vidDirection+0x20b6>
	else if (__tmp > 65535)
    3be4:	fe 01       	movw	r30, r28
    3be6:	e0 5b       	subi	r30, 0xB0	; 176
    3be8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bea:	60 81       	ld	r22, Z
    3bec:	71 81       	ldd	r23, Z+1	; 0x01
    3bee:	82 81       	ldd	r24, Z+2	; 0x02
    3bf0:	93 81       	ldd	r25, Z+3	; 0x03
    3bf2:	20 e0       	ldi	r18, 0x00	; 0
    3bf4:	3f ef       	ldi	r19, 0xFF	; 255
    3bf6:	4f e7       	ldi	r20, 0x7F	; 127
    3bf8:	57 e4       	ldi	r21, 0x47	; 71
    3bfa:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3bfe:	18 16       	cp	r1, r24
    3c00:	0c f0       	brlt	.+2      	; 0x3c04 <Stepper_vidDirection+0x200e>
    3c02:	43 c0       	rjmp	.+134    	; 0x3c8a <Stepper_vidDirection+0x2094>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c04:	fe 01       	movw	r30, r28
    3c06:	ec 5a       	subi	r30, 0xAC	; 172
    3c08:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0a:	60 81       	ld	r22, Z
    3c0c:	71 81       	ldd	r23, Z+1	; 0x01
    3c0e:	82 81       	ldd	r24, Z+2	; 0x02
    3c10:	93 81       	ldd	r25, Z+3	; 0x03
    3c12:	20 e0       	ldi	r18, 0x00	; 0
    3c14:	30 e0       	ldi	r19, 0x00	; 0
    3c16:	40 e2       	ldi	r20, 0x20	; 32
    3c18:	51 e4       	ldi	r21, 0x41	; 65
    3c1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3c1e:	dc 01       	movw	r26, r24
    3c20:	cb 01       	movw	r24, r22
    3c22:	8e 01       	movw	r16, r28
    3c24:	02 5b       	subi	r16, 0xB2	; 178
    3c26:	1f 4f       	sbci	r17, 0xFF	; 255
    3c28:	bc 01       	movw	r22, r24
    3c2a:	cd 01       	movw	r24, r26
    3c2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c30:	dc 01       	movw	r26, r24
    3c32:	cb 01       	movw	r24, r22
    3c34:	f8 01       	movw	r30, r16
    3c36:	91 83       	std	Z+1, r25	; 0x01
    3c38:	80 83       	st	Z, r24
    3c3a:	1f c0       	rjmp	.+62     	; 0x3c7a <Stepper_vidDirection+0x2084>
    3c3c:	fe 01       	movw	r30, r28
    3c3e:	e4 5b       	subi	r30, 0xB4	; 180
    3c40:	ff 4f       	sbci	r31, 0xFF	; 255
    3c42:	88 ec       	ldi	r24, 0xC8	; 200
    3c44:	90 e0       	ldi	r25, 0x00	; 0
    3c46:	91 83       	std	Z+1, r25	; 0x01
    3c48:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3c4a:	fe 01       	movw	r30, r28
    3c4c:	e4 5b       	subi	r30, 0xB4	; 180
    3c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c50:	80 81       	ld	r24, Z
    3c52:	91 81       	ldd	r25, Z+1	; 0x01
    3c54:	01 97       	sbiw	r24, 0x01	; 1
    3c56:	f1 f7       	brne	.-4      	; 0x3c54 <Stepper_vidDirection+0x205e>
    3c58:	fe 01       	movw	r30, r28
    3c5a:	e4 5b       	subi	r30, 0xB4	; 180
    3c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5e:	91 83       	std	Z+1, r25	; 0x01
    3c60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c62:	de 01       	movw	r26, r28
    3c64:	a2 5b       	subi	r26, 0xB2	; 178
    3c66:	bf 4f       	sbci	r27, 0xFF	; 255
    3c68:	fe 01       	movw	r30, r28
    3c6a:	e2 5b       	subi	r30, 0xB2	; 178
    3c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c6e:	80 81       	ld	r24, Z
    3c70:	91 81       	ldd	r25, Z+1	; 0x01
    3c72:	01 97       	sbiw	r24, 0x01	; 1
    3c74:	11 96       	adiw	r26, 0x01	; 1
    3c76:	9c 93       	st	X, r25
    3c78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	e2 5b       	subi	r30, 0xB2	; 178
    3c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c80:	80 81       	ld	r24, Z
    3c82:	91 81       	ldd	r25, Z+1	; 0x01
    3c84:	00 97       	sbiw	r24, 0x00	; 0
    3c86:	d1 f6       	brne	.-76     	; 0x3c3c <Stepper_vidDirection+0x2046>
    3c88:	4b c0       	rjmp	.+150    	; 0x3d20 <Stepper_vidDirection+0x212a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c8a:	8e 01       	movw	r16, r28
    3c8c:	02 5b       	subi	r16, 0xB2	; 178
    3c8e:	1f 4f       	sbci	r17, 0xFF	; 255
    3c90:	fe 01       	movw	r30, r28
    3c92:	e0 5b       	subi	r30, 0xB0	; 176
    3c94:	ff 4f       	sbci	r31, 0xFF	; 255
    3c96:	60 81       	ld	r22, Z
    3c98:	71 81       	ldd	r23, Z+1	; 0x01
    3c9a:	82 81       	ldd	r24, Z+2	; 0x02
    3c9c:	93 81       	ldd	r25, Z+3	; 0x03
    3c9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ca2:	dc 01       	movw	r26, r24
    3ca4:	cb 01       	movw	r24, r22
    3ca6:	f8 01       	movw	r30, r16
    3ca8:	91 83       	std	Z+1, r25	; 0x01
    3caa:	80 83       	st	Z, r24
    3cac:	de 01       	movw	r26, r28
    3cae:	a6 5b       	subi	r26, 0xB6	; 182
    3cb0:	bf 4f       	sbci	r27, 0xFF	; 255
    3cb2:	fe 01       	movw	r30, r28
    3cb4:	e2 5b       	subi	r30, 0xB2	; 178
    3cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb8:	80 81       	ld	r24, Z
    3cba:	91 81       	ldd	r25, Z+1	; 0x01
    3cbc:	11 96       	adiw	r26, 0x01	; 1
    3cbe:	9c 93       	st	X, r25
    3cc0:	8e 93       	st	-X, r24
    3cc2:	fe 01       	movw	r30, r28
    3cc4:	e6 5b       	subi	r30, 0xB6	; 182
    3cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc8:	80 81       	ld	r24, Z
    3cca:	91 81       	ldd	r25, Z+1	; 0x01
    3ccc:	01 97       	sbiw	r24, 0x01	; 1
    3cce:	f1 f7       	brne	.-4      	; 0x3ccc <Stepper_vidDirection+0x20d6>
    3cd0:	fe 01       	movw	r30, r28
    3cd2:	e6 5b       	subi	r30, 0xB6	; 182
    3cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd6:	91 83       	std	Z+1, r25	; 0x01
    3cd8:	80 83       	st	Z, r24
    3cda:	22 c0       	rjmp	.+68     	; 0x3d20 <Stepper_vidDirection+0x212a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3cdc:	8e 01       	movw	r16, r28
    3cde:	08 5a       	subi	r16, 0xA8	; 168
    3ce0:	1f 4f       	sbci	r17, 0xFF	; 255
    3ce2:	fe 01       	movw	r30, r28
    3ce4:	e7 5a       	subi	r30, 0xA7	; 167
    3ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce8:	60 81       	ld	r22, Z
    3cea:	71 81       	ldd	r23, Z+1	; 0x01
    3cec:	82 81       	ldd	r24, Z+2	; 0x02
    3cee:	93 81       	ldd	r25, Z+3	; 0x03
    3cf0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3cf4:	dc 01       	movw	r26, r24
    3cf6:	cb 01       	movw	r24, r22
    3cf8:	f8 01       	movw	r30, r16
    3cfa:	80 83       	st	Z, r24
    3cfc:	de 01       	movw	r26, r28
    3cfe:	a7 5b       	subi	r26, 0xB7	; 183
    3d00:	bf 4f       	sbci	r27, 0xFF	; 255
    3d02:	fe 01       	movw	r30, r28
    3d04:	e8 5a       	subi	r30, 0xA8	; 168
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	80 81       	ld	r24, Z
    3d0a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3d0c:	fe 01       	movw	r30, r28
    3d0e:	e7 5b       	subi	r30, 0xB7	; 183
    3d10:	ff 4f       	sbci	r31, 0xFF	; 255
    3d12:	80 81       	ld	r24, Z
    3d14:	8a 95       	dec	r24
    3d16:	f1 f7       	brne	.-4      	; 0x3d14 <Stepper_vidDirection+0x211e>
    3d18:	fe 01       	movw	r30, r28
    3d1a:	e7 5b       	subi	r30, 0xB7	; 183
    3d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d1e:	80 83       	st	Z, r24
					_delay_us(850);

					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    3d20:	89 e0       	ldi	r24, 0x09	; 9
    3d22:	60 e0       	ldi	r22, 0x00	; 0
    3d24:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8HIGH);
    3d28:	8a e0       	ldi	r24, 0x0A	; 10
    3d2a:	61 e0       	ldi	r22, 0x01	; 1
    3d2c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    3d30:	8b e0       	ldi	r24, 0x0B	; 11
    3d32:	60 e0       	ldi	r22, 0x00	; 0
    3d34:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    3d38:	8c e0       	ldi	r24, 0x0C	; 12
    3d3a:	60 e0       	ldi	r22, 0x00	; 0
    3d3c:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    3d40:	fe 01       	movw	r30, r28
    3d42:	eb 5b       	subi	r30, 0xBB	; 187
    3d44:	ff 4f       	sbci	r31, 0xFF	; 255
    3d46:	80 e0       	ldi	r24, 0x00	; 0
    3d48:	90 e8       	ldi	r25, 0x80	; 128
    3d4a:	a4 e5       	ldi	r26, 0x54	; 84
    3d4c:	b4 e4       	ldi	r27, 0x44	; 68
    3d4e:	80 83       	st	Z, r24
    3d50:	91 83       	std	Z+1, r25	; 0x01
    3d52:	a2 83       	std	Z+2, r26	; 0x02
    3d54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3d56:	8e 01       	movw	r16, r28
    3d58:	0f 5b       	subi	r16, 0xBF	; 191
    3d5a:	1f 4f       	sbci	r17, 0xFF	; 255
    3d5c:	fe 01       	movw	r30, r28
    3d5e:	eb 5b       	subi	r30, 0xBB	; 187
    3d60:	ff 4f       	sbci	r31, 0xFF	; 255
    3d62:	60 81       	ld	r22, Z
    3d64:	71 81       	ldd	r23, Z+1	; 0x01
    3d66:	82 81       	ldd	r24, Z+2	; 0x02
    3d68:	93 81       	ldd	r25, Z+3	; 0x03
    3d6a:	2b ea       	ldi	r18, 0xAB	; 171
    3d6c:	3a ea       	ldi	r19, 0xAA	; 170
    3d6e:	4a e2       	ldi	r20, 0x2A	; 42
    3d70:	50 e4       	ldi	r21, 0x40	; 64
    3d72:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d76:	dc 01       	movw	r26, r24
    3d78:	cb 01       	movw	r24, r22
    3d7a:	f8 01       	movw	r30, r16
    3d7c:	80 83       	st	Z, r24
    3d7e:	91 83       	std	Z+1, r25	; 0x01
    3d80:	a2 83       	std	Z+2, r26	; 0x02
    3d82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d84:	fe 01       	movw	r30, r28
    3d86:	ef 5b       	subi	r30, 0xBF	; 191
    3d88:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8a:	60 81       	ld	r22, Z
    3d8c:	71 81       	ldd	r23, Z+1	; 0x01
    3d8e:	82 81       	ldd	r24, Z+2	; 0x02
    3d90:	93 81       	ldd	r25, Z+3	; 0x03
    3d92:	20 e0       	ldi	r18, 0x00	; 0
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	40 e8       	ldi	r20, 0x80	; 128
    3d98:	5f e3       	ldi	r21, 0x3F	; 63
    3d9a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3d9e:	88 23       	and	r24, r24
    3da0:	34 f4       	brge	.+12     	; 0x3dae <Stepper_vidDirection+0x21b8>
		__ticks = 1;
    3da2:	81 e0       	ldi	r24, 0x01	; 1
    3da4:	fe 01       	movw	r30, r28
    3da6:	e0 5c       	subi	r30, 0xC0	; 192
    3da8:	ff 4f       	sbci	r31, 0xFF	; 255
    3daa:	80 83       	st	Z, r24
    3dac:	9d c0       	rjmp	.+314    	; 0x3ee8 <Stepper_vidDirection+0x22f2>
	else if (__tmp > 255)
    3dae:	fe 01       	movw	r30, r28
    3db0:	ef 5b       	subi	r30, 0xBF	; 191
    3db2:	ff 4f       	sbci	r31, 0xFF	; 255
    3db4:	60 81       	ld	r22, Z
    3db6:	71 81       	ldd	r23, Z+1	; 0x01
    3db8:	82 81       	ldd	r24, Z+2	; 0x02
    3dba:	93 81       	ldd	r25, Z+3	; 0x03
    3dbc:	20 e0       	ldi	r18, 0x00	; 0
    3dbe:	30 e0       	ldi	r19, 0x00	; 0
    3dc0:	4f e7       	ldi	r20, 0x7F	; 127
    3dc2:	53 e4       	ldi	r21, 0x43	; 67
    3dc4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3dc8:	18 16       	cp	r1, r24
    3dca:	0c f0       	brlt	.+2      	; 0x3dce <Stepper_vidDirection+0x21d8>
    3dcc:	7e c0       	rjmp	.+252    	; 0x3eca <Stepper_vidDirection+0x22d4>
	{
		_delay_ms(__us / 1000.0);
    3dce:	fe 01       	movw	r30, r28
    3dd0:	eb 5b       	subi	r30, 0xBB	; 187
    3dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd4:	60 81       	ld	r22, Z
    3dd6:	71 81       	ldd	r23, Z+1	; 0x01
    3dd8:	82 81       	ldd	r24, Z+2	; 0x02
    3dda:	93 81       	ldd	r25, Z+3	; 0x03
    3ddc:	20 e0       	ldi	r18, 0x00	; 0
    3dde:	30 e0       	ldi	r19, 0x00	; 0
    3de0:	4a e7       	ldi	r20, 0x7A	; 122
    3de2:	54 e4       	ldi	r21, 0x44	; 68
    3de4:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3de8:	dc 01       	movw	r26, r24
    3dea:	cb 01       	movw	r24, r22
    3dec:	8c af       	std	Y+60, r24	; 0x3c
    3dee:	9d af       	std	Y+61, r25	; 0x3d
    3df0:	ae af       	std	Y+62, r26	; 0x3e
    3df2:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3df4:	6c ad       	ldd	r22, Y+60	; 0x3c
    3df6:	7d ad       	ldd	r23, Y+61	; 0x3d
    3df8:	8e ad       	ldd	r24, Y+62	; 0x3e
    3dfa:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dfc:	20 e0       	ldi	r18, 0x00	; 0
    3dfe:	30 e0       	ldi	r19, 0x00	; 0
    3e00:	4a ef       	ldi	r20, 0xFA	; 250
    3e02:	54 e4       	ldi	r21, 0x44	; 68
    3e04:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e08:	dc 01       	movw	r26, r24
    3e0a:	cb 01       	movw	r24, r22
    3e0c:	88 af       	std	Y+56, r24	; 0x38
    3e0e:	99 af       	std	Y+57, r25	; 0x39
    3e10:	aa af       	std	Y+58, r26	; 0x3a
    3e12:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    3e14:	68 ad       	ldd	r22, Y+56	; 0x38
    3e16:	79 ad       	ldd	r23, Y+57	; 0x39
    3e18:	8a ad       	ldd	r24, Y+58	; 0x3a
    3e1a:	9b ad       	ldd	r25, Y+59	; 0x3b
    3e1c:	20 e0       	ldi	r18, 0x00	; 0
    3e1e:	30 e0       	ldi	r19, 0x00	; 0
    3e20:	40 e8       	ldi	r20, 0x80	; 128
    3e22:	5f e3       	ldi	r21, 0x3F	; 63
    3e24:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3e28:	88 23       	and	r24, r24
    3e2a:	2c f4       	brge	.+10     	; 0x3e36 <Stepper_vidDirection+0x2240>
		__ticks = 1;
    3e2c:	81 e0       	ldi	r24, 0x01	; 1
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	9f ab       	std	Y+55, r25	; 0x37
    3e32:	8e ab       	std	Y+54, r24	; 0x36
    3e34:	3f c0       	rjmp	.+126    	; 0x3eb4 <Stepper_vidDirection+0x22be>
	else if (__tmp > 65535)
    3e36:	68 ad       	ldd	r22, Y+56	; 0x38
    3e38:	79 ad       	ldd	r23, Y+57	; 0x39
    3e3a:	8a ad       	ldd	r24, Y+58	; 0x3a
    3e3c:	9b ad       	ldd	r25, Y+59	; 0x3b
    3e3e:	20 e0       	ldi	r18, 0x00	; 0
    3e40:	3f ef       	ldi	r19, 0xFF	; 255
    3e42:	4f e7       	ldi	r20, 0x7F	; 127
    3e44:	57 e4       	ldi	r21, 0x47	; 71
    3e46:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3e4a:	18 16       	cp	r1, r24
    3e4c:	4c f5       	brge	.+82     	; 0x3ea0 <Stepper_vidDirection+0x22aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e4e:	6c ad       	ldd	r22, Y+60	; 0x3c
    3e50:	7d ad       	ldd	r23, Y+61	; 0x3d
    3e52:	8e ad       	ldd	r24, Y+62	; 0x3e
    3e54:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e56:	20 e0       	ldi	r18, 0x00	; 0
    3e58:	30 e0       	ldi	r19, 0x00	; 0
    3e5a:	40 e2       	ldi	r20, 0x20	; 32
    3e5c:	51 e4       	ldi	r21, 0x41	; 65
    3e5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e62:	dc 01       	movw	r26, r24
    3e64:	cb 01       	movw	r24, r22
    3e66:	bc 01       	movw	r22, r24
    3e68:	cd 01       	movw	r24, r26
    3e6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e6e:	dc 01       	movw	r26, r24
    3e70:	cb 01       	movw	r24, r22
    3e72:	9f ab       	std	Y+55, r25	; 0x37
    3e74:	8e ab       	std	Y+54, r24	; 0x36
    3e76:	0f c0       	rjmp	.+30     	; 0x3e96 <Stepper_vidDirection+0x22a0>
    3e78:	88 ec       	ldi	r24, 0xC8	; 200
    3e7a:	90 e0       	ldi	r25, 0x00	; 0
    3e7c:	9d ab       	std	Y+53, r25	; 0x35
    3e7e:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3e80:	8c a9       	ldd	r24, Y+52	; 0x34
    3e82:	9d a9       	ldd	r25, Y+53	; 0x35
    3e84:	01 97       	sbiw	r24, 0x01	; 1
    3e86:	f1 f7       	brne	.-4      	; 0x3e84 <Stepper_vidDirection+0x228e>
    3e88:	9d ab       	std	Y+53, r25	; 0x35
    3e8a:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e8c:	8e a9       	ldd	r24, Y+54	; 0x36
    3e8e:	9f a9       	ldd	r25, Y+55	; 0x37
    3e90:	01 97       	sbiw	r24, 0x01	; 1
    3e92:	9f ab       	std	Y+55, r25	; 0x37
    3e94:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e96:	8e a9       	ldd	r24, Y+54	; 0x36
    3e98:	9f a9       	ldd	r25, Y+55	; 0x37
    3e9a:	00 97       	sbiw	r24, 0x00	; 0
    3e9c:	69 f7       	brne	.-38     	; 0x3e78 <Stepper_vidDirection+0x2282>
    3e9e:	2d c0       	rjmp	.+90     	; 0x3efa <Stepper_vidDirection+0x2304>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ea0:	68 ad       	ldd	r22, Y+56	; 0x38
    3ea2:	79 ad       	ldd	r23, Y+57	; 0x39
    3ea4:	8a ad       	ldd	r24, Y+58	; 0x3a
    3ea6:	9b ad       	ldd	r25, Y+59	; 0x3b
    3ea8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3eac:	dc 01       	movw	r26, r24
    3eae:	cb 01       	movw	r24, r22
    3eb0:	9f ab       	std	Y+55, r25	; 0x37
    3eb2:	8e ab       	std	Y+54, r24	; 0x36
    3eb4:	8e a9       	ldd	r24, Y+54	; 0x36
    3eb6:	9f a9       	ldd	r25, Y+55	; 0x37
    3eb8:	9b ab       	std	Y+51, r25	; 0x33
    3eba:	8a ab       	std	Y+50, r24	; 0x32
    3ebc:	8a a9       	ldd	r24, Y+50	; 0x32
    3ebe:	9b a9       	ldd	r25, Y+51	; 0x33
    3ec0:	01 97       	sbiw	r24, 0x01	; 1
    3ec2:	f1 f7       	brne	.-4      	; 0x3ec0 <Stepper_vidDirection+0x22ca>
    3ec4:	9b ab       	std	Y+51, r25	; 0x33
    3ec6:	8a ab       	std	Y+50, r24	; 0x32
    3ec8:	18 c0       	rjmp	.+48     	; 0x3efa <Stepper_vidDirection+0x2304>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3eca:	fe 01       	movw	r30, r28
    3ecc:	ef 5b       	subi	r30, 0xBF	; 191
    3ece:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed0:	60 81       	ld	r22, Z
    3ed2:	71 81       	ldd	r23, Z+1	; 0x01
    3ed4:	82 81       	ldd	r24, Z+2	; 0x02
    3ed6:	93 81       	ldd	r25, Z+3	; 0x03
    3ed8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3edc:	dc 01       	movw	r26, r24
    3ede:	cb 01       	movw	r24, r22
    3ee0:	fe 01       	movw	r30, r28
    3ee2:	e0 5c       	subi	r30, 0xC0	; 192
    3ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee6:	80 83       	st	Z, r24
    3ee8:	fe 01       	movw	r30, r28
    3eea:	e0 5c       	subi	r30, 0xC0	; 192
    3eec:	ff 4f       	sbci	r31, 0xFF	; 255
    3eee:	80 81       	ld	r24, Z
    3ef0:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3ef2:	89 a9       	ldd	r24, Y+49	; 0x31
    3ef4:	8a 95       	dec	r24
    3ef6:	f1 f7       	brne	.-4      	; 0x3ef4 <Stepper_vidDirection+0x22fe>
    3ef8:	89 ab       	std	Y+49, r24	; 0x31
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    3efa:	89 e0       	ldi	r24, 0x09	; 9
    3efc:	60 e0       	ldi	r22, 0x00	; 0
    3efe:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    3f02:	8a e0       	ldi	r24, 0x0A	; 10
    3f04:	60 e0       	ldi	r22, 0x00	; 0
    3f06:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8HIGH);
    3f0a:	8b e0       	ldi	r24, 0x0B	; 11
    3f0c:	61 e0       	ldi	r22, 0x01	; 1
    3f0e:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8LOW);
    3f12:	8c e0       	ldi	r24, 0x0C	; 12
    3f14:	60 e0       	ldi	r22, 0x00	; 0
    3f16:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    3f1a:	80 e0       	ldi	r24, 0x00	; 0
    3f1c:	90 e8       	ldi	r25, 0x80	; 128
    3f1e:	a4 e5       	ldi	r26, 0x54	; 84
    3f20:	b4 e4       	ldi	r27, 0x44	; 68
    3f22:	8d a7       	std	Y+45, r24	; 0x2d
    3f24:	9e a7       	std	Y+46, r25	; 0x2e
    3f26:	af a7       	std	Y+47, r26	; 0x2f
    3f28:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3f2a:	6d a5       	ldd	r22, Y+45	; 0x2d
    3f2c:	7e a5       	ldd	r23, Y+46	; 0x2e
    3f2e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f30:	98 a9       	ldd	r25, Y+48	; 0x30
    3f32:	2b ea       	ldi	r18, 0xAB	; 171
    3f34:	3a ea       	ldi	r19, 0xAA	; 170
    3f36:	4a e2       	ldi	r20, 0x2A	; 42
    3f38:	50 e4       	ldi	r21, 0x40	; 64
    3f3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3f3e:	dc 01       	movw	r26, r24
    3f40:	cb 01       	movw	r24, r22
    3f42:	89 a7       	std	Y+41, r24	; 0x29
    3f44:	9a a7       	std	Y+42, r25	; 0x2a
    3f46:	ab a7       	std	Y+43, r26	; 0x2b
    3f48:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    3f4a:	69 a5       	ldd	r22, Y+41	; 0x29
    3f4c:	7a a5       	ldd	r23, Y+42	; 0x2a
    3f4e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3f50:	9c a5       	ldd	r25, Y+44	; 0x2c
    3f52:	20 e0       	ldi	r18, 0x00	; 0
    3f54:	30 e0       	ldi	r19, 0x00	; 0
    3f56:	40 e8       	ldi	r20, 0x80	; 128
    3f58:	5f e3       	ldi	r21, 0x3F	; 63
    3f5a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3f5e:	88 23       	and	r24, r24
    3f60:	1c f4       	brge	.+6      	; 0x3f68 <Stepper_vidDirection+0x2372>
		__ticks = 1;
    3f62:	81 e0       	ldi	r24, 0x01	; 1
    3f64:	88 a7       	std	Y+40, r24	; 0x28
    3f66:	91 c0       	rjmp	.+290    	; 0x408a <Stepper_vidDirection+0x2494>
	else if (__tmp > 255)
    3f68:	69 a5       	ldd	r22, Y+41	; 0x29
    3f6a:	7a a5       	ldd	r23, Y+42	; 0x2a
    3f6c:	8b a5       	ldd	r24, Y+43	; 0x2b
    3f6e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3f70:	20 e0       	ldi	r18, 0x00	; 0
    3f72:	30 e0       	ldi	r19, 0x00	; 0
    3f74:	4f e7       	ldi	r20, 0x7F	; 127
    3f76:	53 e4       	ldi	r21, 0x43	; 67
    3f78:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3f7c:	18 16       	cp	r1, r24
    3f7e:	0c f0       	brlt	.+2      	; 0x3f82 <Stepper_vidDirection+0x238c>
    3f80:	7b c0       	rjmp	.+246    	; 0x4078 <Stepper_vidDirection+0x2482>
	{
		_delay_ms(__us / 1000.0);
    3f82:	6d a5       	ldd	r22, Y+45	; 0x2d
    3f84:	7e a5       	ldd	r23, Y+46	; 0x2e
    3f86:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f88:	98 a9       	ldd	r25, Y+48	; 0x30
    3f8a:	20 e0       	ldi	r18, 0x00	; 0
    3f8c:	30 e0       	ldi	r19, 0x00	; 0
    3f8e:	4a e7       	ldi	r20, 0x7A	; 122
    3f90:	54 e4       	ldi	r21, 0x44	; 68
    3f92:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    3f96:	dc 01       	movw	r26, r24
    3f98:	cb 01       	movw	r24, r22
    3f9a:	8c a3       	std	Y+36, r24	; 0x24
    3f9c:	9d a3       	std	Y+37, r25	; 0x25
    3f9e:	ae a3       	std	Y+38, r26	; 0x26
    3fa0:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fa2:	6c a1       	ldd	r22, Y+36	; 0x24
    3fa4:	7d a1       	ldd	r23, Y+37	; 0x25
    3fa6:	8e a1       	ldd	r24, Y+38	; 0x26
    3fa8:	9f a1       	ldd	r25, Y+39	; 0x27
    3faa:	20 e0       	ldi	r18, 0x00	; 0
    3fac:	30 e0       	ldi	r19, 0x00	; 0
    3fae:	4a ef       	ldi	r20, 0xFA	; 250
    3fb0:	54 e4       	ldi	r21, 0x44	; 68
    3fb2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3fb6:	dc 01       	movw	r26, r24
    3fb8:	cb 01       	movw	r24, r22
    3fba:	88 a3       	std	Y+32, r24	; 0x20
    3fbc:	99 a3       	std	Y+33, r25	; 0x21
    3fbe:	aa a3       	std	Y+34, r26	; 0x22
    3fc0:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3fc2:	68 a1       	ldd	r22, Y+32	; 0x20
    3fc4:	79 a1       	ldd	r23, Y+33	; 0x21
    3fc6:	8a a1       	ldd	r24, Y+34	; 0x22
    3fc8:	9b a1       	ldd	r25, Y+35	; 0x23
    3fca:	20 e0       	ldi	r18, 0x00	; 0
    3fcc:	30 e0       	ldi	r19, 0x00	; 0
    3fce:	40 e8       	ldi	r20, 0x80	; 128
    3fd0:	5f e3       	ldi	r21, 0x3F	; 63
    3fd2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3fd6:	88 23       	and	r24, r24
    3fd8:	2c f4       	brge	.+10     	; 0x3fe4 <Stepper_vidDirection+0x23ee>
		__ticks = 1;
    3fda:	81 e0       	ldi	r24, 0x01	; 1
    3fdc:	90 e0       	ldi	r25, 0x00	; 0
    3fde:	9f 8f       	std	Y+31, r25	; 0x1f
    3fe0:	8e 8f       	std	Y+30, r24	; 0x1e
    3fe2:	3f c0       	rjmp	.+126    	; 0x4062 <Stepper_vidDirection+0x246c>
	else if (__tmp > 65535)
    3fe4:	68 a1       	ldd	r22, Y+32	; 0x20
    3fe6:	79 a1       	ldd	r23, Y+33	; 0x21
    3fe8:	8a a1       	ldd	r24, Y+34	; 0x22
    3fea:	9b a1       	ldd	r25, Y+35	; 0x23
    3fec:	20 e0       	ldi	r18, 0x00	; 0
    3fee:	3f ef       	ldi	r19, 0xFF	; 255
    3ff0:	4f e7       	ldi	r20, 0x7F	; 127
    3ff2:	57 e4       	ldi	r21, 0x47	; 71
    3ff4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3ff8:	18 16       	cp	r1, r24
    3ffa:	4c f5       	brge	.+82     	; 0x404e <Stepper_vidDirection+0x2458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ffc:	6c a1       	ldd	r22, Y+36	; 0x24
    3ffe:	7d a1       	ldd	r23, Y+37	; 0x25
    4000:	8e a1       	ldd	r24, Y+38	; 0x26
    4002:	9f a1       	ldd	r25, Y+39	; 0x27
    4004:	20 e0       	ldi	r18, 0x00	; 0
    4006:	30 e0       	ldi	r19, 0x00	; 0
    4008:	40 e2       	ldi	r20, 0x20	; 32
    400a:	51 e4       	ldi	r21, 0x41	; 65
    400c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4010:	dc 01       	movw	r26, r24
    4012:	cb 01       	movw	r24, r22
    4014:	bc 01       	movw	r22, r24
    4016:	cd 01       	movw	r24, r26
    4018:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    401c:	dc 01       	movw	r26, r24
    401e:	cb 01       	movw	r24, r22
    4020:	9f 8f       	std	Y+31, r25	; 0x1f
    4022:	8e 8f       	std	Y+30, r24	; 0x1e
    4024:	0f c0       	rjmp	.+30     	; 0x4044 <Stepper_vidDirection+0x244e>
    4026:	88 ec       	ldi	r24, 0xC8	; 200
    4028:	90 e0       	ldi	r25, 0x00	; 0
    402a:	9d 8f       	std	Y+29, r25	; 0x1d
    402c:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    402e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4030:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4032:	01 97       	sbiw	r24, 0x01	; 1
    4034:	f1 f7       	brne	.-4      	; 0x4032 <Stepper_vidDirection+0x243c>
    4036:	9d 8f       	std	Y+29, r25	; 0x1d
    4038:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    403a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    403c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    403e:	01 97       	sbiw	r24, 0x01	; 1
    4040:	9f 8f       	std	Y+31, r25	; 0x1f
    4042:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4044:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4046:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4048:	00 97       	sbiw	r24, 0x00	; 0
    404a:	69 f7       	brne	.-38     	; 0x4026 <Stepper_vidDirection+0x2430>
    404c:	24 c0       	rjmp	.+72     	; 0x4096 <Stepper_vidDirection+0x24a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    404e:	68 a1       	ldd	r22, Y+32	; 0x20
    4050:	79 a1       	ldd	r23, Y+33	; 0x21
    4052:	8a a1       	ldd	r24, Y+34	; 0x22
    4054:	9b a1       	ldd	r25, Y+35	; 0x23
    4056:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    405a:	dc 01       	movw	r26, r24
    405c:	cb 01       	movw	r24, r22
    405e:	9f 8f       	std	Y+31, r25	; 0x1f
    4060:	8e 8f       	std	Y+30, r24	; 0x1e
    4062:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4064:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4066:	9b 8f       	std	Y+27, r25	; 0x1b
    4068:	8a 8f       	std	Y+26, r24	; 0x1a
    406a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    406c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    406e:	01 97       	sbiw	r24, 0x01	; 1
    4070:	f1 f7       	brne	.-4      	; 0x406e <Stepper_vidDirection+0x2478>
    4072:	9b 8f       	std	Y+27, r25	; 0x1b
    4074:	8a 8f       	std	Y+26, r24	; 0x1a
    4076:	0f c0       	rjmp	.+30     	; 0x4096 <Stepper_vidDirection+0x24a0>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4078:	69 a5       	ldd	r22, Y+41	; 0x29
    407a:	7a a5       	ldd	r23, Y+42	; 0x2a
    407c:	8b a5       	ldd	r24, Y+43	; 0x2b
    407e:	9c a5       	ldd	r25, Y+44	; 0x2c
    4080:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4084:	dc 01       	movw	r26, r24
    4086:	cb 01       	movw	r24, r22
    4088:	88 a7       	std	Y+40, r24	; 0x28
    408a:	88 a5       	ldd	r24, Y+40	; 0x28
    408c:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    408e:	89 8d       	ldd	r24, Y+25	; 0x19
    4090:	8a 95       	dec	r24
    4092:	f1 f7       	brne	.-4      	; 0x4090 <Stepper_vidDirection+0x249a>
    4094:	89 8f       	std	Y+25, r24	; 0x19
					_delay_us(850);


					Dio_vidSetPinVal(Stepper_Motor_u8PIN_A,DIO_u8LOW);
    4096:	89 e0       	ldi	r24, 0x09	; 9
    4098:	60 e0       	ldi	r22, 0x00	; 0
    409a:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_B,DIO_u8LOW);
    409e:	8a e0       	ldi	r24, 0x0A	; 10
    40a0:	60 e0       	ldi	r22, 0x00	; 0
    40a2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_C,DIO_u8LOW);
    40a6:	8b e0       	ldi	r24, 0x0B	; 11
    40a8:	60 e0       	ldi	r22, 0x00	; 0
    40aa:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
					Dio_vidSetPinVal(Stepper_Motor_u8PIN_D,DIO_u8HIGH);
    40ae:	8c e0       	ldi	r24, 0x0C	; 12
    40b0:	61 e0       	ldi	r22, 0x01	; 1
    40b2:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
    40b6:	80 e0       	ldi	r24, 0x00	; 0
    40b8:	90 e8       	ldi	r25, 0x80	; 128
    40ba:	a4 e5       	ldi	r26, 0x54	; 84
    40bc:	b4 e4       	ldi	r27, 0x44	; 68
    40be:	8d 8b       	std	Y+21, r24	; 0x15
    40c0:	9e 8b       	std	Y+22, r25	; 0x16
    40c2:	af 8b       	std	Y+23, r26	; 0x17
    40c4:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    40c6:	6d 89       	ldd	r22, Y+21	; 0x15
    40c8:	7e 89       	ldd	r23, Y+22	; 0x16
    40ca:	8f 89       	ldd	r24, Y+23	; 0x17
    40cc:	98 8d       	ldd	r25, Y+24	; 0x18
    40ce:	2b ea       	ldi	r18, 0xAB	; 171
    40d0:	3a ea       	ldi	r19, 0xAA	; 170
    40d2:	4a e2       	ldi	r20, 0x2A	; 42
    40d4:	50 e4       	ldi	r21, 0x40	; 64
    40d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    40da:	dc 01       	movw	r26, r24
    40dc:	cb 01       	movw	r24, r22
    40de:	89 8b       	std	Y+17, r24	; 0x11
    40e0:	9a 8b       	std	Y+18, r25	; 0x12
    40e2:	ab 8b       	std	Y+19, r26	; 0x13
    40e4:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    40e6:	69 89       	ldd	r22, Y+17	; 0x11
    40e8:	7a 89       	ldd	r23, Y+18	; 0x12
    40ea:	8b 89       	ldd	r24, Y+19	; 0x13
    40ec:	9c 89       	ldd	r25, Y+20	; 0x14
    40ee:	20 e0       	ldi	r18, 0x00	; 0
    40f0:	30 e0       	ldi	r19, 0x00	; 0
    40f2:	40 e8       	ldi	r20, 0x80	; 128
    40f4:	5f e3       	ldi	r21, 0x3F	; 63
    40f6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    40fa:	88 23       	and	r24, r24
    40fc:	1c f4       	brge	.+6      	; 0x4104 <Stepper_vidDirection+0x250e>
		__ticks = 1;
    40fe:	81 e0       	ldi	r24, 0x01	; 1
    4100:	88 8b       	std	Y+16, r24	; 0x10
    4102:	91 c0       	rjmp	.+290    	; 0x4226 <Stepper_vidDirection+0x2630>
	else if (__tmp > 255)
    4104:	69 89       	ldd	r22, Y+17	; 0x11
    4106:	7a 89       	ldd	r23, Y+18	; 0x12
    4108:	8b 89       	ldd	r24, Y+19	; 0x13
    410a:	9c 89       	ldd	r25, Y+20	; 0x14
    410c:	20 e0       	ldi	r18, 0x00	; 0
    410e:	30 e0       	ldi	r19, 0x00	; 0
    4110:	4f e7       	ldi	r20, 0x7F	; 127
    4112:	53 e4       	ldi	r21, 0x43	; 67
    4114:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4118:	18 16       	cp	r1, r24
    411a:	0c f0       	brlt	.+2      	; 0x411e <Stepper_vidDirection+0x2528>
    411c:	7b c0       	rjmp	.+246    	; 0x4214 <Stepper_vidDirection+0x261e>
	{
		_delay_ms(__us / 1000.0);
    411e:	6d 89       	ldd	r22, Y+21	; 0x15
    4120:	7e 89       	ldd	r23, Y+22	; 0x16
    4122:	8f 89       	ldd	r24, Y+23	; 0x17
    4124:	98 8d       	ldd	r25, Y+24	; 0x18
    4126:	20 e0       	ldi	r18, 0x00	; 0
    4128:	30 e0       	ldi	r19, 0x00	; 0
    412a:	4a e7       	ldi	r20, 0x7A	; 122
    412c:	54 e4       	ldi	r21, 0x44	; 68
    412e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    4132:	dc 01       	movw	r26, r24
    4134:	cb 01       	movw	r24, r22
    4136:	8c 87       	std	Y+12, r24	; 0x0c
    4138:	9d 87       	std	Y+13, r25	; 0x0d
    413a:	ae 87       	std	Y+14, r26	; 0x0e
    413c:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    413e:	6c 85       	ldd	r22, Y+12	; 0x0c
    4140:	7d 85       	ldd	r23, Y+13	; 0x0d
    4142:	8e 85       	ldd	r24, Y+14	; 0x0e
    4144:	9f 85       	ldd	r25, Y+15	; 0x0f
    4146:	20 e0       	ldi	r18, 0x00	; 0
    4148:	30 e0       	ldi	r19, 0x00	; 0
    414a:	4a ef       	ldi	r20, 0xFA	; 250
    414c:	54 e4       	ldi	r21, 0x44	; 68
    414e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4152:	dc 01       	movw	r26, r24
    4154:	cb 01       	movw	r24, r22
    4156:	88 87       	std	Y+8, r24	; 0x08
    4158:	99 87       	std	Y+9, r25	; 0x09
    415a:	aa 87       	std	Y+10, r26	; 0x0a
    415c:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    415e:	68 85       	ldd	r22, Y+8	; 0x08
    4160:	79 85       	ldd	r23, Y+9	; 0x09
    4162:	8a 85       	ldd	r24, Y+10	; 0x0a
    4164:	9b 85       	ldd	r25, Y+11	; 0x0b
    4166:	20 e0       	ldi	r18, 0x00	; 0
    4168:	30 e0       	ldi	r19, 0x00	; 0
    416a:	40 e8       	ldi	r20, 0x80	; 128
    416c:	5f e3       	ldi	r21, 0x3F	; 63
    416e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4172:	88 23       	and	r24, r24
    4174:	2c f4       	brge	.+10     	; 0x4180 <Stepper_vidDirection+0x258a>
		__ticks = 1;
    4176:	81 e0       	ldi	r24, 0x01	; 1
    4178:	90 e0       	ldi	r25, 0x00	; 0
    417a:	9f 83       	std	Y+7, r25	; 0x07
    417c:	8e 83       	std	Y+6, r24	; 0x06
    417e:	3f c0       	rjmp	.+126    	; 0x41fe <Stepper_vidDirection+0x2608>
	else if (__tmp > 65535)
    4180:	68 85       	ldd	r22, Y+8	; 0x08
    4182:	79 85       	ldd	r23, Y+9	; 0x09
    4184:	8a 85       	ldd	r24, Y+10	; 0x0a
    4186:	9b 85       	ldd	r25, Y+11	; 0x0b
    4188:	20 e0       	ldi	r18, 0x00	; 0
    418a:	3f ef       	ldi	r19, 0xFF	; 255
    418c:	4f e7       	ldi	r20, 0x7F	; 127
    418e:	57 e4       	ldi	r21, 0x47	; 71
    4190:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4194:	18 16       	cp	r1, r24
    4196:	4c f5       	brge	.+82     	; 0x41ea <Stepper_vidDirection+0x25f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4198:	6c 85       	ldd	r22, Y+12	; 0x0c
    419a:	7d 85       	ldd	r23, Y+13	; 0x0d
    419c:	8e 85       	ldd	r24, Y+14	; 0x0e
    419e:	9f 85       	ldd	r25, Y+15	; 0x0f
    41a0:	20 e0       	ldi	r18, 0x00	; 0
    41a2:	30 e0       	ldi	r19, 0x00	; 0
    41a4:	40 e2       	ldi	r20, 0x20	; 32
    41a6:	51 e4       	ldi	r21, 0x41	; 65
    41a8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    41ac:	dc 01       	movw	r26, r24
    41ae:	cb 01       	movw	r24, r22
    41b0:	bc 01       	movw	r22, r24
    41b2:	cd 01       	movw	r24, r26
    41b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41b8:	dc 01       	movw	r26, r24
    41ba:	cb 01       	movw	r24, r22
    41bc:	9f 83       	std	Y+7, r25	; 0x07
    41be:	8e 83       	std	Y+6, r24	; 0x06
    41c0:	0f c0       	rjmp	.+30     	; 0x41e0 <Stepper_vidDirection+0x25ea>
    41c2:	88 ec       	ldi	r24, 0xC8	; 200
    41c4:	90 e0       	ldi	r25, 0x00	; 0
    41c6:	9d 83       	std	Y+5, r25	; 0x05
    41c8:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    41ca:	8c 81       	ldd	r24, Y+4	; 0x04
    41cc:	9d 81       	ldd	r25, Y+5	; 0x05
    41ce:	01 97       	sbiw	r24, 0x01	; 1
    41d0:	f1 f7       	brne	.-4      	; 0x41ce <Stepper_vidDirection+0x25d8>
    41d2:	9d 83       	std	Y+5, r25	; 0x05
    41d4:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41d6:	8e 81       	ldd	r24, Y+6	; 0x06
    41d8:	9f 81       	ldd	r25, Y+7	; 0x07
    41da:	01 97       	sbiw	r24, 0x01	; 1
    41dc:	9f 83       	std	Y+7, r25	; 0x07
    41de:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41e0:	8e 81       	ldd	r24, Y+6	; 0x06
    41e2:	9f 81       	ldd	r25, Y+7	; 0x07
    41e4:	00 97       	sbiw	r24, 0x00	; 0
    41e6:	69 f7       	brne	.-38     	; 0x41c2 <Stepper_vidDirection+0x25cc>
    41e8:	24 c0       	rjmp	.+72     	; 0x4232 <Stepper_vidDirection+0x263c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41ea:	68 85       	ldd	r22, Y+8	; 0x08
    41ec:	79 85       	ldd	r23, Y+9	; 0x09
    41ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    41f0:	9b 85       	ldd	r25, Y+11	; 0x0b
    41f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41f6:	dc 01       	movw	r26, r24
    41f8:	cb 01       	movw	r24, r22
    41fa:	9f 83       	std	Y+7, r25	; 0x07
    41fc:	8e 83       	std	Y+6, r24	; 0x06
    41fe:	8e 81       	ldd	r24, Y+6	; 0x06
    4200:	9f 81       	ldd	r25, Y+7	; 0x07
    4202:	9b 83       	std	Y+3, r25	; 0x03
    4204:	8a 83       	std	Y+2, r24	; 0x02
    4206:	8a 81       	ldd	r24, Y+2	; 0x02
    4208:	9b 81       	ldd	r25, Y+3	; 0x03
    420a:	01 97       	sbiw	r24, 0x01	; 1
    420c:	f1 f7       	brne	.-4      	; 0x420a <Stepper_vidDirection+0x2614>
    420e:	9b 83       	std	Y+3, r25	; 0x03
    4210:	8a 83       	std	Y+2, r24	; 0x02
    4212:	0f c0       	rjmp	.+30     	; 0x4232 <Stepper_vidDirection+0x263c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4214:	69 89       	ldd	r22, Y+17	; 0x11
    4216:	7a 89       	ldd	r23, Y+18	; 0x12
    4218:	8b 89       	ldd	r24, Y+19	; 0x13
    421a:	9c 89       	ldd	r25, Y+20	; 0x14
    421c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4220:	dc 01       	movw	r26, r24
    4222:	cb 01       	movw	r24, r22
    4224:	88 8b       	std	Y+16, r24	; 0x10
    4226:	88 89       	ldd	r24, Y+16	; 0x10
    4228:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    422a:	89 81       	ldd	r24, Y+1	; 0x01
    422c:	8a 95       	dec	r24
    422e:	f1 f7       	brne	.-4      	; 0x422c <Stepper_vidDirection+0x2636>
    4230:	89 83       	std	Y+1, r24	; 0x01
					_delay_us(850);
				}
				break;

			case 180:
				for(x=0; x<250; x++){
    4232:	de 01       	movw	r26, r28
    4234:	af 57       	subi	r26, 0x7F	; 127
    4236:	be 4f       	sbci	r27, 0xFE	; 254
    4238:	fe 01       	movw	r30, r28
    423a:	ef 57       	subi	r30, 0x7F	; 127
    423c:	fe 4f       	sbci	r31, 0xFE	; 254
    423e:	80 81       	ld	r24, Z
    4240:	8f 5f       	subi	r24, 0xFF	; 255
    4242:	8c 93       	st	X, r24
    4244:	fe 01       	movw	r30, r28
    4246:	ef 57       	subi	r30, 0x7F	; 127
    4248:	fe 4f       	sbci	r31, 0xFE	; 254
    424a:	80 81       	ld	r24, Z
    424c:	8a 3f       	cpi	r24, 0xFA	; 250
    424e:	08 f4       	brcc	.+2      	; 0x4252 <Stepper_vidDirection+0x265c>
    4250:	2e cc       	rjmp	.-1956   	; 0x3aae <Stepper_vidDirection+0x1eb8>
					_delay_us(850);
				}
				break;
			}
		}
	}
    4252:	c9 57       	subi	r28, 0x79	; 121
    4254:	de 4f       	sbci	r29, 0xFE	; 254
    4256:	0f b6       	in	r0, 0x3f	; 63
    4258:	f8 94       	cli
    425a:	de bf       	out	0x3e, r29	; 62
    425c:	0f be       	out	0x3f, r0	; 63
    425e:	cd bf       	out	0x3d, r28	; 61
    4260:	cf 91       	pop	r28
    4262:	df 91       	pop	r29
    4264:	1f 91       	pop	r17
    4266:	0f 91       	pop	r16
    4268:	08 95       	ret

0000426a <main>:
char pass1[4]={1,2,3};
char pass2[4]={3,2,7};
char pass3[4]={8,6,9};
u8 loc=0x80;
u8 loc2=0xC0;
int main(void){
    426a:	0f 93       	push	r16
    426c:	1f 93       	push	r17
    426e:	df 93       	push	r29
    4270:	cf 93       	push	r28
    4272:	cd b7       	in	r28, 0x3d	; 61
    4274:	de b7       	in	r29, 0x3e	; 62
    4276:	ca 5a       	subi	r28, 0xAA	; 170
    4278:	d1 40       	sbci	r29, 0x01	; 1
    427a:	0f b6       	in	r0, 0x3f	; 63
    427c:	f8 94       	cli
    427e:	de bf       	out	0x3e, r29	; 62
    4280:	0f be       	out	0x3f, r0	; 63
    4282:	cd bf       	out	0x3d, r28	; 61
	Dio_vidSetPinDir(DIO_u8PIN_6,DIO_u8OUTPUT);
    4284:	86 e0       	ldi	r24, 0x06	; 6
    4286:	61 e0       	ldi	r22, 0x01	; 1
    4288:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinDir(DIO_u8PIN_8,DIO_u8INPUT);
    428c:	88 e0       	ldi	r24, 0x08	; 8
    428e:	60 e0       	ldi	r22, 0x00	; 0
    4290:	0e 94 16 07 	call	0xe2c	; 0xe2c <Dio_vidSetPinDir>
	Dio_vidSetPinVal(DIO_u8PIN_8,DIO_u8HIGH); //pullup resistor
    4294:	88 e0       	ldi	r24, 0x08	; 8
    4296:	61 e0       	ldi	r22, 0x01	; 1
    4298:	0e 94 01 08 	call	0x1002	; 0x1002 <Dio_vidSetPinVal>
	Lcd_vidInit();
    429c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <Lcd_vidInit>
	Keypad_vidInit();
    42a0:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <Keypad_vidInit>
	while(1){

		key=Keypad_u8GetKey();
    42a4:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <Keypad_u8GetKey>
    42a8:	80 93 2a 01 	sts	0x012A, r24
		x=PINB;
    42ac:	e6 e3       	ldi	r30, 0x36	; 54
    42ae:	f0 e0       	ldi	r31, 0x00	; 0
    42b0:	80 81       	ld	r24, Z
    42b2:	80 93 1e 01 	sts	0x011E, r24
		if(x==1){
    42b6:	80 91 1e 01 	lds	r24, 0x011E
    42ba:	81 30       	cpi	r24, 0x01	; 1
    42bc:	11 f0       	breq	.+4      	; 0x42c2 <main+0x58>
    42be:	0c 94 aa 31 	jmp	0x6354	; 0x6354 <main+0x20ea>

			if((key!='=')&&(key!=0xFF)){
    42c2:	80 91 2a 01 	lds	r24, 0x012A
    42c6:	8d 33       	cpi	r24, 0x3D	; 61
    42c8:	11 f4       	brne	.+4      	; 0x42ce <main+0x64>
    42ca:	0c 94 5a 2e 	jmp	0x5cb4	; 0x5cb4 <main+0x1a4a>
    42ce:	80 91 2a 01 	lds	r24, 0x012A
    42d2:	8f 3f       	cpi	r24, 0xFF	; 255
    42d4:	11 f4       	brne	.+4      	; 0x42da <main+0x70>
    42d6:	0c 94 5a 2e 	jmp	0x5cb4	; 0x5cb4 <main+0x1a4a>
				Lcd_vidSendCommand(loc);
    42da:	80 91 19 01 	lds	r24, 0x0119
    42de:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
				switch(key){
    42e2:	80 91 2a 01 	lds	r24, 0x012A
    42e6:	28 2f       	mov	r18, r24
    42e8:	30 e0       	ldi	r19, 0x00	; 0
    42ea:	c7 55       	subi	r28, 0x57	; 87
    42ec:	de 4f       	sbci	r29, 0xFE	; 254
    42ee:	39 83       	std	Y+1, r19	; 0x01
    42f0:	28 83       	st	Y, r18
    42f2:	c9 5a       	subi	r28, 0xA9	; 169
    42f4:	d1 40       	sbci	r29, 0x01	; 1
    42f6:	c7 55       	subi	r28, 0x57	; 87
    42f8:	de 4f       	sbci	r29, 0xFE	; 254
    42fa:	88 81       	ld	r24, Y
    42fc:	99 81       	ldd	r25, Y+1	; 0x01
    42fe:	c9 5a       	subi	r28, 0xA9	; 169
    4300:	d1 40       	sbci	r29, 0x01	; 1
    4302:	87 30       	cpi	r24, 0x07	; 7
    4304:	91 05       	cpc	r25, r1
    4306:	09 f4       	brne	.+2      	; 0x430a <main+0xa0>
    4308:	80 c5       	rjmp	.+2816   	; 0x4e0a <main+0xba0>
    430a:	c7 55       	subi	r28, 0x57	; 87
    430c:	de 4f       	sbci	r29, 0xFE	; 254
    430e:	e8 81       	ld	r30, Y
    4310:	f9 81       	ldd	r31, Y+1	; 0x01
    4312:	c9 5a       	subi	r28, 0xA9	; 169
    4314:	d1 40       	sbci	r29, 0x01	; 1
    4316:	e8 30       	cpi	r30, 0x08	; 8
    4318:	f1 05       	cpc	r31, r1
    431a:	0c f0       	brlt	.+2      	; 0x431e <main+0xb4>
    431c:	47 c0       	rjmp	.+142    	; 0x43ac <main+0x142>
    431e:	c7 55       	subi	r28, 0x57	; 87
    4320:	de 4f       	sbci	r29, 0xFE	; 254
    4322:	28 81       	ld	r18, Y
    4324:	39 81       	ldd	r19, Y+1	; 0x01
    4326:	c9 5a       	subi	r28, 0xA9	; 169
    4328:	d1 40       	sbci	r29, 0x01	; 1
    432a:	23 30       	cpi	r18, 0x03	; 3
    432c:	31 05       	cpc	r19, r1
    432e:	09 f4       	brne	.+2      	; 0x4332 <main+0xc8>
    4330:	30 c2       	rjmp	.+1120   	; 0x4792 <main+0x528>
    4332:	c7 55       	subi	r28, 0x57	; 87
    4334:	de 4f       	sbci	r29, 0xFE	; 254
    4336:	88 81       	ld	r24, Y
    4338:	99 81       	ldd	r25, Y+1	; 0x01
    433a:	c9 5a       	subi	r28, 0xA9	; 169
    433c:	d1 40       	sbci	r29, 0x01	; 1
    433e:	84 30       	cpi	r24, 0x04	; 4
    4340:	91 05       	cpc	r25, r1
    4342:	fc f4       	brge	.+62     	; 0x4382 <main+0x118>
    4344:	c7 55       	subi	r28, 0x57	; 87
    4346:	de 4f       	sbci	r29, 0xFE	; 254
    4348:	e8 81       	ld	r30, Y
    434a:	f9 81       	ldd	r31, Y+1	; 0x01
    434c:	c9 5a       	subi	r28, 0xA9	; 169
    434e:	d1 40       	sbci	r29, 0x01	; 1
    4350:	e1 30       	cpi	r30, 0x01	; 1
    4352:	f1 05       	cpc	r31, r1
    4354:	09 f4       	brne	.+2      	; 0x4358 <main+0xee>
    4356:	7f c0       	rjmp	.+254    	; 0x4456 <main+0x1ec>
    4358:	c7 55       	subi	r28, 0x57	; 87
    435a:	de 4f       	sbci	r29, 0xFE	; 254
    435c:	28 81       	ld	r18, Y
    435e:	39 81       	ldd	r19, Y+1	; 0x01
    4360:	c9 5a       	subi	r28, 0xA9	; 169
    4362:	d1 40       	sbci	r29, 0x01	; 1
    4364:	22 30       	cpi	r18, 0x02	; 2
    4366:	31 05       	cpc	r19, r1
    4368:	0c f0       	brlt	.+2      	; 0x436c <main+0x102>
    436a:	44 c1       	rjmp	.+648    	; 0x45f4 <main+0x38a>
    436c:	c7 55       	subi	r28, 0x57	; 87
    436e:	de 4f       	sbci	r29, 0xFE	; 254
    4370:	88 81       	ld	r24, Y
    4372:	99 81       	ldd	r25, Y+1	; 0x01
    4374:	c9 5a       	subi	r28, 0xA9	; 169
    4376:	d1 40       	sbci	r29, 0x01	; 1
    4378:	00 97       	sbiw	r24, 0x00	; 0
    437a:	11 f4       	brne	.+4      	; 0x4380 <main+0x116>
    437c:	0c 94 45 2a 	jmp	0x548a	; 0x548a <main+0x1220>
    4380:	91 cf       	rjmp	.-222    	; 0x42a4 <main+0x3a>
    4382:	c7 55       	subi	r28, 0x57	; 87
    4384:	de 4f       	sbci	r29, 0xFE	; 254
    4386:	e8 81       	ld	r30, Y
    4388:	f9 81       	ldd	r31, Y+1	; 0x01
    438a:	c9 5a       	subi	r28, 0xA9	; 169
    438c:	d1 40       	sbci	r29, 0x01	; 1
    438e:	e5 30       	cpi	r30, 0x05	; 5
    4390:	f1 05       	cpc	r31, r1
    4392:	09 f4       	brne	.+2      	; 0x4396 <main+0x12c>
    4394:	9c c3       	rjmp	.+1848   	; 0x4ace <main+0x864>
    4396:	c7 55       	subi	r28, 0x57	; 87
    4398:	de 4f       	sbci	r29, 0xFE	; 254
    439a:	28 81       	ld	r18, Y
    439c:	39 81       	ldd	r19, Y+1	; 0x01
    439e:	c9 5a       	subi	r28, 0xA9	; 169
    43a0:	d1 40       	sbci	r29, 0x01	; 1
    43a2:	26 30       	cpi	r18, 0x06	; 6
    43a4:	31 05       	cpc	r19, r1
    43a6:	0c f0       	brlt	.+2      	; 0x43aa <main+0x140>
    43a8:	61 c4       	rjmp	.+2242   	; 0x4c6c <main+0xa02>
    43aa:	c2 c2       	rjmp	.+1412   	; 0x4930 <main+0x6c6>
    43ac:	c7 55       	subi	r28, 0x57	; 87
    43ae:	de 4f       	sbci	r29, 0xFE	; 254
    43b0:	88 81       	ld	r24, Y
    43b2:	99 81       	ldd	r25, Y+1	; 0x01
    43b4:	c9 5a       	subi	r28, 0xA9	; 169
    43b6:	d1 40       	sbci	r29, 0x01	; 1
    43b8:	8a 32       	cpi	r24, 0x2A	; 42
    43ba:	91 05       	cpc	r25, r1
    43bc:	11 f4       	brne	.+4      	; 0x43c2 <main+0x158>
    43be:	0c 94 b8 2c 	jmp	0x5970	; 0x5970 <main+0x1706>
    43c2:	c7 55       	subi	r28, 0x57	; 87
    43c4:	de 4f       	sbci	r29, 0xFE	; 254
    43c6:	e8 81       	ld	r30, Y
    43c8:	f9 81       	ldd	r31, Y+1	; 0x01
    43ca:	c9 5a       	subi	r28, 0xA9	; 169
    43cc:	d1 40       	sbci	r29, 0x01	; 1
    43ce:	eb 32       	cpi	r30, 0x2B	; 43
    43d0:	f1 05       	cpc	r31, r1
    43d2:	04 f5       	brge	.+64     	; 0x4414 <main+0x1aa>
    43d4:	c7 55       	subi	r28, 0x57	; 87
    43d6:	de 4f       	sbci	r29, 0xFE	; 254
    43d8:	28 81       	ld	r18, Y
    43da:	39 81       	ldd	r19, Y+1	; 0x01
    43dc:	c9 5a       	subi	r28, 0xA9	; 169
    43de:	d1 40       	sbci	r29, 0x01	; 1
    43e0:	29 30       	cpi	r18, 0x09	; 9
    43e2:	31 05       	cpc	r19, r1
    43e4:	09 f4       	brne	.+2      	; 0x43e8 <main+0x17e>
    43e6:	af c6       	rjmp	.+3422   	; 0x5146 <main+0xedc>
    43e8:	c7 55       	subi	r28, 0x57	; 87
    43ea:	de 4f       	sbci	r29, 0xFE	; 254
    43ec:	88 81       	ld	r24, Y
    43ee:	99 81       	ldd	r25, Y+1	; 0x01
    43f0:	c9 5a       	subi	r28, 0xA9	; 169
    43f2:	d1 40       	sbci	r29, 0x01	; 1
    43f4:	89 30       	cpi	r24, 0x09	; 9
    43f6:	91 05       	cpc	r25, r1
    43f8:	0c f4       	brge	.+2      	; 0x43fc <main+0x192>
    43fa:	d6 c5       	rjmp	.+2988   	; 0x4fa8 <main+0xd3e>
    43fc:	c7 55       	subi	r28, 0x57	; 87
    43fe:	de 4f       	sbci	r29, 0xFE	; 254
    4400:	e8 81       	ld	r30, Y
    4402:	f9 81       	ldd	r31, Y+1	; 0x01
    4404:	c9 5a       	subi	r28, 0xA9	; 169
    4406:	d1 40       	sbci	r29, 0x01	; 1
    4408:	e3 32       	cpi	r30, 0x23	; 35
    440a:	f1 05       	cpc	r31, r1
    440c:	11 f4       	brne	.+4      	; 0x4412 <main+0x1a8>
    440e:	0c 94 16 2b 	jmp	0x562c	; 0x562c <main+0x13c2>
    4412:	48 cf       	rjmp	.-368    	; 0x42a4 <main+0x3a>
    4414:	c7 55       	subi	r28, 0x57	; 87
    4416:	de 4f       	sbci	r29, 0xFE	; 254
    4418:	28 81       	ld	r18, Y
    441a:	39 81       	ldd	r19, Y+1	; 0x01
    441c:	c9 5a       	subi	r28, 0xA9	; 169
    441e:	d1 40       	sbci	r29, 0x01	; 1
    4420:	2d 32       	cpi	r18, 0x2D	; 45
    4422:	31 05       	cpc	r19, r1
    4424:	11 f4       	brne	.+4      	; 0x442a <main+0x1c0>
    4426:	0c 94 e7 2b 	jmp	0x57ce	; 0x57ce <main+0x1564>
    442a:	c7 55       	subi	r28, 0x57	; 87
    442c:	de 4f       	sbci	r29, 0xFE	; 254
    442e:	88 81       	ld	r24, Y
    4430:	99 81       	ldd	r25, Y+1	; 0x01
    4432:	c9 5a       	subi	r28, 0xA9	; 169
    4434:	d1 40       	sbci	r29, 0x01	; 1
    4436:	8f 32       	cpi	r24, 0x2F	; 47
    4438:	91 05       	cpc	r25, r1
    443a:	11 f4       	brne	.+4      	; 0x4440 <main+0x1d6>
    443c:	0c 94 89 2d 	jmp	0x5b12	; 0x5b12 <main+0x18a8>
    4440:	c7 55       	subi	r28, 0x57	; 87
    4442:	de 4f       	sbci	r29, 0xFE	; 254
    4444:	e8 81       	ld	r30, Y
    4446:	f9 81       	ldd	r31, Y+1	; 0x01
    4448:	c9 5a       	subi	r28, 0xA9	; 169
    444a:	d1 40       	sbci	r29, 0x01	; 1
    444c:	eb 32       	cpi	r30, 0x2B	; 43
    444e:	f1 05       	cpc	r31, r1
    4450:	09 f4       	brne	.+2      	; 0x4454 <main+0x1ea>
    4452:	4a c7       	rjmp	.+3732   	; 0x52e8 <main+0x107e>
    4454:	27 cf       	rjmp	.-434    	; 0x42a4 <main+0x3a>
				case 1:
					Lcd_vidSendCommand(loc);
    4456:	80 91 19 01 	lds	r24, 0x0119
    445a:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('a');
    445e:	81 e6       	ldi	r24, 0x61	; 97
    4460:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4464:	80 91 19 01 	lds	r24, 0x0119
    4468:	8f 5f       	subi	r24, 0xFF	; 255
    446a:	80 93 19 01 	sts	0x0119, r24
					id[j]='a';
    446e:	80 91 1c 01 	lds	r24, 0x011C
    4472:	88 2f       	mov	r24, r24
    4474:	90 e0       	ldi	r25, 0x00	; 0
    4476:	fc 01       	movw	r30, r24
    4478:	eb 5d       	subi	r30, 0xDB	; 219
    447a:	fe 4f       	sbci	r31, 0xFE	; 254
    447c:	81 e6       	ldi	r24, 0x61	; 97
    447e:	80 83       	st	Z, r24
					j++;
    4480:	80 91 1c 01 	lds	r24, 0x011C
    4484:	8f 5f       	subi	r24, 0xFF	; 255
    4486:	80 93 1c 01 	sts	0x011C, r24
    448a:	fe 01       	movw	r30, r28
    448c:	ef 55       	subi	r30, 0x5F	; 95
    448e:	fe 4f       	sbci	r31, 0xFE	; 254
    4490:	80 e0       	ldi	r24, 0x00	; 0
    4492:	90 e0       	ldi	r25, 0x00	; 0
    4494:	a8 e4       	ldi	r26, 0x48	; 72
    4496:	b3 e4       	ldi	r27, 0x43	; 67
    4498:	80 83       	st	Z, r24
    449a:	91 83       	std	Z+1, r25	; 0x01
    449c:	a2 83       	std	Z+2, r26	; 0x02
    449e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44a0:	8e 01       	movw	r16, r28
    44a2:	03 56       	subi	r16, 0x63	; 99
    44a4:	1e 4f       	sbci	r17, 0xFE	; 254
    44a6:	fe 01       	movw	r30, r28
    44a8:	ef 55       	subi	r30, 0x5F	; 95
    44aa:	fe 4f       	sbci	r31, 0xFE	; 254
    44ac:	60 81       	ld	r22, Z
    44ae:	71 81       	ldd	r23, Z+1	; 0x01
    44b0:	82 81       	ldd	r24, Z+2	; 0x02
    44b2:	93 81       	ldd	r25, Z+3	; 0x03
    44b4:	20 e0       	ldi	r18, 0x00	; 0
    44b6:	30 e0       	ldi	r19, 0x00	; 0
    44b8:	4a ef       	ldi	r20, 0xFA	; 250
    44ba:	54 e4       	ldi	r21, 0x44	; 68
    44bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	f8 01       	movw	r30, r16
    44c6:	80 83       	st	Z, r24
    44c8:	91 83       	std	Z+1, r25	; 0x01
    44ca:	a2 83       	std	Z+2, r26	; 0x02
    44cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44ce:	fe 01       	movw	r30, r28
    44d0:	e3 56       	subi	r30, 0x63	; 99
    44d2:	fe 4f       	sbci	r31, 0xFE	; 254
    44d4:	60 81       	ld	r22, Z
    44d6:	71 81       	ldd	r23, Z+1	; 0x01
    44d8:	82 81       	ldd	r24, Z+2	; 0x02
    44da:	93 81       	ldd	r25, Z+3	; 0x03
    44dc:	20 e0       	ldi	r18, 0x00	; 0
    44de:	30 e0       	ldi	r19, 0x00	; 0
    44e0:	40 e8       	ldi	r20, 0x80	; 128
    44e2:	5f e3       	ldi	r21, 0x3F	; 63
    44e4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    44e8:	88 23       	and	r24, r24
    44ea:	44 f4       	brge	.+16     	; 0x44fc <main+0x292>
		__ticks = 1;
    44ec:	fe 01       	movw	r30, r28
    44ee:	e5 56       	subi	r30, 0x65	; 101
    44f0:	fe 4f       	sbci	r31, 0xFE	; 254
    44f2:	81 e0       	ldi	r24, 0x01	; 1
    44f4:	90 e0       	ldi	r25, 0x00	; 0
    44f6:	91 83       	std	Z+1, r25	; 0x01
    44f8:	80 83       	st	Z, r24
    44fa:	64 c0       	rjmp	.+200    	; 0x45c4 <main+0x35a>
	else if (__tmp > 65535)
    44fc:	fe 01       	movw	r30, r28
    44fe:	e3 56       	subi	r30, 0x63	; 99
    4500:	fe 4f       	sbci	r31, 0xFE	; 254
    4502:	60 81       	ld	r22, Z
    4504:	71 81       	ldd	r23, Z+1	; 0x01
    4506:	82 81       	ldd	r24, Z+2	; 0x02
    4508:	93 81       	ldd	r25, Z+3	; 0x03
    450a:	20 e0       	ldi	r18, 0x00	; 0
    450c:	3f ef       	ldi	r19, 0xFF	; 255
    450e:	4f e7       	ldi	r20, 0x7F	; 127
    4510:	57 e4       	ldi	r21, 0x47	; 71
    4512:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4516:	18 16       	cp	r1, r24
    4518:	0c f0       	brlt	.+2      	; 0x451c <main+0x2b2>
    451a:	43 c0       	rjmp	.+134    	; 0x45a2 <main+0x338>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    451c:	fe 01       	movw	r30, r28
    451e:	ef 55       	subi	r30, 0x5F	; 95
    4520:	fe 4f       	sbci	r31, 0xFE	; 254
    4522:	60 81       	ld	r22, Z
    4524:	71 81       	ldd	r23, Z+1	; 0x01
    4526:	82 81       	ldd	r24, Z+2	; 0x02
    4528:	93 81       	ldd	r25, Z+3	; 0x03
    452a:	20 e0       	ldi	r18, 0x00	; 0
    452c:	30 e0       	ldi	r19, 0x00	; 0
    452e:	40 e2       	ldi	r20, 0x20	; 32
    4530:	51 e4       	ldi	r21, 0x41	; 65
    4532:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4536:	dc 01       	movw	r26, r24
    4538:	cb 01       	movw	r24, r22
    453a:	8e 01       	movw	r16, r28
    453c:	05 56       	subi	r16, 0x65	; 101
    453e:	1e 4f       	sbci	r17, 0xFE	; 254
    4540:	bc 01       	movw	r22, r24
    4542:	cd 01       	movw	r24, r26
    4544:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4548:	dc 01       	movw	r26, r24
    454a:	cb 01       	movw	r24, r22
    454c:	f8 01       	movw	r30, r16
    454e:	91 83       	std	Z+1, r25	; 0x01
    4550:	80 83       	st	Z, r24
    4552:	1f c0       	rjmp	.+62     	; 0x4592 <main+0x328>
    4554:	fe 01       	movw	r30, r28
    4556:	e7 56       	subi	r30, 0x67	; 103
    4558:	fe 4f       	sbci	r31, 0xFE	; 254
    455a:	88 ec       	ldi	r24, 0xC8	; 200
    455c:	90 e0       	ldi	r25, 0x00	; 0
    455e:	91 83       	std	Z+1, r25	; 0x01
    4560:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4562:	fe 01       	movw	r30, r28
    4564:	e7 56       	subi	r30, 0x67	; 103
    4566:	fe 4f       	sbci	r31, 0xFE	; 254
    4568:	80 81       	ld	r24, Z
    456a:	91 81       	ldd	r25, Z+1	; 0x01
    456c:	01 97       	sbiw	r24, 0x01	; 1
    456e:	f1 f7       	brne	.-4      	; 0x456c <main+0x302>
    4570:	fe 01       	movw	r30, r28
    4572:	e7 56       	subi	r30, 0x67	; 103
    4574:	fe 4f       	sbci	r31, 0xFE	; 254
    4576:	91 83       	std	Z+1, r25	; 0x01
    4578:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    457a:	de 01       	movw	r26, r28
    457c:	a5 56       	subi	r26, 0x65	; 101
    457e:	be 4f       	sbci	r27, 0xFE	; 254
    4580:	fe 01       	movw	r30, r28
    4582:	e5 56       	subi	r30, 0x65	; 101
    4584:	fe 4f       	sbci	r31, 0xFE	; 254
    4586:	80 81       	ld	r24, Z
    4588:	91 81       	ldd	r25, Z+1	; 0x01
    458a:	01 97       	sbiw	r24, 0x01	; 1
    458c:	11 96       	adiw	r26, 0x01	; 1
    458e:	9c 93       	st	X, r25
    4590:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4592:	fe 01       	movw	r30, r28
    4594:	e5 56       	subi	r30, 0x65	; 101
    4596:	fe 4f       	sbci	r31, 0xFE	; 254
    4598:	80 81       	ld	r24, Z
    459a:	91 81       	ldd	r25, Z+1	; 0x01
    459c:	00 97       	sbiw	r24, 0x00	; 0
    459e:	d1 f6       	brne	.-76     	; 0x4554 <main+0x2ea>
    45a0:	81 ce       	rjmp	.-766    	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45a2:	8e 01       	movw	r16, r28
    45a4:	05 56       	subi	r16, 0x65	; 101
    45a6:	1e 4f       	sbci	r17, 0xFE	; 254
    45a8:	fe 01       	movw	r30, r28
    45aa:	e3 56       	subi	r30, 0x63	; 99
    45ac:	fe 4f       	sbci	r31, 0xFE	; 254
    45ae:	60 81       	ld	r22, Z
    45b0:	71 81       	ldd	r23, Z+1	; 0x01
    45b2:	82 81       	ldd	r24, Z+2	; 0x02
    45b4:	93 81       	ldd	r25, Z+3	; 0x03
    45b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45ba:	dc 01       	movw	r26, r24
    45bc:	cb 01       	movw	r24, r22
    45be:	f8 01       	movw	r30, r16
    45c0:	91 83       	std	Z+1, r25	; 0x01
    45c2:	80 83       	st	Z, r24
    45c4:	de 01       	movw	r26, r28
    45c6:	a9 56       	subi	r26, 0x69	; 105
    45c8:	be 4f       	sbci	r27, 0xFE	; 254
    45ca:	fe 01       	movw	r30, r28
    45cc:	e5 56       	subi	r30, 0x65	; 101
    45ce:	fe 4f       	sbci	r31, 0xFE	; 254
    45d0:	80 81       	ld	r24, Z
    45d2:	91 81       	ldd	r25, Z+1	; 0x01
    45d4:	11 96       	adiw	r26, 0x01	; 1
    45d6:	9c 93       	st	X, r25
    45d8:	8e 93       	st	-X, r24
    45da:	fe 01       	movw	r30, r28
    45dc:	e9 56       	subi	r30, 0x69	; 105
    45de:	fe 4f       	sbci	r31, 0xFE	; 254
    45e0:	80 81       	ld	r24, Z
    45e2:	91 81       	ldd	r25, Z+1	; 0x01
    45e4:	01 97       	sbiw	r24, 0x01	; 1
    45e6:	f1 f7       	brne	.-4      	; 0x45e4 <main+0x37a>
    45e8:	fe 01       	movw	r30, r28
    45ea:	e9 56       	subi	r30, 0x69	; 105
    45ec:	fe 4f       	sbci	r31, 0xFE	; 254
    45ee:	91 83       	std	Z+1, r25	; 0x01
    45f0:	80 83       	st	Z, r24
    45f2:	58 ce       	rjmp	.-848    	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 2:
					Lcd_vidSendCommand(loc);
    45f4:	80 91 19 01 	lds	r24, 0x0119
    45f8:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('b');
    45fc:	82 e6       	ldi	r24, 0x62	; 98
    45fe:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4602:	80 91 19 01 	lds	r24, 0x0119
    4606:	8f 5f       	subi	r24, 0xFF	; 255
    4608:	80 93 19 01 	sts	0x0119, r24
					id[j]='b';
    460c:	80 91 1c 01 	lds	r24, 0x011C
    4610:	88 2f       	mov	r24, r24
    4612:	90 e0       	ldi	r25, 0x00	; 0
    4614:	fc 01       	movw	r30, r24
    4616:	eb 5d       	subi	r30, 0xDB	; 219
    4618:	fe 4f       	sbci	r31, 0xFE	; 254
    461a:	82 e6       	ldi	r24, 0x62	; 98
    461c:	80 83       	st	Z, r24
					j++;
    461e:	80 91 1c 01 	lds	r24, 0x011C
    4622:	8f 5f       	subi	r24, 0xFF	; 255
    4624:	80 93 1c 01 	sts	0x011C, r24
    4628:	fe 01       	movw	r30, r28
    462a:	ed 56       	subi	r30, 0x6D	; 109
    462c:	fe 4f       	sbci	r31, 0xFE	; 254
    462e:	80 e0       	ldi	r24, 0x00	; 0
    4630:	90 e0       	ldi	r25, 0x00	; 0
    4632:	a8 e4       	ldi	r26, 0x48	; 72
    4634:	b3 e4       	ldi	r27, 0x43	; 67
    4636:	80 83       	st	Z, r24
    4638:	91 83       	std	Z+1, r25	; 0x01
    463a:	a2 83       	std	Z+2, r26	; 0x02
    463c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    463e:	8e 01       	movw	r16, r28
    4640:	01 57       	subi	r16, 0x71	; 113
    4642:	1e 4f       	sbci	r17, 0xFE	; 254
    4644:	fe 01       	movw	r30, r28
    4646:	ed 56       	subi	r30, 0x6D	; 109
    4648:	fe 4f       	sbci	r31, 0xFE	; 254
    464a:	60 81       	ld	r22, Z
    464c:	71 81       	ldd	r23, Z+1	; 0x01
    464e:	82 81       	ldd	r24, Z+2	; 0x02
    4650:	93 81       	ldd	r25, Z+3	; 0x03
    4652:	20 e0       	ldi	r18, 0x00	; 0
    4654:	30 e0       	ldi	r19, 0x00	; 0
    4656:	4a ef       	ldi	r20, 0xFA	; 250
    4658:	54 e4       	ldi	r21, 0x44	; 68
    465a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    465e:	dc 01       	movw	r26, r24
    4660:	cb 01       	movw	r24, r22
    4662:	f8 01       	movw	r30, r16
    4664:	80 83       	st	Z, r24
    4666:	91 83       	std	Z+1, r25	; 0x01
    4668:	a2 83       	std	Z+2, r26	; 0x02
    466a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    466c:	fe 01       	movw	r30, r28
    466e:	e1 57       	subi	r30, 0x71	; 113
    4670:	fe 4f       	sbci	r31, 0xFE	; 254
    4672:	60 81       	ld	r22, Z
    4674:	71 81       	ldd	r23, Z+1	; 0x01
    4676:	82 81       	ldd	r24, Z+2	; 0x02
    4678:	93 81       	ldd	r25, Z+3	; 0x03
    467a:	20 e0       	ldi	r18, 0x00	; 0
    467c:	30 e0       	ldi	r19, 0x00	; 0
    467e:	40 e8       	ldi	r20, 0x80	; 128
    4680:	5f e3       	ldi	r21, 0x3F	; 63
    4682:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4686:	88 23       	and	r24, r24
    4688:	44 f4       	brge	.+16     	; 0x469a <main+0x430>
		__ticks = 1;
    468a:	fe 01       	movw	r30, r28
    468c:	e3 57       	subi	r30, 0x73	; 115
    468e:	fe 4f       	sbci	r31, 0xFE	; 254
    4690:	81 e0       	ldi	r24, 0x01	; 1
    4692:	90 e0       	ldi	r25, 0x00	; 0
    4694:	91 83       	std	Z+1, r25	; 0x01
    4696:	80 83       	st	Z, r24
    4698:	64 c0       	rjmp	.+200    	; 0x4762 <main+0x4f8>
	else if (__tmp > 65535)
    469a:	fe 01       	movw	r30, r28
    469c:	e1 57       	subi	r30, 0x71	; 113
    469e:	fe 4f       	sbci	r31, 0xFE	; 254
    46a0:	60 81       	ld	r22, Z
    46a2:	71 81       	ldd	r23, Z+1	; 0x01
    46a4:	82 81       	ldd	r24, Z+2	; 0x02
    46a6:	93 81       	ldd	r25, Z+3	; 0x03
    46a8:	20 e0       	ldi	r18, 0x00	; 0
    46aa:	3f ef       	ldi	r19, 0xFF	; 255
    46ac:	4f e7       	ldi	r20, 0x7F	; 127
    46ae:	57 e4       	ldi	r21, 0x47	; 71
    46b0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    46b4:	18 16       	cp	r1, r24
    46b6:	0c f0       	brlt	.+2      	; 0x46ba <main+0x450>
    46b8:	43 c0       	rjmp	.+134    	; 0x4740 <main+0x4d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46ba:	fe 01       	movw	r30, r28
    46bc:	ed 56       	subi	r30, 0x6D	; 109
    46be:	fe 4f       	sbci	r31, 0xFE	; 254
    46c0:	60 81       	ld	r22, Z
    46c2:	71 81       	ldd	r23, Z+1	; 0x01
    46c4:	82 81       	ldd	r24, Z+2	; 0x02
    46c6:	93 81       	ldd	r25, Z+3	; 0x03
    46c8:	20 e0       	ldi	r18, 0x00	; 0
    46ca:	30 e0       	ldi	r19, 0x00	; 0
    46cc:	40 e2       	ldi	r20, 0x20	; 32
    46ce:	51 e4       	ldi	r21, 0x41	; 65
    46d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    46d4:	dc 01       	movw	r26, r24
    46d6:	cb 01       	movw	r24, r22
    46d8:	8e 01       	movw	r16, r28
    46da:	03 57       	subi	r16, 0x73	; 115
    46dc:	1e 4f       	sbci	r17, 0xFE	; 254
    46de:	bc 01       	movw	r22, r24
    46e0:	cd 01       	movw	r24, r26
    46e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46e6:	dc 01       	movw	r26, r24
    46e8:	cb 01       	movw	r24, r22
    46ea:	f8 01       	movw	r30, r16
    46ec:	91 83       	std	Z+1, r25	; 0x01
    46ee:	80 83       	st	Z, r24
    46f0:	1f c0       	rjmp	.+62     	; 0x4730 <main+0x4c6>
    46f2:	fe 01       	movw	r30, r28
    46f4:	e5 57       	subi	r30, 0x75	; 117
    46f6:	fe 4f       	sbci	r31, 0xFE	; 254
    46f8:	88 ec       	ldi	r24, 0xC8	; 200
    46fa:	90 e0       	ldi	r25, 0x00	; 0
    46fc:	91 83       	std	Z+1, r25	; 0x01
    46fe:	80 83       	st	Z, r24
    4700:	fe 01       	movw	r30, r28
    4702:	e5 57       	subi	r30, 0x75	; 117
    4704:	fe 4f       	sbci	r31, 0xFE	; 254
    4706:	80 81       	ld	r24, Z
    4708:	91 81       	ldd	r25, Z+1	; 0x01
    470a:	01 97       	sbiw	r24, 0x01	; 1
    470c:	f1 f7       	brne	.-4      	; 0x470a <main+0x4a0>
    470e:	fe 01       	movw	r30, r28
    4710:	e5 57       	subi	r30, 0x75	; 117
    4712:	fe 4f       	sbci	r31, 0xFE	; 254
    4714:	91 83       	std	Z+1, r25	; 0x01
    4716:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4718:	de 01       	movw	r26, r28
    471a:	a3 57       	subi	r26, 0x73	; 115
    471c:	be 4f       	sbci	r27, 0xFE	; 254
    471e:	fe 01       	movw	r30, r28
    4720:	e3 57       	subi	r30, 0x73	; 115
    4722:	fe 4f       	sbci	r31, 0xFE	; 254
    4724:	80 81       	ld	r24, Z
    4726:	91 81       	ldd	r25, Z+1	; 0x01
    4728:	01 97       	sbiw	r24, 0x01	; 1
    472a:	11 96       	adiw	r26, 0x01	; 1
    472c:	9c 93       	st	X, r25
    472e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4730:	fe 01       	movw	r30, r28
    4732:	e3 57       	subi	r30, 0x73	; 115
    4734:	fe 4f       	sbci	r31, 0xFE	; 254
    4736:	80 81       	ld	r24, Z
    4738:	91 81       	ldd	r25, Z+1	; 0x01
    473a:	00 97       	sbiw	r24, 0x00	; 0
    473c:	d1 f6       	brne	.-76     	; 0x46f2 <main+0x488>
    473e:	b2 cd       	rjmp	.-1180   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4740:	8e 01       	movw	r16, r28
    4742:	03 57       	subi	r16, 0x73	; 115
    4744:	1e 4f       	sbci	r17, 0xFE	; 254
    4746:	fe 01       	movw	r30, r28
    4748:	e1 57       	subi	r30, 0x71	; 113
    474a:	fe 4f       	sbci	r31, 0xFE	; 254
    474c:	60 81       	ld	r22, Z
    474e:	71 81       	ldd	r23, Z+1	; 0x01
    4750:	82 81       	ldd	r24, Z+2	; 0x02
    4752:	93 81       	ldd	r25, Z+3	; 0x03
    4754:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4758:	dc 01       	movw	r26, r24
    475a:	cb 01       	movw	r24, r22
    475c:	f8 01       	movw	r30, r16
    475e:	91 83       	std	Z+1, r25	; 0x01
    4760:	80 83       	st	Z, r24
    4762:	de 01       	movw	r26, r28
    4764:	a7 57       	subi	r26, 0x77	; 119
    4766:	be 4f       	sbci	r27, 0xFE	; 254
    4768:	fe 01       	movw	r30, r28
    476a:	e3 57       	subi	r30, 0x73	; 115
    476c:	fe 4f       	sbci	r31, 0xFE	; 254
    476e:	80 81       	ld	r24, Z
    4770:	91 81       	ldd	r25, Z+1	; 0x01
    4772:	11 96       	adiw	r26, 0x01	; 1
    4774:	9c 93       	st	X, r25
    4776:	8e 93       	st	-X, r24
    4778:	fe 01       	movw	r30, r28
    477a:	e7 57       	subi	r30, 0x77	; 119
    477c:	fe 4f       	sbci	r31, 0xFE	; 254
    477e:	80 81       	ld	r24, Z
    4780:	91 81       	ldd	r25, Z+1	; 0x01
    4782:	01 97       	sbiw	r24, 0x01	; 1
    4784:	f1 f7       	brne	.-4      	; 0x4782 <main+0x518>
    4786:	fe 01       	movw	r30, r28
    4788:	e7 57       	subi	r30, 0x77	; 119
    478a:	fe 4f       	sbci	r31, 0xFE	; 254
    478c:	91 83       	std	Z+1, r25	; 0x01
    478e:	80 83       	st	Z, r24
    4790:	89 cd       	rjmp	.-1262   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 3:
					Lcd_vidSendCommand(loc);
    4792:	80 91 19 01 	lds	r24, 0x0119
    4796:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('c');
    479a:	83 e6       	ldi	r24, 0x63	; 99
    479c:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    47a0:	80 91 19 01 	lds	r24, 0x0119
    47a4:	8f 5f       	subi	r24, 0xFF	; 255
    47a6:	80 93 19 01 	sts	0x0119, r24
					id[j]='c';
    47aa:	80 91 1c 01 	lds	r24, 0x011C
    47ae:	88 2f       	mov	r24, r24
    47b0:	90 e0       	ldi	r25, 0x00	; 0
    47b2:	fc 01       	movw	r30, r24
    47b4:	eb 5d       	subi	r30, 0xDB	; 219
    47b6:	fe 4f       	sbci	r31, 0xFE	; 254
    47b8:	83 e6       	ldi	r24, 0x63	; 99
    47ba:	80 83       	st	Z, r24
					j++;
    47bc:	80 91 1c 01 	lds	r24, 0x011C
    47c0:	8f 5f       	subi	r24, 0xFF	; 255
    47c2:	80 93 1c 01 	sts	0x011C, r24
    47c6:	fe 01       	movw	r30, r28
    47c8:	eb 57       	subi	r30, 0x7B	; 123
    47ca:	fe 4f       	sbci	r31, 0xFE	; 254
    47cc:	80 e0       	ldi	r24, 0x00	; 0
    47ce:	90 e0       	ldi	r25, 0x00	; 0
    47d0:	a8 e4       	ldi	r26, 0x48	; 72
    47d2:	b3 e4       	ldi	r27, 0x43	; 67
    47d4:	80 83       	st	Z, r24
    47d6:	91 83       	std	Z+1, r25	; 0x01
    47d8:	a2 83       	std	Z+2, r26	; 0x02
    47da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47dc:	8e 01       	movw	r16, r28
    47de:	0f 57       	subi	r16, 0x7F	; 127
    47e0:	1e 4f       	sbci	r17, 0xFE	; 254
    47e2:	fe 01       	movw	r30, r28
    47e4:	eb 57       	subi	r30, 0x7B	; 123
    47e6:	fe 4f       	sbci	r31, 0xFE	; 254
    47e8:	60 81       	ld	r22, Z
    47ea:	71 81       	ldd	r23, Z+1	; 0x01
    47ec:	82 81       	ldd	r24, Z+2	; 0x02
    47ee:	93 81       	ldd	r25, Z+3	; 0x03
    47f0:	20 e0       	ldi	r18, 0x00	; 0
    47f2:	30 e0       	ldi	r19, 0x00	; 0
    47f4:	4a ef       	ldi	r20, 0xFA	; 250
    47f6:	54 e4       	ldi	r21, 0x44	; 68
    47f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    47fc:	dc 01       	movw	r26, r24
    47fe:	cb 01       	movw	r24, r22
    4800:	f8 01       	movw	r30, r16
    4802:	80 83       	st	Z, r24
    4804:	91 83       	std	Z+1, r25	; 0x01
    4806:	a2 83       	std	Z+2, r26	; 0x02
    4808:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    480a:	fe 01       	movw	r30, r28
    480c:	ef 57       	subi	r30, 0x7F	; 127
    480e:	fe 4f       	sbci	r31, 0xFE	; 254
    4810:	60 81       	ld	r22, Z
    4812:	71 81       	ldd	r23, Z+1	; 0x01
    4814:	82 81       	ldd	r24, Z+2	; 0x02
    4816:	93 81       	ldd	r25, Z+3	; 0x03
    4818:	20 e0       	ldi	r18, 0x00	; 0
    481a:	30 e0       	ldi	r19, 0x00	; 0
    481c:	40 e8       	ldi	r20, 0x80	; 128
    481e:	5f e3       	ldi	r21, 0x3F	; 63
    4820:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4824:	88 23       	and	r24, r24
    4826:	44 f4       	brge	.+16     	; 0x4838 <main+0x5ce>
		__ticks = 1;
    4828:	fe 01       	movw	r30, r28
    482a:	e1 58       	subi	r30, 0x81	; 129
    482c:	fe 4f       	sbci	r31, 0xFE	; 254
    482e:	81 e0       	ldi	r24, 0x01	; 1
    4830:	90 e0       	ldi	r25, 0x00	; 0
    4832:	91 83       	std	Z+1, r25	; 0x01
    4834:	80 83       	st	Z, r24
    4836:	64 c0       	rjmp	.+200    	; 0x4900 <main+0x696>
	else if (__tmp > 65535)
    4838:	fe 01       	movw	r30, r28
    483a:	ef 57       	subi	r30, 0x7F	; 127
    483c:	fe 4f       	sbci	r31, 0xFE	; 254
    483e:	60 81       	ld	r22, Z
    4840:	71 81       	ldd	r23, Z+1	; 0x01
    4842:	82 81       	ldd	r24, Z+2	; 0x02
    4844:	93 81       	ldd	r25, Z+3	; 0x03
    4846:	20 e0       	ldi	r18, 0x00	; 0
    4848:	3f ef       	ldi	r19, 0xFF	; 255
    484a:	4f e7       	ldi	r20, 0x7F	; 127
    484c:	57 e4       	ldi	r21, 0x47	; 71
    484e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4852:	18 16       	cp	r1, r24
    4854:	0c f0       	brlt	.+2      	; 0x4858 <main+0x5ee>
    4856:	43 c0       	rjmp	.+134    	; 0x48de <main+0x674>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4858:	fe 01       	movw	r30, r28
    485a:	eb 57       	subi	r30, 0x7B	; 123
    485c:	fe 4f       	sbci	r31, 0xFE	; 254
    485e:	60 81       	ld	r22, Z
    4860:	71 81       	ldd	r23, Z+1	; 0x01
    4862:	82 81       	ldd	r24, Z+2	; 0x02
    4864:	93 81       	ldd	r25, Z+3	; 0x03
    4866:	20 e0       	ldi	r18, 0x00	; 0
    4868:	30 e0       	ldi	r19, 0x00	; 0
    486a:	40 e2       	ldi	r20, 0x20	; 32
    486c:	51 e4       	ldi	r21, 0x41	; 65
    486e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4872:	dc 01       	movw	r26, r24
    4874:	cb 01       	movw	r24, r22
    4876:	8e 01       	movw	r16, r28
    4878:	01 58       	subi	r16, 0x81	; 129
    487a:	1e 4f       	sbci	r17, 0xFE	; 254
    487c:	bc 01       	movw	r22, r24
    487e:	cd 01       	movw	r24, r26
    4880:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4884:	dc 01       	movw	r26, r24
    4886:	cb 01       	movw	r24, r22
    4888:	f8 01       	movw	r30, r16
    488a:	91 83       	std	Z+1, r25	; 0x01
    488c:	80 83       	st	Z, r24
    488e:	1f c0       	rjmp	.+62     	; 0x48ce <main+0x664>
    4890:	fe 01       	movw	r30, r28
    4892:	e3 58       	subi	r30, 0x83	; 131
    4894:	fe 4f       	sbci	r31, 0xFE	; 254
    4896:	88 ec       	ldi	r24, 0xC8	; 200
    4898:	90 e0       	ldi	r25, 0x00	; 0
    489a:	91 83       	std	Z+1, r25	; 0x01
    489c:	80 83       	st	Z, r24
    489e:	fe 01       	movw	r30, r28
    48a0:	e3 58       	subi	r30, 0x83	; 131
    48a2:	fe 4f       	sbci	r31, 0xFE	; 254
    48a4:	80 81       	ld	r24, Z
    48a6:	91 81       	ldd	r25, Z+1	; 0x01
    48a8:	01 97       	sbiw	r24, 0x01	; 1
    48aa:	f1 f7       	brne	.-4      	; 0x48a8 <main+0x63e>
    48ac:	fe 01       	movw	r30, r28
    48ae:	e3 58       	subi	r30, 0x83	; 131
    48b0:	fe 4f       	sbci	r31, 0xFE	; 254
    48b2:	91 83       	std	Z+1, r25	; 0x01
    48b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48b6:	de 01       	movw	r26, r28
    48b8:	a1 58       	subi	r26, 0x81	; 129
    48ba:	be 4f       	sbci	r27, 0xFE	; 254
    48bc:	fe 01       	movw	r30, r28
    48be:	e1 58       	subi	r30, 0x81	; 129
    48c0:	fe 4f       	sbci	r31, 0xFE	; 254
    48c2:	80 81       	ld	r24, Z
    48c4:	91 81       	ldd	r25, Z+1	; 0x01
    48c6:	01 97       	sbiw	r24, 0x01	; 1
    48c8:	11 96       	adiw	r26, 0x01	; 1
    48ca:	9c 93       	st	X, r25
    48cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48ce:	fe 01       	movw	r30, r28
    48d0:	e1 58       	subi	r30, 0x81	; 129
    48d2:	fe 4f       	sbci	r31, 0xFE	; 254
    48d4:	80 81       	ld	r24, Z
    48d6:	91 81       	ldd	r25, Z+1	; 0x01
    48d8:	00 97       	sbiw	r24, 0x00	; 0
    48da:	d1 f6       	brne	.-76     	; 0x4890 <main+0x626>
    48dc:	e3 cc       	rjmp	.-1594   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48de:	8e 01       	movw	r16, r28
    48e0:	01 58       	subi	r16, 0x81	; 129
    48e2:	1e 4f       	sbci	r17, 0xFE	; 254
    48e4:	fe 01       	movw	r30, r28
    48e6:	ef 57       	subi	r30, 0x7F	; 127
    48e8:	fe 4f       	sbci	r31, 0xFE	; 254
    48ea:	60 81       	ld	r22, Z
    48ec:	71 81       	ldd	r23, Z+1	; 0x01
    48ee:	82 81       	ldd	r24, Z+2	; 0x02
    48f0:	93 81       	ldd	r25, Z+3	; 0x03
    48f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48f6:	dc 01       	movw	r26, r24
    48f8:	cb 01       	movw	r24, r22
    48fa:	f8 01       	movw	r30, r16
    48fc:	91 83       	std	Z+1, r25	; 0x01
    48fe:	80 83       	st	Z, r24
    4900:	de 01       	movw	r26, r28
    4902:	a5 58       	subi	r26, 0x85	; 133
    4904:	be 4f       	sbci	r27, 0xFE	; 254
    4906:	fe 01       	movw	r30, r28
    4908:	e1 58       	subi	r30, 0x81	; 129
    490a:	fe 4f       	sbci	r31, 0xFE	; 254
    490c:	80 81       	ld	r24, Z
    490e:	91 81       	ldd	r25, Z+1	; 0x01
    4910:	11 96       	adiw	r26, 0x01	; 1
    4912:	9c 93       	st	X, r25
    4914:	8e 93       	st	-X, r24
    4916:	fe 01       	movw	r30, r28
    4918:	e5 58       	subi	r30, 0x85	; 133
    491a:	fe 4f       	sbci	r31, 0xFE	; 254
    491c:	80 81       	ld	r24, Z
    491e:	91 81       	ldd	r25, Z+1	; 0x01
    4920:	01 97       	sbiw	r24, 0x01	; 1
    4922:	f1 f7       	brne	.-4      	; 0x4920 <main+0x6b6>
    4924:	fe 01       	movw	r30, r28
    4926:	e5 58       	subi	r30, 0x85	; 133
    4928:	fe 4f       	sbci	r31, 0xFE	; 254
    492a:	91 83       	std	Z+1, r25	; 0x01
    492c:	80 83       	st	Z, r24
    492e:	ba cc       	rjmp	.-1676   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 4:
					Lcd_vidSendCommand(loc);
    4930:	80 91 19 01 	lds	r24, 0x0119
    4934:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('d');
    4938:	84 e6       	ldi	r24, 0x64	; 100
    493a:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    493e:	80 91 19 01 	lds	r24, 0x0119
    4942:	8f 5f       	subi	r24, 0xFF	; 255
    4944:	80 93 19 01 	sts	0x0119, r24
					id[j]='d';
    4948:	80 91 1c 01 	lds	r24, 0x011C
    494c:	88 2f       	mov	r24, r24
    494e:	90 e0       	ldi	r25, 0x00	; 0
    4950:	fc 01       	movw	r30, r24
    4952:	eb 5d       	subi	r30, 0xDB	; 219
    4954:	fe 4f       	sbci	r31, 0xFE	; 254
    4956:	84 e6       	ldi	r24, 0x64	; 100
    4958:	80 83       	st	Z, r24
					j++;
    495a:	80 91 1c 01 	lds	r24, 0x011C
    495e:	8f 5f       	subi	r24, 0xFF	; 255
    4960:	80 93 1c 01 	sts	0x011C, r24
    4964:	fe 01       	movw	r30, r28
    4966:	e9 58       	subi	r30, 0x89	; 137
    4968:	fe 4f       	sbci	r31, 0xFE	; 254
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	90 e0       	ldi	r25, 0x00	; 0
    496e:	a8 e4       	ldi	r26, 0x48	; 72
    4970:	b3 e4       	ldi	r27, 0x43	; 67
    4972:	80 83       	st	Z, r24
    4974:	91 83       	std	Z+1, r25	; 0x01
    4976:	a2 83       	std	Z+2, r26	; 0x02
    4978:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    497a:	8e 01       	movw	r16, r28
    497c:	0d 58       	subi	r16, 0x8D	; 141
    497e:	1e 4f       	sbci	r17, 0xFE	; 254
    4980:	fe 01       	movw	r30, r28
    4982:	e9 58       	subi	r30, 0x89	; 137
    4984:	fe 4f       	sbci	r31, 0xFE	; 254
    4986:	60 81       	ld	r22, Z
    4988:	71 81       	ldd	r23, Z+1	; 0x01
    498a:	82 81       	ldd	r24, Z+2	; 0x02
    498c:	93 81       	ldd	r25, Z+3	; 0x03
    498e:	20 e0       	ldi	r18, 0x00	; 0
    4990:	30 e0       	ldi	r19, 0x00	; 0
    4992:	4a ef       	ldi	r20, 0xFA	; 250
    4994:	54 e4       	ldi	r21, 0x44	; 68
    4996:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    499a:	dc 01       	movw	r26, r24
    499c:	cb 01       	movw	r24, r22
    499e:	f8 01       	movw	r30, r16
    49a0:	80 83       	st	Z, r24
    49a2:	91 83       	std	Z+1, r25	; 0x01
    49a4:	a2 83       	std	Z+2, r26	; 0x02
    49a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    49a8:	fe 01       	movw	r30, r28
    49aa:	ed 58       	subi	r30, 0x8D	; 141
    49ac:	fe 4f       	sbci	r31, 0xFE	; 254
    49ae:	60 81       	ld	r22, Z
    49b0:	71 81       	ldd	r23, Z+1	; 0x01
    49b2:	82 81       	ldd	r24, Z+2	; 0x02
    49b4:	93 81       	ldd	r25, Z+3	; 0x03
    49b6:	20 e0       	ldi	r18, 0x00	; 0
    49b8:	30 e0       	ldi	r19, 0x00	; 0
    49ba:	40 e8       	ldi	r20, 0x80	; 128
    49bc:	5f e3       	ldi	r21, 0x3F	; 63
    49be:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    49c2:	88 23       	and	r24, r24
    49c4:	44 f4       	brge	.+16     	; 0x49d6 <main+0x76c>
		__ticks = 1;
    49c6:	fe 01       	movw	r30, r28
    49c8:	ef 58       	subi	r30, 0x8F	; 143
    49ca:	fe 4f       	sbci	r31, 0xFE	; 254
    49cc:	81 e0       	ldi	r24, 0x01	; 1
    49ce:	90 e0       	ldi	r25, 0x00	; 0
    49d0:	91 83       	std	Z+1, r25	; 0x01
    49d2:	80 83       	st	Z, r24
    49d4:	64 c0       	rjmp	.+200    	; 0x4a9e <main+0x834>
	else if (__tmp > 65535)
    49d6:	fe 01       	movw	r30, r28
    49d8:	ed 58       	subi	r30, 0x8D	; 141
    49da:	fe 4f       	sbci	r31, 0xFE	; 254
    49dc:	60 81       	ld	r22, Z
    49de:	71 81       	ldd	r23, Z+1	; 0x01
    49e0:	82 81       	ldd	r24, Z+2	; 0x02
    49e2:	93 81       	ldd	r25, Z+3	; 0x03
    49e4:	20 e0       	ldi	r18, 0x00	; 0
    49e6:	3f ef       	ldi	r19, 0xFF	; 255
    49e8:	4f e7       	ldi	r20, 0x7F	; 127
    49ea:	57 e4       	ldi	r21, 0x47	; 71
    49ec:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    49f0:	18 16       	cp	r1, r24
    49f2:	0c f0       	brlt	.+2      	; 0x49f6 <main+0x78c>
    49f4:	43 c0       	rjmp	.+134    	; 0x4a7c <main+0x812>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49f6:	fe 01       	movw	r30, r28
    49f8:	e9 58       	subi	r30, 0x89	; 137
    49fa:	fe 4f       	sbci	r31, 0xFE	; 254
    49fc:	60 81       	ld	r22, Z
    49fe:	71 81       	ldd	r23, Z+1	; 0x01
    4a00:	82 81       	ldd	r24, Z+2	; 0x02
    4a02:	93 81       	ldd	r25, Z+3	; 0x03
    4a04:	20 e0       	ldi	r18, 0x00	; 0
    4a06:	30 e0       	ldi	r19, 0x00	; 0
    4a08:	40 e2       	ldi	r20, 0x20	; 32
    4a0a:	51 e4       	ldi	r21, 0x41	; 65
    4a0c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4a10:	dc 01       	movw	r26, r24
    4a12:	cb 01       	movw	r24, r22
    4a14:	8e 01       	movw	r16, r28
    4a16:	0f 58       	subi	r16, 0x8F	; 143
    4a18:	1e 4f       	sbci	r17, 0xFE	; 254
    4a1a:	bc 01       	movw	r22, r24
    4a1c:	cd 01       	movw	r24, r26
    4a1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a22:	dc 01       	movw	r26, r24
    4a24:	cb 01       	movw	r24, r22
    4a26:	f8 01       	movw	r30, r16
    4a28:	91 83       	std	Z+1, r25	; 0x01
    4a2a:	80 83       	st	Z, r24
    4a2c:	1f c0       	rjmp	.+62     	; 0x4a6c <main+0x802>
    4a2e:	fe 01       	movw	r30, r28
    4a30:	e1 59       	subi	r30, 0x91	; 145
    4a32:	fe 4f       	sbci	r31, 0xFE	; 254
    4a34:	88 ec       	ldi	r24, 0xC8	; 200
    4a36:	90 e0       	ldi	r25, 0x00	; 0
    4a38:	91 83       	std	Z+1, r25	; 0x01
    4a3a:	80 83       	st	Z, r24
    4a3c:	fe 01       	movw	r30, r28
    4a3e:	e1 59       	subi	r30, 0x91	; 145
    4a40:	fe 4f       	sbci	r31, 0xFE	; 254
    4a42:	80 81       	ld	r24, Z
    4a44:	91 81       	ldd	r25, Z+1	; 0x01
    4a46:	01 97       	sbiw	r24, 0x01	; 1
    4a48:	f1 f7       	brne	.-4      	; 0x4a46 <main+0x7dc>
    4a4a:	fe 01       	movw	r30, r28
    4a4c:	e1 59       	subi	r30, 0x91	; 145
    4a4e:	fe 4f       	sbci	r31, 0xFE	; 254
    4a50:	91 83       	std	Z+1, r25	; 0x01
    4a52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a54:	de 01       	movw	r26, r28
    4a56:	af 58       	subi	r26, 0x8F	; 143
    4a58:	be 4f       	sbci	r27, 0xFE	; 254
    4a5a:	fe 01       	movw	r30, r28
    4a5c:	ef 58       	subi	r30, 0x8F	; 143
    4a5e:	fe 4f       	sbci	r31, 0xFE	; 254
    4a60:	80 81       	ld	r24, Z
    4a62:	91 81       	ldd	r25, Z+1	; 0x01
    4a64:	01 97       	sbiw	r24, 0x01	; 1
    4a66:	11 96       	adiw	r26, 0x01	; 1
    4a68:	9c 93       	st	X, r25
    4a6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a6c:	fe 01       	movw	r30, r28
    4a6e:	ef 58       	subi	r30, 0x8F	; 143
    4a70:	fe 4f       	sbci	r31, 0xFE	; 254
    4a72:	80 81       	ld	r24, Z
    4a74:	91 81       	ldd	r25, Z+1	; 0x01
    4a76:	00 97       	sbiw	r24, 0x00	; 0
    4a78:	d1 f6       	brne	.-76     	; 0x4a2e <main+0x7c4>
    4a7a:	14 cc       	rjmp	.-2008   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a7c:	8e 01       	movw	r16, r28
    4a7e:	0f 58       	subi	r16, 0x8F	; 143
    4a80:	1e 4f       	sbci	r17, 0xFE	; 254
    4a82:	fe 01       	movw	r30, r28
    4a84:	ed 58       	subi	r30, 0x8D	; 141
    4a86:	fe 4f       	sbci	r31, 0xFE	; 254
    4a88:	60 81       	ld	r22, Z
    4a8a:	71 81       	ldd	r23, Z+1	; 0x01
    4a8c:	82 81       	ldd	r24, Z+2	; 0x02
    4a8e:	93 81       	ldd	r25, Z+3	; 0x03
    4a90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a94:	dc 01       	movw	r26, r24
    4a96:	cb 01       	movw	r24, r22
    4a98:	f8 01       	movw	r30, r16
    4a9a:	91 83       	std	Z+1, r25	; 0x01
    4a9c:	80 83       	st	Z, r24
    4a9e:	de 01       	movw	r26, r28
    4aa0:	a3 59       	subi	r26, 0x93	; 147
    4aa2:	be 4f       	sbci	r27, 0xFE	; 254
    4aa4:	fe 01       	movw	r30, r28
    4aa6:	ef 58       	subi	r30, 0x8F	; 143
    4aa8:	fe 4f       	sbci	r31, 0xFE	; 254
    4aaa:	80 81       	ld	r24, Z
    4aac:	91 81       	ldd	r25, Z+1	; 0x01
    4aae:	11 96       	adiw	r26, 0x01	; 1
    4ab0:	9c 93       	st	X, r25
    4ab2:	8e 93       	st	-X, r24
    4ab4:	fe 01       	movw	r30, r28
    4ab6:	e3 59       	subi	r30, 0x93	; 147
    4ab8:	fe 4f       	sbci	r31, 0xFE	; 254
    4aba:	80 81       	ld	r24, Z
    4abc:	91 81       	ldd	r25, Z+1	; 0x01
    4abe:	01 97       	sbiw	r24, 0x01	; 1
    4ac0:	f1 f7       	brne	.-4      	; 0x4abe <main+0x854>
    4ac2:	fe 01       	movw	r30, r28
    4ac4:	e3 59       	subi	r30, 0x93	; 147
    4ac6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ac8:	91 83       	std	Z+1, r25	; 0x01
    4aca:	80 83       	st	Z, r24
    4acc:	eb cb       	rjmp	.-2090   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 5:
					Lcd_vidSendCommand(loc);
    4ace:	80 91 19 01 	lds	r24, 0x0119
    4ad2:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('e');
    4ad6:	85 e6       	ldi	r24, 0x65	; 101
    4ad8:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4adc:	80 91 19 01 	lds	r24, 0x0119
    4ae0:	8f 5f       	subi	r24, 0xFF	; 255
    4ae2:	80 93 19 01 	sts	0x0119, r24
					id[j]='e';
    4ae6:	80 91 1c 01 	lds	r24, 0x011C
    4aea:	88 2f       	mov	r24, r24
    4aec:	90 e0       	ldi	r25, 0x00	; 0
    4aee:	fc 01       	movw	r30, r24
    4af0:	eb 5d       	subi	r30, 0xDB	; 219
    4af2:	fe 4f       	sbci	r31, 0xFE	; 254
    4af4:	85 e6       	ldi	r24, 0x65	; 101
    4af6:	80 83       	st	Z, r24
					j++;
    4af8:	80 91 1c 01 	lds	r24, 0x011C
    4afc:	8f 5f       	subi	r24, 0xFF	; 255
    4afe:	80 93 1c 01 	sts	0x011C, r24
    4b02:	fe 01       	movw	r30, r28
    4b04:	e7 59       	subi	r30, 0x97	; 151
    4b06:	fe 4f       	sbci	r31, 0xFE	; 254
    4b08:	80 e0       	ldi	r24, 0x00	; 0
    4b0a:	90 e0       	ldi	r25, 0x00	; 0
    4b0c:	a8 e4       	ldi	r26, 0x48	; 72
    4b0e:	b3 e4       	ldi	r27, 0x43	; 67
    4b10:	80 83       	st	Z, r24
    4b12:	91 83       	std	Z+1, r25	; 0x01
    4b14:	a2 83       	std	Z+2, r26	; 0x02
    4b16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b18:	8e 01       	movw	r16, r28
    4b1a:	0b 59       	subi	r16, 0x9B	; 155
    4b1c:	1e 4f       	sbci	r17, 0xFE	; 254
    4b1e:	fe 01       	movw	r30, r28
    4b20:	e7 59       	subi	r30, 0x97	; 151
    4b22:	fe 4f       	sbci	r31, 0xFE	; 254
    4b24:	60 81       	ld	r22, Z
    4b26:	71 81       	ldd	r23, Z+1	; 0x01
    4b28:	82 81       	ldd	r24, Z+2	; 0x02
    4b2a:	93 81       	ldd	r25, Z+3	; 0x03
    4b2c:	20 e0       	ldi	r18, 0x00	; 0
    4b2e:	30 e0       	ldi	r19, 0x00	; 0
    4b30:	4a ef       	ldi	r20, 0xFA	; 250
    4b32:	54 e4       	ldi	r21, 0x44	; 68
    4b34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4b38:	dc 01       	movw	r26, r24
    4b3a:	cb 01       	movw	r24, r22
    4b3c:	f8 01       	movw	r30, r16
    4b3e:	80 83       	st	Z, r24
    4b40:	91 83       	std	Z+1, r25	; 0x01
    4b42:	a2 83       	std	Z+2, r26	; 0x02
    4b44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b46:	fe 01       	movw	r30, r28
    4b48:	eb 59       	subi	r30, 0x9B	; 155
    4b4a:	fe 4f       	sbci	r31, 0xFE	; 254
    4b4c:	60 81       	ld	r22, Z
    4b4e:	71 81       	ldd	r23, Z+1	; 0x01
    4b50:	82 81       	ldd	r24, Z+2	; 0x02
    4b52:	93 81       	ldd	r25, Z+3	; 0x03
    4b54:	20 e0       	ldi	r18, 0x00	; 0
    4b56:	30 e0       	ldi	r19, 0x00	; 0
    4b58:	40 e8       	ldi	r20, 0x80	; 128
    4b5a:	5f e3       	ldi	r21, 0x3F	; 63
    4b5c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4b60:	88 23       	and	r24, r24
    4b62:	44 f4       	brge	.+16     	; 0x4b74 <main+0x90a>
		__ticks = 1;
    4b64:	fe 01       	movw	r30, r28
    4b66:	ed 59       	subi	r30, 0x9D	; 157
    4b68:	fe 4f       	sbci	r31, 0xFE	; 254
    4b6a:	81 e0       	ldi	r24, 0x01	; 1
    4b6c:	90 e0       	ldi	r25, 0x00	; 0
    4b6e:	91 83       	std	Z+1, r25	; 0x01
    4b70:	80 83       	st	Z, r24
    4b72:	64 c0       	rjmp	.+200    	; 0x4c3c <main+0x9d2>
	else if (__tmp > 65535)
    4b74:	fe 01       	movw	r30, r28
    4b76:	eb 59       	subi	r30, 0x9B	; 155
    4b78:	fe 4f       	sbci	r31, 0xFE	; 254
    4b7a:	60 81       	ld	r22, Z
    4b7c:	71 81       	ldd	r23, Z+1	; 0x01
    4b7e:	82 81       	ldd	r24, Z+2	; 0x02
    4b80:	93 81       	ldd	r25, Z+3	; 0x03
    4b82:	20 e0       	ldi	r18, 0x00	; 0
    4b84:	3f ef       	ldi	r19, 0xFF	; 255
    4b86:	4f e7       	ldi	r20, 0x7F	; 127
    4b88:	57 e4       	ldi	r21, 0x47	; 71
    4b8a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4b8e:	18 16       	cp	r1, r24
    4b90:	0c f0       	brlt	.+2      	; 0x4b94 <main+0x92a>
    4b92:	43 c0       	rjmp	.+134    	; 0x4c1a <main+0x9b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b94:	fe 01       	movw	r30, r28
    4b96:	e7 59       	subi	r30, 0x97	; 151
    4b98:	fe 4f       	sbci	r31, 0xFE	; 254
    4b9a:	60 81       	ld	r22, Z
    4b9c:	71 81       	ldd	r23, Z+1	; 0x01
    4b9e:	82 81       	ldd	r24, Z+2	; 0x02
    4ba0:	93 81       	ldd	r25, Z+3	; 0x03
    4ba2:	20 e0       	ldi	r18, 0x00	; 0
    4ba4:	30 e0       	ldi	r19, 0x00	; 0
    4ba6:	40 e2       	ldi	r20, 0x20	; 32
    4ba8:	51 e4       	ldi	r21, 0x41	; 65
    4baa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4bae:	dc 01       	movw	r26, r24
    4bb0:	cb 01       	movw	r24, r22
    4bb2:	8e 01       	movw	r16, r28
    4bb4:	0d 59       	subi	r16, 0x9D	; 157
    4bb6:	1e 4f       	sbci	r17, 0xFE	; 254
    4bb8:	bc 01       	movw	r22, r24
    4bba:	cd 01       	movw	r24, r26
    4bbc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4bc0:	dc 01       	movw	r26, r24
    4bc2:	cb 01       	movw	r24, r22
    4bc4:	f8 01       	movw	r30, r16
    4bc6:	91 83       	std	Z+1, r25	; 0x01
    4bc8:	80 83       	st	Z, r24
    4bca:	1f c0       	rjmp	.+62     	; 0x4c0a <main+0x9a0>
    4bcc:	fe 01       	movw	r30, r28
    4bce:	ef 59       	subi	r30, 0x9F	; 159
    4bd0:	fe 4f       	sbci	r31, 0xFE	; 254
    4bd2:	88 ec       	ldi	r24, 0xC8	; 200
    4bd4:	90 e0       	ldi	r25, 0x00	; 0
    4bd6:	91 83       	std	Z+1, r25	; 0x01
    4bd8:	80 83       	st	Z, r24
    4bda:	fe 01       	movw	r30, r28
    4bdc:	ef 59       	subi	r30, 0x9F	; 159
    4bde:	fe 4f       	sbci	r31, 0xFE	; 254
    4be0:	80 81       	ld	r24, Z
    4be2:	91 81       	ldd	r25, Z+1	; 0x01
    4be4:	01 97       	sbiw	r24, 0x01	; 1
    4be6:	f1 f7       	brne	.-4      	; 0x4be4 <main+0x97a>
    4be8:	fe 01       	movw	r30, r28
    4bea:	ef 59       	subi	r30, 0x9F	; 159
    4bec:	fe 4f       	sbci	r31, 0xFE	; 254
    4bee:	91 83       	std	Z+1, r25	; 0x01
    4bf0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4bf2:	de 01       	movw	r26, r28
    4bf4:	ad 59       	subi	r26, 0x9D	; 157
    4bf6:	be 4f       	sbci	r27, 0xFE	; 254
    4bf8:	fe 01       	movw	r30, r28
    4bfa:	ed 59       	subi	r30, 0x9D	; 157
    4bfc:	fe 4f       	sbci	r31, 0xFE	; 254
    4bfe:	80 81       	ld	r24, Z
    4c00:	91 81       	ldd	r25, Z+1	; 0x01
    4c02:	01 97       	sbiw	r24, 0x01	; 1
    4c04:	11 96       	adiw	r26, 0x01	; 1
    4c06:	9c 93       	st	X, r25
    4c08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c0a:	fe 01       	movw	r30, r28
    4c0c:	ed 59       	subi	r30, 0x9D	; 157
    4c0e:	fe 4f       	sbci	r31, 0xFE	; 254
    4c10:	80 81       	ld	r24, Z
    4c12:	91 81       	ldd	r25, Z+1	; 0x01
    4c14:	00 97       	sbiw	r24, 0x00	; 0
    4c16:	d1 f6       	brne	.-76     	; 0x4bcc <main+0x962>
    4c18:	45 cb       	rjmp	.-2422   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c1a:	8e 01       	movw	r16, r28
    4c1c:	0d 59       	subi	r16, 0x9D	; 157
    4c1e:	1e 4f       	sbci	r17, 0xFE	; 254
    4c20:	fe 01       	movw	r30, r28
    4c22:	eb 59       	subi	r30, 0x9B	; 155
    4c24:	fe 4f       	sbci	r31, 0xFE	; 254
    4c26:	60 81       	ld	r22, Z
    4c28:	71 81       	ldd	r23, Z+1	; 0x01
    4c2a:	82 81       	ldd	r24, Z+2	; 0x02
    4c2c:	93 81       	ldd	r25, Z+3	; 0x03
    4c2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4c32:	dc 01       	movw	r26, r24
    4c34:	cb 01       	movw	r24, r22
    4c36:	f8 01       	movw	r30, r16
    4c38:	91 83       	std	Z+1, r25	; 0x01
    4c3a:	80 83       	st	Z, r24
    4c3c:	de 01       	movw	r26, r28
    4c3e:	a1 5a       	subi	r26, 0xA1	; 161
    4c40:	be 4f       	sbci	r27, 0xFE	; 254
    4c42:	fe 01       	movw	r30, r28
    4c44:	ed 59       	subi	r30, 0x9D	; 157
    4c46:	fe 4f       	sbci	r31, 0xFE	; 254
    4c48:	80 81       	ld	r24, Z
    4c4a:	91 81       	ldd	r25, Z+1	; 0x01
    4c4c:	11 96       	adiw	r26, 0x01	; 1
    4c4e:	9c 93       	st	X, r25
    4c50:	8e 93       	st	-X, r24
    4c52:	fe 01       	movw	r30, r28
    4c54:	e1 5a       	subi	r30, 0xA1	; 161
    4c56:	fe 4f       	sbci	r31, 0xFE	; 254
    4c58:	80 81       	ld	r24, Z
    4c5a:	91 81       	ldd	r25, Z+1	; 0x01
    4c5c:	01 97       	sbiw	r24, 0x01	; 1
    4c5e:	f1 f7       	brne	.-4      	; 0x4c5c <main+0x9f2>
    4c60:	fe 01       	movw	r30, r28
    4c62:	e1 5a       	subi	r30, 0xA1	; 161
    4c64:	fe 4f       	sbci	r31, 0xFE	; 254
    4c66:	91 83       	std	Z+1, r25	; 0x01
    4c68:	80 83       	st	Z, r24
    4c6a:	1c cb       	rjmp	.-2504   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 6:
					Lcd_vidSendCommand(loc);
    4c6c:	80 91 19 01 	lds	r24, 0x0119
    4c70:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('f');
    4c74:	86 e6       	ldi	r24, 0x66	; 102
    4c76:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4c7a:	80 91 19 01 	lds	r24, 0x0119
    4c7e:	8f 5f       	subi	r24, 0xFF	; 255
    4c80:	80 93 19 01 	sts	0x0119, r24
					id[j]='f';
    4c84:	80 91 1c 01 	lds	r24, 0x011C
    4c88:	88 2f       	mov	r24, r24
    4c8a:	90 e0       	ldi	r25, 0x00	; 0
    4c8c:	fc 01       	movw	r30, r24
    4c8e:	eb 5d       	subi	r30, 0xDB	; 219
    4c90:	fe 4f       	sbci	r31, 0xFE	; 254
    4c92:	86 e6       	ldi	r24, 0x66	; 102
    4c94:	80 83       	st	Z, r24
					j++;
    4c96:	80 91 1c 01 	lds	r24, 0x011C
    4c9a:	8f 5f       	subi	r24, 0xFF	; 255
    4c9c:	80 93 1c 01 	sts	0x011C, r24
    4ca0:	fe 01       	movw	r30, r28
    4ca2:	e5 5a       	subi	r30, 0xA5	; 165
    4ca4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ca6:	80 e0       	ldi	r24, 0x00	; 0
    4ca8:	90 e0       	ldi	r25, 0x00	; 0
    4caa:	a8 e4       	ldi	r26, 0x48	; 72
    4cac:	b3 e4       	ldi	r27, 0x43	; 67
    4cae:	80 83       	st	Z, r24
    4cb0:	91 83       	std	Z+1, r25	; 0x01
    4cb2:	a2 83       	std	Z+2, r26	; 0x02
    4cb4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cb6:	8e 01       	movw	r16, r28
    4cb8:	09 5a       	subi	r16, 0xA9	; 169
    4cba:	1e 4f       	sbci	r17, 0xFE	; 254
    4cbc:	fe 01       	movw	r30, r28
    4cbe:	e5 5a       	subi	r30, 0xA5	; 165
    4cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    4cc2:	60 81       	ld	r22, Z
    4cc4:	71 81       	ldd	r23, Z+1	; 0x01
    4cc6:	82 81       	ldd	r24, Z+2	; 0x02
    4cc8:	93 81       	ldd	r25, Z+3	; 0x03
    4cca:	20 e0       	ldi	r18, 0x00	; 0
    4ccc:	30 e0       	ldi	r19, 0x00	; 0
    4cce:	4a ef       	ldi	r20, 0xFA	; 250
    4cd0:	54 e4       	ldi	r21, 0x44	; 68
    4cd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4cd6:	dc 01       	movw	r26, r24
    4cd8:	cb 01       	movw	r24, r22
    4cda:	f8 01       	movw	r30, r16
    4cdc:	80 83       	st	Z, r24
    4cde:	91 83       	std	Z+1, r25	; 0x01
    4ce0:	a2 83       	std	Z+2, r26	; 0x02
    4ce2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ce4:	fe 01       	movw	r30, r28
    4ce6:	e9 5a       	subi	r30, 0xA9	; 169
    4ce8:	fe 4f       	sbci	r31, 0xFE	; 254
    4cea:	60 81       	ld	r22, Z
    4cec:	71 81       	ldd	r23, Z+1	; 0x01
    4cee:	82 81       	ldd	r24, Z+2	; 0x02
    4cf0:	93 81       	ldd	r25, Z+3	; 0x03
    4cf2:	20 e0       	ldi	r18, 0x00	; 0
    4cf4:	30 e0       	ldi	r19, 0x00	; 0
    4cf6:	40 e8       	ldi	r20, 0x80	; 128
    4cf8:	5f e3       	ldi	r21, 0x3F	; 63
    4cfa:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4cfe:	88 23       	and	r24, r24
    4d00:	44 f4       	brge	.+16     	; 0x4d12 <main+0xaa8>
		__ticks = 1;
    4d02:	fe 01       	movw	r30, r28
    4d04:	eb 5a       	subi	r30, 0xAB	; 171
    4d06:	fe 4f       	sbci	r31, 0xFE	; 254
    4d08:	81 e0       	ldi	r24, 0x01	; 1
    4d0a:	90 e0       	ldi	r25, 0x00	; 0
    4d0c:	91 83       	std	Z+1, r25	; 0x01
    4d0e:	80 83       	st	Z, r24
    4d10:	64 c0       	rjmp	.+200    	; 0x4dda <main+0xb70>
	else if (__tmp > 65535)
    4d12:	fe 01       	movw	r30, r28
    4d14:	e9 5a       	subi	r30, 0xA9	; 169
    4d16:	fe 4f       	sbci	r31, 0xFE	; 254
    4d18:	60 81       	ld	r22, Z
    4d1a:	71 81       	ldd	r23, Z+1	; 0x01
    4d1c:	82 81       	ldd	r24, Z+2	; 0x02
    4d1e:	93 81       	ldd	r25, Z+3	; 0x03
    4d20:	20 e0       	ldi	r18, 0x00	; 0
    4d22:	3f ef       	ldi	r19, 0xFF	; 255
    4d24:	4f e7       	ldi	r20, 0x7F	; 127
    4d26:	57 e4       	ldi	r21, 0x47	; 71
    4d28:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4d2c:	18 16       	cp	r1, r24
    4d2e:	0c f0       	brlt	.+2      	; 0x4d32 <main+0xac8>
    4d30:	43 c0       	rjmp	.+134    	; 0x4db8 <main+0xb4e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d32:	fe 01       	movw	r30, r28
    4d34:	e5 5a       	subi	r30, 0xA5	; 165
    4d36:	fe 4f       	sbci	r31, 0xFE	; 254
    4d38:	60 81       	ld	r22, Z
    4d3a:	71 81       	ldd	r23, Z+1	; 0x01
    4d3c:	82 81       	ldd	r24, Z+2	; 0x02
    4d3e:	93 81       	ldd	r25, Z+3	; 0x03
    4d40:	20 e0       	ldi	r18, 0x00	; 0
    4d42:	30 e0       	ldi	r19, 0x00	; 0
    4d44:	40 e2       	ldi	r20, 0x20	; 32
    4d46:	51 e4       	ldi	r21, 0x41	; 65
    4d48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d4c:	dc 01       	movw	r26, r24
    4d4e:	cb 01       	movw	r24, r22
    4d50:	8e 01       	movw	r16, r28
    4d52:	0b 5a       	subi	r16, 0xAB	; 171
    4d54:	1e 4f       	sbci	r17, 0xFE	; 254
    4d56:	bc 01       	movw	r22, r24
    4d58:	cd 01       	movw	r24, r26
    4d5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d5e:	dc 01       	movw	r26, r24
    4d60:	cb 01       	movw	r24, r22
    4d62:	f8 01       	movw	r30, r16
    4d64:	91 83       	std	Z+1, r25	; 0x01
    4d66:	80 83       	st	Z, r24
    4d68:	1f c0       	rjmp	.+62     	; 0x4da8 <main+0xb3e>
    4d6a:	fe 01       	movw	r30, r28
    4d6c:	ed 5a       	subi	r30, 0xAD	; 173
    4d6e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d70:	88 ec       	ldi	r24, 0xC8	; 200
    4d72:	90 e0       	ldi	r25, 0x00	; 0
    4d74:	91 83       	std	Z+1, r25	; 0x01
    4d76:	80 83       	st	Z, r24
    4d78:	fe 01       	movw	r30, r28
    4d7a:	ed 5a       	subi	r30, 0xAD	; 173
    4d7c:	fe 4f       	sbci	r31, 0xFE	; 254
    4d7e:	80 81       	ld	r24, Z
    4d80:	91 81       	ldd	r25, Z+1	; 0x01
    4d82:	01 97       	sbiw	r24, 0x01	; 1
    4d84:	f1 f7       	brne	.-4      	; 0x4d82 <main+0xb18>
    4d86:	fe 01       	movw	r30, r28
    4d88:	ed 5a       	subi	r30, 0xAD	; 173
    4d8a:	fe 4f       	sbci	r31, 0xFE	; 254
    4d8c:	91 83       	std	Z+1, r25	; 0x01
    4d8e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d90:	de 01       	movw	r26, r28
    4d92:	ab 5a       	subi	r26, 0xAB	; 171
    4d94:	be 4f       	sbci	r27, 0xFE	; 254
    4d96:	fe 01       	movw	r30, r28
    4d98:	eb 5a       	subi	r30, 0xAB	; 171
    4d9a:	fe 4f       	sbci	r31, 0xFE	; 254
    4d9c:	80 81       	ld	r24, Z
    4d9e:	91 81       	ldd	r25, Z+1	; 0x01
    4da0:	01 97       	sbiw	r24, 0x01	; 1
    4da2:	11 96       	adiw	r26, 0x01	; 1
    4da4:	9c 93       	st	X, r25
    4da6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4da8:	fe 01       	movw	r30, r28
    4daa:	eb 5a       	subi	r30, 0xAB	; 171
    4dac:	fe 4f       	sbci	r31, 0xFE	; 254
    4dae:	80 81       	ld	r24, Z
    4db0:	91 81       	ldd	r25, Z+1	; 0x01
    4db2:	00 97       	sbiw	r24, 0x00	; 0
    4db4:	d1 f6       	brne	.-76     	; 0x4d6a <main+0xb00>
    4db6:	76 ca       	rjmp	.-2836   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4db8:	8e 01       	movw	r16, r28
    4dba:	0b 5a       	subi	r16, 0xAB	; 171
    4dbc:	1e 4f       	sbci	r17, 0xFE	; 254
    4dbe:	fe 01       	movw	r30, r28
    4dc0:	e9 5a       	subi	r30, 0xA9	; 169
    4dc2:	fe 4f       	sbci	r31, 0xFE	; 254
    4dc4:	60 81       	ld	r22, Z
    4dc6:	71 81       	ldd	r23, Z+1	; 0x01
    4dc8:	82 81       	ldd	r24, Z+2	; 0x02
    4dca:	93 81       	ldd	r25, Z+3	; 0x03
    4dcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4dd0:	dc 01       	movw	r26, r24
    4dd2:	cb 01       	movw	r24, r22
    4dd4:	f8 01       	movw	r30, r16
    4dd6:	91 83       	std	Z+1, r25	; 0x01
    4dd8:	80 83       	st	Z, r24
    4dda:	de 01       	movw	r26, r28
    4ddc:	af 5a       	subi	r26, 0xAF	; 175
    4dde:	be 4f       	sbci	r27, 0xFE	; 254
    4de0:	fe 01       	movw	r30, r28
    4de2:	eb 5a       	subi	r30, 0xAB	; 171
    4de4:	fe 4f       	sbci	r31, 0xFE	; 254
    4de6:	80 81       	ld	r24, Z
    4de8:	91 81       	ldd	r25, Z+1	; 0x01
    4dea:	11 96       	adiw	r26, 0x01	; 1
    4dec:	9c 93       	st	X, r25
    4dee:	8e 93       	st	-X, r24
    4df0:	fe 01       	movw	r30, r28
    4df2:	ef 5a       	subi	r30, 0xAF	; 175
    4df4:	fe 4f       	sbci	r31, 0xFE	; 254
    4df6:	80 81       	ld	r24, Z
    4df8:	91 81       	ldd	r25, Z+1	; 0x01
    4dfa:	01 97       	sbiw	r24, 0x01	; 1
    4dfc:	f1 f7       	brne	.-4      	; 0x4dfa <main+0xb90>
    4dfe:	fe 01       	movw	r30, r28
    4e00:	ef 5a       	subi	r30, 0xAF	; 175
    4e02:	fe 4f       	sbci	r31, 0xFE	; 254
    4e04:	91 83       	std	Z+1, r25	; 0x01
    4e06:	80 83       	st	Z, r24
    4e08:	4d ca       	rjmp	.-2918   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 7:
					Lcd_vidSendCommand(loc);
    4e0a:	80 91 19 01 	lds	r24, 0x0119
    4e0e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('g');
    4e12:	87 e6       	ldi	r24, 0x67	; 103
    4e14:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4e18:	80 91 19 01 	lds	r24, 0x0119
    4e1c:	8f 5f       	subi	r24, 0xFF	; 255
    4e1e:	80 93 19 01 	sts	0x0119, r24
					id[j]='g';
    4e22:	80 91 1c 01 	lds	r24, 0x011C
    4e26:	88 2f       	mov	r24, r24
    4e28:	90 e0       	ldi	r25, 0x00	; 0
    4e2a:	fc 01       	movw	r30, r24
    4e2c:	eb 5d       	subi	r30, 0xDB	; 219
    4e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    4e30:	87 e6       	ldi	r24, 0x67	; 103
    4e32:	80 83       	st	Z, r24
					j++;
    4e34:	80 91 1c 01 	lds	r24, 0x011C
    4e38:	8f 5f       	subi	r24, 0xFF	; 255
    4e3a:	80 93 1c 01 	sts	0x011C, r24
    4e3e:	fe 01       	movw	r30, r28
    4e40:	e3 5b       	subi	r30, 0xB3	; 179
    4e42:	fe 4f       	sbci	r31, 0xFE	; 254
    4e44:	80 e0       	ldi	r24, 0x00	; 0
    4e46:	90 e0       	ldi	r25, 0x00	; 0
    4e48:	a8 e4       	ldi	r26, 0x48	; 72
    4e4a:	b3 e4       	ldi	r27, 0x43	; 67
    4e4c:	80 83       	st	Z, r24
    4e4e:	91 83       	std	Z+1, r25	; 0x01
    4e50:	a2 83       	std	Z+2, r26	; 0x02
    4e52:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e54:	8e 01       	movw	r16, r28
    4e56:	07 5b       	subi	r16, 0xB7	; 183
    4e58:	1e 4f       	sbci	r17, 0xFE	; 254
    4e5a:	fe 01       	movw	r30, r28
    4e5c:	e3 5b       	subi	r30, 0xB3	; 179
    4e5e:	fe 4f       	sbci	r31, 0xFE	; 254
    4e60:	60 81       	ld	r22, Z
    4e62:	71 81       	ldd	r23, Z+1	; 0x01
    4e64:	82 81       	ldd	r24, Z+2	; 0x02
    4e66:	93 81       	ldd	r25, Z+3	; 0x03
    4e68:	20 e0       	ldi	r18, 0x00	; 0
    4e6a:	30 e0       	ldi	r19, 0x00	; 0
    4e6c:	4a ef       	ldi	r20, 0xFA	; 250
    4e6e:	54 e4       	ldi	r21, 0x44	; 68
    4e70:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e74:	dc 01       	movw	r26, r24
    4e76:	cb 01       	movw	r24, r22
    4e78:	f8 01       	movw	r30, r16
    4e7a:	80 83       	st	Z, r24
    4e7c:	91 83       	std	Z+1, r25	; 0x01
    4e7e:	a2 83       	std	Z+2, r26	; 0x02
    4e80:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4e82:	fe 01       	movw	r30, r28
    4e84:	e7 5b       	subi	r30, 0xB7	; 183
    4e86:	fe 4f       	sbci	r31, 0xFE	; 254
    4e88:	60 81       	ld	r22, Z
    4e8a:	71 81       	ldd	r23, Z+1	; 0x01
    4e8c:	82 81       	ldd	r24, Z+2	; 0x02
    4e8e:	93 81       	ldd	r25, Z+3	; 0x03
    4e90:	20 e0       	ldi	r18, 0x00	; 0
    4e92:	30 e0       	ldi	r19, 0x00	; 0
    4e94:	40 e8       	ldi	r20, 0x80	; 128
    4e96:	5f e3       	ldi	r21, 0x3F	; 63
    4e98:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    4e9c:	88 23       	and	r24, r24
    4e9e:	44 f4       	brge	.+16     	; 0x4eb0 <main+0xc46>
		__ticks = 1;
    4ea0:	fe 01       	movw	r30, r28
    4ea2:	e9 5b       	subi	r30, 0xB9	; 185
    4ea4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ea6:	81 e0       	ldi	r24, 0x01	; 1
    4ea8:	90 e0       	ldi	r25, 0x00	; 0
    4eaa:	91 83       	std	Z+1, r25	; 0x01
    4eac:	80 83       	st	Z, r24
    4eae:	64 c0       	rjmp	.+200    	; 0x4f78 <main+0xd0e>
	else if (__tmp > 65535)
    4eb0:	fe 01       	movw	r30, r28
    4eb2:	e7 5b       	subi	r30, 0xB7	; 183
    4eb4:	fe 4f       	sbci	r31, 0xFE	; 254
    4eb6:	60 81       	ld	r22, Z
    4eb8:	71 81       	ldd	r23, Z+1	; 0x01
    4eba:	82 81       	ldd	r24, Z+2	; 0x02
    4ebc:	93 81       	ldd	r25, Z+3	; 0x03
    4ebe:	20 e0       	ldi	r18, 0x00	; 0
    4ec0:	3f ef       	ldi	r19, 0xFF	; 255
    4ec2:	4f e7       	ldi	r20, 0x7F	; 127
    4ec4:	57 e4       	ldi	r21, 0x47	; 71
    4ec6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4eca:	18 16       	cp	r1, r24
    4ecc:	0c f0       	brlt	.+2      	; 0x4ed0 <main+0xc66>
    4ece:	43 c0       	rjmp	.+134    	; 0x4f56 <main+0xcec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ed0:	fe 01       	movw	r30, r28
    4ed2:	e3 5b       	subi	r30, 0xB3	; 179
    4ed4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ed6:	60 81       	ld	r22, Z
    4ed8:	71 81       	ldd	r23, Z+1	; 0x01
    4eda:	82 81       	ldd	r24, Z+2	; 0x02
    4edc:	93 81       	ldd	r25, Z+3	; 0x03
    4ede:	20 e0       	ldi	r18, 0x00	; 0
    4ee0:	30 e0       	ldi	r19, 0x00	; 0
    4ee2:	40 e2       	ldi	r20, 0x20	; 32
    4ee4:	51 e4       	ldi	r21, 0x41	; 65
    4ee6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4eea:	dc 01       	movw	r26, r24
    4eec:	cb 01       	movw	r24, r22
    4eee:	8e 01       	movw	r16, r28
    4ef0:	09 5b       	subi	r16, 0xB9	; 185
    4ef2:	1e 4f       	sbci	r17, 0xFE	; 254
    4ef4:	bc 01       	movw	r22, r24
    4ef6:	cd 01       	movw	r24, r26
    4ef8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4efc:	dc 01       	movw	r26, r24
    4efe:	cb 01       	movw	r24, r22
    4f00:	f8 01       	movw	r30, r16
    4f02:	91 83       	std	Z+1, r25	; 0x01
    4f04:	80 83       	st	Z, r24
    4f06:	1f c0       	rjmp	.+62     	; 0x4f46 <main+0xcdc>
    4f08:	fe 01       	movw	r30, r28
    4f0a:	eb 5b       	subi	r30, 0xBB	; 187
    4f0c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f0e:	88 ec       	ldi	r24, 0xC8	; 200
    4f10:	90 e0       	ldi	r25, 0x00	; 0
    4f12:	91 83       	std	Z+1, r25	; 0x01
    4f14:	80 83       	st	Z, r24
    4f16:	fe 01       	movw	r30, r28
    4f18:	eb 5b       	subi	r30, 0xBB	; 187
    4f1a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f1c:	80 81       	ld	r24, Z
    4f1e:	91 81       	ldd	r25, Z+1	; 0x01
    4f20:	01 97       	sbiw	r24, 0x01	; 1
    4f22:	f1 f7       	brne	.-4      	; 0x4f20 <main+0xcb6>
    4f24:	fe 01       	movw	r30, r28
    4f26:	eb 5b       	subi	r30, 0xBB	; 187
    4f28:	fe 4f       	sbci	r31, 0xFE	; 254
    4f2a:	91 83       	std	Z+1, r25	; 0x01
    4f2c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f2e:	de 01       	movw	r26, r28
    4f30:	a9 5b       	subi	r26, 0xB9	; 185
    4f32:	be 4f       	sbci	r27, 0xFE	; 254
    4f34:	fe 01       	movw	r30, r28
    4f36:	e9 5b       	subi	r30, 0xB9	; 185
    4f38:	fe 4f       	sbci	r31, 0xFE	; 254
    4f3a:	80 81       	ld	r24, Z
    4f3c:	91 81       	ldd	r25, Z+1	; 0x01
    4f3e:	01 97       	sbiw	r24, 0x01	; 1
    4f40:	11 96       	adiw	r26, 0x01	; 1
    4f42:	9c 93       	st	X, r25
    4f44:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f46:	fe 01       	movw	r30, r28
    4f48:	e9 5b       	subi	r30, 0xB9	; 185
    4f4a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f4c:	80 81       	ld	r24, Z
    4f4e:	91 81       	ldd	r25, Z+1	; 0x01
    4f50:	00 97       	sbiw	r24, 0x00	; 0
    4f52:	d1 f6       	brne	.-76     	; 0x4f08 <main+0xc9e>
    4f54:	a7 c9       	rjmp	.-3250   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f56:	8e 01       	movw	r16, r28
    4f58:	09 5b       	subi	r16, 0xB9	; 185
    4f5a:	1e 4f       	sbci	r17, 0xFE	; 254
    4f5c:	fe 01       	movw	r30, r28
    4f5e:	e7 5b       	subi	r30, 0xB7	; 183
    4f60:	fe 4f       	sbci	r31, 0xFE	; 254
    4f62:	60 81       	ld	r22, Z
    4f64:	71 81       	ldd	r23, Z+1	; 0x01
    4f66:	82 81       	ldd	r24, Z+2	; 0x02
    4f68:	93 81       	ldd	r25, Z+3	; 0x03
    4f6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f6e:	dc 01       	movw	r26, r24
    4f70:	cb 01       	movw	r24, r22
    4f72:	f8 01       	movw	r30, r16
    4f74:	91 83       	std	Z+1, r25	; 0x01
    4f76:	80 83       	st	Z, r24
    4f78:	de 01       	movw	r26, r28
    4f7a:	ad 5b       	subi	r26, 0xBD	; 189
    4f7c:	be 4f       	sbci	r27, 0xFE	; 254
    4f7e:	fe 01       	movw	r30, r28
    4f80:	e9 5b       	subi	r30, 0xB9	; 185
    4f82:	fe 4f       	sbci	r31, 0xFE	; 254
    4f84:	80 81       	ld	r24, Z
    4f86:	91 81       	ldd	r25, Z+1	; 0x01
    4f88:	11 96       	adiw	r26, 0x01	; 1
    4f8a:	9c 93       	st	X, r25
    4f8c:	8e 93       	st	-X, r24
    4f8e:	fe 01       	movw	r30, r28
    4f90:	ed 5b       	subi	r30, 0xBD	; 189
    4f92:	fe 4f       	sbci	r31, 0xFE	; 254
    4f94:	80 81       	ld	r24, Z
    4f96:	91 81       	ldd	r25, Z+1	; 0x01
    4f98:	01 97       	sbiw	r24, 0x01	; 1
    4f9a:	f1 f7       	brne	.-4      	; 0x4f98 <main+0xd2e>
    4f9c:	fe 01       	movw	r30, r28
    4f9e:	ed 5b       	subi	r30, 0xBD	; 189
    4fa0:	fe 4f       	sbci	r31, 0xFE	; 254
    4fa2:	91 83       	std	Z+1, r25	; 0x01
    4fa4:	80 83       	st	Z, r24
    4fa6:	7e c9       	rjmp	.-3332   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 8:
					Lcd_vidSendCommand(loc);
    4fa8:	80 91 19 01 	lds	r24, 0x0119
    4fac:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('h');
    4fb0:	88 e6       	ldi	r24, 0x68	; 104
    4fb2:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    4fb6:	80 91 19 01 	lds	r24, 0x0119
    4fba:	8f 5f       	subi	r24, 0xFF	; 255
    4fbc:	80 93 19 01 	sts	0x0119, r24
					id[j]='h';
    4fc0:	80 91 1c 01 	lds	r24, 0x011C
    4fc4:	88 2f       	mov	r24, r24
    4fc6:	90 e0       	ldi	r25, 0x00	; 0
    4fc8:	fc 01       	movw	r30, r24
    4fca:	eb 5d       	subi	r30, 0xDB	; 219
    4fcc:	fe 4f       	sbci	r31, 0xFE	; 254
    4fce:	88 e6       	ldi	r24, 0x68	; 104
    4fd0:	80 83       	st	Z, r24
					j++;
    4fd2:	80 91 1c 01 	lds	r24, 0x011C
    4fd6:	8f 5f       	subi	r24, 0xFF	; 255
    4fd8:	80 93 1c 01 	sts	0x011C, r24
    4fdc:	fe 01       	movw	r30, r28
    4fde:	e1 5c       	subi	r30, 0xC1	; 193
    4fe0:	fe 4f       	sbci	r31, 0xFE	; 254
    4fe2:	80 e0       	ldi	r24, 0x00	; 0
    4fe4:	90 e0       	ldi	r25, 0x00	; 0
    4fe6:	a8 e4       	ldi	r26, 0x48	; 72
    4fe8:	b3 e4       	ldi	r27, 0x43	; 67
    4fea:	80 83       	st	Z, r24
    4fec:	91 83       	std	Z+1, r25	; 0x01
    4fee:	a2 83       	std	Z+2, r26	; 0x02
    4ff0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ff2:	8e 01       	movw	r16, r28
    4ff4:	05 5c       	subi	r16, 0xC5	; 197
    4ff6:	1e 4f       	sbci	r17, 0xFE	; 254
    4ff8:	fe 01       	movw	r30, r28
    4ffa:	e1 5c       	subi	r30, 0xC1	; 193
    4ffc:	fe 4f       	sbci	r31, 0xFE	; 254
    4ffe:	60 81       	ld	r22, Z
    5000:	71 81       	ldd	r23, Z+1	; 0x01
    5002:	82 81       	ldd	r24, Z+2	; 0x02
    5004:	93 81       	ldd	r25, Z+3	; 0x03
    5006:	20 e0       	ldi	r18, 0x00	; 0
    5008:	30 e0       	ldi	r19, 0x00	; 0
    500a:	4a ef       	ldi	r20, 0xFA	; 250
    500c:	54 e4       	ldi	r21, 0x44	; 68
    500e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5012:	dc 01       	movw	r26, r24
    5014:	cb 01       	movw	r24, r22
    5016:	f8 01       	movw	r30, r16
    5018:	80 83       	st	Z, r24
    501a:	91 83       	std	Z+1, r25	; 0x01
    501c:	a2 83       	std	Z+2, r26	; 0x02
    501e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5020:	fe 01       	movw	r30, r28
    5022:	e5 5c       	subi	r30, 0xC5	; 197
    5024:	fe 4f       	sbci	r31, 0xFE	; 254
    5026:	60 81       	ld	r22, Z
    5028:	71 81       	ldd	r23, Z+1	; 0x01
    502a:	82 81       	ldd	r24, Z+2	; 0x02
    502c:	93 81       	ldd	r25, Z+3	; 0x03
    502e:	20 e0       	ldi	r18, 0x00	; 0
    5030:	30 e0       	ldi	r19, 0x00	; 0
    5032:	40 e8       	ldi	r20, 0x80	; 128
    5034:	5f e3       	ldi	r21, 0x3F	; 63
    5036:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    503a:	88 23       	and	r24, r24
    503c:	44 f4       	brge	.+16     	; 0x504e <main+0xde4>
		__ticks = 1;
    503e:	fe 01       	movw	r30, r28
    5040:	e7 5c       	subi	r30, 0xC7	; 199
    5042:	fe 4f       	sbci	r31, 0xFE	; 254
    5044:	81 e0       	ldi	r24, 0x01	; 1
    5046:	90 e0       	ldi	r25, 0x00	; 0
    5048:	91 83       	std	Z+1, r25	; 0x01
    504a:	80 83       	st	Z, r24
    504c:	64 c0       	rjmp	.+200    	; 0x5116 <main+0xeac>
	else if (__tmp > 65535)
    504e:	fe 01       	movw	r30, r28
    5050:	e5 5c       	subi	r30, 0xC5	; 197
    5052:	fe 4f       	sbci	r31, 0xFE	; 254
    5054:	60 81       	ld	r22, Z
    5056:	71 81       	ldd	r23, Z+1	; 0x01
    5058:	82 81       	ldd	r24, Z+2	; 0x02
    505a:	93 81       	ldd	r25, Z+3	; 0x03
    505c:	20 e0       	ldi	r18, 0x00	; 0
    505e:	3f ef       	ldi	r19, 0xFF	; 255
    5060:	4f e7       	ldi	r20, 0x7F	; 127
    5062:	57 e4       	ldi	r21, 0x47	; 71
    5064:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5068:	18 16       	cp	r1, r24
    506a:	0c f0       	brlt	.+2      	; 0x506e <main+0xe04>
    506c:	43 c0       	rjmp	.+134    	; 0x50f4 <main+0xe8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    506e:	fe 01       	movw	r30, r28
    5070:	e1 5c       	subi	r30, 0xC1	; 193
    5072:	fe 4f       	sbci	r31, 0xFE	; 254
    5074:	60 81       	ld	r22, Z
    5076:	71 81       	ldd	r23, Z+1	; 0x01
    5078:	82 81       	ldd	r24, Z+2	; 0x02
    507a:	93 81       	ldd	r25, Z+3	; 0x03
    507c:	20 e0       	ldi	r18, 0x00	; 0
    507e:	30 e0       	ldi	r19, 0x00	; 0
    5080:	40 e2       	ldi	r20, 0x20	; 32
    5082:	51 e4       	ldi	r21, 0x41	; 65
    5084:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5088:	dc 01       	movw	r26, r24
    508a:	cb 01       	movw	r24, r22
    508c:	8e 01       	movw	r16, r28
    508e:	07 5c       	subi	r16, 0xC7	; 199
    5090:	1e 4f       	sbci	r17, 0xFE	; 254
    5092:	bc 01       	movw	r22, r24
    5094:	cd 01       	movw	r24, r26
    5096:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    509a:	dc 01       	movw	r26, r24
    509c:	cb 01       	movw	r24, r22
    509e:	f8 01       	movw	r30, r16
    50a0:	91 83       	std	Z+1, r25	; 0x01
    50a2:	80 83       	st	Z, r24
    50a4:	1f c0       	rjmp	.+62     	; 0x50e4 <main+0xe7a>
    50a6:	fe 01       	movw	r30, r28
    50a8:	e9 5c       	subi	r30, 0xC9	; 201
    50aa:	fe 4f       	sbci	r31, 0xFE	; 254
    50ac:	88 ec       	ldi	r24, 0xC8	; 200
    50ae:	90 e0       	ldi	r25, 0x00	; 0
    50b0:	91 83       	std	Z+1, r25	; 0x01
    50b2:	80 83       	st	Z, r24
    50b4:	fe 01       	movw	r30, r28
    50b6:	e9 5c       	subi	r30, 0xC9	; 201
    50b8:	fe 4f       	sbci	r31, 0xFE	; 254
    50ba:	80 81       	ld	r24, Z
    50bc:	91 81       	ldd	r25, Z+1	; 0x01
    50be:	01 97       	sbiw	r24, 0x01	; 1
    50c0:	f1 f7       	brne	.-4      	; 0x50be <main+0xe54>
    50c2:	fe 01       	movw	r30, r28
    50c4:	e9 5c       	subi	r30, 0xC9	; 201
    50c6:	fe 4f       	sbci	r31, 0xFE	; 254
    50c8:	91 83       	std	Z+1, r25	; 0x01
    50ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50cc:	de 01       	movw	r26, r28
    50ce:	a7 5c       	subi	r26, 0xC7	; 199
    50d0:	be 4f       	sbci	r27, 0xFE	; 254
    50d2:	fe 01       	movw	r30, r28
    50d4:	e7 5c       	subi	r30, 0xC7	; 199
    50d6:	fe 4f       	sbci	r31, 0xFE	; 254
    50d8:	80 81       	ld	r24, Z
    50da:	91 81       	ldd	r25, Z+1	; 0x01
    50dc:	01 97       	sbiw	r24, 0x01	; 1
    50de:	11 96       	adiw	r26, 0x01	; 1
    50e0:	9c 93       	st	X, r25
    50e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50e4:	fe 01       	movw	r30, r28
    50e6:	e7 5c       	subi	r30, 0xC7	; 199
    50e8:	fe 4f       	sbci	r31, 0xFE	; 254
    50ea:	80 81       	ld	r24, Z
    50ec:	91 81       	ldd	r25, Z+1	; 0x01
    50ee:	00 97       	sbiw	r24, 0x00	; 0
    50f0:	d1 f6       	brne	.-76     	; 0x50a6 <main+0xe3c>
    50f2:	d8 c8       	rjmp	.-3664   	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50f4:	8e 01       	movw	r16, r28
    50f6:	07 5c       	subi	r16, 0xC7	; 199
    50f8:	1e 4f       	sbci	r17, 0xFE	; 254
    50fa:	fe 01       	movw	r30, r28
    50fc:	e5 5c       	subi	r30, 0xC5	; 197
    50fe:	fe 4f       	sbci	r31, 0xFE	; 254
    5100:	60 81       	ld	r22, Z
    5102:	71 81       	ldd	r23, Z+1	; 0x01
    5104:	82 81       	ldd	r24, Z+2	; 0x02
    5106:	93 81       	ldd	r25, Z+3	; 0x03
    5108:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    510c:	dc 01       	movw	r26, r24
    510e:	cb 01       	movw	r24, r22
    5110:	f8 01       	movw	r30, r16
    5112:	91 83       	std	Z+1, r25	; 0x01
    5114:	80 83       	st	Z, r24
    5116:	de 01       	movw	r26, r28
    5118:	ab 5c       	subi	r26, 0xCB	; 203
    511a:	be 4f       	sbci	r27, 0xFE	; 254
    511c:	fe 01       	movw	r30, r28
    511e:	e7 5c       	subi	r30, 0xC7	; 199
    5120:	fe 4f       	sbci	r31, 0xFE	; 254
    5122:	80 81       	ld	r24, Z
    5124:	91 81       	ldd	r25, Z+1	; 0x01
    5126:	11 96       	adiw	r26, 0x01	; 1
    5128:	9c 93       	st	X, r25
    512a:	8e 93       	st	-X, r24
    512c:	fe 01       	movw	r30, r28
    512e:	eb 5c       	subi	r30, 0xCB	; 203
    5130:	fe 4f       	sbci	r31, 0xFE	; 254
    5132:	80 81       	ld	r24, Z
    5134:	91 81       	ldd	r25, Z+1	; 0x01
    5136:	01 97       	sbiw	r24, 0x01	; 1
    5138:	f1 f7       	brne	.-4      	; 0x5136 <main+0xecc>
    513a:	fe 01       	movw	r30, r28
    513c:	eb 5c       	subi	r30, 0xCB	; 203
    513e:	fe 4f       	sbci	r31, 0xFE	; 254
    5140:	91 83       	std	Z+1, r25	; 0x01
    5142:	80 83       	st	Z, r24
    5144:	af c8       	rjmp	.-3746   	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 9:
					Lcd_vidSendCommand(loc);
    5146:	80 91 19 01 	lds	r24, 0x0119
    514a:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('i');
    514e:	89 e6       	ldi	r24, 0x69	; 105
    5150:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    5154:	80 91 19 01 	lds	r24, 0x0119
    5158:	8f 5f       	subi	r24, 0xFF	; 255
    515a:	80 93 19 01 	sts	0x0119, r24
					id[j]='i';
    515e:	80 91 1c 01 	lds	r24, 0x011C
    5162:	88 2f       	mov	r24, r24
    5164:	90 e0       	ldi	r25, 0x00	; 0
    5166:	fc 01       	movw	r30, r24
    5168:	eb 5d       	subi	r30, 0xDB	; 219
    516a:	fe 4f       	sbci	r31, 0xFE	; 254
    516c:	89 e6       	ldi	r24, 0x69	; 105
    516e:	80 83       	st	Z, r24
					j++;
    5170:	80 91 1c 01 	lds	r24, 0x011C
    5174:	8f 5f       	subi	r24, 0xFF	; 255
    5176:	80 93 1c 01 	sts	0x011C, r24
    517a:	fe 01       	movw	r30, r28
    517c:	ef 5c       	subi	r30, 0xCF	; 207
    517e:	fe 4f       	sbci	r31, 0xFE	; 254
    5180:	80 e0       	ldi	r24, 0x00	; 0
    5182:	90 e0       	ldi	r25, 0x00	; 0
    5184:	a8 e4       	ldi	r26, 0x48	; 72
    5186:	b3 e4       	ldi	r27, 0x43	; 67
    5188:	80 83       	st	Z, r24
    518a:	91 83       	std	Z+1, r25	; 0x01
    518c:	a2 83       	std	Z+2, r26	; 0x02
    518e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5190:	8e 01       	movw	r16, r28
    5192:	03 5d       	subi	r16, 0xD3	; 211
    5194:	1e 4f       	sbci	r17, 0xFE	; 254
    5196:	fe 01       	movw	r30, r28
    5198:	ef 5c       	subi	r30, 0xCF	; 207
    519a:	fe 4f       	sbci	r31, 0xFE	; 254
    519c:	60 81       	ld	r22, Z
    519e:	71 81       	ldd	r23, Z+1	; 0x01
    51a0:	82 81       	ldd	r24, Z+2	; 0x02
    51a2:	93 81       	ldd	r25, Z+3	; 0x03
    51a4:	20 e0       	ldi	r18, 0x00	; 0
    51a6:	30 e0       	ldi	r19, 0x00	; 0
    51a8:	4a ef       	ldi	r20, 0xFA	; 250
    51aa:	54 e4       	ldi	r21, 0x44	; 68
    51ac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    51b0:	dc 01       	movw	r26, r24
    51b2:	cb 01       	movw	r24, r22
    51b4:	f8 01       	movw	r30, r16
    51b6:	80 83       	st	Z, r24
    51b8:	91 83       	std	Z+1, r25	; 0x01
    51ba:	a2 83       	std	Z+2, r26	; 0x02
    51bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    51be:	fe 01       	movw	r30, r28
    51c0:	e3 5d       	subi	r30, 0xD3	; 211
    51c2:	fe 4f       	sbci	r31, 0xFE	; 254
    51c4:	60 81       	ld	r22, Z
    51c6:	71 81       	ldd	r23, Z+1	; 0x01
    51c8:	82 81       	ldd	r24, Z+2	; 0x02
    51ca:	93 81       	ldd	r25, Z+3	; 0x03
    51cc:	20 e0       	ldi	r18, 0x00	; 0
    51ce:	30 e0       	ldi	r19, 0x00	; 0
    51d0:	40 e8       	ldi	r20, 0x80	; 128
    51d2:	5f e3       	ldi	r21, 0x3F	; 63
    51d4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    51d8:	88 23       	and	r24, r24
    51da:	44 f4       	brge	.+16     	; 0x51ec <main+0xf82>
		__ticks = 1;
    51dc:	fe 01       	movw	r30, r28
    51de:	e5 5d       	subi	r30, 0xD5	; 213
    51e0:	fe 4f       	sbci	r31, 0xFE	; 254
    51e2:	81 e0       	ldi	r24, 0x01	; 1
    51e4:	90 e0       	ldi	r25, 0x00	; 0
    51e6:	91 83       	std	Z+1, r25	; 0x01
    51e8:	80 83       	st	Z, r24
    51ea:	65 c0       	rjmp	.+202    	; 0x52b6 <main+0x104c>
	else if (__tmp > 65535)
    51ec:	fe 01       	movw	r30, r28
    51ee:	e3 5d       	subi	r30, 0xD3	; 211
    51f0:	fe 4f       	sbci	r31, 0xFE	; 254
    51f2:	60 81       	ld	r22, Z
    51f4:	71 81       	ldd	r23, Z+1	; 0x01
    51f6:	82 81       	ldd	r24, Z+2	; 0x02
    51f8:	93 81       	ldd	r25, Z+3	; 0x03
    51fa:	20 e0       	ldi	r18, 0x00	; 0
    51fc:	3f ef       	ldi	r19, 0xFF	; 255
    51fe:	4f e7       	ldi	r20, 0x7F	; 127
    5200:	57 e4       	ldi	r21, 0x47	; 71
    5202:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5206:	18 16       	cp	r1, r24
    5208:	0c f0       	brlt	.+2      	; 0x520c <main+0xfa2>
    520a:	44 c0       	rjmp	.+136    	; 0x5294 <main+0x102a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    520c:	fe 01       	movw	r30, r28
    520e:	ef 5c       	subi	r30, 0xCF	; 207
    5210:	fe 4f       	sbci	r31, 0xFE	; 254
    5212:	60 81       	ld	r22, Z
    5214:	71 81       	ldd	r23, Z+1	; 0x01
    5216:	82 81       	ldd	r24, Z+2	; 0x02
    5218:	93 81       	ldd	r25, Z+3	; 0x03
    521a:	20 e0       	ldi	r18, 0x00	; 0
    521c:	30 e0       	ldi	r19, 0x00	; 0
    521e:	40 e2       	ldi	r20, 0x20	; 32
    5220:	51 e4       	ldi	r21, 0x41	; 65
    5222:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5226:	dc 01       	movw	r26, r24
    5228:	cb 01       	movw	r24, r22
    522a:	8e 01       	movw	r16, r28
    522c:	05 5d       	subi	r16, 0xD5	; 213
    522e:	1e 4f       	sbci	r17, 0xFE	; 254
    5230:	bc 01       	movw	r22, r24
    5232:	cd 01       	movw	r24, r26
    5234:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5238:	dc 01       	movw	r26, r24
    523a:	cb 01       	movw	r24, r22
    523c:	f8 01       	movw	r30, r16
    523e:	91 83       	std	Z+1, r25	; 0x01
    5240:	80 83       	st	Z, r24
    5242:	1f c0       	rjmp	.+62     	; 0x5282 <main+0x1018>
    5244:	fe 01       	movw	r30, r28
    5246:	e7 5d       	subi	r30, 0xD7	; 215
    5248:	fe 4f       	sbci	r31, 0xFE	; 254
    524a:	88 ec       	ldi	r24, 0xC8	; 200
    524c:	90 e0       	ldi	r25, 0x00	; 0
    524e:	91 83       	std	Z+1, r25	; 0x01
    5250:	80 83       	st	Z, r24
    5252:	fe 01       	movw	r30, r28
    5254:	e7 5d       	subi	r30, 0xD7	; 215
    5256:	fe 4f       	sbci	r31, 0xFE	; 254
    5258:	80 81       	ld	r24, Z
    525a:	91 81       	ldd	r25, Z+1	; 0x01
    525c:	01 97       	sbiw	r24, 0x01	; 1
    525e:	f1 f7       	brne	.-4      	; 0x525c <main+0xff2>
    5260:	fe 01       	movw	r30, r28
    5262:	e7 5d       	subi	r30, 0xD7	; 215
    5264:	fe 4f       	sbci	r31, 0xFE	; 254
    5266:	91 83       	std	Z+1, r25	; 0x01
    5268:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    526a:	de 01       	movw	r26, r28
    526c:	a5 5d       	subi	r26, 0xD5	; 213
    526e:	be 4f       	sbci	r27, 0xFE	; 254
    5270:	fe 01       	movw	r30, r28
    5272:	e5 5d       	subi	r30, 0xD5	; 213
    5274:	fe 4f       	sbci	r31, 0xFE	; 254
    5276:	80 81       	ld	r24, Z
    5278:	91 81       	ldd	r25, Z+1	; 0x01
    527a:	01 97       	sbiw	r24, 0x01	; 1
    527c:	11 96       	adiw	r26, 0x01	; 1
    527e:	9c 93       	st	X, r25
    5280:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5282:	fe 01       	movw	r30, r28
    5284:	e5 5d       	subi	r30, 0xD5	; 213
    5286:	fe 4f       	sbci	r31, 0xFE	; 254
    5288:	80 81       	ld	r24, Z
    528a:	91 81       	ldd	r25, Z+1	; 0x01
    528c:	00 97       	sbiw	r24, 0x00	; 0
    528e:	d1 f6       	brne	.-76     	; 0x5244 <main+0xfda>
    5290:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5294:	8e 01       	movw	r16, r28
    5296:	05 5d       	subi	r16, 0xD5	; 213
    5298:	1e 4f       	sbci	r17, 0xFE	; 254
    529a:	fe 01       	movw	r30, r28
    529c:	e3 5d       	subi	r30, 0xD3	; 211
    529e:	fe 4f       	sbci	r31, 0xFE	; 254
    52a0:	60 81       	ld	r22, Z
    52a2:	71 81       	ldd	r23, Z+1	; 0x01
    52a4:	82 81       	ldd	r24, Z+2	; 0x02
    52a6:	93 81       	ldd	r25, Z+3	; 0x03
    52a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    52ac:	dc 01       	movw	r26, r24
    52ae:	cb 01       	movw	r24, r22
    52b0:	f8 01       	movw	r30, r16
    52b2:	91 83       	std	Z+1, r25	; 0x01
    52b4:	80 83       	st	Z, r24
    52b6:	de 01       	movw	r26, r28
    52b8:	a9 5d       	subi	r26, 0xD9	; 217
    52ba:	be 4f       	sbci	r27, 0xFE	; 254
    52bc:	fe 01       	movw	r30, r28
    52be:	e5 5d       	subi	r30, 0xD5	; 213
    52c0:	fe 4f       	sbci	r31, 0xFE	; 254
    52c2:	80 81       	ld	r24, Z
    52c4:	91 81       	ldd	r25, Z+1	; 0x01
    52c6:	11 96       	adiw	r26, 0x01	; 1
    52c8:	9c 93       	st	X, r25
    52ca:	8e 93       	st	-X, r24
    52cc:	fe 01       	movw	r30, r28
    52ce:	e9 5d       	subi	r30, 0xD9	; 217
    52d0:	fe 4f       	sbci	r31, 0xFE	; 254
    52d2:	80 81       	ld	r24, Z
    52d4:	91 81       	ldd	r25, Z+1	; 0x01
    52d6:	01 97       	sbiw	r24, 0x01	; 1
    52d8:	f1 f7       	brne	.-4      	; 0x52d6 <main+0x106c>
    52da:	fe 01       	movw	r30, r28
    52dc:	e9 5d       	subi	r30, 0xD9	; 217
    52de:	fe 4f       	sbci	r31, 0xFE	; 254
    52e0:	91 83       	std	Z+1, r25	; 0x01
    52e2:	80 83       	st	Z, r24
    52e4:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '+':
					Lcd_vidSendCommand(loc);
    52e8:	80 91 19 01 	lds	r24, 0x0119
    52ec:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('j');
    52f0:	8a e6       	ldi	r24, 0x6A	; 106
    52f2:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    52f6:	80 91 19 01 	lds	r24, 0x0119
    52fa:	8f 5f       	subi	r24, 0xFF	; 255
    52fc:	80 93 19 01 	sts	0x0119, r24
					id[j]='j';
    5300:	80 91 1c 01 	lds	r24, 0x011C
    5304:	88 2f       	mov	r24, r24
    5306:	90 e0       	ldi	r25, 0x00	; 0
    5308:	fc 01       	movw	r30, r24
    530a:	eb 5d       	subi	r30, 0xDB	; 219
    530c:	fe 4f       	sbci	r31, 0xFE	; 254
    530e:	8a e6       	ldi	r24, 0x6A	; 106
    5310:	80 83       	st	Z, r24
					j++;
    5312:	80 91 1c 01 	lds	r24, 0x011C
    5316:	8f 5f       	subi	r24, 0xFF	; 255
    5318:	80 93 1c 01 	sts	0x011C, r24
    531c:	fe 01       	movw	r30, r28
    531e:	ed 5d       	subi	r30, 0xDD	; 221
    5320:	fe 4f       	sbci	r31, 0xFE	; 254
    5322:	80 e0       	ldi	r24, 0x00	; 0
    5324:	90 e0       	ldi	r25, 0x00	; 0
    5326:	a8 e4       	ldi	r26, 0x48	; 72
    5328:	b3 e4       	ldi	r27, 0x43	; 67
    532a:	80 83       	st	Z, r24
    532c:	91 83       	std	Z+1, r25	; 0x01
    532e:	a2 83       	std	Z+2, r26	; 0x02
    5330:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5332:	8e 01       	movw	r16, r28
    5334:	01 5e       	subi	r16, 0xE1	; 225
    5336:	1e 4f       	sbci	r17, 0xFE	; 254
    5338:	fe 01       	movw	r30, r28
    533a:	ed 5d       	subi	r30, 0xDD	; 221
    533c:	fe 4f       	sbci	r31, 0xFE	; 254
    533e:	60 81       	ld	r22, Z
    5340:	71 81       	ldd	r23, Z+1	; 0x01
    5342:	82 81       	ldd	r24, Z+2	; 0x02
    5344:	93 81       	ldd	r25, Z+3	; 0x03
    5346:	20 e0       	ldi	r18, 0x00	; 0
    5348:	30 e0       	ldi	r19, 0x00	; 0
    534a:	4a ef       	ldi	r20, 0xFA	; 250
    534c:	54 e4       	ldi	r21, 0x44	; 68
    534e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5352:	dc 01       	movw	r26, r24
    5354:	cb 01       	movw	r24, r22
    5356:	f8 01       	movw	r30, r16
    5358:	80 83       	st	Z, r24
    535a:	91 83       	std	Z+1, r25	; 0x01
    535c:	a2 83       	std	Z+2, r26	; 0x02
    535e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5360:	fe 01       	movw	r30, r28
    5362:	e1 5e       	subi	r30, 0xE1	; 225
    5364:	fe 4f       	sbci	r31, 0xFE	; 254
    5366:	60 81       	ld	r22, Z
    5368:	71 81       	ldd	r23, Z+1	; 0x01
    536a:	82 81       	ldd	r24, Z+2	; 0x02
    536c:	93 81       	ldd	r25, Z+3	; 0x03
    536e:	20 e0       	ldi	r18, 0x00	; 0
    5370:	30 e0       	ldi	r19, 0x00	; 0
    5372:	40 e8       	ldi	r20, 0x80	; 128
    5374:	5f e3       	ldi	r21, 0x3F	; 63
    5376:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    537a:	88 23       	and	r24, r24
    537c:	44 f4       	brge	.+16     	; 0x538e <main+0x1124>
		__ticks = 1;
    537e:	fe 01       	movw	r30, r28
    5380:	e3 5e       	subi	r30, 0xE3	; 227
    5382:	fe 4f       	sbci	r31, 0xFE	; 254
    5384:	81 e0       	ldi	r24, 0x01	; 1
    5386:	90 e0       	ldi	r25, 0x00	; 0
    5388:	91 83       	std	Z+1, r25	; 0x01
    538a:	80 83       	st	Z, r24
    538c:	65 c0       	rjmp	.+202    	; 0x5458 <main+0x11ee>
	else if (__tmp > 65535)
    538e:	fe 01       	movw	r30, r28
    5390:	e1 5e       	subi	r30, 0xE1	; 225
    5392:	fe 4f       	sbci	r31, 0xFE	; 254
    5394:	60 81       	ld	r22, Z
    5396:	71 81       	ldd	r23, Z+1	; 0x01
    5398:	82 81       	ldd	r24, Z+2	; 0x02
    539a:	93 81       	ldd	r25, Z+3	; 0x03
    539c:	20 e0       	ldi	r18, 0x00	; 0
    539e:	3f ef       	ldi	r19, 0xFF	; 255
    53a0:	4f e7       	ldi	r20, 0x7F	; 127
    53a2:	57 e4       	ldi	r21, 0x47	; 71
    53a4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    53a8:	18 16       	cp	r1, r24
    53aa:	0c f0       	brlt	.+2      	; 0x53ae <main+0x1144>
    53ac:	44 c0       	rjmp	.+136    	; 0x5436 <main+0x11cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53ae:	fe 01       	movw	r30, r28
    53b0:	ed 5d       	subi	r30, 0xDD	; 221
    53b2:	fe 4f       	sbci	r31, 0xFE	; 254
    53b4:	60 81       	ld	r22, Z
    53b6:	71 81       	ldd	r23, Z+1	; 0x01
    53b8:	82 81       	ldd	r24, Z+2	; 0x02
    53ba:	93 81       	ldd	r25, Z+3	; 0x03
    53bc:	20 e0       	ldi	r18, 0x00	; 0
    53be:	30 e0       	ldi	r19, 0x00	; 0
    53c0:	40 e2       	ldi	r20, 0x20	; 32
    53c2:	51 e4       	ldi	r21, 0x41	; 65
    53c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    53c8:	dc 01       	movw	r26, r24
    53ca:	cb 01       	movw	r24, r22
    53cc:	8e 01       	movw	r16, r28
    53ce:	03 5e       	subi	r16, 0xE3	; 227
    53d0:	1e 4f       	sbci	r17, 0xFE	; 254
    53d2:	bc 01       	movw	r22, r24
    53d4:	cd 01       	movw	r24, r26
    53d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    53da:	dc 01       	movw	r26, r24
    53dc:	cb 01       	movw	r24, r22
    53de:	f8 01       	movw	r30, r16
    53e0:	91 83       	std	Z+1, r25	; 0x01
    53e2:	80 83       	st	Z, r24
    53e4:	1f c0       	rjmp	.+62     	; 0x5424 <main+0x11ba>
    53e6:	fe 01       	movw	r30, r28
    53e8:	e5 5e       	subi	r30, 0xE5	; 229
    53ea:	fe 4f       	sbci	r31, 0xFE	; 254
    53ec:	88 ec       	ldi	r24, 0xC8	; 200
    53ee:	90 e0       	ldi	r25, 0x00	; 0
    53f0:	91 83       	std	Z+1, r25	; 0x01
    53f2:	80 83       	st	Z, r24
    53f4:	fe 01       	movw	r30, r28
    53f6:	e5 5e       	subi	r30, 0xE5	; 229
    53f8:	fe 4f       	sbci	r31, 0xFE	; 254
    53fa:	80 81       	ld	r24, Z
    53fc:	91 81       	ldd	r25, Z+1	; 0x01
    53fe:	01 97       	sbiw	r24, 0x01	; 1
    5400:	f1 f7       	brne	.-4      	; 0x53fe <main+0x1194>
    5402:	fe 01       	movw	r30, r28
    5404:	e5 5e       	subi	r30, 0xE5	; 229
    5406:	fe 4f       	sbci	r31, 0xFE	; 254
    5408:	91 83       	std	Z+1, r25	; 0x01
    540a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    540c:	de 01       	movw	r26, r28
    540e:	a3 5e       	subi	r26, 0xE3	; 227
    5410:	be 4f       	sbci	r27, 0xFE	; 254
    5412:	fe 01       	movw	r30, r28
    5414:	e3 5e       	subi	r30, 0xE3	; 227
    5416:	fe 4f       	sbci	r31, 0xFE	; 254
    5418:	80 81       	ld	r24, Z
    541a:	91 81       	ldd	r25, Z+1	; 0x01
    541c:	01 97       	sbiw	r24, 0x01	; 1
    541e:	11 96       	adiw	r26, 0x01	; 1
    5420:	9c 93       	st	X, r25
    5422:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5424:	fe 01       	movw	r30, r28
    5426:	e3 5e       	subi	r30, 0xE3	; 227
    5428:	fe 4f       	sbci	r31, 0xFE	; 254
    542a:	80 81       	ld	r24, Z
    542c:	91 81       	ldd	r25, Z+1	; 0x01
    542e:	00 97       	sbiw	r24, 0x00	; 0
    5430:	d1 f6       	brne	.-76     	; 0x53e6 <main+0x117c>
    5432:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5436:	8e 01       	movw	r16, r28
    5438:	03 5e       	subi	r16, 0xE3	; 227
    543a:	1e 4f       	sbci	r17, 0xFE	; 254
    543c:	fe 01       	movw	r30, r28
    543e:	e1 5e       	subi	r30, 0xE1	; 225
    5440:	fe 4f       	sbci	r31, 0xFE	; 254
    5442:	60 81       	ld	r22, Z
    5444:	71 81       	ldd	r23, Z+1	; 0x01
    5446:	82 81       	ldd	r24, Z+2	; 0x02
    5448:	93 81       	ldd	r25, Z+3	; 0x03
    544a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    544e:	dc 01       	movw	r26, r24
    5450:	cb 01       	movw	r24, r22
    5452:	f8 01       	movw	r30, r16
    5454:	91 83       	std	Z+1, r25	; 0x01
    5456:	80 83       	st	Z, r24
    5458:	de 01       	movw	r26, r28
    545a:	a7 5e       	subi	r26, 0xE7	; 231
    545c:	be 4f       	sbci	r27, 0xFE	; 254
    545e:	fe 01       	movw	r30, r28
    5460:	e3 5e       	subi	r30, 0xE3	; 227
    5462:	fe 4f       	sbci	r31, 0xFE	; 254
    5464:	80 81       	ld	r24, Z
    5466:	91 81       	ldd	r25, Z+1	; 0x01
    5468:	11 96       	adiw	r26, 0x01	; 1
    546a:	9c 93       	st	X, r25
    546c:	8e 93       	st	-X, r24
    546e:	fe 01       	movw	r30, r28
    5470:	e7 5e       	subi	r30, 0xE7	; 231
    5472:	fe 4f       	sbci	r31, 0xFE	; 254
    5474:	80 81       	ld	r24, Z
    5476:	91 81       	ldd	r25, Z+1	; 0x01
    5478:	01 97       	sbiw	r24, 0x01	; 1
    547a:	f1 f7       	brne	.-4      	; 0x5478 <main+0x120e>
    547c:	fe 01       	movw	r30, r28
    547e:	e7 5e       	subi	r30, 0xE7	; 231
    5480:	fe 4f       	sbci	r31, 0xFE	; 254
    5482:	91 83       	std	Z+1, r25	; 0x01
    5484:	80 83       	st	Z, r24
    5486:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 0:
					Lcd_vidSendCommand(loc);
    548a:	80 91 19 01 	lds	r24, 0x0119
    548e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('k');
    5492:	8b e6       	ldi	r24, 0x6B	; 107
    5494:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    5498:	80 91 19 01 	lds	r24, 0x0119
    549c:	8f 5f       	subi	r24, 0xFF	; 255
    549e:	80 93 19 01 	sts	0x0119, r24
					id[j]='k';
    54a2:	80 91 1c 01 	lds	r24, 0x011C
    54a6:	88 2f       	mov	r24, r24
    54a8:	90 e0       	ldi	r25, 0x00	; 0
    54aa:	fc 01       	movw	r30, r24
    54ac:	eb 5d       	subi	r30, 0xDB	; 219
    54ae:	fe 4f       	sbci	r31, 0xFE	; 254
    54b0:	8b e6       	ldi	r24, 0x6B	; 107
    54b2:	80 83       	st	Z, r24
					j++;
    54b4:	80 91 1c 01 	lds	r24, 0x011C
    54b8:	8f 5f       	subi	r24, 0xFF	; 255
    54ba:	80 93 1c 01 	sts	0x011C, r24
    54be:	fe 01       	movw	r30, r28
    54c0:	eb 5e       	subi	r30, 0xEB	; 235
    54c2:	fe 4f       	sbci	r31, 0xFE	; 254
    54c4:	80 e0       	ldi	r24, 0x00	; 0
    54c6:	90 e0       	ldi	r25, 0x00	; 0
    54c8:	a8 e4       	ldi	r26, 0x48	; 72
    54ca:	b3 e4       	ldi	r27, 0x43	; 67
    54cc:	80 83       	st	Z, r24
    54ce:	91 83       	std	Z+1, r25	; 0x01
    54d0:	a2 83       	std	Z+2, r26	; 0x02
    54d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    54d4:	8e 01       	movw	r16, r28
    54d6:	0f 5e       	subi	r16, 0xEF	; 239
    54d8:	1e 4f       	sbci	r17, 0xFE	; 254
    54da:	fe 01       	movw	r30, r28
    54dc:	eb 5e       	subi	r30, 0xEB	; 235
    54de:	fe 4f       	sbci	r31, 0xFE	; 254
    54e0:	60 81       	ld	r22, Z
    54e2:	71 81       	ldd	r23, Z+1	; 0x01
    54e4:	82 81       	ldd	r24, Z+2	; 0x02
    54e6:	93 81       	ldd	r25, Z+3	; 0x03
    54e8:	20 e0       	ldi	r18, 0x00	; 0
    54ea:	30 e0       	ldi	r19, 0x00	; 0
    54ec:	4a ef       	ldi	r20, 0xFA	; 250
    54ee:	54 e4       	ldi	r21, 0x44	; 68
    54f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    54f4:	dc 01       	movw	r26, r24
    54f6:	cb 01       	movw	r24, r22
    54f8:	f8 01       	movw	r30, r16
    54fa:	80 83       	st	Z, r24
    54fc:	91 83       	std	Z+1, r25	; 0x01
    54fe:	a2 83       	std	Z+2, r26	; 0x02
    5500:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5502:	fe 01       	movw	r30, r28
    5504:	ef 5e       	subi	r30, 0xEF	; 239
    5506:	fe 4f       	sbci	r31, 0xFE	; 254
    5508:	60 81       	ld	r22, Z
    550a:	71 81       	ldd	r23, Z+1	; 0x01
    550c:	82 81       	ldd	r24, Z+2	; 0x02
    550e:	93 81       	ldd	r25, Z+3	; 0x03
    5510:	20 e0       	ldi	r18, 0x00	; 0
    5512:	30 e0       	ldi	r19, 0x00	; 0
    5514:	40 e8       	ldi	r20, 0x80	; 128
    5516:	5f e3       	ldi	r21, 0x3F	; 63
    5518:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    551c:	88 23       	and	r24, r24
    551e:	44 f4       	brge	.+16     	; 0x5530 <main+0x12c6>
		__ticks = 1;
    5520:	fe 01       	movw	r30, r28
    5522:	e1 5f       	subi	r30, 0xF1	; 241
    5524:	fe 4f       	sbci	r31, 0xFE	; 254
    5526:	81 e0       	ldi	r24, 0x01	; 1
    5528:	90 e0       	ldi	r25, 0x00	; 0
    552a:	91 83       	std	Z+1, r25	; 0x01
    552c:	80 83       	st	Z, r24
    552e:	65 c0       	rjmp	.+202    	; 0x55fa <main+0x1390>
	else if (__tmp > 65535)
    5530:	fe 01       	movw	r30, r28
    5532:	ef 5e       	subi	r30, 0xEF	; 239
    5534:	fe 4f       	sbci	r31, 0xFE	; 254
    5536:	60 81       	ld	r22, Z
    5538:	71 81       	ldd	r23, Z+1	; 0x01
    553a:	82 81       	ldd	r24, Z+2	; 0x02
    553c:	93 81       	ldd	r25, Z+3	; 0x03
    553e:	20 e0       	ldi	r18, 0x00	; 0
    5540:	3f ef       	ldi	r19, 0xFF	; 255
    5542:	4f e7       	ldi	r20, 0x7F	; 127
    5544:	57 e4       	ldi	r21, 0x47	; 71
    5546:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    554a:	18 16       	cp	r1, r24
    554c:	0c f0       	brlt	.+2      	; 0x5550 <main+0x12e6>
    554e:	44 c0       	rjmp	.+136    	; 0x55d8 <main+0x136e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5550:	fe 01       	movw	r30, r28
    5552:	eb 5e       	subi	r30, 0xEB	; 235
    5554:	fe 4f       	sbci	r31, 0xFE	; 254
    5556:	60 81       	ld	r22, Z
    5558:	71 81       	ldd	r23, Z+1	; 0x01
    555a:	82 81       	ldd	r24, Z+2	; 0x02
    555c:	93 81       	ldd	r25, Z+3	; 0x03
    555e:	20 e0       	ldi	r18, 0x00	; 0
    5560:	30 e0       	ldi	r19, 0x00	; 0
    5562:	40 e2       	ldi	r20, 0x20	; 32
    5564:	51 e4       	ldi	r21, 0x41	; 65
    5566:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    556a:	dc 01       	movw	r26, r24
    556c:	cb 01       	movw	r24, r22
    556e:	8e 01       	movw	r16, r28
    5570:	01 5f       	subi	r16, 0xF1	; 241
    5572:	1e 4f       	sbci	r17, 0xFE	; 254
    5574:	bc 01       	movw	r22, r24
    5576:	cd 01       	movw	r24, r26
    5578:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    557c:	dc 01       	movw	r26, r24
    557e:	cb 01       	movw	r24, r22
    5580:	f8 01       	movw	r30, r16
    5582:	91 83       	std	Z+1, r25	; 0x01
    5584:	80 83       	st	Z, r24
    5586:	1f c0       	rjmp	.+62     	; 0x55c6 <main+0x135c>
    5588:	fe 01       	movw	r30, r28
    558a:	e3 5f       	subi	r30, 0xF3	; 243
    558c:	fe 4f       	sbci	r31, 0xFE	; 254
    558e:	88 ec       	ldi	r24, 0xC8	; 200
    5590:	90 e0       	ldi	r25, 0x00	; 0
    5592:	91 83       	std	Z+1, r25	; 0x01
    5594:	80 83       	st	Z, r24
    5596:	fe 01       	movw	r30, r28
    5598:	e3 5f       	subi	r30, 0xF3	; 243
    559a:	fe 4f       	sbci	r31, 0xFE	; 254
    559c:	80 81       	ld	r24, Z
    559e:	91 81       	ldd	r25, Z+1	; 0x01
    55a0:	01 97       	sbiw	r24, 0x01	; 1
    55a2:	f1 f7       	brne	.-4      	; 0x55a0 <main+0x1336>
    55a4:	fe 01       	movw	r30, r28
    55a6:	e3 5f       	subi	r30, 0xF3	; 243
    55a8:	fe 4f       	sbci	r31, 0xFE	; 254
    55aa:	91 83       	std	Z+1, r25	; 0x01
    55ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55ae:	de 01       	movw	r26, r28
    55b0:	a1 5f       	subi	r26, 0xF1	; 241
    55b2:	be 4f       	sbci	r27, 0xFE	; 254
    55b4:	fe 01       	movw	r30, r28
    55b6:	e1 5f       	subi	r30, 0xF1	; 241
    55b8:	fe 4f       	sbci	r31, 0xFE	; 254
    55ba:	80 81       	ld	r24, Z
    55bc:	91 81       	ldd	r25, Z+1	; 0x01
    55be:	01 97       	sbiw	r24, 0x01	; 1
    55c0:	11 96       	adiw	r26, 0x01	; 1
    55c2:	9c 93       	st	X, r25
    55c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55c6:	fe 01       	movw	r30, r28
    55c8:	e1 5f       	subi	r30, 0xF1	; 241
    55ca:	fe 4f       	sbci	r31, 0xFE	; 254
    55cc:	80 81       	ld	r24, Z
    55ce:	91 81       	ldd	r25, Z+1	; 0x01
    55d0:	00 97       	sbiw	r24, 0x00	; 0
    55d2:	d1 f6       	brne	.-76     	; 0x5588 <main+0x131e>
    55d4:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55d8:	8e 01       	movw	r16, r28
    55da:	01 5f       	subi	r16, 0xF1	; 241
    55dc:	1e 4f       	sbci	r17, 0xFE	; 254
    55de:	fe 01       	movw	r30, r28
    55e0:	ef 5e       	subi	r30, 0xEF	; 239
    55e2:	fe 4f       	sbci	r31, 0xFE	; 254
    55e4:	60 81       	ld	r22, Z
    55e6:	71 81       	ldd	r23, Z+1	; 0x01
    55e8:	82 81       	ldd	r24, Z+2	; 0x02
    55ea:	93 81       	ldd	r25, Z+3	; 0x03
    55ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    55f0:	dc 01       	movw	r26, r24
    55f2:	cb 01       	movw	r24, r22
    55f4:	f8 01       	movw	r30, r16
    55f6:	91 83       	std	Z+1, r25	; 0x01
    55f8:	80 83       	st	Z, r24
    55fa:	de 01       	movw	r26, r28
    55fc:	a5 5f       	subi	r26, 0xF5	; 245
    55fe:	be 4f       	sbci	r27, 0xFE	; 254
    5600:	fe 01       	movw	r30, r28
    5602:	e1 5f       	subi	r30, 0xF1	; 241
    5604:	fe 4f       	sbci	r31, 0xFE	; 254
    5606:	80 81       	ld	r24, Z
    5608:	91 81       	ldd	r25, Z+1	; 0x01
    560a:	11 96       	adiw	r26, 0x01	; 1
    560c:	9c 93       	st	X, r25
    560e:	8e 93       	st	-X, r24
    5610:	fe 01       	movw	r30, r28
    5612:	e5 5f       	subi	r30, 0xF5	; 245
    5614:	fe 4f       	sbci	r31, 0xFE	; 254
    5616:	80 81       	ld	r24, Z
    5618:	91 81       	ldd	r25, Z+1	; 0x01
    561a:	01 97       	sbiw	r24, 0x01	; 1
    561c:	f1 f7       	brne	.-4      	; 0x561a <main+0x13b0>
    561e:	fe 01       	movw	r30, r28
    5620:	e5 5f       	subi	r30, 0xF5	; 245
    5622:	fe 4f       	sbci	r31, 0xFE	; 254
    5624:	91 83       	std	Z+1, r25	; 0x01
    5626:	80 83       	st	Z, r24
    5628:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '#':
					Lcd_vidSendCommand(loc);
    562c:	80 91 19 01 	lds	r24, 0x0119
    5630:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('l');
    5634:	8c e6       	ldi	r24, 0x6C	; 108
    5636:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    563a:	80 91 19 01 	lds	r24, 0x0119
    563e:	8f 5f       	subi	r24, 0xFF	; 255
    5640:	80 93 19 01 	sts	0x0119, r24
					id[j]='l';
    5644:	80 91 1c 01 	lds	r24, 0x011C
    5648:	88 2f       	mov	r24, r24
    564a:	90 e0       	ldi	r25, 0x00	; 0
    564c:	fc 01       	movw	r30, r24
    564e:	eb 5d       	subi	r30, 0xDB	; 219
    5650:	fe 4f       	sbci	r31, 0xFE	; 254
    5652:	8c e6       	ldi	r24, 0x6C	; 108
    5654:	80 83       	st	Z, r24
					j++;
    5656:	80 91 1c 01 	lds	r24, 0x011C
    565a:	8f 5f       	subi	r24, 0xFF	; 255
    565c:	80 93 1c 01 	sts	0x011C, r24
    5660:	fe 01       	movw	r30, r28
    5662:	e9 5f       	subi	r30, 0xF9	; 249
    5664:	fe 4f       	sbci	r31, 0xFE	; 254
    5666:	80 e0       	ldi	r24, 0x00	; 0
    5668:	90 e0       	ldi	r25, 0x00	; 0
    566a:	a8 e4       	ldi	r26, 0x48	; 72
    566c:	b3 e4       	ldi	r27, 0x43	; 67
    566e:	80 83       	st	Z, r24
    5670:	91 83       	std	Z+1, r25	; 0x01
    5672:	a2 83       	std	Z+2, r26	; 0x02
    5674:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5676:	8e 01       	movw	r16, r28
    5678:	0d 5f       	subi	r16, 0xFD	; 253
    567a:	1e 4f       	sbci	r17, 0xFE	; 254
    567c:	fe 01       	movw	r30, r28
    567e:	e9 5f       	subi	r30, 0xF9	; 249
    5680:	fe 4f       	sbci	r31, 0xFE	; 254
    5682:	60 81       	ld	r22, Z
    5684:	71 81       	ldd	r23, Z+1	; 0x01
    5686:	82 81       	ldd	r24, Z+2	; 0x02
    5688:	93 81       	ldd	r25, Z+3	; 0x03
    568a:	20 e0       	ldi	r18, 0x00	; 0
    568c:	30 e0       	ldi	r19, 0x00	; 0
    568e:	4a ef       	ldi	r20, 0xFA	; 250
    5690:	54 e4       	ldi	r21, 0x44	; 68
    5692:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5696:	dc 01       	movw	r26, r24
    5698:	cb 01       	movw	r24, r22
    569a:	f8 01       	movw	r30, r16
    569c:	80 83       	st	Z, r24
    569e:	91 83       	std	Z+1, r25	; 0x01
    56a0:	a2 83       	std	Z+2, r26	; 0x02
    56a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    56a4:	fe 01       	movw	r30, r28
    56a6:	ed 5f       	subi	r30, 0xFD	; 253
    56a8:	fe 4f       	sbci	r31, 0xFE	; 254
    56aa:	60 81       	ld	r22, Z
    56ac:	71 81       	ldd	r23, Z+1	; 0x01
    56ae:	82 81       	ldd	r24, Z+2	; 0x02
    56b0:	93 81       	ldd	r25, Z+3	; 0x03
    56b2:	20 e0       	ldi	r18, 0x00	; 0
    56b4:	30 e0       	ldi	r19, 0x00	; 0
    56b6:	40 e8       	ldi	r20, 0x80	; 128
    56b8:	5f e3       	ldi	r21, 0x3F	; 63
    56ba:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    56be:	88 23       	and	r24, r24
    56c0:	44 f4       	brge	.+16     	; 0x56d2 <main+0x1468>
		__ticks = 1;
    56c2:	fe 01       	movw	r30, r28
    56c4:	ef 5f       	subi	r30, 0xFF	; 255
    56c6:	fe 4f       	sbci	r31, 0xFE	; 254
    56c8:	81 e0       	ldi	r24, 0x01	; 1
    56ca:	90 e0       	ldi	r25, 0x00	; 0
    56cc:	91 83       	std	Z+1, r25	; 0x01
    56ce:	80 83       	st	Z, r24
    56d0:	65 c0       	rjmp	.+202    	; 0x579c <main+0x1532>
	else if (__tmp > 65535)
    56d2:	fe 01       	movw	r30, r28
    56d4:	ed 5f       	subi	r30, 0xFD	; 253
    56d6:	fe 4f       	sbci	r31, 0xFE	; 254
    56d8:	60 81       	ld	r22, Z
    56da:	71 81       	ldd	r23, Z+1	; 0x01
    56dc:	82 81       	ldd	r24, Z+2	; 0x02
    56de:	93 81       	ldd	r25, Z+3	; 0x03
    56e0:	20 e0       	ldi	r18, 0x00	; 0
    56e2:	3f ef       	ldi	r19, 0xFF	; 255
    56e4:	4f e7       	ldi	r20, 0x7F	; 127
    56e6:	57 e4       	ldi	r21, 0x47	; 71
    56e8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    56ec:	18 16       	cp	r1, r24
    56ee:	0c f0       	brlt	.+2      	; 0x56f2 <main+0x1488>
    56f0:	44 c0       	rjmp	.+136    	; 0x577a <main+0x1510>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    56f2:	fe 01       	movw	r30, r28
    56f4:	e9 5f       	subi	r30, 0xF9	; 249
    56f6:	fe 4f       	sbci	r31, 0xFE	; 254
    56f8:	60 81       	ld	r22, Z
    56fa:	71 81       	ldd	r23, Z+1	; 0x01
    56fc:	82 81       	ldd	r24, Z+2	; 0x02
    56fe:	93 81       	ldd	r25, Z+3	; 0x03
    5700:	20 e0       	ldi	r18, 0x00	; 0
    5702:	30 e0       	ldi	r19, 0x00	; 0
    5704:	40 e2       	ldi	r20, 0x20	; 32
    5706:	51 e4       	ldi	r21, 0x41	; 65
    5708:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    570c:	dc 01       	movw	r26, r24
    570e:	cb 01       	movw	r24, r22
    5710:	8e 01       	movw	r16, r28
    5712:	0f 5f       	subi	r16, 0xFF	; 255
    5714:	1e 4f       	sbci	r17, 0xFE	; 254
    5716:	bc 01       	movw	r22, r24
    5718:	cd 01       	movw	r24, r26
    571a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    571e:	dc 01       	movw	r26, r24
    5720:	cb 01       	movw	r24, r22
    5722:	f8 01       	movw	r30, r16
    5724:	91 83       	std	Z+1, r25	; 0x01
    5726:	80 83       	st	Z, r24
    5728:	1f c0       	rjmp	.+62     	; 0x5768 <main+0x14fe>
    572a:	fe 01       	movw	r30, r28
    572c:	e1 50       	subi	r30, 0x01	; 1
    572e:	ff 4f       	sbci	r31, 0xFF	; 255
    5730:	88 ec       	ldi	r24, 0xC8	; 200
    5732:	90 e0       	ldi	r25, 0x00	; 0
    5734:	91 83       	std	Z+1, r25	; 0x01
    5736:	80 83       	st	Z, r24
    5738:	fe 01       	movw	r30, r28
    573a:	e1 50       	subi	r30, 0x01	; 1
    573c:	ff 4f       	sbci	r31, 0xFF	; 255
    573e:	80 81       	ld	r24, Z
    5740:	91 81       	ldd	r25, Z+1	; 0x01
    5742:	01 97       	sbiw	r24, 0x01	; 1
    5744:	f1 f7       	brne	.-4      	; 0x5742 <main+0x14d8>
    5746:	fe 01       	movw	r30, r28
    5748:	e1 50       	subi	r30, 0x01	; 1
    574a:	ff 4f       	sbci	r31, 0xFF	; 255
    574c:	91 83       	std	Z+1, r25	; 0x01
    574e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5750:	de 01       	movw	r26, r28
    5752:	af 5f       	subi	r26, 0xFF	; 255
    5754:	be 4f       	sbci	r27, 0xFE	; 254
    5756:	fe 01       	movw	r30, r28
    5758:	ef 5f       	subi	r30, 0xFF	; 255
    575a:	fe 4f       	sbci	r31, 0xFE	; 254
    575c:	80 81       	ld	r24, Z
    575e:	91 81       	ldd	r25, Z+1	; 0x01
    5760:	01 97       	sbiw	r24, 0x01	; 1
    5762:	11 96       	adiw	r26, 0x01	; 1
    5764:	9c 93       	st	X, r25
    5766:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5768:	fe 01       	movw	r30, r28
    576a:	ef 5f       	subi	r30, 0xFF	; 255
    576c:	fe 4f       	sbci	r31, 0xFE	; 254
    576e:	80 81       	ld	r24, Z
    5770:	91 81       	ldd	r25, Z+1	; 0x01
    5772:	00 97       	sbiw	r24, 0x00	; 0
    5774:	d1 f6       	brne	.-76     	; 0x572a <main+0x14c0>
    5776:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    577a:	8e 01       	movw	r16, r28
    577c:	0f 5f       	subi	r16, 0xFF	; 255
    577e:	1e 4f       	sbci	r17, 0xFE	; 254
    5780:	fe 01       	movw	r30, r28
    5782:	ed 5f       	subi	r30, 0xFD	; 253
    5784:	fe 4f       	sbci	r31, 0xFE	; 254
    5786:	60 81       	ld	r22, Z
    5788:	71 81       	ldd	r23, Z+1	; 0x01
    578a:	82 81       	ldd	r24, Z+2	; 0x02
    578c:	93 81       	ldd	r25, Z+3	; 0x03
    578e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5792:	dc 01       	movw	r26, r24
    5794:	cb 01       	movw	r24, r22
    5796:	f8 01       	movw	r30, r16
    5798:	91 83       	std	Z+1, r25	; 0x01
    579a:	80 83       	st	Z, r24
    579c:	de 01       	movw	r26, r28
    579e:	a3 50       	subi	r26, 0x03	; 3
    57a0:	bf 4f       	sbci	r27, 0xFF	; 255
    57a2:	fe 01       	movw	r30, r28
    57a4:	ef 5f       	subi	r30, 0xFF	; 255
    57a6:	fe 4f       	sbci	r31, 0xFE	; 254
    57a8:	80 81       	ld	r24, Z
    57aa:	91 81       	ldd	r25, Z+1	; 0x01
    57ac:	11 96       	adiw	r26, 0x01	; 1
    57ae:	9c 93       	st	X, r25
    57b0:	8e 93       	st	-X, r24
    57b2:	fe 01       	movw	r30, r28
    57b4:	e3 50       	subi	r30, 0x03	; 3
    57b6:	ff 4f       	sbci	r31, 0xFF	; 255
    57b8:	80 81       	ld	r24, Z
    57ba:	91 81       	ldd	r25, Z+1	; 0x01
    57bc:	01 97       	sbiw	r24, 0x01	; 1
    57be:	f1 f7       	brne	.-4      	; 0x57bc <main+0x1552>
    57c0:	fe 01       	movw	r30, r28
    57c2:	e3 50       	subi	r30, 0x03	; 3
    57c4:	ff 4f       	sbci	r31, 0xFF	; 255
    57c6:	91 83       	std	Z+1, r25	; 0x01
    57c8:	80 83       	st	Z, r24
    57ca:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '-':
					Lcd_vidSendCommand(loc);
    57ce:	80 91 19 01 	lds	r24, 0x0119
    57d2:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('m');
    57d6:	8d e6       	ldi	r24, 0x6D	; 109
    57d8:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    57dc:	80 91 19 01 	lds	r24, 0x0119
    57e0:	8f 5f       	subi	r24, 0xFF	; 255
    57e2:	80 93 19 01 	sts	0x0119, r24
					id[j]='m';
    57e6:	80 91 1c 01 	lds	r24, 0x011C
    57ea:	88 2f       	mov	r24, r24
    57ec:	90 e0       	ldi	r25, 0x00	; 0
    57ee:	fc 01       	movw	r30, r24
    57f0:	eb 5d       	subi	r30, 0xDB	; 219
    57f2:	fe 4f       	sbci	r31, 0xFE	; 254
    57f4:	8d e6       	ldi	r24, 0x6D	; 109
    57f6:	80 83       	st	Z, r24
					j++;
    57f8:	80 91 1c 01 	lds	r24, 0x011C
    57fc:	8f 5f       	subi	r24, 0xFF	; 255
    57fe:	80 93 1c 01 	sts	0x011C, r24
    5802:	fe 01       	movw	r30, r28
    5804:	e7 50       	subi	r30, 0x07	; 7
    5806:	ff 4f       	sbci	r31, 0xFF	; 255
    5808:	80 e0       	ldi	r24, 0x00	; 0
    580a:	90 e0       	ldi	r25, 0x00	; 0
    580c:	a8 e4       	ldi	r26, 0x48	; 72
    580e:	b3 e4       	ldi	r27, 0x43	; 67
    5810:	80 83       	st	Z, r24
    5812:	91 83       	std	Z+1, r25	; 0x01
    5814:	a2 83       	std	Z+2, r26	; 0x02
    5816:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5818:	8e 01       	movw	r16, r28
    581a:	0b 50       	subi	r16, 0x0B	; 11
    581c:	1f 4f       	sbci	r17, 0xFF	; 255
    581e:	fe 01       	movw	r30, r28
    5820:	e7 50       	subi	r30, 0x07	; 7
    5822:	ff 4f       	sbci	r31, 0xFF	; 255
    5824:	60 81       	ld	r22, Z
    5826:	71 81       	ldd	r23, Z+1	; 0x01
    5828:	82 81       	ldd	r24, Z+2	; 0x02
    582a:	93 81       	ldd	r25, Z+3	; 0x03
    582c:	20 e0       	ldi	r18, 0x00	; 0
    582e:	30 e0       	ldi	r19, 0x00	; 0
    5830:	4a ef       	ldi	r20, 0xFA	; 250
    5832:	54 e4       	ldi	r21, 0x44	; 68
    5834:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5838:	dc 01       	movw	r26, r24
    583a:	cb 01       	movw	r24, r22
    583c:	f8 01       	movw	r30, r16
    583e:	80 83       	st	Z, r24
    5840:	91 83       	std	Z+1, r25	; 0x01
    5842:	a2 83       	std	Z+2, r26	; 0x02
    5844:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5846:	fe 01       	movw	r30, r28
    5848:	eb 50       	subi	r30, 0x0B	; 11
    584a:	ff 4f       	sbci	r31, 0xFF	; 255
    584c:	60 81       	ld	r22, Z
    584e:	71 81       	ldd	r23, Z+1	; 0x01
    5850:	82 81       	ldd	r24, Z+2	; 0x02
    5852:	93 81       	ldd	r25, Z+3	; 0x03
    5854:	20 e0       	ldi	r18, 0x00	; 0
    5856:	30 e0       	ldi	r19, 0x00	; 0
    5858:	40 e8       	ldi	r20, 0x80	; 128
    585a:	5f e3       	ldi	r21, 0x3F	; 63
    585c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5860:	88 23       	and	r24, r24
    5862:	44 f4       	brge	.+16     	; 0x5874 <main+0x160a>
		__ticks = 1;
    5864:	fe 01       	movw	r30, r28
    5866:	ed 50       	subi	r30, 0x0D	; 13
    5868:	ff 4f       	sbci	r31, 0xFF	; 255
    586a:	81 e0       	ldi	r24, 0x01	; 1
    586c:	90 e0       	ldi	r25, 0x00	; 0
    586e:	91 83       	std	Z+1, r25	; 0x01
    5870:	80 83       	st	Z, r24
    5872:	65 c0       	rjmp	.+202    	; 0x593e <main+0x16d4>
	else if (__tmp > 65535)
    5874:	fe 01       	movw	r30, r28
    5876:	eb 50       	subi	r30, 0x0B	; 11
    5878:	ff 4f       	sbci	r31, 0xFF	; 255
    587a:	60 81       	ld	r22, Z
    587c:	71 81       	ldd	r23, Z+1	; 0x01
    587e:	82 81       	ldd	r24, Z+2	; 0x02
    5880:	93 81       	ldd	r25, Z+3	; 0x03
    5882:	20 e0       	ldi	r18, 0x00	; 0
    5884:	3f ef       	ldi	r19, 0xFF	; 255
    5886:	4f e7       	ldi	r20, 0x7F	; 127
    5888:	57 e4       	ldi	r21, 0x47	; 71
    588a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    588e:	18 16       	cp	r1, r24
    5890:	0c f0       	brlt	.+2      	; 0x5894 <main+0x162a>
    5892:	44 c0       	rjmp	.+136    	; 0x591c <main+0x16b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5894:	fe 01       	movw	r30, r28
    5896:	e7 50       	subi	r30, 0x07	; 7
    5898:	ff 4f       	sbci	r31, 0xFF	; 255
    589a:	60 81       	ld	r22, Z
    589c:	71 81       	ldd	r23, Z+1	; 0x01
    589e:	82 81       	ldd	r24, Z+2	; 0x02
    58a0:	93 81       	ldd	r25, Z+3	; 0x03
    58a2:	20 e0       	ldi	r18, 0x00	; 0
    58a4:	30 e0       	ldi	r19, 0x00	; 0
    58a6:	40 e2       	ldi	r20, 0x20	; 32
    58a8:	51 e4       	ldi	r21, 0x41	; 65
    58aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    58ae:	dc 01       	movw	r26, r24
    58b0:	cb 01       	movw	r24, r22
    58b2:	8e 01       	movw	r16, r28
    58b4:	0d 50       	subi	r16, 0x0D	; 13
    58b6:	1f 4f       	sbci	r17, 0xFF	; 255
    58b8:	bc 01       	movw	r22, r24
    58ba:	cd 01       	movw	r24, r26
    58bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    58c0:	dc 01       	movw	r26, r24
    58c2:	cb 01       	movw	r24, r22
    58c4:	f8 01       	movw	r30, r16
    58c6:	91 83       	std	Z+1, r25	; 0x01
    58c8:	80 83       	st	Z, r24
    58ca:	1f c0       	rjmp	.+62     	; 0x590a <main+0x16a0>
    58cc:	fe 01       	movw	r30, r28
    58ce:	ef 50       	subi	r30, 0x0F	; 15
    58d0:	ff 4f       	sbci	r31, 0xFF	; 255
    58d2:	88 ec       	ldi	r24, 0xC8	; 200
    58d4:	90 e0       	ldi	r25, 0x00	; 0
    58d6:	91 83       	std	Z+1, r25	; 0x01
    58d8:	80 83       	st	Z, r24
    58da:	fe 01       	movw	r30, r28
    58dc:	ef 50       	subi	r30, 0x0F	; 15
    58de:	ff 4f       	sbci	r31, 0xFF	; 255
    58e0:	80 81       	ld	r24, Z
    58e2:	91 81       	ldd	r25, Z+1	; 0x01
    58e4:	01 97       	sbiw	r24, 0x01	; 1
    58e6:	f1 f7       	brne	.-4      	; 0x58e4 <main+0x167a>
    58e8:	fe 01       	movw	r30, r28
    58ea:	ef 50       	subi	r30, 0x0F	; 15
    58ec:	ff 4f       	sbci	r31, 0xFF	; 255
    58ee:	91 83       	std	Z+1, r25	; 0x01
    58f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    58f2:	de 01       	movw	r26, r28
    58f4:	ad 50       	subi	r26, 0x0D	; 13
    58f6:	bf 4f       	sbci	r27, 0xFF	; 255
    58f8:	fe 01       	movw	r30, r28
    58fa:	ed 50       	subi	r30, 0x0D	; 13
    58fc:	ff 4f       	sbci	r31, 0xFF	; 255
    58fe:	80 81       	ld	r24, Z
    5900:	91 81       	ldd	r25, Z+1	; 0x01
    5902:	01 97       	sbiw	r24, 0x01	; 1
    5904:	11 96       	adiw	r26, 0x01	; 1
    5906:	9c 93       	st	X, r25
    5908:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    590a:	fe 01       	movw	r30, r28
    590c:	ed 50       	subi	r30, 0x0D	; 13
    590e:	ff 4f       	sbci	r31, 0xFF	; 255
    5910:	80 81       	ld	r24, Z
    5912:	91 81       	ldd	r25, Z+1	; 0x01
    5914:	00 97       	sbiw	r24, 0x00	; 0
    5916:	d1 f6       	brne	.-76     	; 0x58cc <main+0x1662>
    5918:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    591c:	8e 01       	movw	r16, r28
    591e:	0d 50       	subi	r16, 0x0D	; 13
    5920:	1f 4f       	sbci	r17, 0xFF	; 255
    5922:	fe 01       	movw	r30, r28
    5924:	eb 50       	subi	r30, 0x0B	; 11
    5926:	ff 4f       	sbci	r31, 0xFF	; 255
    5928:	60 81       	ld	r22, Z
    592a:	71 81       	ldd	r23, Z+1	; 0x01
    592c:	82 81       	ldd	r24, Z+2	; 0x02
    592e:	93 81       	ldd	r25, Z+3	; 0x03
    5930:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5934:	dc 01       	movw	r26, r24
    5936:	cb 01       	movw	r24, r22
    5938:	f8 01       	movw	r30, r16
    593a:	91 83       	std	Z+1, r25	; 0x01
    593c:	80 83       	st	Z, r24
    593e:	de 01       	movw	r26, r28
    5940:	a1 51       	subi	r26, 0x11	; 17
    5942:	bf 4f       	sbci	r27, 0xFF	; 255
    5944:	fe 01       	movw	r30, r28
    5946:	ed 50       	subi	r30, 0x0D	; 13
    5948:	ff 4f       	sbci	r31, 0xFF	; 255
    594a:	80 81       	ld	r24, Z
    594c:	91 81       	ldd	r25, Z+1	; 0x01
    594e:	11 96       	adiw	r26, 0x01	; 1
    5950:	9c 93       	st	X, r25
    5952:	8e 93       	st	-X, r24
    5954:	fe 01       	movw	r30, r28
    5956:	e1 51       	subi	r30, 0x11	; 17
    5958:	ff 4f       	sbci	r31, 0xFF	; 255
    595a:	80 81       	ld	r24, Z
    595c:	91 81       	ldd	r25, Z+1	; 0x01
    595e:	01 97       	sbiw	r24, 0x01	; 1
    5960:	f1 f7       	brne	.-4      	; 0x595e <main+0x16f4>
    5962:	fe 01       	movw	r30, r28
    5964:	e1 51       	subi	r30, 0x11	; 17
    5966:	ff 4f       	sbci	r31, 0xFF	; 255
    5968:	91 83       	std	Z+1, r25	; 0x01
    596a:	80 83       	st	Z, r24
    596c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '*':
					Lcd_vidSendCommand(loc);
    5970:	80 91 19 01 	lds	r24, 0x0119
    5974:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('n');
    5978:	8e e6       	ldi	r24, 0x6E	; 110
    597a:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    597e:	80 91 19 01 	lds	r24, 0x0119
    5982:	8f 5f       	subi	r24, 0xFF	; 255
    5984:	80 93 19 01 	sts	0x0119, r24
					id[j]='n';
    5988:	80 91 1c 01 	lds	r24, 0x011C
    598c:	88 2f       	mov	r24, r24
    598e:	90 e0       	ldi	r25, 0x00	; 0
    5990:	fc 01       	movw	r30, r24
    5992:	eb 5d       	subi	r30, 0xDB	; 219
    5994:	fe 4f       	sbci	r31, 0xFE	; 254
    5996:	8e e6       	ldi	r24, 0x6E	; 110
    5998:	80 83       	st	Z, r24
					j++;
    599a:	80 91 1c 01 	lds	r24, 0x011C
    599e:	8f 5f       	subi	r24, 0xFF	; 255
    59a0:	80 93 1c 01 	sts	0x011C, r24
    59a4:	fe 01       	movw	r30, r28
    59a6:	e5 51       	subi	r30, 0x15	; 21
    59a8:	ff 4f       	sbci	r31, 0xFF	; 255
    59aa:	80 e0       	ldi	r24, 0x00	; 0
    59ac:	90 e0       	ldi	r25, 0x00	; 0
    59ae:	a8 e4       	ldi	r26, 0x48	; 72
    59b0:	b3 e4       	ldi	r27, 0x43	; 67
    59b2:	80 83       	st	Z, r24
    59b4:	91 83       	std	Z+1, r25	; 0x01
    59b6:	a2 83       	std	Z+2, r26	; 0x02
    59b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    59ba:	8e 01       	movw	r16, r28
    59bc:	09 51       	subi	r16, 0x19	; 25
    59be:	1f 4f       	sbci	r17, 0xFF	; 255
    59c0:	fe 01       	movw	r30, r28
    59c2:	e5 51       	subi	r30, 0x15	; 21
    59c4:	ff 4f       	sbci	r31, 0xFF	; 255
    59c6:	60 81       	ld	r22, Z
    59c8:	71 81       	ldd	r23, Z+1	; 0x01
    59ca:	82 81       	ldd	r24, Z+2	; 0x02
    59cc:	93 81       	ldd	r25, Z+3	; 0x03
    59ce:	20 e0       	ldi	r18, 0x00	; 0
    59d0:	30 e0       	ldi	r19, 0x00	; 0
    59d2:	4a ef       	ldi	r20, 0xFA	; 250
    59d4:	54 e4       	ldi	r21, 0x44	; 68
    59d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    59da:	dc 01       	movw	r26, r24
    59dc:	cb 01       	movw	r24, r22
    59de:	f8 01       	movw	r30, r16
    59e0:	80 83       	st	Z, r24
    59e2:	91 83       	std	Z+1, r25	; 0x01
    59e4:	a2 83       	std	Z+2, r26	; 0x02
    59e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    59e8:	fe 01       	movw	r30, r28
    59ea:	e9 51       	subi	r30, 0x19	; 25
    59ec:	ff 4f       	sbci	r31, 0xFF	; 255
    59ee:	60 81       	ld	r22, Z
    59f0:	71 81       	ldd	r23, Z+1	; 0x01
    59f2:	82 81       	ldd	r24, Z+2	; 0x02
    59f4:	93 81       	ldd	r25, Z+3	; 0x03
    59f6:	20 e0       	ldi	r18, 0x00	; 0
    59f8:	30 e0       	ldi	r19, 0x00	; 0
    59fa:	40 e8       	ldi	r20, 0x80	; 128
    59fc:	5f e3       	ldi	r21, 0x3F	; 63
    59fe:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5a02:	88 23       	and	r24, r24
    5a04:	44 f4       	brge	.+16     	; 0x5a16 <main+0x17ac>
		__ticks = 1;
    5a06:	fe 01       	movw	r30, r28
    5a08:	eb 51       	subi	r30, 0x1B	; 27
    5a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    5a0c:	81 e0       	ldi	r24, 0x01	; 1
    5a0e:	90 e0       	ldi	r25, 0x00	; 0
    5a10:	91 83       	std	Z+1, r25	; 0x01
    5a12:	80 83       	st	Z, r24
    5a14:	65 c0       	rjmp	.+202    	; 0x5ae0 <main+0x1876>
	else if (__tmp > 65535)
    5a16:	fe 01       	movw	r30, r28
    5a18:	e9 51       	subi	r30, 0x19	; 25
    5a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    5a1c:	60 81       	ld	r22, Z
    5a1e:	71 81       	ldd	r23, Z+1	; 0x01
    5a20:	82 81       	ldd	r24, Z+2	; 0x02
    5a22:	93 81       	ldd	r25, Z+3	; 0x03
    5a24:	20 e0       	ldi	r18, 0x00	; 0
    5a26:	3f ef       	ldi	r19, 0xFF	; 255
    5a28:	4f e7       	ldi	r20, 0x7F	; 127
    5a2a:	57 e4       	ldi	r21, 0x47	; 71
    5a2c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5a30:	18 16       	cp	r1, r24
    5a32:	0c f0       	brlt	.+2      	; 0x5a36 <main+0x17cc>
    5a34:	44 c0       	rjmp	.+136    	; 0x5abe <main+0x1854>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a36:	fe 01       	movw	r30, r28
    5a38:	e5 51       	subi	r30, 0x15	; 21
    5a3a:	ff 4f       	sbci	r31, 0xFF	; 255
    5a3c:	60 81       	ld	r22, Z
    5a3e:	71 81       	ldd	r23, Z+1	; 0x01
    5a40:	82 81       	ldd	r24, Z+2	; 0x02
    5a42:	93 81       	ldd	r25, Z+3	; 0x03
    5a44:	20 e0       	ldi	r18, 0x00	; 0
    5a46:	30 e0       	ldi	r19, 0x00	; 0
    5a48:	40 e2       	ldi	r20, 0x20	; 32
    5a4a:	51 e4       	ldi	r21, 0x41	; 65
    5a4c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5a50:	dc 01       	movw	r26, r24
    5a52:	cb 01       	movw	r24, r22
    5a54:	8e 01       	movw	r16, r28
    5a56:	0b 51       	subi	r16, 0x1B	; 27
    5a58:	1f 4f       	sbci	r17, 0xFF	; 255
    5a5a:	bc 01       	movw	r22, r24
    5a5c:	cd 01       	movw	r24, r26
    5a5e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a62:	dc 01       	movw	r26, r24
    5a64:	cb 01       	movw	r24, r22
    5a66:	f8 01       	movw	r30, r16
    5a68:	91 83       	std	Z+1, r25	; 0x01
    5a6a:	80 83       	st	Z, r24
    5a6c:	1f c0       	rjmp	.+62     	; 0x5aac <main+0x1842>
    5a6e:	fe 01       	movw	r30, r28
    5a70:	ed 51       	subi	r30, 0x1D	; 29
    5a72:	ff 4f       	sbci	r31, 0xFF	; 255
    5a74:	88 ec       	ldi	r24, 0xC8	; 200
    5a76:	90 e0       	ldi	r25, 0x00	; 0
    5a78:	91 83       	std	Z+1, r25	; 0x01
    5a7a:	80 83       	st	Z, r24
    5a7c:	fe 01       	movw	r30, r28
    5a7e:	ed 51       	subi	r30, 0x1D	; 29
    5a80:	ff 4f       	sbci	r31, 0xFF	; 255
    5a82:	80 81       	ld	r24, Z
    5a84:	91 81       	ldd	r25, Z+1	; 0x01
    5a86:	01 97       	sbiw	r24, 0x01	; 1
    5a88:	f1 f7       	brne	.-4      	; 0x5a86 <main+0x181c>
    5a8a:	fe 01       	movw	r30, r28
    5a8c:	ed 51       	subi	r30, 0x1D	; 29
    5a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a90:	91 83       	std	Z+1, r25	; 0x01
    5a92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a94:	de 01       	movw	r26, r28
    5a96:	ab 51       	subi	r26, 0x1B	; 27
    5a98:	bf 4f       	sbci	r27, 0xFF	; 255
    5a9a:	fe 01       	movw	r30, r28
    5a9c:	eb 51       	subi	r30, 0x1B	; 27
    5a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa0:	80 81       	ld	r24, Z
    5aa2:	91 81       	ldd	r25, Z+1	; 0x01
    5aa4:	01 97       	sbiw	r24, 0x01	; 1
    5aa6:	11 96       	adiw	r26, 0x01	; 1
    5aa8:	9c 93       	st	X, r25
    5aaa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5aac:	fe 01       	movw	r30, r28
    5aae:	eb 51       	subi	r30, 0x1B	; 27
    5ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ab2:	80 81       	ld	r24, Z
    5ab4:	91 81       	ldd	r25, Z+1	; 0x01
    5ab6:	00 97       	sbiw	r24, 0x00	; 0
    5ab8:	d1 f6       	brne	.-76     	; 0x5a6e <main+0x1804>
    5aba:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5abe:	8e 01       	movw	r16, r28
    5ac0:	0b 51       	subi	r16, 0x1B	; 27
    5ac2:	1f 4f       	sbci	r17, 0xFF	; 255
    5ac4:	fe 01       	movw	r30, r28
    5ac6:	e9 51       	subi	r30, 0x19	; 25
    5ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    5aca:	60 81       	ld	r22, Z
    5acc:	71 81       	ldd	r23, Z+1	; 0x01
    5ace:	82 81       	ldd	r24, Z+2	; 0x02
    5ad0:	93 81       	ldd	r25, Z+3	; 0x03
    5ad2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5ad6:	dc 01       	movw	r26, r24
    5ad8:	cb 01       	movw	r24, r22
    5ada:	f8 01       	movw	r30, r16
    5adc:	91 83       	std	Z+1, r25	; 0x01
    5ade:	80 83       	st	Z, r24
    5ae0:	de 01       	movw	r26, r28
    5ae2:	af 51       	subi	r26, 0x1F	; 31
    5ae4:	bf 4f       	sbci	r27, 0xFF	; 255
    5ae6:	fe 01       	movw	r30, r28
    5ae8:	eb 51       	subi	r30, 0x1B	; 27
    5aea:	ff 4f       	sbci	r31, 0xFF	; 255
    5aec:	80 81       	ld	r24, Z
    5aee:	91 81       	ldd	r25, Z+1	; 0x01
    5af0:	11 96       	adiw	r26, 0x01	; 1
    5af2:	9c 93       	st	X, r25
    5af4:	8e 93       	st	-X, r24
    5af6:	fe 01       	movw	r30, r28
    5af8:	ef 51       	subi	r30, 0x1F	; 31
    5afa:	ff 4f       	sbci	r31, 0xFF	; 255
    5afc:	80 81       	ld	r24, Z
    5afe:	91 81       	ldd	r25, Z+1	; 0x01
    5b00:	01 97       	sbiw	r24, 0x01	; 1
    5b02:	f1 f7       	brne	.-4      	; 0x5b00 <main+0x1896>
    5b04:	fe 01       	movw	r30, r28
    5b06:	ef 51       	subi	r30, 0x1F	; 31
    5b08:	ff 4f       	sbci	r31, 0xFF	; 255
    5b0a:	91 83       	std	Z+1, r25	; 0x01
    5b0c:	80 83       	st	Z, r24
    5b0e:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '/':
					Lcd_vidSendCommand(loc);
    5b12:	80 91 19 01 	lds	r24, 0x0119
    5b16:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar('o');
    5b1a:	8f e6       	ldi	r24, 0x6F	; 111
    5b1c:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc++;
    5b20:	80 91 19 01 	lds	r24, 0x0119
    5b24:	8f 5f       	subi	r24, 0xFF	; 255
    5b26:	80 93 19 01 	sts	0x0119, r24
					id[j]='o';
    5b2a:	80 91 1c 01 	lds	r24, 0x011C
    5b2e:	88 2f       	mov	r24, r24
    5b30:	90 e0       	ldi	r25, 0x00	; 0
    5b32:	fc 01       	movw	r30, r24
    5b34:	eb 5d       	subi	r30, 0xDB	; 219
    5b36:	fe 4f       	sbci	r31, 0xFE	; 254
    5b38:	8f e6       	ldi	r24, 0x6F	; 111
    5b3a:	80 83       	st	Z, r24
					j++;
    5b3c:	80 91 1c 01 	lds	r24, 0x011C
    5b40:	8f 5f       	subi	r24, 0xFF	; 255
    5b42:	80 93 1c 01 	sts	0x011C, r24
    5b46:	fe 01       	movw	r30, r28
    5b48:	e3 52       	subi	r30, 0x23	; 35
    5b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b4c:	80 e0       	ldi	r24, 0x00	; 0
    5b4e:	90 e0       	ldi	r25, 0x00	; 0
    5b50:	a8 e4       	ldi	r26, 0x48	; 72
    5b52:	b3 e4       	ldi	r27, 0x43	; 67
    5b54:	80 83       	st	Z, r24
    5b56:	91 83       	std	Z+1, r25	; 0x01
    5b58:	a2 83       	std	Z+2, r26	; 0x02
    5b5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b5c:	8e 01       	movw	r16, r28
    5b5e:	07 52       	subi	r16, 0x27	; 39
    5b60:	1f 4f       	sbci	r17, 0xFF	; 255
    5b62:	fe 01       	movw	r30, r28
    5b64:	e3 52       	subi	r30, 0x23	; 35
    5b66:	ff 4f       	sbci	r31, 0xFF	; 255
    5b68:	60 81       	ld	r22, Z
    5b6a:	71 81       	ldd	r23, Z+1	; 0x01
    5b6c:	82 81       	ldd	r24, Z+2	; 0x02
    5b6e:	93 81       	ldd	r25, Z+3	; 0x03
    5b70:	20 e0       	ldi	r18, 0x00	; 0
    5b72:	30 e0       	ldi	r19, 0x00	; 0
    5b74:	4a ef       	ldi	r20, 0xFA	; 250
    5b76:	54 e4       	ldi	r21, 0x44	; 68
    5b78:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5b7c:	dc 01       	movw	r26, r24
    5b7e:	cb 01       	movw	r24, r22
    5b80:	f8 01       	movw	r30, r16
    5b82:	80 83       	st	Z, r24
    5b84:	91 83       	std	Z+1, r25	; 0x01
    5b86:	a2 83       	std	Z+2, r26	; 0x02
    5b88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5b8a:	fe 01       	movw	r30, r28
    5b8c:	e7 52       	subi	r30, 0x27	; 39
    5b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    5b90:	60 81       	ld	r22, Z
    5b92:	71 81       	ldd	r23, Z+1	; 0x01
    5b94:	82 81       	ldd	r24, Z+2	; 0x02
    5b96:	93 81       	ldd	r25, Z+3	; 0x03
    5b98:	20 e0       	ldi	r18, 0x00	; 0
    5b9a:	30 e0       	ldi	r19, 0x00	; 0
    5b9c:	40 e8       	ldi	r20, 0x80	; 128
    5b9e:	5f e3       	ldi	r21, 0x3F	; 63
    5ba0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5ba4:	88 23       	and	r24, r24
    5ba6:	44 f4       	brge	.+16     	; 0x5bb8 <main+0x194e>
		__ticks = 1;
    5ba8:	fe 01       	movw	r30, r28
    5baa:	e9 52       	subi	r30, 0x29	; 41
    5bac:	ff 4f       	sbci	r31, 0xFF	; 255
    5bae:	81 e0       	ldi	r24, 0x01	; 1
    5bb0:	90 e0       	ldi	r25, 0x00	; 0
    5bb2:	91 83       	std	Z+1, r25	; 0x01
    5bb4:	80 83       	st	Z, r24
    5bb6:	65 c0       	rjmp	.+202    	; 0x5c82 <main+0x1a18>
	else if (__tmp > 65535)
    5bb8:	fe 01       	movw	r30, r28
    5bba:	e7 52       	subi	r30, 0x27	; 39
    5bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    5bbe:	60 81       	ld	r22, Z
    5bc0:	71 81       	ldd	r23, Z+1	; 0x01
    5bc2:	82 81       	ldd	r24, Z+2	; 0x02
    5bc4:	93 81       	ldd	r25, Z+3	; 0x03
    5bc6:	20 e0       	ldi	r18, 0x00	; 0
    5bc8:	3f ef       	ldi	r19, 0xFF	; 255
    5bca:	4f e7       	ldi	r20, 0x7F	; 127
    5bcc:	57 e4       	ldi	r21, 0x47	; 71
    5bce:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5bd2:	18 16       	cp	r1, r24
    5bd4:	0c f0       	brlt	.+2      	; 0x5bd8 <main+0x196e>
    5bd6:	44 c0       	rjmp	.+136    	; 0x5c60 <main+0x19f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5bd8:	fe 01       	movw	r30, r28
    5bda:	e3 52       	subi	r30, 0x23	; 35
    5bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    5bde:	60 81       	ld	r22, Z
    5be0:	71 81       	ldd	r23, Z+1	; 0x01
    5be2:	82 81       	ldd	r24, Z+2	; 0x02
    5be4:	93 81       	ldd	r25, Z+3	; 0x03
    5be6:	20 e0       	ldi	r18, 0x00	; 0
    5be8:	30 e0       	ldi	r19, 0x00	; 0
    5bea:	40 e2       	ldi	r20, 0x20	; 32
    5bec:	51 e4       	ldi	r21, 0x41	; 65
    5bee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5bf2:	dc 01       	movw	r26, r24
    5bf4:	cb 01       	movw	r24, r22
    5bf6:	8e 01       	movw	r16, r28
    5bf8:	09 52       	subi	r16, 0x29	; 41
    5bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    5bfc:	bc 01       	movw	r22, r24
    5bfe:	cd 01       	movw	r24, r26
    5c00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c04:	dc 01       	movw	r26, r24
    5c06:	cb 01       	movw	r24, r22
    5c08:	f8 01       	movw	r30, r16
    5c0a:	91 83       	std	Z+1, r25	; 0x01
    5c0c:	80 83       	st	Z, r24
    5c0e:	1f c0       	rjmp	.+62     	; 0x5c4e <main+0x19e4>
    5c10:	fe 01       	movw	r30, r28
    5c12:	eb 52       	subi	r30, 0x2B	; 43
    5c14:	ff 4f       	sbci	r31, 0xFF	; 255
    5c16:	88 ec       	ldi	r24, 0xC8	; 200
    5c18:	90 e0       	ldi	r25, 0x00	; 0
    5c1a:	91 83       	std	Z+1, r25	; 0x01
    5c1c:	80 83       	st	Z, r24
    5c1e:	fe 01       	movw	r30, r28
    5c20:	eb 52       	subi	r30, 0x2B	; 43
    5c22:	ff 4f       	sbci	r31, 0xFF	; 255
    5c24:	80 81       	ld	r24, Z
    5c26:	91 81       	ldd	r25, Z+1	; 0x01
    5c28:	01 97       	sbiw	r24, 0x01	; 1
    5c2a:	f1 f7       	brne	.-4      	; 0x5c28 <main+0x19be>
    5c2c:	fe 01       	movw	r30, r28
    5c2e:	eb 52       	subi	r30, 0x2B	; 43
    5c30:	ff 4f       	sbci	r31, 0xFF	; 255
    5c32:	91 83       	std	Z+1, r25	; 0x01
    5c34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5c36:	de 01       	movw	r26, r28
    5c38:	a9 52       	subi	r26, 0x29	; 41
    5c3a:	bf 4f       	sbci	r27, 0xFF	; 255
    5c3c:	fe 01       	movw	r30, r28
    5c3e:	e9 52       	subi	r30, 0x29	; 41
    5c40:	ff 4f       	sbci	r31, 0xFF	; 255
    5c42:	80 81       	ld	r24, Z
    5c44:	91 81       	ldd	r25, Z+1	; 0x01
    5c46:	01 97       	sbiw	r24, 0x01	; 1
    5c48:	11 96       	adiw	r26, 0x01	; 1
    5c4a:	9c 93       	st	X, r25
    5c4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5c4e:	fe 01       	movw	r30, r28
    5c50:	e9 52       	subi	r30, 0x29	; 41
    5c52:	ff 4f       	sbci	r31, 0xFF	; 255
    5c54:	80 81       	ld	r24, Z
    5c56:	91 81       	ldd	r25, Z+1	; 0x01
    5c58:	00 97       	sbiw	r24, 0x00	; 0
    5c5a:	d1 f6       	brne	.-76     	; 0x5c10 <main+0x19a6>
    5c5c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c60:	8e 01       	movw	r16, r28
    5c62:	09 52       	subi	r16, 0x29	; 41
    5c64:	1f 4f       	sbci	r17, 0xFF	; 255
    5c66:	fe 01       	movw	r30, r28
    5c68:	e7 52       	subi	r30, 0x27	; 39
    5c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    5c6c:	60 81       	ld	r22, Z
    5c6e:	71 81       	ldd	r23, Z+1	; 0x01
    5c70:	82 81       	ldd	r24, Z+2	; 0x02
    5c72:	93 81       	ldd	r25, Z+3	; 0x03
    5c74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c78:	dc 01       	movw	r26, r24
    5c7a:	cb 01       	movw	r24, r22
    5c7c:	f8 01       	movw	r30, r16
    5c7e:	91 83       	std	Z+1, r25	; 0x01
    5c80:	80 83       	st	Z, r24
    5c82:	de 01       	movw	r26, r28
    5c84:	ad 52       	subi	r26, 0x2D	; 45
    5c86:	bf 4f       	sbci	r27, 0xFF	; 255
    5c88:	fe 01       	movw	r30, r28
    5c8a:	e9 52       	subi	r30, 0x29	; 41
    5c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c8e:	80 81       	ld	r24, Z
    5c90:	91 81       	ldd	r25, Z+1	; 0x01
    5c92:	11 96       	adiw	r26, 0x01	; 1
    5c94:	9c 93       	st	X, r25
    5c96:	8e 93       	st	-X, r24
    5c98:	fe 01       	movw	r30, r28
    5c9a:	ed 52       	subi	r30, 0x2D	; 45
    5c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c9e:	80 81       	ld	r24, Z
    5ca0:	91 81       	ldd	r25, Z+1	; 0x01
    5ca2:	01 97       	sbiw	r24, 0x01	; 1
    5ca4:	f1 f7       	brne	.-4      	; 0x5ca2 <main+0x1a38>
    5ca6:	fe 01       	movw	r30, r28
    5ca8:	ed 52       	subi	r30, 0x2D	; 45
    5caa:	ff 4f       	sbci	r31, 0xFF	; 255
    5cac:	91 83       	std	Z+1, r25	; 0x01
    5cae:	80 83       	st	Z, r24
    5cb0:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				}

			}
			else if(key=='='){
    5cb4:	80 91 2a 01 	lds	r24, 0x012A
    5cb8:	8d 33       	cpi	r24, 0x3D	; 61
    5cba:	11 f0       	breq	.+4      	; 0x5cc0 <main+0x1a56>
    5cbc:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				Lcd_vidSendCommand(0x80);
    5cc0:	80 e8       	ldi	r24, 0x80	; 128
    5cc2:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
				for(i=0; i<16; i++){
    5cc6:	10 92 28 01 	sts	0x0128, r1
    5cca:	08 c0       	rjmp	.+16     	; 0x5cdc <main+0x1a72>
					Lcd_vidWriteChar(' ');
    5ccc:	80 e2       	ldi	r24, 0x20	; 32
    5cce:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
				}

			}
			else if(key=='='){
				Lcd_vidSendCommand(0x80);
				for(i=0; i<16; i++){
    5cd2:	80 91 28 01 	lds	r24, 0x0128
    5cd6:	8f 5f       	subi	r24, 0xFF	; 255
    5cd8:	80 93 28 01 	sts	0x0128, r24
    5cdc:	80 91 28 01 	lds	r24, 0x0128
    5ce0:	80 31       	cpi	r24, 0x10	; 16
    5ce2:	a0 f3       	brcs	.-24     	; 0x5ccc <main+0x1a62>
					Lcd_vidWriteChar(' ');
				}
				if(UserCheck(id,id1)==1){
    5ce4:	85 e2       	ldi	r24, 0x25	; 37
    5ce6:	91 e0       	ldi	r25, 0x01	; 1
    5ce8:	21 e0       	ldi	r18, 0x01	; 1
    5cea:	31 e0       	ldi	r19, 0x01	; 1
    5cec:	b9 01       	movw	r22, r18
    5cee:	0e 94 e4 3a 	call	0x75c8	; 0x75c8 <UserCheck>
    5cf2:	81 30       	cpi	r24, 0x01	; 1
    5cf4:	09 f0       	breq	.+2      	; 0x5cf8 <main+0x1a8e>
    5cf6:	c4 c0       	rjmp	.+392    	; 0x5e80 <main+0x1c16>
					passflag=1;
    5cf8:	81 e0       	ldi	r24, 0x01	; 1
    5cfa:	80 93 2b 01 	sts	0x012B, r24
					Lcd_vidSendCommand(0x01);
    5cfe:	81 e0       	ldi	r24, 0x01	; 1
    5d00:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidSendCommand(0x80);
    5d04:	80 e8       	ldi	r24, 0x80	; 128
    5d06:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidPrintStr("User 1");
    5d0a:	80 e6       	ldi	r24, 0x60	; 96
    5d0c:	90 e0       	ldi	r25, 0x00	; 0
    5d0e:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    5d12:	fe 01       	movw	r30, r28
    5d14:	e1 53       	subi	r30, 0x31	; 49
    5d16:	ff 4f       	sbci	r31, 0xFF	; 255
    5d18:	80 e0       	ldi	r24, 0x00	; 0
    5d1a:	90 e8       	ldi	r25, 0x80	; 128
    5d1c:	ab e3       	ldi	r26, 0x3B	; 59
    5d1e:	b5 e4       	ldi	r27, 0x45	; 69
    5d20:	80 83       	st	Z, r24
    5d22:	91 83       	std	Z+1, r25	; 0x01
    5d24:	a2 83       	std	Z+2, r26	; 0x02
    5d26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d28:	8e 01       	movw	r16, r28
    5d2a:	05 53       	subi	r16, 0x35	; 53
    5d2c:	1f 4f       	sbci	r17, 0xFF	; 255
    5d2e:	fe 01       	movw	r30, r28
    5d30:	e1 53       	subi	r30, 0x31	; 49
    5d32:	ff 4f       	sbci	r31, 0xFF	; 255
    5d34:	60 81       	ld	r22, Z
    5d36:	71 81       	ldd	r23, Z+1	; 0x01
    5d38:	82 81       	ldd	r24, Z+2	; 0x02
    5d3a:	93 81       	ldd	r25, Z+3	; 0x03
    5d3c:	20 e0       	ldi	r18, 0x00	; 0
    5d3e:	30 e0       	ldi	r19, 0x00	; 0
    5d40:	4a ef       	ldi	r20, 0xFA	; 250
    5d42:	54 e4       	ldi	r21, 0x44	; 68
    5d44:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5d48:	dc 01       	movw	r26, r24
    5d4a:	cb 01       	movw	r24, r22
    5d4c:	f8 01       	movw	r30, r16
    5d4e:	80 83       	st	Z, r24
    5d50:	91 83       	std	Z+1, r25	; 0x01
    5d52:	a2 83       	std	Z+2, r26	; 0x02
    5d54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5d56:	fe 01       	movw	r30, r28
    5d58:	e5 53       	subi	r30, 0x35	; 53
    5d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    5d5c:	60 81       	ld	r22, Z
    5d5e:	71 81       	ldd	r23, Z+1	; 0x01
    5d60:	82 81       	ldd	r24, Z+2	; 0x02
    5d62:	93 81       	ldd	r25, Z+3	; 0x03
    5d64:	20 e0       	ldi	r18, 0x00	; 0
    5d66:	30 e0       	ldi	r19, 0x00	; 0
    5d68:	40 e8       	ldi	r20, 0x80	; 128
    5d6a:	5f e3       	ldi	r21, 0x3F	; 63
    5d6c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5d70:	88 23       	and	r24, r24
    5d72:	44 f4       	brge	.+16     	; 0x5d84 <main+0x1b1a>
		__ticks = 1;
    5d74:	fe 01       	movw	r30, r28
    5d76:	e7 53       	subi	r30, 0x37	; 55
    5d78:	ff 4f       	sbci	r31, 0xFF	; 255
    5d7a:	81 e0       	ldi	r24, 0x01	; 1
    5d7c:	90 e0       	ldi	r25, 0x00	; 0
    5d7e:	91 83       	std	Z+1, r25	; 0x01
    5d80:	80 83       	st	Z, r24
    5d82:	64 c0       	rjmp	.+200    	; 0x5e4c <main+0x1be2>
	else if (__tmp > 65535)
    5d84:	fe 01       	movw	r30, r28
    5d86:	e5 53       	subi	r30, 0x35	; 53
    5d88:	ff 4f       	sbci	r31, 0xFF	; 255
    5d8a:	60 81       	ld	r22, Z
    5d8c:	71 81       	ldd	r23, Z+1	; 0x01
    5d8e:	82 81       	ldd	r24, Z+2	; 0x02
    5d90:	93 81       	ldd	r25, Z+3	; 0x03
    5d92:	20 e0       	ldi	r18, 0x00	; 0
    5d94:	3f ef       	ldi	r19, 0xFF	; 255
    5d96:	4f e7       	ldi	r20, 0x7F	; 127
    5d98:	57 e4       	ldi	r21, 0x47	; 71
    5d9a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5d9e:	18 16       	cp	r1, r24
    5da0:	0c f0       	brlt	.+2      	; 0x5da4 <main+0x1b3a>
    5da2:	43 c0       	rjmp	.+134    	; 0x5e2a <main+0x1bc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5da4:	fe 01       	movw	r30, r28
    5da6:	e1 53       	subi	r30, 0x31	; 49
    5da8:	ff 4f       	sbci	r31, 0xFF	; 255
    5daa:	60 81       	ld	r22, Z
    5dac:	71 81       	ldd	r23, Z+1	; 0x01
    5dae:	82 81       	ldd	r24, Z+2	; 0x02
    5db0:	93 81       	ldd	r25, Z+3	; 0x03
    5db2:	20 e0       	ldi	r18, 0x00	; 0
    5db4:	30 e0       	ldi	r19, 0x00	; 0
    5db6:	40 e2       	ldi	r20, 0x20	; 32
    5db8:	51 e4       	ldi	r21, 0x41	; 65
    5dba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5dbe:	dc 01       	movw	r26, r24
    5dc0:	cb 01       	movw	r24, r22
    5dc2:	8e 01       	movw	r16, r28
    5dc4:	07 53       	subi	r16, 0x37	; 55
    5dc6:	1f 4f       	sbci	r17, 0xFF	; 255
    5dc8:	bc 01       	movw	r22, r24
    5dca:	cd 01       	movw	r24, r26
    5dcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5dd0:	dc 01       	movw	r26, r24
    5dd2:	cb 01       	movw	r24, r22
    5dd4:	f8 01       	movw	r30, r16
    5dd6:	91 83       	std	Z+1, r25	; 0x01
    5dd8:	80 83       	st	Z, r24
    5dda:	1f c0       	rjmp	.+62     	; 0x5e1a <main+0x1bb0>
    5ddc:	fe 01       	movw	r30, r28
    5dde:	e9 53       	subi	r30, 0x39	; 57
    5de0:	ff 4f       	sbci	r31, 0xFF	; 255
    5de2:	88 ec       	ldi	r24, 0xC8	; 200
    5de4:	90 e0       	ldi	r25, 0x00	; 0
    5de6:	91 83       	std	Z+1, r25	; 0x01
    5de8:	80 83       	st	Z, r24
    5dea:	fe 01       	movw	r30, r28
    5dec:	e9 53       	subi	r30, 0x39	; 57
    5dee:	ff 4f       	sbci	r31, 0xFF	; 255
    5df0:	80 81       	ld	r24, Z
    5df2:	91 81       	ldd	r25, Z+1	; 0x01
    5df4:	01 97       	sbiw	r24, 0x01	; 1
    5df6:	f1 f7       	brne	.-4      	; 0x5df4 <main+0x1b8a>
    5df8:	fe 01       	movw	r30, r28
    5dfa:	e9 53       	subi	r30, 0x39	; 57
    5dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    5dfe:	91 83       	std	Z+1, r25	; 0x01
    5e00:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e02:	de 01       	movw	r26, r28
    5e04:	a7 53       	subi	r26, 0x37	; 55
    5e06:	bf 4f       	sbci	r27, 0xFF	; 255
    5e08:	fe 01       	movw	r30, r28
    5e0a:	e7 53       	subi	r30, 0x37	; 55
    5e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    5e0e:	80 81       	ld	r24, Z
    5e10:	91 81       	ldd	r25, Z+1	; 0x01
    5e12:	01 97       	sbiw	r24, 0x01	; 1
    5e14:	11 96       	adiw	r26, 0x01	; 1
    5e16:	9c 93       	st	X, r25
    5e18:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e1a:	fe 01       	movw	r30, r28
    5e1c:	e7 53       	subi	r30, 0x37	; 55
    5e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e20:	80 81       	ld	r24, Z
    5e22:	91 81       	ldd	r25, Z+1	; 0x01
    5e24:	00 97       	sbiw	r24, 0x00	; 0
    5e26:	d1 f6       	brne	.-76     	; 0x5ddc <main+0x1b72>
    5e28:	27 c0       	rjmp	.+78     	; 0x5e78 <main+0x1c0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5e2a:	8e 01       	movw	r16, r28
    5e2c:	07 53       	subi	r16, 0x37	; 55
    5e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    5e30:	fe 01       	movw	r30, r28
    5e32:	e5 53       	subi	r30, 0x35	; 53
    5e34:	ff 4f       	sbci	r31, 0xFF	; 255
    5e36:	60 81       	ld	r22, Z
    5e38:	71 81       	ldd	r23, Z+1	; 0x01
    5e3a:	82 81       	ldd	r24, Z+2	; 0x02
    5e3c:	93 81       	ldd	r25, Z+3	; 0x03
    5e3e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5e42:	dc 01       	movw	r26, r24
    5e44:	cb 01       	movw	r24, r22
    5e46:	f8 01       	movw	r30, r16
    5e48:	91 83       	std	Z+1, r25	; 0x01
    5e4a:	80 83       	st	Z, r24
    5e4c:	de 01       	movw	r26, r28
    5e4e:	ab 53       	subi	r26, 0x3B	; 59
    5e50:	bf 4f       	sbci	r27, 0xFF	; 255
    5e52:	fe 01       	movw	r30, r28
    5e54:	e7 53       	subi	r30, 0x37	; 55
    5e56:	ff 4f       	sbci	r31, 0xFF	; 255
    5e58:	80 81       	ld	r24, Z
    5e5a:	91 81       	ldd	r25, Z+1	; 0x01
    5e5c:	8d 93       	st	X+, r24
    5e5e:	9c 93       	st	X, r25
    5e60:	fe 01       	movw	r30, r28
    5e62:	eb 53       	subi	r30, 0x3B	; 59
    5e64:	ff 4f       	sbci	r31, 0xFF	; 255
    5e66:	80 81       	ld	r24, Z
    5e68:	91 81       	ldd	r25, Z+1	; 0x01
    5e6a:	01 97       	sbiw	r24, 0x01	; 1
    5e6c:	f1 f7       	brne	.-4      	; 0x5e6a <main+0x1c00>
    5e6e:	fe 01       	movw	r30, r28
    5e70:	eb 53       	subi	r30, 0x3B	; 59
    5e72:	ff 4f       	sbci	r31, 0xFF	; 255
    5e74:	91 83       	std	Z+1, r25	; 0x01
    5e76:	80 83       	st	Z, r24
					_delay_ms(3000);
					VerifiedUser();
    5e78:	0e 94 1d 3c 	call	0x783a	; 0x783a <VerifiedUser>
    5e7c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				}
				else if(UserCheck(id,id2)==1){
    5e80:	85 e2       	ldi	r24, 0x25	; 37
    5e82:	91 e0       	ldi	r25, 0x01	; 1
    5e84:	25 e0       	ldi	r18, 0x05	; 5
    5e86:	31 e0       	ldi	r19, 0x01	; 1
    5e88:	b9 01       	movw	r22, r18
    5e8a:	0e 94 e4 3a 	call	0x75c8	; 0x75c8 <UserCheck>
    5e8e:	81 30       	cpi	r24, 0x01	; 1
    5e90:	09 f0       	breq	.+2      	; 0x5e94 <main+0x1c2a>
    5e92:	c4 c0       	rjmp	.+392    	; 0x601c <main+0x1db2>
					passflag=2;
    5e94:	82 e0       	ldi	r24, 0x02	; 2
    5e96:	80 93 2b 01 	sts	0x012B, r24
					Lcd_vidSendCommand(0x01);
    5e9a:	81 e0       	ldi	r24, 0x01	; 1
    5e9c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidSendCommand(0x80);
    5ea0:	80 e8       	ldi	r24, 0x80	; 128
    5ea2:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidPrintStr("User 2");
    5ea6:	87 e6       	ldi	r24, 0x67	; 103
    5ea8:	90 e0       	ldi	r25, 0x00	; 0
    5eaa:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    5eae:	fe 01       	movw	r30, r28
    5eb0:	ef 53       	subi	r30, 0x3F	; 63
    5eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    5eb4:	80 e0       	ldi	r24, 0x00	; 0
    5eb6:	90 e8       	ldi	r25, 0x80	; 128
    5eb8:	ab e3       	ldi	r26, 0x3B	; 59
    5eba:	b5 e4       	ldi	r27, 0x45	; 69
    5ebc:	80 83       	st	Z, r24
    5ebe:	91 83       	std	Z+1, r25	; 0x01
    5ec0:	a2 83       	std	Z+2, r26	; 0x02
    5ec2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5ec4:	8e 01       	movw	r16, r28
    5ec6:	03 54       	subi	r16, 0x43	; 67
    5ec8:	1f 4f       	sbci	r17, 0xFF	; 255
    5eca:	fe 01       	movw	r30, r28
    5ecc:	ef 53       	subi	r30, 0x3F	; 63
    5ece:	ff 4f       	sbci	r31, 0xFF	; 255
    5ed0:	60 81       	ld	r22, Z
    5ed2:	71 81       	ldd	r23, Z+1	; 0x01
    5ed4:	82 81       	ldd	r24, Z+2	; 0x02
    5ed6:	93 81       	ldd	r25, Z+3	; 0x03
    5ed8:	20 e0       	ldi	r18, 0x00	; 0
    5eda:	30 e0       	ldi	r19, 0x00	; 0
    5edc:	4a ef       	ldi	r20, 0xFA	; 250
    5ede:	54 e4       	ldi	r21, 0x44	; 68
    5ee0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5ee4:	dc 01       	movw	r26, r24
    5ee6:	cb 01       	movw	r24, r22
    5ee8:	f8 01       	movw	r30, r16
    5eea:	80 83       	st	Z, r24
    5eec:	91 83       	std	Z+1, r25	; 0x01
    5eee:	a2 83       	std	Z+2, r26	; 0x02
    5ef0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ef2:	fe 01       	movw	r30, r28
    5ef4:	e3 54       	subi	r30, 0x43	; 67
    5ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ef8:	60 81       	ld	r22, Z
    5efa:	71 81       	ldd	r23, Z+1	; 0x01
    5efc:	82 81       	ldd	r24, Z+2	; 0x02
    5efe:	93 81       	ldd	r25, Z+3	; 0x03
    5f00:	20 e0       	ldi	r18, 0x00	; 0
    5f02:	30 e0       	ldi	r19, 0x00	; 0
    5f04:	40 e8       	ldi	r20, 0x80	; 128
    5f06:	5f e3       	ldi	r21, 0x3F	; 63
    5f08:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    5f0c:	88 23       	and	r24, r24
    5f0e:	44 f4       	brge	.+16     	; 0x5f20 <main+0x1cb6>
		__ticks = 1;
    5f10:	fe 01       	movw	r30, r28
    5f12:	e5 54       	subi	r30, 0x45	; 69
    5f14:	ff 4f       	sbci	r31, 0xFF	; 255
    5f16:	81 e0       	ldi	r24, 0x01	; 1
    5f18:	90 e0       	ldi	r25, 0x00	; 0
    5f1a:	91 83       	std	Z+1, r25	; 0x01
    5f1c:	80 83       	st	Z, r24
    5f1e:	64 c0       	rjmp	.+200    	; 0x5fe8 <main+0x1d7e>
	else if (__tmp > 65535)
    5f20:	fe 01       	movw	r30, r28
    5f22:	e3 54       	subi	r30, 0x43	; 67
    5f24:	ff 4f       	sbci	r31, 0xFF	; 255
    5f26:	60 81       	ld	r22, Z
    5f28:	71 81       	ldd	r23, Z+1	; 0x01
    5f2a:	82 81       	ldd	r24, Z+2	; 0x02
    5f2c:	93 81       	ldd	r25, Z+3	; 0x03
    5f2e:	20 e0       	ldi	r18, 0x00	; 0
    5f30:	3f ef       	ldi	r19, 0xFF	; 255
    5f32:	4f e7       	ldi	r20, 0x7F	; 127
    5f34:	57 e4       	ldi	r21, 0x47	; 71
    5f36:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    5f3a:	18 16       	cp	r1, r24
    5f3c:	0c f0       	brlt	.+2      	; 0x5f40 <main+0x1cd6>
    5f3e:	43 c0       	rjmp	.+134    	; 0x5fc6 <main+0x1d5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5f40:	fe 01       	movw	r30, r28
    5f42:	ef 53       	subi	r30, 0x3F	; 63
    5f44:	ff 4f       	sbci	r31, 0xFF	; 255
    5f46:	60 81       	ld	r22, Z
    5f48:	71 81       	ldd	r23, Z+1	; 0x01
    5f4a:	82 81       	ldd	r24, Z+2	; 0x02
    5f4c:	93 81       	ldd	r25, Z+3	; 0x03
    5f4e:	20 e0       	ldi	r18, 0x00	; 0
    5f50:	30 e0       	ldi	r19, 0x00	; 0
    5f52:	40 e2       	ldi	r20, 0x20	; 32
    5f54:	51 e4       	ldi	r21, 0x41	; 65
    5f56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5f5a:	dc 01       	movw	r26, r24
    5f5c:	cb 01       	movw	r24, r22
    5f5e:	8e 01       	movw	r16, r28
    5f60:	05 54       	subi	r16, 0x45	; 69
    5f62:	1f 4f       	sbci	r17, 0xFF	; 255
    5f64:	bc 01       	movw	r22, r24
    5f66:	cd 01       	movw	r24, r26
    5f68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5f6c:	dc 01       	movw	r26, r24
    5f6e:	cb 01       	movw	r24, r22
    5f70:	f8 01       	movw	r30, r16
    5f72:	91 83       	std	Z+1, r25	; 0x01
    5f74:	80 83       	st	Z, r24
    5f76:	1f c0       	rjmp	.+62     	; 0x5fb6 <main+0x1d4c>
    5f78:	fe 01       	movw	r30, r28
    5f7a:	e7 54       	subi	r30, 0x47	; 71
    5f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    5f7e:	88 ec       	ldi	r24, 0xC8	; 200
    5f80:	90 e0       	ldi	r25, 0x00	; 0
    5f82:	91 83       	std	Z+1, r25	; 0x01
    5f84:	80 83       	st	Z, r24
    5f86:	fe 01       	movw	r30, r28
    5f88:	e7 54       	subi	r30, 0x47	; 71
    5f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f8c:	80 81       	ld	r24, Z
    5f8e:	91 81       	ldd	r25, Z+1	; 0x01
    5f90:	01 97       	sbiw	r24, 0x01	; 1
    5f92:	f1 f7       	brne	.-4      	; 0x5f90 <main+0x1d26>
    5f94:	fe 01       	movw	r30, r28
    5f96:	e7 54       	subi	r30, 0x47	; 71
    5f98:	ff 4f       	sbci	r31, 0xFF	; 255
    5f9a:	91 83       	std	Z+1, r25	; 0x01
    5f9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f9e:	de 01       	movw	r26, r28
    5fa0:	a5 54       	subi	r26, 0x45	; 69
    5fa2:	bf 4f       	sbci	r27, 0xFF	; 255
    5fa4:	fe 01       	movw	r30, r28
    5fa6:	e5 54       	subi	r30, 0x45	; 69
    5fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    5faa:	80 81       	ld	r24, Z
    5fac:	91 81       	ldd	r25, Z+1	; 0x01
    5fae:	01 97       	sbiw	r24, 0x01	; 1
    5fb0:	11 96       	adiw	r26, 0x01	; 1
    5fb2:	9c 93       	st	X, r25
    5fb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5fb6:	fe 01       	movw	r30, r28
    5fb8:	e5 54       	subi	r30, 0x45	; 69
    5fba:	ff 4f       	sbci	r31, 0xFF	; 255
    5fbc:	80 81       	ld	r24, Z
    5fbe:	91 81       	ldd	r25, Z+1	; 0x01
    5fc0:	00 97       	sbiw	r24, 0x00	; 0
    5fc2:	d1 f6       	brne	.-76     	; 0x5f78 <main+0x1d0e>
    5fc4:	27 c0       	rjmp	.+78     	; 0x6014 <main+0x1daa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5fc6:	8e 01       	movw	r16, r28
    5fc8:	05 54       	subi	r16, 0x45	; 69
    5fca:	1f 4f       	sbci	r17, 0xFF	; 255
    5fcc:	fe 01       	movw	r30, r28
    5fce:	e3 54       	subi	r30, 0x43	; 67
    5fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    5fd2:	60 81       	ld	r22, Z
    5fd4:	71 81       	ldd	r23, Z+1	; 0x01
    5fd6:	82 81       	ldd	r24, Z+2	; 0x02
    5fd8:	93 81       	ldd	r25, Z+3	; 0x03
    5fda:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5fde:	dc 01       	movw	r26, r24
    5fe0:	cb 01       	movw	r24, r22
    5fe2:	f8 01       	movw	r30, r16
    5fe4:	91 83       	std	Z+1, r25	; 0x01
    5fe6:	80 83       	st	Z, r24
    5fe8:	de 01       	movw	r26, r28
    5fea:	a9 54       	subi	r26, 0x49	; 73
    5fec:	bf 4f       	sbci	r27, 0xFF	; 255
    5fee:	fe 01       	movw	r30, r28
    5ff0:	e5 54       	subi	r30, 0x45	; 69
    5ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ff4:	80 81       	ld	r24, Z
    5ff6:	91 81       	ldd	r25, Z+1	; 0x01
    5ff8:	8d 93       	st	X+, r24
    5ffa:	9c 93       	st	X, r25
    5ffc:	fe 01       	movw	r30, r28
    5ffe:	e9 54       	subi	r30, 0x49	; 73
    6000:	ff 4f       	sbci	r31, 0xFF	; 255
    6002:	80 81       	ld	r24, Z
    6004:	91 81       	ldd	r25, Z+1	; 0x01
    6006:	01 97       	sbiw	r24, 0x01	; 1
    6008:	f1 f7       	brne	.-4      	; 0x6006 <main+0x1d9c>
    600a:	fe 01       	movw	r30, r28
    600c:	e9 54       	subi	r30, 0x49	; 73
    600e:	ff 4f       	sbci	r31, 0xFF	; 255
    6010:	91 83       	std	Z+1, r25	; 0x01
    6012:	80 83       	st	Z, r24
					_delay_ms(3000);
					VerifiedUser();
    6014:	0e 94 1d 3c 	call	0x783a	; 0x783a <VerifiedUser>
    6018:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				}
				else if(UserCheck(id,id3)==1){
    601c:	85 e2       	ldi	r24, 0x25	; 37
    601e:	91 e0       	ldi	r25, 0x01	; 1
    6020:	29 e0       	ldi	r18, 0x09	; 9
    6022:	31 e0       	ldi	r19, 0x01	; 1
    6024:	b9 01       	movw	r22, r18
    6026:	0e 94 e4 3a 	call	0x75c8	; 0x75c8 <UserCheck>
    602a:	81 30       	cpi	r24, 0x01	; 1
    602c:	09 f0       	breq	.+2      	; 0x6030 <main+0x1dc6>
    602e:	c4 c0       	rjmp	.+392    	; 0x61b8 <main+0x1f4e>
					passflag=3;
    6030:	83 e0       	ldi	r24, 0x03	; 3
    6032:	80 93 2b 01 	sts	0x012B, r24
					Lcd_vidSendCommand(0x01);
    6036:	81 e0       	ldi	r24, 0x01	; 1
    6038:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidSendCommand(0x80);
    603c:	80 e8       	ldi	r24, 0x80	; 128
    603e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidPrintStr("User 3");
    6042:	8e e6       	ldi	r24, 0x6E	; 110
    6044:	90 e0       	ldi	r25, 0x00	; 0
    6046:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    604a:	fe 01       	movw	r30, r28
    604c:	ed 54       	subi	r30, 0x4D	; 77
    604e:	ff 4f       	sbci	r31, 0xFF	; 255
    6050:	80 e0       	ldi	r24, 0x00	; 0
    6052:	90 e8       	ldi	r25, 0x80	; 128
    6054:	ab e3       	ldi	r26, 0x3B	; 59
    6056:	b5 e4       	ldi	r27, 0x45	; 69
    6058:	80 83       	st	Z, r24
    605a:	91 83       	std	Z+1, r25	; 0x01
    605c:	a2 83       	std	Z+2, r26	; 0x02
    605e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6060:	8e 01       	movw	r16, r28
    6062:	01 55       	subi	r16, 0x51	; 81
    6064:	1f 4f       	sbci	r17, 0xFF	; 255
    6066:	fe 01       	movw	r30, r28
    6068:	ed 54       	subi	r30, 0x4D	; 77
    606a:	ff 4f       	sbci	r31, 0xFF	; 255
    606c:	60 81       	ld	r22, Z
    606e:	71 81       	ldd	r23, Z+1	; 0x01
    6070:	82 81       	ldd	r24, Z+2	; 0x02
    6072:	93 81       	ldd	r25, Z+3	; 0x03
    6074:	20 e0       	ldi	r18, 0x00	; 0
    6076:	30 e0       	ldi	r19, 0x00	; 0
    6078:	4a ef       	ldi	r20, 0xFA	; 250
    607a:	54 e4       	ldi	r21, 0x44	; 68
    607c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6080:	dc 01       	movw	r26, r24
    6082:	cb 01       	movw	r24, r22
    6084:	f8 01       	movw	r30, r16
    6086:	80 83       	st	Z, r24
    6088:	91 83       	std	Z+1, r25	; 0x01
    608a:	a2 83       	std	Z+2, r26	; 0x02
    608c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    608e:	fe 01       	movw	r30, r28
    6090:	e1 55       	subi	r30, 0x51	; 81
    6092:	ff 4f       	sbci	r31, 0xFF	; 255
    6094:	60 81       	ld	r22, Z
    6096:	71 81       	ldd	r23, Z+1	; 0x01
    6098:	82 81       	ldd	r24, Z+2	; 0x02
    609a:	93 81       	ldd	r25, Z+3	; 0x03
    609c:	20 e0       	ldi	r18, 0x00	; 0
    609e:	30 e0       	ldi	r19, 0x00	; 0
    60a0:	40 e8       	ldi	r20, 0x80	; 128
    60a2:	5f e3       	ldi	r21, 0x3F	; 63
    60a4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    60a8:	88 23       	and	r24, r24
    60aa:	44 f4       	brge	.+16     	; 0x60bc <main+0x1e52>
		__ticks = 1;
    60ac:	fe 01       	movw	r30, r28
    60ae:	e3 55       	subi	r30, 0x53	; 83
    60b0:	ff 4f       	sbci	r31, 0xFF	; 255
    60b2:	81 e0       	ldi	r24, 0x01	; 1
    60b4:	90 e0       	ldi	r25, 0x00	; 0
    60b6:	91 83       	std	Z+1, r25	; 0x01
    60b8:	80 83       	st	Z, r24
    60ba:	64 c0       	rjmp	.+200    	; 0x6184 <main+0x1f1a>
	else if (__tmp > 65535)
    60bc:	fe 01       	movw	r30, r28
    60be:	e1 55       	subi	r30, 0x51	; 81
    60c0:	ff 4f       	sbci	r31, 0xFF	; 255
    60c2:	60 81       	ld	r22, Z
    60c4:	71 81       	ldd	r23, Z+1	; 0x01
    60c6:	82 81       	ldd	r24, Z+2	; 0x02
    60c8:	93 81       	ldd	r25, Z+3	; 0x03
    60ca:	20 e0       	ldi	r18, 0x00	; 0
    60cc:	3f ef       	ldi	r19, 0xFF	; 255
    60ce:	4f e7       	ldi	r20, 0x7F	; 127
    60d0:	57 e4       	ldi	r21, 0x47	; 71
    60d2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    60d6:	18 16       	cp	r1, r24
    60d8:	0c f0       	brlt	.+2      	; 0x60dc <main+0x1e72>
    60da:	43 c0       	rjmp	.+134    	; 0x6162 <main+0x1ef8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    60dc:	fe 01       	movw	r30, r28
    60de:	ed 54       	subi	r30, 0x4D	; 77
    60e0:	ff 4f       	sbci	r31, 0xFF	; 255
    60e2:	60 81       	ld	r22, Z
    60e4:	71 81       	ldd	r23, Z+1	; 0x01
    60e6:	82 81       	ldd	r24, Z+2	; 0x02
    60e8:	93 81       	ldd	r25, Z+3	; 0x03
    60ea:	20 e0       	ldi	r18, 0x00	; 0
    60ec:	30 e0       	ldi	r19, 0x00	; 0
    60ee:	40 e2       	ldi	r20, 0x20	; 32
    60f0:	51 e4       	ldi	r21, 0x41	; 65
    60f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    60f6:	dc 01       	movw	r26, r24
    60f8:	cb 01       	movw	r24, r22
    60fa:	8e 01       	movw	r16, r28
    60fc:	03 55       	subi	r16, 0x53	; 83
    60fe:	1f 4f       	sbci	r17, 0xFF	; 255
    6100:	bc 01       	movw	r22, r24
    6102:	cd 01       	movw	r24, r26
    6104:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6108:	dc 01       	movw	r26, r24
    610a:	cb 01       	movw	r24, r22
    610c:	f8 01       	movw	r30, r16
    610e:	91 83       	std	Z+1, r25	; 0x01
    6110:	80 83       	st	Z, r24
    6112:	1f c0       	rjmp	.+62     	; 0x6152 <main+0x1ee8>
    6114:	fe 01       	movw	r30, r28
    6116:	e5 55       	subi	r30, 0x55	; 85
    6118:	ff 4f       	sbci	r31, 0xFF	; 255
    611a:	88 ec       	ldi	r24, 0xC8	; 200
    611c:	90 e0       	ldi	r25, 0x00	; 0
    611e:	91 83       	std	Z+1, r25	; 0x01
    6120:	80 83       	st	Z, r24
    6122:	fe 01       	movw	r30, r28
    6124:	e5 55       	subi	r30, 0x55	; 85
    6126:	ff 4f       	sbci	r31, 0xFF	; 255
    6128:	80 81       	ld	r24, Z
    612a:	91 81       	ldd	r25, Z+1	; 0x01
    612c:	01 97       	sbiw	r24, 0x01	; 1
    612e:	f1 f7       	brne	.-4      	; 0x612c <main+0x1ec2>
    6130:	fe 01       	movw	r30, r28
    6132:	e5 55       	subi	r30, 0x55	; 85
    6134:	ff 4f       	sbci	r31, 0xFF	; 255
    6136:	91 83       	std	Z+1, r25	; 0x01
    6138:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    613a:	de 01       	movw	r26, r28
    613c:	a3 55       	subi	r26, 0x53	; 83
    613e:	bf 4f       	sbci	r27, 0xFF	; 255
    6140:	fe 01       	movw	r30, r28
    6142:	e3 55       	subi	r30, 0x53	; 83
    6144:	ff 4f       	sbci	r31, 0xFF	; 255
    6146:	80 81       	ld	r24, Z
    6148:	91 81       	ldd	r25, Z+1	; 0x01
    614a:	01 97       	sbiw	r24, 0x01	; 1
    614c:	11 96       	adiw	r26, 0x01	; 1
    614e:	9c 93       	st	X, r25
    6150:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6152:	fe 01       	movw	r30, r28
    6154:	e3 55       	subi	r30, 0x53	; 83
    6156:	ff 4f       	sbci	r31, 0xFF	; 255
    6158:	80 81       	ld	r24, Z
    615a:	91 81       	ldd	r25, Z+1	; 0x01
    615c:	00 97       	sbiw	r24, 0x00	; 0
    615e:	d1 f6       	brne	.-76     	; 0x6114 <main+0x1eaa>
    6160:	27 c0       	rjmp	.+78     	; 0x61b0 <main+0x1f46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6162:	8e 01       	movw	r16, r28
    6164:	03 55       	subi	r16, 0x53	; 83
    6166:	1f 4f       	sbci	r17, 0xFF	; 255
    6168:	fe 01       	movw	r30, r28
    616a:	e1 55       	subi	r30, 0x51	; 81
    616c:	ff 4f       	sbci	r31, 0xFF	; 255
    616e:	60 81       	ld	r22, Z
    6170:	71 81       	ldd	r23, Z+1	; 0x01
    6172:	82 81       	ldd	r24, Z+2	; 0x02
    6174:	93 81       	ldd	r25, Z+3	; 0x03
    6176:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    617a:	dc 01       	movw	r26, r24
    617c:	cb 01       	movw	r24, r22
    617e:	f8 01       	movw	r30, r16
    6180:	91 83       	std	Z+1, r25	; 0x01
    6182:	80 83       	st	Z, r24
    6184:	de 01       	movw	r26, r28
    6186:	a7 55       	subi	r26, 0x57	; 87
    6188:	bf 4f       	sbci	r27, 0xFF	; 255
    618a:	fe 01       	movw	r30, r28
    618c:	e3 55       	subi	r30, 0x53	; 83
    618e:	ff 4f       	sbci	r31, 0xFF	; 255
    6190:	80 81       	ld	r24, Z
    6192:	91 81       	ldd	r25, Z+1	; 0x01
    6194:	8d 93       	st	X+, r24
    6196:	9c 93       	st	X, r25
    6198:	fe 01       	movw	r30, r28
    619a:	e7 55       	subi	r30, 0x57	; 87
    619c:	ff 4f       	sbci	r31, 0xFF	; 255
    619e:	80 81       	ld	r24, Z
    61a0:	91 81       	ldd	r25, Z+1	; 0x01
    61a2:	01 97       	sbiw	r24, 0x01	; 1
    61a4:	f1 f7       	brne	.-4      	; 0x61a2 <main+0x1f38>
    61a6:	fe 01       	movw	r30, r28
    61a8:	e7 55       	subi	r30, 0x57	; 87
    61aa:	ff 4f       	sbci	r31, 0xFF	; 255
    61ac:	91 83       	std	Z+1, r25	; 0x01
    61ae:	80 83       	st	Z, r24
					_delay_ms(3000);
					VerifiedUser();
    61b0:	0e 94 1d 3c 	call	0x783a	; 0x783a <VerifiedUser>
    61b4:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				}
				else {
					if(errorflag<3){
    61b8:	80 91 22 01 	lds	r24, 0x0122
    61bc:	83 30       	cpi	r24, 0x03	; 3
    61be:	08 f0       	brcs	.+2      	; 0x61c2 <main+0x1f58>
    61c0:	c2 c0       	rjmp	.+388    	; 0x6346 <main+0x20dc>

						//display: wrong username
						Lcd_vidSendCommand(0x80);
    61c2:	80 e8       	ldi	r24, 0x80	; 128
    61c4:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Wrong Username");
    61c8:	85 e7       	ldi	r24, 0x75	; 117
    61ca:	90 e0       	ldi	r25, 0x00	; 0
    61cc:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    61d0:	fe 01       	movw	r30, r28
    61d2:	eb 55       	subi	r30, 0x5B	; 91
    61d4:	ff 4f       	sbci	r31, 0xFF	; 255
    61d6:	80 e0       	ldi	r24, 0x00	; 0
    61d8:	90 e0       	ldi	r25, 0x00	; 0
    61da:	aa e7       	ldi	r26, 0x7A	; 122
    61dc:	b4 e4       	ldi	r27, 0x44	; 68
    61de:	80 83       	st	Z, r24
    61e0:	91 83       	std	Z+1, r25	; 0x01
    61e2:	a2 83       	std	Z+2, r26	; 0x02
    61e4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    61e6:	8e 01       	movw	r16, r28
    61e8:	0f 55       	subi	r16, 0x5F	; 95
    61ea:	1f 4f       	sbci	r17, 0xFF	; 255
    61ec:	fe 01       	movw	r30, r28
    61ee:	eb 55       	subi	r30, 0x5B	; 91
    61f0:	ff 4f       	sbci	r31, 0xFF	; 255
    61f2:	60 81       	ld	r22, Z
    61f4:	71 81       	ldd	r23, Z+1	; 0x01
    61f6:	82 81       	ldd	r24, Z+2	; 0x02
    61f8:	93 81       	ldd	r25, Z+3	; 0x03
    61fa:	20 e0       	ldi	r18, 0x00	; 0
    61fc:	30 e0       	ldi	r19, 0x00	; 0
    61fe:	4a ef       	ldi	r20, 0xFA	; 250
    6200:	54 e4       	ldi	r21, 0x44	; 68
    6202:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6206:	dc 01       	movw	r26, r24
    6208:	cb 01       	movw	r24, r22
    620a:	f8 01       	movw	r30, r16
    620c:	80 83       	st	Z, r24
    620e:	91 83       	std	Z+1, r25	; 0x01
    6210:	a2 83       	std	Z+2, r26	; 0x02
    6212:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6214:	fe 01       	movw	r30, r28
    6216:	ef 55       	subi	r30, 0x5F	; 95
    6218:	ff 4f       	sbci	r31, 0xFF	; 255
    621a:	60 81       	ld	r22, Z
    621c:	71 81       	ldd	r23, Z+1	; 0x01
    621e:	82 81       	ldd	r24, Z+2	; 0x02
    6220:	93 81       	ldd	r25, Z+3	; 0x03
    6222:	20 e0       	ldi	r18, 0x00	; 0
    6224:	30 e0       	ldi	r19, 0x00	; 0
    6226:	40 e8       	ldi	r20, 0x80	; 128
    6228:	5f e3       	ldi	r21, 0x3F	; 63
    622a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    622e:	88 23       	and	r24, r24
    6230:	44 f4       	brge	.+16     	; 0x6242 <main+0x1fd8>
		__ticks = 1;
    6232:	fe 01       	movw	r30, r28
    6234:	e1 56       	subi	r30, 0x61	; 97
    6236:	ff 4f       	sbci	r31, 0xFF	; 255
    6238:	81 e0       	ldi	r24, 0x01	; 1
    623a:	90 e0       	ldi	r25, 0x00	; 0
    623c:	91 83       	std	Z+1, r25	; 0x01
    623e:	80 83       	st	Z, r24
    6240:	64 c0       	rjmp	.+200    	; 0x630a <main+0x20a0>
	else if (__tmp > 65535)
    6242:	fe 01       	movw	r30, r28
    6244:	ef 55       	subi	r30, 0x5F	; 95
    6246:	ff 4f       	sbci	r31, 0xFF	; 255
    6248:	60 81       	ld	r22, Z
    624a:	71 81       	ldd	r23, Z+1	; 0x01
    624c:	82 81       	ldd	r24, Z+2	; 0x02
    624e:	93 81       	ldd	r25, Z+3	; 0x03
    6250:	20 e0       	ldi	r18, 0x00	; 0
    6252:	3f ef       	ldi	r19, 0xFF	; 255
    6254:	4f e7       	ldi	r20, 0x7F	; 127
    6256:	57 e4       	ldi	r21, 0x47	; 71
    6258:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    625c:	18 16       	cp	r1, r24
    625e:	0c f0       	brlt	.+2      	; 0x6262 <main+0x1ff8>
    6260:	43 c0       	rjmp	.+134    	; 0x62e8 <main+0x207e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6262:	fe 01       	movw	r30, r28
    6264:	eb 55       	subi	r30, 0x5B	; 91
    6266:	ff 4f       	sbci	r31, 0xFF	; 255
    6268:	60 81       	ld	r22, Z
    626a:	71 81       	ldd	r23, Z+1	; 0x01
    626c:	82 81       	ldd	r24, Z+2	; 0x02
    626e:	93 81       	ldd	r25, Z+3	; 0x03
    6270:	20 e0       	ldi	r18, 0x00	; 0
    6272:	30 e0       	ldi	r19, 0x00	; 0
    6274:	40 e2       	ldi	r20, 0x20	; 32
    6276:	51 e4       	ldi	r21, 0x41	; 65
    6278:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    627c:	dc 01       	movw	r26, r24
    627e:	cb 01       	movw	r24, r22
    6280:	8e 01       	movw	r16, r28
    6282:	01 56       	subi	r16, 0x61	; 97
    6284:	1f 4f       	sbci	r17, 0xFF	; 255
    6286:	bc 01       	movw	r22, r24
    6288:	cd 01       	movw	r24, r26
    628a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    628e:	dc 01       	movw	r26, r24
    6290:	cb 01       	movw	r24, r22
    6292:	f8 01       	movw	r30, r16
    6294:	91 83       	std	Z+1, r25	; 0x01
    6296:	80 83       	st	Z, r24
    6298:	1f c0       	rjmp	.+62     	; 0x62d8 <main+0x206e>
    629a:	fe 01       	movw	r30, r28
    629c:	e3 56       	subi	r30, 0x63	; 99
    629e:	ff 4f       	sbci	r31, 0xFF	; 255
    62a0:	88 ec       	ldi	r24, 0xC8	; 200
    62a2:	90 e0       	ldi	r25, 0x00	; 0
    62a4:	91 83       	std	Z+1, r25	; 0x01
    62a6:	80 83       	st	Z, r24
    62a8:	fe 01       	movw	r30, r28
    62aa:	e3 56       	subi	r30, 0x63	; 99
    62ac:	ff 4f       	sbci	r31, 0xFF	; 255
    62ae:	80 81       	ld	r24, Z
    62b0:	91 81       	ldd	r25, Z+1	; 0x01
    62b2:	01 97       	sbiw	r24, 0x01	; 1
    62b4:	f1 f7       	brne	.-4      	; 0x62b2 <main+0x2048>
    62b6:	fe 01       	movw	r30, r28
    62b8:	e3 56       	subi	r30, 0x63	; 99
    62ba:	ff 4f       	sbci	r31, 0xFF	; 255
    62bc:	91 83       	std	Z+1, r25	; 0x01
    62be:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    62c0:	de 01       	movw	r26, r28
    62c2:	a1 56       	subi	r26, 0x61	; 97
    62c4:	bf 4f       	sbci	r27, 0xFF	; 255
    62c6:	fe 01       	movw	r30, r28
    62c8:	e1 56       	subi	r30, 0x61	; 97
    62ca:	ff 4f       	sbci	r31, 0xFF	; 255
    62cc:	80 81       	ld	r24, Z
    62ce:	91 81       	ldd	r25, Z+1	; 0x01
    62d0:	01 97       	sbiw	r24, 0x01	; 1
    62d2:	11 96       	adiw	r26, 0x01	; 1
    62d4:	9c 93       	st	X, r25
    62d6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    62d8:	fe 01       	movw	r30, r28
    62da:	e1 56       	subi	r30, 0x61	; 97
    62dc:	ff 4f       	sbci	r31, 0xFF	; 255
    62de:	80 81       	ld	r24, Z
    62e0:	91 81       	ldd	r25, Z+1	; 0x01
    62e2:	00 97       	sbiw	r24, 0x00	; 0
    62e4:	d1 f6       	brne	.-76     	; 0x629a <main+0x2030>
    62e6:	28 c0       	rjmp	.+80     	; 0x6338 <main+0x20ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    62e8:	8e 01       	movw	r16, r28
    62ea:	01 56       	subi	r16, 0x61	; 97
    62ec:	1f 4f       	sbci	r17, 0xFF	; 255
    62ee:	fe 01       	movw	r30, r28
    62f0:	ef 55       	subi	r30, 0x5F	; 95
    62f2:	ff 4f       	sbci	r31, 0xFF	; 255
    62f4:	60 81       	ld	r22, Z
    62f6:	71 81       	ldd	r23, Z+1	; 0x01
    62f8:	82 81       	ldd	r24, Z+2	; 0x02
    62fa:	93 81       	ldd	r25, Z+3	; 0x03
    62fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6300:	dc 01       	movw	r26, r24
    6302:	cb 01       	movw	r24, r22
    6304:	f8 01       	movw	r30, r16
    6306:	91 83       	std	Z+1, r25	; 0x01
    6308:	80 83       	st	Z, r24
    630a:	de 01       	movw	r26, r28
    630c:	a5 56       	subi	r26, 0x65	; 101
    630e:	bf 4f       	sbci	r27, 0xFF	; 255
    6310:	fe 01       	movw	r30, r28
    6312:	e1 56       	subi	r30, 0x61	; 97
    6314:	ff 4f       	sbci	r31, 0xFF	; 255
    6316:	80 81       	ld	r24, Z
    6318:	91 81       	ldd	r25, Z+1	; 0x01
    631a:	11 96       	adiw	r26, 0x01	; 1
    631c:	9c 93       	st	X, r25
    631e:	8e 93       	st	-X, r24
    6320:	fe 01       	movw	r30, r28
    6322:	e5 56       	subi	r30, 0x65	; 101
    6324:	ff 4f       	sbci	r31, 0xFF	; 255
    6326:	80 81       	ld	r24, Z
    6328:	91 81       	ldd	r25, Z+1	; 0x01
    632a:	01 97       	sbiw	r24, 0x01	; 1
    632c:	f1 f7       	brne	.-4      	; 0x632a <main+0x20c0>
    632e:	fe 01       	movw	r30, r28
    6330:	e5 56       	subi	r30, 0x65	; 101
    6332:	ff 4f       	sbci	r31, 0xFF	; 255
    6334:	91 83       	std	Z+1, r25	; 0x01
    6336:	80 83       	st	Z, r24
						_delay_ms(1000);
						errorflag++;
    6338:	80 91 22 01 	lds	r24, 0x0122
    633c:	8f 5f       	subi	r24, 0xFF	; 255
    633e:	80 93 22 01 	sts	0x0122, r24
    6342:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>

					}
					else {
						errorflag=0;
    6346:	10 92 22 01 	sts	0x0122, r1
						Lcd_vidSendCommand(0x01);
    634a:	81 e0       	ldi	r24, 0x01	; 1
    634c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
    6350:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					}
				}

			}
		}
		else if(x==0){
    6354:	80 91 1e 01 	lds	r24, 0x011E
    6358:	88 23       	and	r24, r24
    635a:	11 f0       	breq	.+4      	; 0x6360 <main+0x20f6>
    635c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>

			if((key!='=')&&(key!=0xFF)){
    6360:	80 91 2a 01 	lds	r24, 0x012A
    6364:	8d 33       	cpi	r24, 0x3D	; 61
    6366:	09 f4       	brne	.+2      	; 0x636a <main+0x2100>
    6368:	19 c7       	rjmp	.+3634   	; 0x719c <main+0x2f32>
    636a:	80 91 2a 01 	lds	r24, 0x012A
    636e:	8f 3f       	cpi	r24, 0xFF	; 255
    6370:	09 f4       	brne	.+2      	; 0x6374 <main+0x210a>
    6372:	14 c7       	rjmp	.+3624   	; 0x719c <main+0x2f32>
				Lcd_vidSendCommand(loc2);
    6374:	80 91 1a 01 	lds	r24, 0x011A
    6378:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
				switch(key){
    637c:	80 91 2a 01 	lds	r24, 0x012A
    6380:	28 2f       	mov	r18, r24
    6382:	30 e0       	ldi	r19, 0x00	; 0
    6384:	c9 55       	subi	r28, 0x59	; 89
    6386:	de 4f       	sbci	r29, 0xFE	; 254
    6388:	39 83       	std	Y+1, r19	; 0x01
    638a:	28 83       	st	Y, r18
    638c:	c7 5a       	subi	r28, 0xA7	; 167
    638e:	d1 40       	sbci	r29, 0x01	; 1
    6390:	c9 55       	subi	r28, 0x59	; 89
    6392:	de 4f       	sbci	r29, 0xFE	; 254
    6394:	88 81       	ld	r24, Y
    6396:	99 81       	ldd	r25, Y+1	; 0x01
    6398:	c7 5a       	subi	r28, 0xA7	; 167
    639a:	d1 40       	sbci	r29, 0x01	; 1
    639c:	87 30       	cpi	r24, 0x07	; 7
    639e:	91 05       	cpc	r25, r1
    63a0:	09 f4       	brne	.+2      	; 0x63a4 <main+0x213a>
    63a2:	3e c3       	rjmp	.+1660   	; 0x6a20 <main+0x27b6>
    63a4:	c9 55       	subi	r28, 0x59	; 89
    63a6:	de 4f       	sbci	r29, 0xFE	; 254
    63a8:	e8 81       	ld	r30, Y
    63aa:	f9 81       	ldd	r31, Y+1	; 0x01
    63ac:	c7 5a       	subi	r28, 0xA7	; 167
    63ae:	d1 40       	sbci	r29, 0x01	; 1
    63b0:	e8 30       	cpi	r30, 0x08	; 8
    63b2:	f1 05       	cpc	r31, r1
    63b4:	0c f0       	brlt	.+2      	; 0x63b8 <main+0x214e>
    63b6:	47 c0       	rjmp	.+142    	; 0x6446 <main+0x21dc>
    63b8:	c9 55       	subi	r28, 0x59	; 89
    63ba:	de 4f       	sbci	r29, 0xFE	; 254
    63bc:	28 81       	ld	r18, Y
    63be:	39 81       	ldd	r19, Y+1	; 0x01
    63c0:	c7 5a       	subi	r28, 0xA7	; 167
    63c2:	d1 40       	sbci	r29, 0x01	; 1
    63c4:	23 30       	cpi	r18, 0x03	; 3
    63c6:	31 05       	cpc	r19, r1
    63c8:	09 f4       	brne	.+2      	; 0x63cc <main+0x2162>
    63ca:	44 c2       	rjmp	.+1160   	; 0x6854 <main+0x25ea>
    63cc:	c9 55       	subi	r28, 0x59	; 89
    63ce:	de 4f       	sbci	r29, 0xFE	; 254
    63d0:	88 81       	ld	r24, Y
    63d2:	99 81       	ldd	r25, Y+1	; 0x01
    63d4:	c7 5a       	subi	r28, 0xA7	; 167
    63d6:	d1 40       	sbci	r29, 0x01	; 1
    63d8:	84 30       	cpi	r24, 0x04	; 4
    63da:	91 05       	cpc	r25, r1
    63dc:	fc f4       	brge	.+62     	; 0x641c <main+0x21b2>
    63de:	c9 55       	subi	r28, 0x59	; 89
    63e0:	de 4f       	sbci	r29, 0xFE	; 254
    63e2:	e8 81       	ld	r30, Y
    63e4:	f9 81       	ldd	r31, Y+1	; 0x01
    63e6:	c7 5a       	subi	r28, 0xA7	; 167
    63e8:	d1 40       	sbci	r29, 0x01	; 1
    63ea:	e1 30       	cpi	r30, 0x01	; 1
    63ec:	f1 05       	cpc	r31, r1
    63ee:	09 f4       	brne	.+2      	; 0x63f2 <main+0x2188>
    63f0:	7d c0       	rjmp	.+250    	; 0x64ec <main+0x2282>
    63f2:	c9 55       	subi	r28, 0x59	; 89
    63f4:	de 4f       	sbci	r29, 0xFE	; 254
    63f6:	28 81       	ld	r18, Y
    63f8:	39 81       	ldd	r19, Y+1	; 0x01
    63fa:	c7 5a       	subi	r28, 0xA7	; 167
    63fc:	d1 40       	sbci	r29, 0x01	; 1
    63fe:	22 30       	cpi	r18, 0x02	; 2
    6400:	31 05       	cpc	r19, r1
    6402:	0c f0       	brlt	.+2      	; 0x6406 <main+0x219c>
    6404:	4d c1       	rjmp	.+666    	; 0x66a0 <main+0x2436>
    6406:	c9 55       	subi	r28, 0x59	; 89
    6408:	de 4f       	sbci	r29, 0xFE	; 254
    640a:	88 81       	ld	r24, Y
    640c:	99 81       	ldd	r25, Y+1	; 0x01
    640e:	c7 5a       	subi	r28, 0xA7	; 167
    6410:	d1 40       	sbci	r29, 0x01	; 1
    6412:	00 97       	sbiw	r24, 0x00	; 0
    6414:	09 f4       	brne	.+2      	; 0x6418 <main+0x21ae>
    6416:	e3 c3       	rjmp	.+1990   	; 0x6bde <main+0x2974>
    6418:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
    641c:	c9 55       	subi	r28, 0x59	; 89
    641e:	de 4f       	sbci	r29, 0xFE	; 254
    6420:	e8 81       	ld	r30, Y
    6422:	f9 81       	ldd	r31, Y+1	; 0x01
    6424:	c7 5a       	subi	r28, 0xA7	; 167
    6426:	d1 40       	sbci	r29, 0x01	; 1
    6428:	e5 30       	cpi	r30, 0x05	; 5
    642a:	f1 05       	cpc	r31, r1
    642c:	09 f4       	brne	.+2      	; 0x6430 <main+0x21c6>
    642e:	f0 c2       	rjmp	.+1504   	; 0x6a10 <main+0x27a6>
    6430:	c9 55       	subi	r28, 0x59	; 89
    6432:	de 4f       	sbci	r29, 0xFE	; 254
    6434:	28 81       	ld	r18, Y
    6436:	39 81       	ldd	r19, Y+1	; 0x01
    6438:	c7 5a       	subi	r28, 0xA7	; 167
    643a:	d1 40       	sbci	r29, 0x01	; 1
    643c:	26 30       	cpi	r18, 0x06	; 6
    643e:	31 05       	cpc	r19, r1
    6440:	0c f0       	brlt	.+2      	; 0x6444 <main+0x21da>
    6442:	ea c2       	rjmp	.+1492   	; 0x6a18 <main+0x27ae>
    6444:	e1 c2       	rjmp	.+1474   	; 0x6a08 <main+0x279e>
    6446:	c9 55       	subi	r28, 0x59	; 89
    6448:	de 4f       	sbci	r29, 0xFE	; 254
    644a:	88 81       	ld	r24, Y
    644c:	99 81       	ldd	r25, Y+1	; 0x01
    644e:	c7 5a       	subi	r28, 0xA7	; 167
    6450:	d1 40       	sbci	r29, 0x01	; 1
    6452:	8a 32       	cpi	r24, 0x2A	; 42
    6454:	91 05       	cpc	r25, r1
    6456:	09 f4       	brne	.+2      	; 0x645a <main+0x21f0>
    6458:	6c c5       	rjmp	.+2776   	; 0x6f32 <main+0x2cc8>
    645a:	c9 55       	subi	r28, 0x59	; 89
    645c:	de 4f       	sbci	r29, 0xFE	; 254
    645e:	e8 81       	ld	r30, Y
    6460:	f9 81       	ldd	r31, Y+1	; 0x01
    6462:	c7 5a       	subi	r28, 0xA7	; 167
    6464:	d1 40       	sbci	r29, 0x01	; 1
    6466:	eb 32       	cpi	r30, 0x2B	; 43
    6468:	f1 05       	cpc	r31, r1
    646a:	04 f5       	brge	.+64     	; 0x64ac <main+0x2242>
    646c:	c9 55       	subi	r28, 0x59	; 89
    646e:	de 4f       	sbci	r29, 0xFE	; 254
    6470:	28 81       	ld	r18, Y
    6472:	39 81       	ldd	r19, Y+1	; 0x01
    6474:	c7 5a       	subi	r28, 0xA7	; 167
    6476:	d1 40       	sbci	r29, 0x01	; 1
    6478:	29 30       	cpi	r18, 0x09	; 9
    647a:	31 05       	cpc	r19, r1
    647c:	09 f4       	brne	.+2      	; 0x6480 <main+0x2216>
    647e:	d8 c2       	rjmp	.+1456   	; 0x6a30 <main+0x27c6>
    6480:	c9 55       	subi	r28, 0x59	; 89
    6482:	de 4f       	sbci	r29, 0xFE	; 254
    6484:	88 81       	ld	r24, Y
    6486:	99 81       	ldd	r25, Y+1	; 0x01
    6488:	c7 5a       	subi	r28, 0xA7	; 167
    648a:	d1 40       	sbci	r29, 0x01	; 1
    648c:	89 30       	cpi	r24, 0x09	; 9
    648e:	91 05       	cpc	r25, r1
    6490:	0c f4       	brge	.+2      	; 0x6494 <main+0x222a>
    6492:	ca c2       	rjmp	.+1428   	; 0x6a28 <main+0x27be>
    6494:	c9 55       	subi	r28, 0x59	; 89
    6496:	de 4f       	sbci	r29, 0xFE	; 254
    6498:	e8 81       	ld	r30, Y
    649a:	f9 81       	ldd	r31, Y+1	; 0x01
    649c:	c7 5a       	subi	r28, 0xA7	; 167
    649e:	d1 40       	sbci	r29, 0x01	; 1
    64a0:	e3 32       	cpi	r30, 0x23	; 35
    64a2:	f1 05       	cpc	r31, r1
    64a4:	09 f4       	brne	.+2      	; 0x64a8 <main+0x223e>
    64a6:	9f c3       	rjmp	.+1854   	; 0x6be6 <main+0x297c>
    64a8:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
    64ac:	c9 55       	subi	r28, 0x59	; 89
    64ae:	de 4f       	sbci	r29, 0xFE	; 254
    64b0:	28 81       	ld	r18, Y
    64b2:	39 81       	ldd	r19, Y+1	; 0x01
    64b4:	c7 5a       	subi	r28, 0xA7	; 167
    64b6:	d1 40       	sbci	r29, 0x01	; 1
    64b8:	2d 32       	cpi	r18, 0x2D	; 45
    64ba:	31 05       	cpc	r19, r1
    64bc:	09 f4       	brne	.+2      	; 0x64c0 <main+0x2256>
    64be:	66 c4       	rjmp	.+2252   	; 0x6d8c <main+0x2b22>
    64c0:	c9 55       	subi	r28, 0x59	; 89
    64c2:	de 4f       	sbci	r29, 0xFE	; 254
    64c4:	88 81       	ld	r24, Y
    64c6:	99 81       	ldd	r25, Y+1	; 0x01
    64c8:	c7 5a       	subi	r28, 0xA7	; 167
    64ca:	d1 40       	sbci	r29, 0x01	; 1
    64cc:	8f 32       	cpi	r24, 0x2F	; 47
    64ce:	91 05       	cpc	r25, r1
    64d0:	09 f4       	brne	.+2      	; 0x64d4 <main+0x226a>
    64d2:	d3 c5       	rjmp	.+2982   	; 0x707a <main+0x2e10>
    64d4:	c9 55       	subi	r28, 0x59	; 89
    64d6:	de 4f       	sbci	r29, 0xFE	; 254
    64d8:	e8 81       	ld	r30, Y
    64da:	f9 81       	ldd	r31, Y+1	; 0x01
    64dc:	c7 5a       	subi	r28, 0xA7	; 167
    64de:	d1 40       	sbci	r29, 0x01	; 1
    64e0:	eb 32       	cpi	r30, 0x2B	; 43
    64e2:	f1 05       	cpc	r31, r1
    64e4:	09 f4       	brne	.+2      	; 0x64e8 <main+0x227e>
    64e6:	a8 c2       	rjmp	.+1360   	; 0x6a38 <main+0x27ce>
    64e8:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				case 1:
					//NumCheck();
					if(j==2){
    64ec:	80 91 1c 01 	lds	r24, 0x011C
    64f0:	82 30       	cpi	r24, 0x02	; 2
    64f2:	11 f4       	brne	.+4      	; 0x64f8 <main+0x228e>
						j=0;
    64f4:	10 92 1c 01 	sts	0x011C, r1
					}
					else {

					}
					Lcd_vidSendCommand(loc2);
    64f8:	80 91 1a 01 	lds	r24, 0x011A
    64fc:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key+'0');
    6500:	80 91 2a 01 	lds	r24, 0x012A
    6504:	80 5d       	subi	r24, 0xD0	; 208
    6506:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    650a:	80 91 1a 01 	lds	r24, 0x011A
    650e:	8f 5f       	subi	r24, 0xFF	; 255
    6510:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    6514:	80 91 1c 01 	lds	r24, 0x011C
    6518:	88 2f       	mov	r24, r24
    651a:	90 e0       	ldi	r25, 0x00	; 0
    651c:	20 91 2a 01 	lds	r18, 0x012A
    6520:	fc 01       	movw	r30, r24
    6522:	e1 5e       	subi	r30, 0xE1	; 225
    6524:	fe 4f       	sbci	r31, 0xFE	; 254
    6526:	20 83       	st	Z, r18
					j++;
    6528:	80 91 1c 01 	lds	r24, 0x011C
    652c:	8f 5f       	subi	r24, 0xFF	; 255
    652e:	80 93 1c 01 	sts	0x011C, r24
    6532:	fe 01       	movw	r30, r28
    6534:	e9 56       	subi	r30, 0x69	; 105
    6536:	ff 4f       	sbci	r31, 0xFF	; 255
    6538:	80 e0       	ldi	r24, 0x00	; 0
    653a:	90 e0       	ldi	r25, 0x00	; 0
    653c:	a8 e4       	ldi	r26, 0x48	; 72
    653e:	b3 e4       	ldi	r27, 0x43	; 67
    6540:	80 83       	st	Z, r24
    6542:	91 83       	std	Z+1, r25	; 0x01
    6544:	a2 83       	std	Z+2, r26	; 0x02
    6546:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6548:	8e 01       	movw	r16, r28
    654a:	0d 56       	subi	r16, 0x6D	; 109
    654c:	1f 4f       	sbci	r17, 0xFF	; 255
    654e:	fe 01       	movw	r30, r28
    6550:	e9 56       	subi	r30, 0x69	; 105
    6552:	ff 4f       	sbci	r31, 0xFF	; 255
    6554:	60 81       	ld	r22, Z
    6556:	71 81       	ldd	r23, Z+1	; 0x01
    6558:	82 81       	ldd	r24, Z+2	; 0x02
    655a:	93 81       	ldd	r25, Z+3	; 0x03
    655c:	20 e0       	ldi	r18, 0x00	; 0
    655e:	30 e0       	ldi	r19, 0x00	; 0
    6560:	4a ef       	ldi	r20, 0xFA	; 250
    6562:	54 e4       	ldi	r21, 0x44	; 68
    6564:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6568:	dc 01       	movw	r26, r24
    656a:	cb 01       	movw	r24, r22
    656c:	f8 01       	movw	r30, r16
    656e:	80 83       	st	Z, r24
    6570:	91 83       	std	Z+1, r25	; 0x01
    6572:	a2 83       	std	Z+2, r26	; 0x02
    6574:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6576:	fe 01       	movw	r30, r28
    6578:	ed 56       	subi	r30, 0x6D	; 109
    657a:	ff 4f       	sbci	r31, 0xFF	; 255
    657c:	60 81       	ld	r22, Z
    657e:	71 81       	ldd	r23, Z+1	; 0x01
    6580:	82 81       	ldd	r24, Z+2	; 0x02
    6582:	93 81       	ldd	r25, Z+3	; 0x03
    6584:	20 e0       	ldi	r18, 0x00	; 0
    6586:	30 e0       	ldi	r19, 0x00	; 0
    6588:	40 e8       	ldi	r20, 0x80	; 128
    658a:	5f e3       	ldi	r21, 0x3F	; 63
    658c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6590:	88 23       	and	r24, r24
    6592:	44 f4       	brge	.+16     	; 0x65a4 <main+0x233a>
		__ticks = 1;
    6594:	fe 01       	movw	r30, r28
    6596:	ef 56       	subi	r30, 0x6F	; 111
    6598:	ff 4f       	sbci	r31, 0xFF	; 255
    659a:	81 e0       	ldi	r24, 0x01	; 1
    659c:	90 e0       	ldi	r25, 0x00	; 0
    659e:	91 83       	std	Z+1, r25	; 0x01
    65a0:	80 83       	st	Z, r24
    65a2:	65 c0       	rjmp	.+202    	; 0x666e <main+0x2404>
	else if (__tmp > 65535)
    65a4:	fe 01       	movw	r30, r28
    65a6:	ed 56       	subi	r30, 0x6D	; 109
    65a8:	ff 4f       	sbci	r31, 0xFF	; 255
    65aa:	60 81       	ld	r22, Z
    65ac:	71 81       	ldd	r23, Z+1	; 0x01
    65ae:	82 81       	ldd	r24, Z+2	; 0x02
    65b0:	93 81       	ldd	r25, Z+3	; 0x03
    65b2:	20 e0       	ldi	r18, 0x00	; 0
    65b4:	3f ef       	ldi	r19, 0xFF	; 255
    65b6:	4f e7       	ldi	r20, 0x7F	; 127
    65b8:	57 e4       	ldi	r21, 0x47	; 71
    65ba:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    65be:	18 16       	cp	r1, r24
    65c0:	0c f0       	brlt	.+2      	; 0x65c4 <main+0x235a>
    65c2:	44 c0       	rjmp	.+136    	; 0x664c <main+0x23e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    65c4:	fe 01       	movw	r30, r28
    65c6:	e9 56       	subi	r30, 0x69	; 105
    65c8:	ff 4f       	sbci	r31, 0xFF	; 255
    65ca:	60 81       	ld	r22, Z
    65cc:	71 81       	ldd	r23, Z+1	; 0x01
    65ce:	82 81       	ldd	r24, Z+2	; 0x02
    65d0:	93 81       	ldd	r25, Z+3	; 0x03
    65d2:	20 e0       	ldi	r18, 0x00	; 0
    65d4:	30 e0       	ldi	r19, 0x00	; 0
    65d6:	40 e2       	ldi	r20, 0x20	; 32
    65d8:	51 e4       	ldi	r21, 0x41	; 65
    65da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    65de:	dc 01       	movw	r26, r24
    65e0:	cb 01       	movw	r24, r22
    65e2:	8e 01       	movw	r16, r28
    65e4:	0f 56       	subi	r16, 0x6F	; 111
    65e6:	1f 4f       	sbci	r17, 0xFF	; 255
    65e8:	bc 01       	movw	r22, r24
    65ea:	cd 01       	movw	r24, r26
    65ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    65f0:	dc 01       	movw	r26, r24
    65f2:	cb 01       	movw	r24, r22
    65f4:	f8 01       	movw	r30, r16
    65f6:	91 83       	std	Z+1, r25	; 0x01
    65f8:	80 83       	st	Z, r24
    65fa:	1f c0       	rjmp	.+62     	; 0x663a <main+0x23d0>
    65fc:	fe 01       	movw	r30, r28
    65fe:	e1 57       	subi	r30, 0x71	; 113
    6600:	ff 4f       	sbci	r31, 0xFF	; 255
    6602:	88 ec       	ldi	r24, 0xC8	; 200
    6604:	90 e0       	ldi	r25, 0x00	; 0
    6606:	91 83       	std	Z+1, r25	; 0x01
    6608:	80 83       	st	Z, r24
    660a:	fe 01       	movw	r30, r28
    660c:	e1 57       	subi	r30, 0x71	; 113
    660e:	ff 4f       	sbci	r31, 0xFF	; 255
    6610:	80 81       	ld	r24, Z
    6612:	91 81       	ldd	r25, Z+1	; 0x01
    6614:	01 97       	sbiw	r24, 0x01	; 1
    6616:	f1 f7       	brne	.-4      	; 0x6614 <main+0x23aa>
    6618:	fe 01       	movw	r30, r28
    661a:	e1 57       	subi	r30, 0x71	; 113
    661c:	ff 4f       	sbci	r31, 0xFF	; 255
    661e:	91 83       	std	Z+1, r25	; 0x01
    6620:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6622:	de 01       	movw	r26, r28
    6624:	af 56       	subi	r26, 0x6F	; 111
    6626:	bf 4f       	sbci	r27, 0xFF	; 255
    6628:	fe 01       	movw	r30, r28
    662a:	ef 56       	subi	r30, 0x6F	; 111
    662c:	ff 4f       	sbci	r31, 0xFF	; 255
    662e:	80 81       	ld	r24, Z
    6630:	91 81       	ldd	r25, Z+1	; 0x01
    6632:	01 97       	sbiw	r24, 0x01	; 1
    6634:	11 96       	adiw	r26, 0x01	; 1
    6636:	9c 93       	st	X, r25
    6638:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    663a:	fe 01       	movw	r30, r28
    663c:	ef 56       	subi	r30, 0x6F	; 111
    663e:	ff 4f       	sbci	r31, 0xFF	; 255
    6640:	80 81       	ld	r24, Z
    6642:	91 81       	ldd	r25, Z+1	; 0x01
    6644:	00 97       	sbiw	r24, 0x00	; 0
    6646:	d1 f6       	brne	.-76     	; 0x65fc <main+0x2392>
    6648:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    664c:	8e 01       	movw	r16, r28
    664e:	0f 56       	subi	r16, 0x6F	; 111
    6650:	1f 4f       	sbci	r17, 0xFF	; 255
    6652:	fe 01       	movw	r30, r28
    6654:	ed 56       	subi	r30, 0x6D	; 109
    6656:	ff 4f       	sbci	r31, 0xFF	; 255
    6658:	60 81       	ld	r22, Z
    665a:	71 81       	ldd	r23, Z+1	; 0x01
    665c:	82 81       	ldd	r24, Z+2	; 0x02
    665e:	93 81       	ldd	r25, Z+3	; 0x03
    6660:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6664:	dc 01       	movw	r26, r24
    6666:	cb 01       	movw	r24, r22
    6668:	f8 01       	movw	r30, r16
    666a:	91 83       	std	Z+1, r25	; 0x01
    666c:	80 83       	st	Z, r24
    666e:	de 01       	movw	r26, r28
    6670:	a3 57       	subi	r26, 0x73	; 115
    6672:	bf 4f       	sbci	r27, 0xFF	; 255
    6674:	fe 01       	movw	r30, r28
    6676:	ef 56       	subi	r30, 0x6F	; 111
    6678:	ff 4f       	sbci	r31, 0xFF	; 255
    667a:	80 81       	ld	r24, Z
    667c:	91 81       	ldd	r25, Z+1	; 0x01
    667e:	11 96       	adiw	r26, 0x01	; 1
    6680:	9c 93       	st	X, r25
    6682:	8e 93       	st	-X, r24
    6684:	fe 01       	movw	r30, r28
    6686:	e3 57       	subi	r30, 0x73	; 115
    6688:	ff 4f       	sbci	r31, 0xFF	; 255
    668a:	80 81       	ld	r24, Z
    668c:	91 81       	ldd	r25, Z+1	; 0x01
    668e:	01 97       	sbiw	r24, 0x01	; 1
    6690:	f1 f7       	brne	.-4      	; 0x668e <main+0x2424>
    6692:	fe 01       	movw	r30, r28
    6694:	e3 57       	subi	r30, 0x73	; 115
    6696:	ff 4f       	sbci	r31, 0xFF	; 255
    6698:	91 83       	std	Z+1, r25	; 0x01
    669a:	80 83       	st	Z, r24
    669c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 2:
					//NumCheck();
					if(j==2){
    66a0:	80 91 1c 01 	lds	r24, 0x011C
    66a4:	82 30       	cpi	r24, 0x02	; 2
    66a6:	11 f4       	brne	.+4      	; 0x66ac <main+0x2442>
						j=0;
    66a8:	10 92 1c 01 	sts	0x011C, r1
					}
					else {

					}
					Lcd_vidSendCommand(loc2);
    66ac:	80 91 1a 01 	lds	r24, 0x011A
    66b0:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key+'0');
    66b4:	80 91 2a 01 	lds	r24, 0x012A
    66b8:	80 5d       	subi	r24, 0xD0	; 208
    66ba:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    66be:	80 91 1a 01 	lds	r24, 0x011A
    66c2:	8f 5f       	subi	r24, 0xFF	; 255
    66c4:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    66c8:	80 91 1c 01 	lds	r24, 0x011C
    66cc:	88 2f       	mov	r24, r24
    66ce:	90 e0       	ldi	r25, 0x00	; 0
    66d0:	20 91 2a 01 	lds	r18, 0x012A
    66d4:	fc 01       	movw	r30, r24
    66d6:	e1 5e       	subi	r30, 0xE1	; 225
    66d8:	fe 4f       	sbci	r31, 0xFE	; 254
    66da:	20 83       	st	Z, r18
					j++;
    66dc:	80 91 1c 01 	lds	r24, 0x011C
    66e0:	8f 5f       	subi	r24, 0xFF	; 255
    66e2:	80 93 1c 01 	sts	0x011C, r24
    66e6:	fe 01       	movw	r30, r28
    66e8:	e7 57       	subi	r30, 0x77	; 119
    66ea:	ff 4f       	sbci	r31, 0xFF	; 255
    66ec:	80 e0       	ldi	r24, 0x00	; 0
    66ee:	90 e0       	ldi	r25, 0x00	; 0
    66f0:	a8 e4       	ldi	r26, 0x48	; 72
    66f2:	b3 e4       	ldi	r27, 0x43	; 67
    66f4:	80 83       	st	Z, r24
    66f6:	91 83       	std	Z+1, r25	; 0x01
    66f8:	a2 83       	std	Z+2, r26	; 0x02
    66fa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    66fc:	8e 01       	movw	r16, r28
    66fe:	0b 57       	subi	r16, 0x7B	; 123
    6700:	1f 4f       	sbci	r17, 0xFF	; 255
    6702:	fe 01       	movw	r30, r28
    6704:	e7 57       	subi	r30, 0x77	; 119
    6706:	ff 4f       	sbci	r31, 0xFF	; 255
    6708:	60 81       	ld	r22, Z
    670a:	71 81       	ldd	r23, Z+1	; 0x01
    670c:	82 81       	ldd	r24, Z+2	; 0x02
    670e:	93 81       	ldd	r25, Z+3	; 0x03
    6710:	20 e0       	ldi	r18, 0x00	; 0
    6712:	30 e0       	ldi	r19, 0x00	; 0
    6714:	4a ef       	ldi	r20, 0xFA	; 250
    6716:	54 e4       	ldi	r21, 0x44	; 68
    6718:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    671c:	dc 01       	movw	r26, r24
    671e:	cb 01       	movw	r24, r22
    6720:	f8 01       	movw	r30, r16
    6722:	80 83       	st	Z, r24
    6724:	91 83       	std	Z+1, r25	; 0x01
    6726:	a2 83       	std	Z+2, r26	; 0x02
    6728:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    672a:	fe 01       	movw	r30, r28
    672c:	eb 57       	subi	r30, 0x7B	; 123
    672e:	ff 4f       	sbci	r31, 0xFF	; 255
    6730:	60 81       	ld	r22, Z
    6732:	71 81       	ldd	r23, Z+1	; 0x01
    6734:	82 81       	ldd	r24, Z+2	; 0x02
    6736:	93 81       	ldd	r25, Z+3	; 0x03
    6738:	20 e0       	ldi	r18, 0x00	; 0
    673a:	30 e0       	ldi	r19, 0x00	; 0
    673c:	40 e8       	ldi	r20, 0x80	; 128
    673e:	5f e3       	ldi	r21, 0x3F	; 63
    6740:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6744:	88 23       	and	r24, r24
    6746:	44 f4       	brge	.+16     	; 0x6758 <main+0x24ee>
		__ticks = 1;
    6748:	fe 01       	movw	r30, r28
    674a:	ed 57       	subi	r30, 0x7D	; 125
    674c:	ff 4f       	sbci	r31, 0xFF	; 255
    674e:	81 e0       	ldi	r24, 0x01	; 1
    6750:	90 e0       	ldi	r25, 0x00	; 0
    6752:	91 83       	std	Z+1, r25	; 0x01
    6754:	80 83       	st	Z, r24
    6756:	65 c0       	rjmp	.+202    	; 0x6822 <main+0x25b8>
	else if (__tmp > 65535)
    6758:	fe 01       	movw	r30, r28
    675a:	eb 57       	subi	r30, 0x7B	; 123
    675c:	ff 4f       	sbci	r31, 0xFF	; 255
    675e:	60 81       	ld	r22, Z
    6760:	71 81       	ldd	r23, Z+1	; 0x01
    6762:	82 81       	ldd	r24, Z+2	; 0x02
    6764:	93 81       	ldd	r25, Z+3	; 0x03
    6766:	20 e0       	ldi	r18, 0x00	; 0
    6768:	3f ef       	ldi	r19, 0xFF	; 255
    676a:	4f e7       	ldi	r20, 0x7F	; 127
    676c:	57 e4       	ldi	r21, 0x47	; 71
    676e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6772:	18 16       	cp	r1, r24
    6774:	0c f0       	brlt	.+2      	; 0x6778 <main+0x250e>
    6776:	44 c0       	rjmp	.+136    	; 0x6800 <main+0x2596>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6778:	fe 01       	movw	r30, r28
    677a:	e7 57       	subi	r30, 0x77	; 119
    677c:	ff 4f       	sbci	r31, 0xFF	; 255
    677e:	60 81       	ld	r22, Z
    6780:	71 81       	ldd	r23, Z+1	; 0x01
    6782:	82 81       	ldd	r24, Z+2	; 0x02
    6784:	93 81       	ldd	r25, Z+3	; 0x03
    6786:	20 e0       	ldi	r18, 0x00	; 0
    6788:	30 e0       	ldi	r19, 0x00	; 0
    678a:	40 e2       	ldi	r20, 0x20	; 32
    678c:	51 e4       	ldi	r21, 0x41	; 65
    678e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6792:	dc 01       	movw	r26, r24
    6794:	cb 01       	movw	r24, r22
    6796:	8e 01       	movw	r16, r28
    6798:	0d 57       	subi	r16, 0x7D	; 125
    679a:	1f 4f       	sbci	r17, 0xFF	; 255
    679c:	bc 01       	movw	r22, r24
    679e:	cd 01       	movw	r24, r26
    67a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    67a4:	dc 01       	movw	r26, r24
    67a6:	cb 01       	movw	r24, r22
    67a8:	f8 01       	movw	r30, r16
    67aa:	91 83       	std	Z+1, r25	; 0x01
    67ac:	80 83       	st	Z, r24
    67ae:	1f c0       	rjmp	.+62     	; 0x67ee <main+0x2584>
    67b0:	fe 01       	movw	r30, r28
    67b2:	ef 57       	subi	r30, 0x7F	; 127
    67b4:	ff 4f       	sbci	r31, 0xFF	; 255
    67b6:	88 ec       	ldi	r24, 0xC8	; 200
    67b8:	90 e0       	ldi	r25, 0x00	; 0
    67ba:	91 83       	std	Z+1, r25	; 0x01
    67bc:	80 83       	st	Z, r24
    67be:	fe 01       	movw	r30, r28
    67c0:	ef 57       	subi	r30, 0x7F	; 127
    67c2:	ff 4f       	sbci	r31, 0xFF	; 255
    67c4:	80 81       	ld	r24, Z
    67c6:	91 81       	ldd	r25, Z+1	; 0x01
    67c8:	01 97       	sbiw	r24, 0x01	; 1
    67ca:	f1 f7       	brne	.-4      	; 0x67c8 <main+0x255e>
    67cc:	fe 01       	movw	r30, r28
    67ce:	ef 57       	subi	r30, 0x7F	; 127
    67d0:	ff 4f       	sbci	r31, 0xFF	; 255
    67d2:	91 83       	std	Z+1, r25	; 0x01
    67d4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    67d6:	de 01       	movw	r26, r28
    67d8:	ad 57       	subi	r26, 0x7D	; 125
    67da:	bf 4f       	sbci	r27, 0xFF	; 255
    67dc:	fe 01       	movw	r30, r28
    67de:	ed 57       	subi	r30, 0x7D	; 125
    67e0:	ff 4f       	sbci	r31, 0xFF	; 255
    67e2:	80 81       	ld	r24, Z
    67e4:	91 81       	ldd	r25, Z+1	; 0x01
    67e6:	01 97       	sbiw	r24, 0x01	; 1
    67e8:	11 96       	adiw	r26, 0x01	; 1
    67ea:	9c 93       	st	X, r25
    67ec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67ee:	fe 01       	movw	r30, r28
    67f0:	ed 57       	subi	r30, 0x7D	; 125
    67f2:	ff 4f       	sbci	r31, 0xFF	; 255
    67f4:	80 81       	ld	r24, Z
    67f6:	91 81       	ldd	r25, Z+1	; 0x01
    67f8:	00 97       	sbiw	r24, 0x00	; 0
    67fa:	d1 f6       	brne	.-76     	; 0x67b0 <main+0x2546>
    67fc:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6800:	8e 01       	movw	r16, r28
    6802:	0d 57       	subi	r16, 0x7D	; 125
    6804:	1f 4f       	sbci	r17, 0xFF	; 255
    6806:	fe 01       	movw	r30, r28
    6808:	eb 57       	subi	r30, 0x7B	; 123
    680a:	ff 4f       	sbci	r31, 0xFF	; 255
    680c:	60 81       	ld	r22, Z
    680e:	71 81       	ldd	r23, Z+1	; 0x01
    6810:	82 81       	ldd	r24, Z+2	; 0x02
    6812:	93 81       	ldd	r25, Z+3	; 0x03
    6814:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6818:	dc 01       	movw	r26, r24
    681a:	cb 01       	movw	r24, r22
    681c:	f8 01       	movw	r30, r16
    681e:	91 83       	std	Z+1, r25	; 0x01
    6820:	80 83       	st	Z, r24
    6822:	de 01       	movw	r26, r28
    6824:	a1 58       	subi	r26, 0x81	; 129
    6826:	bf 4f       	sbci	r27, 0xFF	; 255
    6828:	fe 01       	movw	r30, r28
    682a:	ed 57       	subi	r30, 0x7D	; 125
    682c:	ff 4f       	sbci	r31, 0xFF	; 255
    682e:	80 81       	ld	r24, Z
    6830:	91 81       	ldd	r25, Z+1	; 0x01
    6832:	11 96       	adiw	r26, 0x01	; 1
    6834:	9c 93       	st	X, r25
    6836:	8e 93       	st	-X, r24
    6838:	fe 01       	movw	r30, r28
    683a:	e1 58       	subi	r30, 0x81	; 129
    683c:	ff 4f       	sbci	r31, 0xFF	; 255
    683e:	80 81       	ld	r24, Z
    6840:	91 81       	ldd	r25, Z+1	; 0x01
    6842:	01 97       	sbiw	r24, 0x01	; 1
    6844:	f1 f7       	brne	.-4      	; 0x6842 <main+0x25d8>
    6846:	fe 01       	movw	r30, r28
    6848:	e1 58       	subi	r30, 0x81	; 129
    684a:	ff 4f       	sbci	r31, 0xFF	; 255
    684c:	91 83       	std	Z+1, r25	; 0x01
    684e:	80 83       	st	Z, r24
    6850:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 3:
					//NumCheck();
					if(j==2){
    6854:	80 91 1c 01 	lds	r24, 0x011C
    6858:	82 30       	cpi	r24, 0x02	; 2
    685a:	11 f4       	brne	.+4      	; 0x6860 <main+0x25f6>
						j=0;
    685c:	10 92 1c 01 	sts	0x011C, r1
					}
					else {

					}
					Lcd_vidSendCommand(loc2);
    6860:	80 91 1a 01 	lds	r24, 0x011A
    6864:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key+'0');
    6868:	80 91 2a 01 	lds	r24, 0x012A
    686c:	80 5d       	subi	r24, 0xD0	; 208
    686e:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    6872:	80 91 1a 01 	lds	r24, 0x011A
    6876:	8f 5f       	subi	r24, 0xFF	; 255
    6878:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    687c:	80 91 1c 01 	lds	r24, 0x011C
    6880:	88 2f       	mov	r24, r24
    6882:	90 e0       	ldi	r25, 0x00	; 0
    6884:	20 91 2a 01 	lds	r18, 0x012A
    6888:	fc 01       	movw	r30, r24
    688a:	e1 5e       	subi	r30, 0xE1	; 225
    688c:	fe 4f       	sbci	r31, 0xFE	; 254
    688e:	20 83       	st	Z, r18
					j++;
    6890:	80 91 1c 01 	lds	r24, 0x011C
    6894:	8f 5f       	subi	r24, 0xFF	; 255
    6896:	80 93 1c 01 	sts	0x011C, r24
    689a:	fe 01       	movw	r30, r28
    689c:	e5 58       	subi	r30, 0x85	; 133
    689e:	ff 4f       	sbci	r31, 0xFF	; 255
    68a0:	80 e0       	ldi	r24, 0x00	; 0
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	a8 e4       	ldi	r26, 0x48	; 72
    68a6:	b3 e4       	ldi	r27, 0x43	; 67
    68a8:	80 83       	st	Z, r24
    68aa:	91 83       	std	Z+1, r25	; 0x01
    68ac:	a2 83       	std	Z+2, r26	; 0x02
    68ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    68b0:	8e 01       	movw	r16, r28
    68b2:	09 58       	subi	r16, 0x89	; 137
    68b4:	1f 4f       	sbci	r17, 0xFF	; 255
    68b6:	fe 01       	movw	r30, r28
    68b8:	e5 58       	subi	r30, 0x85	; 133
    68ba:	ff 4f       	sbci	r31, 0xFF	; 255
    68bc:	60 81       	ld	r22, Z
    68be:	71 81       	ldd	r23, Z+1	; 0x01
    68c0:	82 81       	ldd	r24, Z+2	; 0x02
    68c2:	93 81       	ldd	r25, Z+3	; 0x03
    68c4:	20 e0       	ldi	r18, 0x00	; 0
    68c6:	30 e0       	ldi	r19, 0x00	; 0
    68c8:	4a ef       	ldi	r20, 0xFA	; 250
    68ca:	54 e4       	ldi	r21, 0x44	; 68
    68cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    68d0:	dc 01       	movw	r26, r24
    68d2:	cb 01       	movw	r24, r22
    68d4:	f8 01       	movw	r30, r16
    68d6:	80 83       	st	Z, r24
    68d8:	91 83       	std	Z+1, r25	; 0x01
    68da:	a2 83       	std	Z+2, r26	; 0x02
    68dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    68de:	fe 01       	movw	r30, r28
    68e0:	e9 58       	subi	r30, 0x89	; 137
    68e2:	ff 4f       	sbci	r31, 0xFF	; 255
    68e4:	60 81       	ld	r22, Z
    68e6:	71 81       	ldd	r23, Z+1	; 0x01
    68e8:	82 81       	ldd	r24, Z+2	; 0x02
    68ea:	93 81       	ldd	r25, Z+3	; 0x03
    68ec:	20 e0       	ldi	r18, 0x00	; 0
    68ee:	30 e0       	ldi	r19, 0x00	; 0
    68f0:	40 e8       	ldi	r20, 0x80	; 128
    68f2:	5f e3       	ldi	r21, 0x3F	; 63
    68f4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    68f8:	88 23       	and	r24, r24
    68fa:	44 f4       	brge	.+16     	; 0x690c <main+0x26a2>
		__ticks = 1;
    68fc:	fe 01       	movw	r30, r28
    68fe:	eb 58       	subi	r30, 0x8B	; 139
    6900:	ff 4f       	sbci	r31, 0xFF	; 255
    6902:	81 e0       	ldi	r24, 0x01	; 1
    6904:	90 e0       	ldi	r25, 0x00	; 0
    6906:	91 83       	std	Z+1, r25	; 0x01
    6908:	80 83       	st	Z, r24
    690a:	65 c0       	rjmp	.+202    	; 0x69d6 <main+0x276c>
	else if (__tmp > 65535)
    690c:	fe 01       	movw	r30, r28
    690e:	e9 58       	subi	r30, 0x89	; 137
    6910:	ff 4f       	sbci	r31, 0xFF	; 255
    6912:	60 81       	ld	r22, Z
    6914:	71 81       	ldd	r23, Z+1	; 0x01
    6916:	82 81       	ldd	r24, Z+2	; 0x02
    6918:	93 81       	ldd	r25, Z+3	; 0x03
    691a:	20 e0       	ldi	r18, 0x00	; 0
    691c:	3f ef       	ldi	r19, 0xFF	; 255
    691e:	4f e7       	ldi	r20, 0x7F	; 127
    6920:	57 e4       	ldi	r21, 0x47	; 71
    6922:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6926:	18 16       	cp	r1, r24
    6928:	0c f0       	brlt	.+2      	; 0x692c <main+0x26c2>
    692a:	44 c0       	rjmp	.+136    	; 0x69b4 <main+0x274a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    692c:	fe 01       	movw	r30, r28
    692e:	e5 58       	subi	r30, 0x85	; 133
    6930:	ff 4f       	sbci	r31, 0xFF	; 255
    6932:	60 81       	ld	r22, Z
    6934:	71 81       	ldd	r23, Z+1	; 0x01
    6936:	82 81       	ldd	r24, Z+2	; 0x02
    6938:	93 81       	ldd	r25, Z+3	; 0x03
    693a:	20 e0       	ldi	r18, 0x00	; 0
    693c:	30 e0       	ldi	r19, 0x00	; 0
    693e:	40 e2       	ldi	r20, 0x20	; 32
    6940:	51 e4       	ldi	r21, 0x41	; 65
    6942:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6946:	dc 01       	movw	r26, r24
    6948:	cb 01       	movw	r24, r22
    694a:	8e 01       	movw	r16, r28
    694c:	0b 58       	subi	r16, 0x8B	; 139
    694e:	1f 4f       	sbci	r17, 0xFF	; 255
    6950:	bc 01       	movw	r22, r24
    6952:	cd 01       	movw	r24, r26
    6954:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6958:	dc 01       	movw	r26, r24
    695a:	cb 01       	movw	r24, r22
    695c:	f8 01       	movw	r30, r16
    695e:	91 83       	std	Z+1, r25	; 0x01
    6960:	80 83       	st	Z, r24
    6962:	1f c0       	rjmp	.+62     	; 0x69a2 <main+0x2738>
    6964:	fe 01       	movw	r30, r28
    6966:	ed 58       	subi	r30, 0x8D	; 141
    6968:	ff 4f       	sbci	r31, 0xFF	; 255
    696a:	88 ec       	ldi	r24, 0xC8	; 200
    696c:	90 e0       	ldi	r25, 0x00	; 0
    696e:	91 83       	std	Z+1, r25	; 0x01
    6970:	80 83       	st	Z, r24
    6972:	fe 01       	movw	r30, r28
    6974:	ed 58       	subi	r30, 0x8D	; 141
    6976:	ff 4f       	sbci	r31, 0xFF	; 255
    6978:	80 81       	ld	r24, Z
    697a:	91 81       	ldd	r25, Z+1	; 0x01
    697c:	01 97       	sbiw	r24, 0x01	; 1
    697e:	f1 f7       	brne	.-4      	; 0x697c <main+0x2712>
    6980:	fe 01       	movw	r30, r28
    6982:	ed 58       	subi	r30, 0x8D	; 141
    6984:	ff 4f       	sbci	r31, 0xFF	; 255
    6986:	91 83       	std	Z+1, r25	; 0x01
    6988:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    698a:	de 01       	movw	r26, r28
    698c:	ab 58       	subi	r26, 0x8B	; 139
    698e:	bf 4f       	sbci	r27, 0xFF	; 255
    6990:	fe 01       	movw	r30, r28
    6992:	eb 58       	subi	r30, 0x8B	; 139
    6994:	ff 4f       	sbci	r31, 0xFF	; 255
    6996:	80 81       	ld	r24, Z
    6998:	91 81       	ldd	r25, Z+1	; 0x01
    699a:	01 97       	sbiw	r24, 0x01	; 1
    699c:	11 96       	adiw	r26, 0x01	; 1
    699e:	9c 93       	st	X, r25
    69a0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    69a2:	fe 01       	movw	r30, r28
    69a4:	eb 58       	subi	r30, 0x8B	; 139
    69a6:	ff 4f       	sbci	r31, 0xFF	; 255
    69a8:	80 81       	ld	r24, Z
    69aa:	91 81       	ldd	r25, Z+1	; 0x01
    69ac:	00 97       	sbiw	r24, 0x00	; 0
    69ae:	d1 f6       	brne	.-76     	; 0x6964 <main+0x26fa>
    69b0:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    69b4:	8e 01       	movw	r16, r28
    69b6:	0b 58       	subi	r16, 0x8B	; 139
    69b8:	1f 4f       	sbci	r17, 0xFF	; 255
    69ba:	fe 01       	movw	r30, r28
    69bc:	e9 58       	subi	r30, 0x89	; 137
    69be:	ff 4f       	sbci	r31, 0xFF	; 255
    69c0:	60 81       	ld	r22, Z
    69c2:	71 81       	ldd	r23, Z+1	; 0x01
    69c4:	82 81       	ldd	r24, Z+2	; 0x02
    69c6:	93 81       	ldd	r25, Z+3	; 0x03
    69c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    69cc:	dc 01       	movw	r26, r24
    69ce:	cb 01       	movw	r24, r22
    69d0:	f8 01       	movw	r30, r16
    69d2:	91 83       	std	Z+1, r25	; 0x01
    69d4:	80 83       	st	Z, r24
    69d6:	de 01       	movw	r26, r28
    69d8:	af 58       	subi	r26, 0x8F	; 143
    69da:	bf 4f       	sbci	r27, 0xFF	; 255
    69dc:	fe 01       	movw	r30, r28
    69de:	eb 58       	subi	r30, 0x8B	; 139
    69e0:	ff 4f       	sbci	r31, 0xFF	; 255
    69e2:	80 81       	ld	r24, Z
    69e4:	91 81       	ldd	r25, Z+1	; 0x01
    69e6:	11 96       	adiw	r26, 0x01	; 1
    69e8:	9c 93       	st	X, r25
    69ea:	8e 93       	st	-X, r24
    69ec:	fe 01       	movw	r30, r28
    69ee:	ef 58       	subi	r30, 0x8F	; 143
    69f0:	ff 4f       	sbci	r31, 0xFF	; 255
    69f2:	80 81       	ld	r24, Z
    69f4:	91 81       	ldd	r25, Z+1	; 0x01
    69f6:	01 97       	sbiw	r24, 0x01	; 1
    69f8:	f1 f7       	brne	.-4      	; 0x69f6 <main+0x278c>
    69fa:	fe 01       	movw	r30, r28
    69fc:	ef 58       	subi	r30, 0x8F	; 143
    69fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6a00:	91 83       	std	Z+1, r25	; 0x01
    6a02:	80 83       	st	Z, r24
    6a04:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 4:
					NumCheck();
    6a08:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a0c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case 5:
					NumCheck();
    6a10:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a14:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case 6:
					NumCheck();
    6a18:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a1c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case 7:
					NumCheck();
    6a20:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a24:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case 8:
					NumCheck();
    6a28:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a2c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case 9:
					NumCheck();
    6a30:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6a34:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case '+':
					Lcd_vidSendCommand(loc2);
    6a38:	80 91 1a 01 	lds	r24, 0x011A
    6a3c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key);
    6a40:	80 91 2a 01 	lds	r24, 0x012A
    6a44:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    6a48:	80 91 1a 01 	lds	r24, 0x011A
    6a4c:	8f 5f       	subi	r24, 0xFF	; 255
    6a4e:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    6a52:	80 91 1c 01 	lds	r24, 0x011C
    6a56:	88 2f       	mov	r24, r24
    6a58:	90 e0       	ldi	r25, 0x00	; 0
    6a5a:	20 91 2a 01 	lds	r18, 0x012A
    6a5e:	fc 01       	movw	r30, r24
    6a60:	e1 5e       	subi	r30, 0xE1	; 225
    6a62:	fe 4f       	sbci	r31, 0xFE	; 254
    6a64:	20 83       	st	Z, r18
					j++;
    6a66:	80 91 1c 01 	lds	r24, 0x011C
    6a6a:	8f 5f       	subi	r24, 0xFF	; 255
    6a6c:	80 93 1c 01 	sts	0x011C, r24
    6a70:	fe 01       	movw	r30, r28
    6a72:	e3 59       	subi	r30, 0x93	; 147
    6a74:	ff 4f       	sbci	r31, 0xFF	; 255
    6a76:	80 e0       	ldi	r24, 0x00	; 0
    6a78:	90 e0       	ldi	r25, 0x00	; 0
    6a7a:	a8 e4       	ldi	r26, 0x48	; 72
    6a7c:	b3 e4       	ldi	r27, 0x43	; 67
    6a7e:	80 83       	st	Z, r24
    6a80:	91 83       	std	Z+1, r25	; 0x01
    6a82:	a2 83       	std	Z+2, r26	; 0x02
    6a84:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6a86:	8e 01       	movw	r16, r28
    6a88:	07 59       	subi	r16, 0x97	; 151
    6a8a:	1f 4f       	sbci	r17, 0xFF	; 255
    6a8c:	fe 01       	movw	r30, r28
    6a8e:	e3 59       	subi	r30, 0x93	; 147
    6a90:	ff 4f       	sbci	r31, 0xFF	; 255
    6a92:	60 81       	ld	r22, Z
    6a94:	71 81       	ldd	r23, Z+1	; 0x01
    6a96:	82 81       	ldd	r24, Z+2	; 0x02
    6a98:	93 81       	ldd	r25, Z+3	; 0x03
    6a9a:	20 e0       	ldi	r18, 0x00	; 0
    6a9c:	30 e0       	ldi	r19, 0x00	; 0
    6a9e:	4a ef       	ldi	r20, 0xFA	; 250
    6aa0:	54 e4       	ldi	r21, 0x44	; 68
    6aa2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6aa6:	dc 01       	movw	r26, r24
    6aa8:	cb 01       	movw	r24, r22
    6aaa:	f8 01       	movw	r30, r16
    6aac:	80 83       	st	Z, r24
    6aae:	91 83       	std	Z+1, r25	; 0x01
    6ab0:	a2 83       	std	Z+2, r26	; 0x02
    6ab2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6ab4:	fe 01       	movw	r30, r28
    6ab6:	e7 59       	subi	r30, 0x97	; 151
    6ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    6aba:	60 81       	ld	r22, Z
    6abc:	71 81       	ldd	r23, Z+1	; 0x01
    6abe:	82 81       	ldd	r24, Z+2	; 0x02
    6ac0:	93 81       	ldd	r25, Z+3	; 0x03
    6ac2:	20 e0       	ldi	r18, 0x00	; 0
    6ac4:	30 e0       	ldi	r19, 0x00	; 0
    6ac6:	40 e8       	ldi	r20, 0x80	; 128
    6ac8:	5f e3       	ldi	r21, 0x3F	; 63
    6aca:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6ace:	88 23       	and	r24, r24
    6ad0:	44 f4       	brge	.+16     	; 0x6ae2 <main+0x2878>
		__ticks = 1;
    6ad2:	fe 01       	movw	r30, r28
    6ad4:	e9 59       	subi	r30, 0x99	; 153
    6ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ad8:	81 e0       	ldi	r24, 0x01	; 1
    6ada:	90 e0       	ldi	r25, 0x00	; 0
    6adc:	91 83       	std	Z+1, r25	; 0x01
    6ade:	80 83       	st	Z, r24
    6ae0:	65 c0       	rjmp	.+202    	; 0x6bac <main+0x2942>
	else if (__tmp > 65535)
    6ae2:	fe 01       	movw	r30, r28
    6ae4:	e7 59       	subi	r30, 0x97	; 151
    6ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ae8:	60 81       	ld	r22, Z
    6aea:	71 81       	ldd	r23, Z+1	; 0x01
    6aec:	82 81       	ldd	r24, Z+2	; 0x02
    6aee:	93 81       	ldd	r25, Z+3	; 0x03
    6af0:	20 e0       	ldi	r18, 0x00	; 0
    6af2:	3f ef       	ldi	r19, 0xFF	; 255
    6af4:	4f e7       	ldi	r20, 0x7F	; 127
    6af6:	57 e4       	ldi	r21, 0x47	; 71
    6af8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6afc:	18 16       	cp	r1, r24
    6afe:	0c f0       	brlt	.+2      	; 0x6b02 <main+0x2898>
    6b00:	44 c0       	rjmp	.+136    	; 0x6b8a <main+0x2920>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6b02:	fe 01       	movw	r30, r28
    6b04:	e3 59       	subi	r30, 0x93	; 147
    6b06:	ff 4f       	sbci	r31, 0xFF	; 255
    6b08:	60 81       	ld	r22, Z
    6b0a:	71 81       	ldd	r23, Z+1	; 0x01
    6b0c:	82 81       	ldd	r24, Z+2	; 0x02
    6b0e:	93 81       	ldd	r25, Z+3	; 0x03
    6b10:	20 e0       	ldi	r18, 0x00	; 0
    6b12:	30 e0       	ldi	r19, 0x00	; 0
    6b14:	40 e2       	ldi	r20, 0x20	; 32
    6b16:	51 e4       	ldi	r21, 0x41	; 65
    6b18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6b1c:	dc 01       	movw	r26, r24
    6b1e:	cb 01       	movw	r24, r22
    6b20:	8e 01       	movw	r16, r28
    6b22:	09 59       	subi	r16, 0x99	; 153
    6b24:	1f 4f       	sbci	r17, 0xFF	; 255
    6b26:	bc 01       	movw	r22, r24
    6b28:	cd 01       	movw	r24, r26
    6b2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6b2e:	dc 01       	movw	r26, r24
    6b30:	cb 01       	movw	r24, r22
    6b32:	f8 01       	movw	r30, r16
    6b34:	91 83       	std	Z+1, r25	; 0x01
    6b36:	80 83       	st	Z, r24
    6b38:	1f c0       	rjmp	.+62     	; 0x6b78 <main+0x290e>
    6b3a:	fe 01       	movw	r30, r28
    6b3c:	eb 59       	subi	r30, 0x9B	; 155
    6b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    6b40:	88 ec       	ldi	r24, 0xC8	; 200
    6b42:	90 e0       	ldi	r25, 0x00	; 0
    6b44:	91 83       	std	Z+1, r25	; 0x01
    6b46:	80 83       	st	Z, r24
    6b48:	fe 01       	movw	r30, r28
    6b4a:	eb 59       	subi	r30, 0x9B	; 155
    6b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    6b4e:	80 81       	ld	r24, Z
    6b50:	91 81       	ldd	r25, Z+1	; 0x01
    6b52:	01 97       	sbiw	r24, 0x01	; 1
    6b54:	f1 f7       	brne	.-4      	; 0x6b52 <main+0x28e8>
    6b56:	fe 01       	movw	r30, r28
    6b58:	eb 59       	subi	r30, 0x9B	; 155
    6b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    6b5c:	91 83       	std	Z+1, r25	; 0x01
    6b5e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b60:	de 01       	movw	r26, r28
    6b62:	a9 59       	subi	r26, 0x99	; 153
    6b64:	bf 4f       	sbci	r27, 0xFF	; 255
    6b66:	fe 01       	movw	r30, r28
    6b68:	e9 59       	subi	r30, 0x99	; 153
    6b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    6b6c:	80 81       	ld	r24, Z
    6b6e:	91 81       	ldd	r25, Z+1	; 0x01
    6b70:	01 97       	sbiw	r24, 0x01	; 1
    6b72:	11 96       	adiw	r26, 0x01	; 1
    6b74:	9c 93       	st	X, r25
    6b76:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6b78:	fe 01       	movw	r30, r28
    6b7a:	e9 59       	subi	r30, 0x99	; 153
    6b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    6b7e:	80 81       	ld	r24, Z
    6b80:	91 81       	ldd	r25, Z+1	; 0x01
    6b82:	00 97       	sbiw	r24, 0x00	; 0
    6b84:	d1 f6       	brne	.-76     	; 0x6b3a <main+0x28d0>
    6b86:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6b8a:	8e 01       	movw	r16, r28
    6b8c:	09 59       	subi	r16, 0x99	; 153
    6b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    6b90:	fe 01       	movw	r30, r28
    6b92:	e7 59       	subi	r30, 0x97	; 151
    6b94:	ff 4f       	sbci	r31, 0xFF	; 255
    6b96:	60 81       	ld	r22, Z
    6b98:	71 81       	ldd	r23, Z+1	; 0x01
    6b9a:	82 81       	ldd	r24, Z+2	; 0x02
    6b9c:	93 81       	ldd	r25, Z+3	; 0x03
    6b9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6ba2:	dc 01       	movw	r26, r24
    6ba4:	cb 01       	movw	r24, r22
    6ba6:	f8 01       	movw	r30, r16
    6ba8:	91 83       	std	Z+1, r25	; 0x01
    6baa:	80 83       	st	Z, r24
    6bac:	de 01       	movw	r26, r28
    6bae:	ad 59       	subi	r26, 0x9D	; 157
    6bb0:	bf 4f       	sbci	r27, 0xFF	; 255
    6bb2:	fe 01       	movw	r30, r28
    6bb4:	e9 59       	subi	r30, 0x99	; 153
    6bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    6bb8:	80 81       	ld	r24, Z
    6bba:	91 81       	ldd	r25, Z+1	; 0x01
    6bbc:	11 96       	adiw	r26, 0x01	; 1
    6bbe:	9c 93       	st	X, r25
    6bc0:	8e 93       	st	-X, r24
    6bc2:	fe 01       	movw	r30, r28
    6bc4:	ed 59       	subi	r30, 0x9D	; 157
    6bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    6bc8:	80 81       	ld	r24, Z
    6bca:	91 81       	ldd	r25, Z+1	; 0x01
    6bcc:	01 97       	sbiw	r24, 0x01	; 1
    6bce:	f1 f7       	brne	.-4      	; 0x6bcc <main+0x2962>
    6bd0:	fe 01       	movw	r30, r28
    6bd2:	ed 59       	subi	r30, 0x9D	; 157
    6bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    6bd6:	91 83       	std	Z+1, r25	; 0x01
    6bd8:	80 83       	st	Z, r24
    6bda:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case 0:
					NumCheck();
    6bde:	0e 94 75 3b 	call	0x76ea	; 0x76ea <NumCheck>
    6be2:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					break;
				case '#':
					Lcd_vidSendCommand(loc2);
    6be6:	80 91 1a 01 	lds	r24, 0x011A
    6bea:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key);
    6bee:	80 91 2a 01 	lds	r24, 0x012A
    6bf2:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    6bf6:	80 91 1a 01 	lds	r24, 0x011A
    6bfa:	8f 5f       	subi	r24, 0xFF	; 255
    6bfc:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    6c00:	80 91 1c 01 	lds	r24, 0x011C
    6c04:	88 2f       	mov	r24, r24
    6c06:	90 e0       	ldi	r25, 0x00	; 0
    6c08:	20 91 2a 01 	lds	r18, 0x012A
    6c0c:	fc 01       	movw	r30, r24
    6c0e:	e1 5e       	subi	r30, 0xE1	; 225
    6c10:	fe 4f       	sbci	r31, 0xFE	; 254
    6c12:	20 83       	st	Z, r18
					j++;
    6c14:	80 91 1c 01 	lds	r24, 0x011C
    6c18:	8f 5f       	subi	r24, 0xFF	; 255
    6c1a:	80 93 1c 01 	sts	0x011C, r24
    6c1e:	fe 01       	movw	r30, r28
    6c20:	e1 5a       	subi	r30, 0xA1	; 161
    6c22:	ff 4f       	sbci	r31, 0xFF	; 255
    6c24:	80 e0       	ldi	r24, 0x00	; 0
    6c26:	90 e0       	ldi	r25, 0x00	; 0
    6c28:	a8 e4       	ldi	r26, 0x48	; 72
    6c2a:	b3 e4       	ldi	r27, 0x43	; 67
    6c2c:	80 83       	st	Z, r24
    6c2e:	91 83       	std	Z+1, r25	; 0x01
    6c30:	a2 83       	std	Z+2, r26	; 0x02
    6c32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6c34:	8e 01       	movw	r16, r28
    6c36:	05 5a       	subi	r16, 0xA5	; 165
    6c38:	1f 4f       	sbci	r17, 0xFF	; 255
    6c3a:	fe 01       	movw	r30, r28
    6c3c:	e1 5a       	subi	r30, 0xA1	; 161
    6c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c40:	60 81       	ld	r22, Z
    6c42:	71 81       	ldd	r23, Z+1	; 0x01
    6c44:	82 81       	ldd	r24, Z+2	; 0x02
    6c46:	93 81       	ldd	r25, Z+3	; 0x03
    6c48:	20 e0       	ldi	r18, 0x00	; 0
    6c4a:	30 e0       	ldi	r19, 0x00	; 0
    6c4c:	4a ef       	ldi	r20, 0xFA	; 250
    6c4e:	54 e4       	ldi	r21, 0x44	; 68
    6c50:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6c54:	dc 01       	movw	r26, r24
    6c56:	cb 01       	movw	r24, r22
    6c58:	f8 01       	movw	r30, r16
    6c5a:	80 83       	st	Z, r24
    6c5c:	91 83       	std	Z+1, r25	; 0x01
    6c5e:	a2 83       	std	Z+2, r26	; 0x02
    6c60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6c62:	fe 01       	movw	r30, r28
    6c64:	e5 5a       	subi	r30, 0xA5	; 165
    6c66:	ff 4f       	sbci	r31, 0xFF	; 255
    6c68:	60 81       	ld	r22, Z
    6c6a:	71 81       	ldd	r23, Z+1	; 0x01
    6c6c:	82 81       	ldd	r24, Z+2	; 0x02
    6c6e:	93 81       	ldd	r25, Z+3	; 0x03
    6c70:	20 e0       	ldi	r18, 0x00	; 0
    6c72:	30 e0       	ldi	r19, 0x00	; 0
    6c74:	40 e8       	ldi	r20, 0x80	; 128
    6c76:	5f e3       	ldi	r21, 0x3F	; 63
    6c78:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6c7c:	88 23       	and	r24, r24
    6c7e:	44 f4       	brge	.+16     	; 0x6c90 <main+0x2a26>
		__ticks = 1;
    6c80:	fe 01       	movw	r30, r28
    6c82:	e7 5a       	subi	r30, 0xA7	; 167
    6c84:	ff 4f       	sbci	r31, 0xFF	; 255
    6c86:	81 e0       	ldi	r24, 0x01	; 1
    6c88:	90 e0       	ldi	r25, 0x00	; 0
    6c8a:	91 83       	std	Z+1, r25	; 0x01
    6c8c:	80 83       	st	Z, r24
    6c8e:	65 c0       	rjmp	.+202    	; 0x6d5a <main+0x2af0>
	else if (__tmp > 65535)
    6c90:	fe 01       	movw	r30, r28
    6c92:	e5 5a       	subi	r30, 0xA5	; 165
    6c94:	ff 4f       	sbci	r31, 0xFF	; 255
    6c96:	60 81       	ld	r22, Z
    6c98:	71 81       	ldd	r23, Z+1	; 0x01
    6c9a:	82 81       	ldd	r24, Z+2	; 0x02
    6c9c:	93 81       	ldd	r25, Z+3	; 0x03
    6c9e:	20 e0       	ldi	r18, 0x00	; 0
    6ca0:	3f ef       	ldi	r19, 0xFF	; 255
    6ca2:	4f e7       	ldi	r20, 0x7F	; 127
    6ca4:	57 e4       	ldi	r21, 0x47	; 71
    6ca6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6caa:	18 16       	cp	r1, r24
    6cac:	0c f0       	brlt	.+2      	; 0x6cb0 <main+0x2a46>
    6cae:	44 c0       	rjmp	.+136    	; 0x6d38 <main+0x2ace>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6cb0:	fe 01       	movw	r30, r28
    6cb2:	e1 5a       	subi	r30, 0xA1	; 161
    6cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    6cb6:	60 81       	ld	r22, Z
    6cb8:	71 81       	ldd	r23, Z+1	; 0x01
    6cba:	82 81       	ldd	r24, Z+2	; 0x02
    6cbc:	93 81       	ldd	r25, Z+3	; 0x03
    6cbe:	20 e0       	ldi	r18, 0x00	; 0
    6cc0:	30 e0       	ldi	r19, 0x00	; 0
    6cc2:	40 e2       	ldi	r20, 0x20	; 32
    6cc4:	51 e4       	ldi	r21, 0x41	; 65
    6cc6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6cca:	dc 01       	movw	r26, r24
    6ccc:	cb 01       	movw	r24, r22
    6cce:	8e 01       	movw	r16, r28
    6cd0:	07 5a       	subi	r16, 0xA7	; 167
    6cd2:	1f 4f       	sbci	r17, 0xFF	; 255
    6cd4:	bc 01       	movw	r22, r24
    6cd6:	cd 01       	movw	r24, r26
    6cd8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6cdc:	dc 01       	movw	r26, r24
    6cde:	cb 01       	movw	r24, r22
    6ce0:	f8 01       	movw	r30, r16
    6ce2:	91 83       	std	Z+1, r25	; 0x01
    6ce4:	80 83       	st	Z, r24
    6ce6:	1f c0       	rjmp	.+62     	; 0x6d26 <main+0x2abc>
    6ce8:	fe 01       	movw	r30, r28
    6cea:	e9 5a       	subi	r30, 0xA9	; 169
    6cec:	ff 4f       	sbci	r31, 0xFF	; 255
    6cee:	88 ec       	ldi	r24, 0xC8	; 200
    6cf0:	90 e0       	ldi	r25, 0x00	; 0
    6cf2:	91 83       	std	Z+1, r25	; 0x01
    6cf4:	80 83       	st	Z, r24
    6cf6:	fe 01       	movw	r30, r28
    6cf8:	e9 5a       	subi	r30, 0xA9	; 169
    6cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    6cfc:	80 81       	ld	r24, Z
    6cfe:	91 81       	ldd	r25, Z+1	; 0x01
    6d00:	01 97       	sbiw	r24, 0x01	; 1
    6d02:	f1 f7       	brne	.-4      	; 0x6d00 <main+0x2a96>
    6d04:	fe 01       	movw	r30, r28
    6d06:	e9 5a       	subi	r30, 0xA9	; 169
    6d08:	ff 4f       	sbci	r31, 0xFF	; 255
    6d0a:	91 83       	std	Z+1, r25	; 0x01
    6d0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6d0e:	de 01       	movw	r26, r28
    6d10:	a7 5a       	subi	r26, 0xA7	; 167
    6d12:	bf 4f       	sbci	r27, 0xFF	; 255
    6d14:	fe 01       	movw	r30, r28
    6d16:	e7 5a       	subi	r30, 0xA7	; 167
    6d18:	ff 4f       	sbci	r31, 0xFF	; 255
    6d1a:	80 81       	ld	r24, Z
    6d1c:	91 81       	ldd	r25, Z+1	; 0x01
    6d1e:	01 97       	sbiw	r24, 0x01	; 1
    6d20:	11 96       	adiw	r26, 0x01	; 1
    6d22:	9c 93       	st	X, r25
    6d24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6d26:	fe 01       	movw	r30, r28
    6d28:	e7 5a       	subi	r30, 0xA7	; 167
    6d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d2c:	80 81       	ld	r24, Z
    6d2e:	91 81       	ldd	r25, Z+1	; 0x01
    6d30:	00 97       	sbiw	r24, 0x00	; 0
    6d32:	d1 f6       	brne	.-76     	; 0x6ce8 <main+0x2a7e>
    6d34:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6d38:	8e 01       	movw	r16, r28
    6d3a:	07 5a       	subi	r16, 0xA7	; 167
    6d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    6d3e:	fe 01       	movw	r30, r28
    6d40:	e5 5a       	subi	r30, 0xA5	; 165
    6d42:	ff 4f       	sbci	r31, 0xFF	; 255
    6d44:	60 81       	ld	r22, Z
    6d46:	71 81       	ldd	r23, Z+1	; 0x01
    6d48:	82 81       	ldd	r24, Z+2	; 0x02
    6d4a:	93 81       	ldd	r25, Z+3	; 0x03
    6d4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6d50:	dc 01       	movw	r26, r24
    6d52:	cb 01       	movw	r24, r22
    6d54:	f8 01       	movw	r30, r16
    6d56:	91 83       	std	Z+1, r25	; 0x01
    6d58:	80 83       	st	Z, r24
    6d5a:	de 01       	movw	r26, r28
    6d5c:	ab 5a       	subi	r26, 0xAB	; 171
    6d5e:	bf 4f       	sbci	r27, 0xFF	; 255
    6d60:	fe 01       	movw	r30, r28
    6d62:	e7 5a       	subi	r30, 0xA7	; 167
    6d64:	ff 4f       	sbci	r31, 0xFF	; 255
    6d66:	80 81       	ld	r24, Z
    6d68:	91 81       	ldd	r25, Z+1	; 0x01
    6d6a:	11 96       	adiw	r26, 0x01	; 1
    6d6c:	9c 93       	st	X, r25
    6d6e:	8e 93       	st	-X, r24
    6d70:	fe 01       	movw	r30, r28
    6d72:	eb 5a       	subi	r30, 0xAB	; 171
    6d74:	ff 4f       	sbci	r31, 0xFF	; 255
    6d76:	80 81       	ld	r24, Z
    6d78:	91 81       	ldd	r25, Z+1	; 0x01
    6d7a:	01 97       	sbiw	r24, 0x01	; 1
    6d7c:	f1 f7       	brne	.-4      	; 0x6d7a <main+0x2b10>
    6d7e:	fe 01       	movw	r30, r28
    6d80:	eb 5a       	subi	r30, 0xAB	; 171
    6d82:	ff 4f       	sbci	r31, 0xFF	; 255
    6d84:	91 83       	std	Z+1, r25	; 0x01
    6d86:	80 83       	st	Z, r24
    6d88:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '-':
					Lcd_vidSendCommand(loc2);
    6d8c:	80 91 1a 01 	lds	r24, 0x011A
    6d90:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key);
    6d94:	80 91 2a 01 	lds	r24, 0x012A
    6d98:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    6d9c:	80 91 1a 01 	lds	r24, 0x011A
    6da0:	8f 5f       	subi	r24, 0xFF	; 255
    6da2:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    6da6:	80 91 1c 01 	lds	r24, 0x011C
    6daa:	88 2f       	mov	r24, r24
    6dac:	90 e0       	ldi	r25, 0x00	; 0
    6dae:	20 91 2a 01 	lds	r18, 0x012A
    6db2:	fc 01       	movw	r30, r24
    6db4:	e1 5e       	subi	r30, 0xE1	; 225
    6db6:	fe 4f       	sbci	r31, 0xFE	; 254
    6db8:	20 83       	st	Z, r18
					j++;
    6dba:	80 91 1c 01 	lds	r24, 0x011C
    6dbe:	8f 5f       	subi	r24, 0xFF	; 255
    6dc0:	80 93 1c 01 	sts	0x011C, r24
    6dc4:	fe 01       	movw	r30, r28
    6dc6:	ef 5a       	subi	r30, 0xAF	; 175
    6dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    6dca:	80 e0       	ldi	r24, 0x00	; 0
    6dcc:	90 e0       	ldi	r25, 0x00	; 0
    6dce:	a8 e4       	ldi	r26, 0x48	; 72
    6dd0:	b3 e4       	ldi	r27, 0x43	; 67
    6dd2:	80 83       	st	Z, r24
    6dd4:	91 83       	std	Z+1, r25	; 0x01
    6dd6:	a2 83       	std	Z+2, r26	; 0x02
    6dd8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6dda:	8e 01       	movw	r16, r28
    6ddc:	03 5b       	subi	r16, 0xB3	; 179
    6dde:	1f 4f       	sbci	r17, 0xFF	; 255
    6de0:	fe 01       	movw	r30, r28
    6de2:	ef 5a       	subi	r30, 0xAF	; 175
    6de4:	ff 4f       	sbci	r31, 0xFF	; 255
    6de6:	60 81       	ld	r22, Z
    6de8:	71 81       	ldd	r23, Z+1	; 0x01
    6dea:	82 81       	ldd	r24, Z+2	; 0x02
    6dec:	93 81       	ldd	r25, Z+3	; 0x03
    6dee:	20 e0       	ldi	r18, 0x00	; 0
    6df0:	30 e0       	ldi	r19, 0x00	; 0
    6df2:	4a ef       	ldi	r20, 0xFA	; 250
    6df4:	54 e4       	ldi	r21, 0x44	; 68
    6df6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6dfa:	dc 01       	movw	r26, r24
    6dfc:	cb 01       	movw	r24, r22
    6dfe:	f8 01       	movw	r30, r16
    6e00:	80 83       	st	Z, r24
    6e02:	91 83       	std	Z+1, r25	; 0x01
    6e04:	a2 83       	std	Z+2, r26	; 0x02
    6e06:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6e08:	fe 01       	movw	r30, r28
    6e0a:	e3 5b       	subi	r30, 0xB3	; 179
    6e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    6e0e:	60 81       	ld	r22, Z
    6e10:	71 81       	ldd	r23, Z+1	; 0x01
    6e12:	82 81       	ldd	r24, Z+2	; 0x02
    6e14:	93 81       	ldd	r25, Z+3	; 0x03
    6e16:	20 e0       	ldi	r18, 0x00	; 0
    6e18:	30 e0       	ldi	r19, 0x00	; 0
    6e1a:	40 e8       	ldi	r20, 0x80	; 128
    6e1c:	5f e3       	ldi	r21, 0x3F	; 63
    6e1e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6e22:	88 23       	and	r24, r24
    6e24:	44 f4       	brge	.+16     	; 0x6e36 <main+0x2bcc>
		__ticks = 1;
    6e26:	fe 01       	movw	r30, r28
    6e28:	e5 5b       	subi	r30, 0xB5	; 181
    6e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e2c:	81 e0       	ldi	r24, 0x01	; 1
    6e2e:	90 e0       	ldi	r25, 0x00	; 0
    6e30:	91 83       	std	Z+1, r25	; 0x01
    6e32:	80 83       	st	Z, r24
    6e34:	65 c0       	rjmp	.+202    	; 0x6f00 <main+0x2c96>
	else if (__tmp > 65535)
    6e36:	fe 01       	movw	r30, r28
    6e38:	e3 5b       	subi	r30, 0xB3	; 179
    6e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e3c:	60 81       	ld	r22, Z
    6e3e:	71 81       	ldd	r23, Z+1	; 0x01
    6e40:	82 81       	ldd	r24, Z+2	; 0x02
    6e42:	93 81       	ldd	r25, Z+3	; 0x03
    6e44:	20 e0       	ldi	r18, 0x00	; 0
    6e46:	3f ef       	ldi	r19, 0xFF	; 255
    6e48:	4f e7       	ldi	r20, 0x7F	; 127
    6e4a:	57 e4       	ldi	r21, 0x47	; 71
    6e4c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6e50:	18 16       	cp	r1, r24
    6e52:	0c f0       	brlt	.+2      	; 0x6e56 <main+0x2bec>
    6e54:	44 c0       	rjmp	.+136    	; 0x6ede <main+0x2c74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6e56:	fe 01       	movw	r30, r28
    6e58:	ef 5a       	subi	r30, 0xAF	; 175
    6e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e5c:	60 81       	ld	r22, Z
    6e5e:	71 81       	ldd	r23, Z+1	; 0x01
    6e60:	82 81       	ldd	r24, Z+2	; 0x02
    6e62:	93 81       	ldd	r25, Z+3	; 0x03
    6e64:	20 e0       	ldi	r18, 0x00	; 0
    6e66:	30 e0       	ldi	r19, 0x00	; 0
    6e68:	40 e2       	ldi	r20, 0x20	; 32
    6e6a:	51 e4       	ldi	r21, 0x41	; 65
    6e6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6e70:	dc 01       	movw	r26, r24
    6e72:	cb 01       	movw	r24, r22
    6e74:	8e 01       	movw	r16, r28
    6e76:	05 5b       	subi	r16, 0xB5	; 181
    6e78:	1f 4f       	sbci	r17, 0xFF	; 255
    6e7a:	bc 01       	movw	r22, r24
    6e7c:	cd 01       	movw	r24, r26
    6e7e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6e82:	dc 01       	movw	r26, r24
    6e84:	cb 01       	movw	r24, r22
    6e86:	f8 01       	movw	r30, r16
    6e88:	91 83       	std	Z+1, r25	; 0x01
    6e8a:	80 83       	st	Z, r24
    6e8c:	1f c0       	rjmp	.+62     	; 0x6ecc <main+0x2c62>
    6e8e:	fe 01       	movw	r30, r28
    6e90:	e7 5b       	subi	r30, 0xB7	; 183
    6e92:	ff 4f       	sbci	r31, 0xFF	; 255
    6e94:	88 ec       	ldi	r24, 0xC8	; 200
    6e96:	90 e0       	ldi	r25, 0x00	; 0
    6e98:	91 83       	std	Z+1, r25	; 0x01
    6e9a:	80 83       	st	Z, r24
    6e9c:	fe 01       	movw	r30, r28
    6e9e:	e7 5b       	subi	r30, 0xB7	; 183
    6ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ea2:	80 81       	ld	r24, Z
    6ea4:	91 81       	ldd	r25, Z+1	; 0x01
    6ea6:	01 97       	sbiw	r24, 0x01	; 1
    6ea8:	f1 f7       	brne	.-4      	; 0x6ea6 <main+0x2c3c>
    6eaa:	fe 01       	movw	r30, r28
    6eac:	e7 5b       	subi	r30, 0xB7	; 183
    6eae:	ff 4f       	sbci	r31, 0xFF	; 255
    6eb0:	91 83       	std	Z+1, r25	; 0x01
    6eb2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6eb4:	de 01       	movw	r26, r28
    6eb6:	a5 5b       	subi	r26, 0xB5	; 181
    6eb8:	bf 4f       	sbci	r27, 0xFF	; 255
    6eba:	fe 01       	movw	r30, r28
    6ebc:	e5 5b       	subi	r30, 0xB5	; 181
    6ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    6ec0:	80 81       	ld	r24, Z
    6ec2:	91 81       	ldd	r25, Z+1	; 0x01
    6ec4:	01 97       	sbiw	r24, 0x01	; 1
    6ec6:	11 96       	adiw	r26, 0x01	; 1
    6ec8:	9c 93       	st	X, r25
    6eca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6ecc:	fe 01       	movw	r30, r28
    6ece:	e5 5b       	subi	r30, 0xB5	; 181
    6ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ed2:	80 81       	ld	r24, Z
    6ed4:	91 81       	ldd	r25, Z+1	; 0x01
    6ed6:	00 97       	sbiw	r24, 0x00	; 0
    6ed8:	d1 f6       	brne	.-76     	; 0x6e8e <main+0x2c24>
    6eda:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ede:	8e 01       	movw	r16, r28
    6ee0:	05 5b       	subi	r16, 0xB5	; 181
    6ee2:	1f 4f       	sbci	r17, 0xFF	; 255
    6ee4:	fe 01       	movw	r30, r28
    6ee6:	e3 5b       	subi	r30, 0xB3	; 179
    6ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    6eea:	60 81       	ld	r22, Z
    6eec:	71 81       	ldd	r23, Z+1	; 0x01
    6eee:	82 81       	ldd	r24, Z+2	; 0x02
    6ef0:	93 81       	ldd	r25, Z+3	; 0x03
    6ef2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6ef6:	dc 01       	movw	r26, r24
    6ef8:	cb 01       	movw	r24, r22
    6efa:	f8 01       	movw	r30, r16
    6efc:	91 83       	std	Z+1, r25	; 0x01
    6efe:	80 83       	st	Z, r24
    6f00:	de 01       	movw	r26, r28
    6f02:	a9 5b       	subi	r26, 0xB9	; 185
    6f04:	bf 4f       	sbci	r27, 0xFF	; 255
    6f06:	fe 01       	movw	r30, r28
    6f08:	e5 5b       	subi	r30, 0xB5	; 181
    6f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    6f0c:	80 81       	ld	r24, Z
    6f0e:	91 81       	ldd	r25, Z+1	; 0x01
    6f10:	11 96       	adiw	r26, 0x01	; 1
    6f12:	9c 93       	st	X, r25
    6f14:	8e 93       	st	-X, r24
    6f16:	fe 01       	movw	r30, r28
    6f18:	e9 5b       	subi	r30, 0xB9	; 185
    6f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    6f1c:	80 81       	ld	r24, Z
    6f1e:	91 81       	ldd	r25, Z+1	; 0x01
    6f20:	01 97       	sbiw	r24, 0x01	; 1
    6f22:	f1 f7       	brne	.-4      	; 0x6f20 <main+0x2cb6>
    6f24:	fe 01       	movw	r30, r28
    6f26:	e9 5b       	subi	r30, 0xB9	; 185
    6f28:	ff 4f       	sbci	r31, 0xFF	; 255
    6f2a:	91 83       	std	Z+1, r25	; 0x01
    6f2c:	80 83       	st	Z, r24
    6f2e:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;

				case '*':
					Lcd_vidSendCommand(loc2);
    6f32:	80 91 1a 01 	lds	r24, 0x011A
    6f36:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key);
    6f3a:	80 91 2a 01 	lds	r24, 0x012A
    6f3e:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    6f42:	80 91 1a 01 	lds	r24, 0x011A
    6f46:	8f 5f       	subi	r24, 0xFF	; 255
    6f48:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    6f4c:	80 91 1c 01 	lds	r24, 0x011C
    6f50:	88 2f       	mov	r24, r24
    6f52:	90 e0       	ldi	r25, 0x00	; 0
    6f54:	20 91 2a 01 	lds	r18, 0x012A
    6f58:	fc 01       	movw	r30, r24
    6f5a:	e1 5e       	subi	r30, 0xE1	; 225
    6f5c:	fe 4f       	sbci	r31, 0xFE	; 254
    6f5e:	20 83       	st	Z, r18
					j++;
    6f60:	80 91 1c 01 	lds	r24, 0x011C
    6f64:	8f 5f       	subi	r24, 0xFF	; 255
    6f66:	80 93 1c 01 	sts	0x011C, r24
    6f6a:	fe 01       	movw	r30, r28
    6f6c:	ed 5b       	subi	r30, 0xBD	; 189
    6f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    6f70:	80 e0       	ldi	r24, 0x00	; 0
    6f72:	90 e0       	ldi	r25, 0x00	; 0
    6f74:	a8 e4       	ldi	r26, 0x48	; 72
    6f76:	b3 e4       	ldi	r27, 0x43	; 67
    6f78:	80 83       	st	Z, r24
    6f7a:	91 83       	std	Z+1, r25	; 0x01
    6f7c:	a2 83       	std	Z+2, r26	; 0x02
    6f7e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6f80:	8e 01       	movw	r16, r28
    6f82:	01 5c       	subi	r16, 0xC1	; 193
    6f84:	1f 4f       	sbci	r17, 0xFF	; 255
    6f86:	fe 01       	movw	r30, r28
    6f88:	ed 5b       	subi	r30, 0xBD	; 189
    6f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    6f8c:	60 81       	ld	r22, Z
    6f8e:	71 81       	ldd	r23, Z+1	; 0x01
    6f90:	82 81       	ldd	r24, Z+2	; 0x02
    6f92:	93 81       	ldd	r25, Z+3	; 0x03
    6f94:	20 e0       	ldi	r18, 0x00	; 0
    6f96:	30 e0       	ldi	r19, 0x00	; 0
    6f98:	4a ef       	ldi	r20, 0xFA	; 250
    6f9a:	54 e4       	ldi	r21, 0x44	; 68
    6f9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6fa0:	dc 01       	movw	r26, r24
    6fa2:	cb 01       	movw	r24, r22
    6fa4:	f8 01       	movw	r30, r16
    6fa6:	80 83       	st	Z, r24
    6fa8:	91 83       	std	Z+1, r25	; 0x01
    6faa:	a2 83       	std	Z+2, r26	; 0x02
    6fac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6fae:	fe 01       	movw	r30, r28
    6fb0:	ff 96       	adiw	r30, 0x3f	; 63
    6fb2:	60 81       	ld	r22, Z
    6fb4:	71 81       	ldd	r23, Z+1	; 0x01
    6fb6:	82 81       	ldd	r24, Z+2	; 0x02
    6fb8:	93 81       	ldd	r25, Z+3	; 0x03
    6fba:	20 e0       	ldi	r18, 0x00	; 0
    6fbc:	30 e0       	ldi	r19, 0x00	; 0
    6fbe:	40 e8       	ldi	r20, 0x80	; 128
    6fc0:	5f e3       	ldi	r21, 0x3F	; 63
    6fc2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    6fc6:	88 23       	and	r24, r24
    6fc8:	2c f4       	brge	.+10     	; 0x6fd4 <main+0x2d6a>
		__ticks = 1;
    6fca:	81 e0       	ldi	r24, 0x01	; 1
    6fcc:	90 e0       	ldi	r25, 0x00	; 0
    6fce:	9e af       	std	Y+62, r25	; 0x3e
    6fd0:	8d af       	std	Y+61, r24	; 0x3d
    6fd2:	47 c0       	rjmp	.+142    	; 0x7062 <main+0x2df8>
	else if (__tmp > 65535)
    6fd4:	fe 01       	movw	r30, r28
    6fd6:	ff 96       	adiw	r30, 0x3f	; 63
    6fd8:	60 81       	ld	r22, Z
    6fda:	71 81       	ldd	r23, Z+1	; 0x01
    6fdc:	82 81       	ldd	r24, Z+2	; 0x02
    6fde:	93 81       	ldd	r25, Z+3	; 0x03
    6fe0:	20 e0       	ldi	r18, 0x00	; 0
    6fe2:	3f ef       	ldi	r19, 0xFF	; 255
    6fe4:	4f e7       	ldi	r20, 0x7F	; 127
    6fe6:	57 e4       	ldi	r21, 0x47	; 71
    6fe8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    6fec:	18 16       	cp	r1, r24
    6fee:	6c f5       	brge	.+90     	; 0x704a <main+0x2de0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6ff0:	fe 01       	movw	r30, r28
    6ff2:	ed 5b       	subi	r30, 0xBD	; 189
    6ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    6ff6:	60 81       	ld	r22, Z
    6ff8:	71 81       	ldd	r23, Z+1	; 0x01
    6ffa:	82 81       	ldd	r24, Z+2	; 0x02
    6ffc:	93 81       	ldd	r25, Z+3	; 0x03
    6ffe:	20 e0       	ldi	r18, 0x00	; 0
    7000:	30 e0       	ldi	r19, 0x00	; 0
    7002:	40 e2       	ldi	r20, 0x20	; 32
    7004:	51 e4       	ldi	r21, 0x41	; 65
    7006:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    700a:	dc 01       	movw	r26, r24
    700c:	cb 01       	movw	r24, r22
    700e:	bc 01       	movw	r22, r24
    7010:	cd 01       	movw	r24, r26
    7012:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7016:	dc 01       	movw	r26, r24
    7018:	cb 01       	movw	r24, r22
    701a:	9e af       	std	Y+62, r25	; 0x3e
    701c:	8d af       	std	Y+61, r24	; 0x3d
    701e:	0f c0       	rjmp	.+30     	; 0x703e <main+0x2dd4>
    7020:	88 ec       	ldi	r24, 0xC8	; 200
    7022:	90 e0       	ldi	r25, 0x00	; 0
    7024:	9c af       	std	Y+60, r25	; 0x3c
    7026:	8b af       	std	Y+59, r24	; 0x3b
    7028:	8b ad       	ldd	r24, Y+59	; 0x3b
    702a:	9c ad       	ldd	r25, Y+60	; 0x3c
    702c:	01 97       	sbiw	r24, 0x01	; 1
    702e:	f1 f7       	brne	.-4      	; 0x702c <main+0x2dc2>
    7030:	9c af       	std	Y+60, r25	; 0x3c
    7032:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7034:	8d ad       	ldd	r24, Y+61	; 0x3d
    7036:	9e ad       	ldd	r25, Y+62	; 0x3e
    7038:	01 97       	sbiw	r24, 0x01	; 1
    703a:	9e af       	std	Y+62, r25	; 0x3e
    703c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    703e:	8d ad       	ldd	r24, Y+61	; 0x3d
    7040:	9e ad       	ldd	r25, Y+62	; 0x3e
    7042:	00 97       	sbiw	r24, 0x00	; 0
    7044:	69 f7       	brne	.-38     	; 0x7020 <main+0x2db6>
    7046:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    704a:	fe 01       	movw	r30, r28
    704c:	ff 96       	adiw	r30, 0x3f	; 63
    704e:	60 81       	ld	r22, Z
    7050:	71 81       	ldd	r23, Z+1	; 0x01
    7052:	82 81       	ldd	r24, Z+2	; 0x02
    7054:	93 81       	ldd	r25, Z+3	; 0x03
    7056:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    705a:	dc 01       	movw	r26, r24
    705c:	cb 01       	movw	r24, r22
    705e:	9e af       	std	Y+62, r25	; 0x3e
    7060:	8d af       	std	Y+61, r24	; 0x3d
    7062:	8d ad       	ldd	r24, Y+61	; 0x3d
    7064:	9e ad       	ldd	r25, Y+62	; 0x3e
    7066:	9a af       	std	Y+58, r25	; 0x3a
    7068:	89 af       	std	Y+57, r24	; 0x39
    706a:	89 ad       	ldd	r24, Y+57	; 0x39
    706c:	9a ad       	ldd	r25, Y+58	; 0x3a
    706e:	01 97       	sbiw	r24, 0x01	; 1
    7070:	f1 f7       	brne	.-4      	; 0x706e <main+0x2e04>
    7072:	9a af       	std	Y+58, r25	; 0x3a
    7074:	89 af       	std	Y+57, r24	; 0x39
    7076:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				case '/':
					Lcd_vidSendCommand(loc2);
    707a:	80 91 1a 01 	lds	r24, 0x011A
    707e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
					Lcd_vidWriteChar(key);
    7082:	80 91 2a 01 	lds	r24, 0x012A
    7086:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
					loc2++;
    708a:	80 91 1a 01 	lds	r24, 0x011A
    708e:	8f 5f       	subi	r24, 0xFF	; 255
    7090:	80 93 1a 01 	sts	0x011A, r24
					pass[j]=key;
    7094:	80 91 1c 01 	lds	r24, 0x011C
    7098:	88 2f       	mov	r24, r24
    709a:	90 e0       	ldi	r25, 0x00	; 0
    709c:	20 91 2a 01 	lds	r18, 0x012A
    70a0:	fc 01       	movw	r30, r24
    70a2:	e1 5e       	subi	r30, 0xE1	; 225
    70a4:	fe 4f       	sbci	r31, 0xFE	; 254
    70a6:	20 83       	st	Z, r18
					j++;
    70a8:	80 91 1c 01 	lds	r24, 0x011C
    70ac:	8f 5f       	subi	r24, 0xFF	; 255
    70ae:	80 93 1c 01 	sts	0x011C, r24
    70b2:	80 e0       	ldi	r24, 0x00	; 0
    70b4:	90 e0       	ldi	r25, 0x00	; 0
    70b6:	a8 e4       	ldi	r26, 0x48	; 72
    70b8:	b3 e4       	ldi	r27, 0x43	; 67
    70ba:	8d ab       	std	Y+53, r24	; 0x35
    70bc:	9e ab       	std	Y+54, r25	; 0x36
    70be:	af ab       	std	Y+55, r26	; 0x37
    70c0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    70c2:	6d a9       	ldd	r22, Y+53	; 0x35
    70c4:	7e a9       	ldd	r23, Y+54	; 0x36
    70c6:	8f a9       	ldd	r24, Y+55	; 0x37
    70c8:	98 ad       	ldd	r25, Y+56	; 0x38
    70ca:	20 e0       	ldi	r18, 0x00	; 0
    70cc:	30 e0       	ldi	r19, 0x00	; 0
    70ce:	4a ef       	ldi	r20, 0xFA	; 250
    70d0:	54 e4       	ldi	r21, 0x44	; 68
    70d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    70d6:	dc 01       	movw	r26, r24
    70d8:	cb 01       	movw	r24, r22
    70da:	89 ab       	std	Y+49, r24	; 0x31
    70dc:	9a ab       	std	Y+50, r25	; 0x32
    70de:	ab ab       	std	Y+51, r26	; 0x33
    70e0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    70e2:	69 a9       	ldd	r22, Y+49	; 0x31
    70e4:	7a a9       	ldd	r23, Y+50	; 0x32
    70e6:	8b a9       	ldd	r24, Y+51	; 0x33
    70e8:	9c a9       	ldd	r25, Y+52	; 0x34
    70ea:	20 e0       	ldi	r18, 0x00	; 0
    70ec:	30 e0       	ldi	r19, 0x00	; 0
    70ee:	40 e8       	ldi	r20, 0x80	; 128
    70f0:	5f e3       	ldi	r21, 0x3F	; 63
    70f2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    70f6:	88 23       	and	r24, r24
    70f8:	2c f4       	brge	.+10     	; 0x7104 <main+0x2e9a>
		__ticks = 1;
    70fa:	81 e0       	ldi	r24, 0x01	; 1
    70fc:	90 e0       	ldi	r25, 0x00	; 0
    70fe:	98 ab       	std	Y+48, r25	; 0x30
    7100:	8f a7       	std	Y+47, r24	; 0x2f
    7102:	40 c0       	rjmp	.+128    	; 0x7184 <main+0x2f1a>
	else if (__tmp > 65535)
    7104:	69 a9       	ldd	r22, Y+49	; 0x31
    7106:	7a a9       	ldd	r23, Y+50	; 0x32
    7108:	8b a9       	ldd	r24, Y+51	; 0x33
    710a:	9c a9       	ldd	r25, Y+52	; 0x34
    710c:	20 e0       	ldi	r18, 0x00	; 0
    710e:	3f ef       	ldi	r19, 0xFF	; 255
    7110:	4f e7       	ldi	r20, 0x7F	; 127
    7112:	57 e4       	ldi	r21, 0x47	; 71
    7114:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    7118:	18 16       	cp	r1, r24
    711a:	54 f5       	brge	.+84     	; 0x7170 <main+0x2f06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    711c:	6d a9       	ldd	r22, Y+53	; 0x35
    711e:	7e a9       	ldd	r23, Y+54	; 0x36
    7120:	8f a9       	ldd	r24, Y+55	; 0x37
    7122:	98 ad       	ldd	r25, Y+56	; 0x38
    7124:	20 e0       	ldi	r18, 0x00	; 0
    7126:	30 e0       	ldi	r19, 0x00	; 0
    7128:	40 e2       	ldi	r20, 0x20	; 32
    712a:	51 e4       	ldi	r21, 0x41	; 65
    712c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7130:	dc 01       	movw	r26, r24
    7132:	cb 01       	movw	r24, r22
    7134:	bc 01       	movw	r22, r24
    7136:	cd 01       	movw	r24, r26
    7138:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    713c:	dc 01       	movw	r26, r24
    713e:	cb 01       	movw	r24, r22
    7140:	98 ab       	std	Y+48, r25	; 0x30
    7142:	8f a7       	std	Y+47, r24	; 0x2f
    7144:	0f c0       	rjmp	.+30     	; 0x7164 <main+0x2efa>
    7146:	88 ec       	ldi	r24, 0xC8	; 200
    7148:	90 e0       	ldi	r25, 0x00	; 0
    714a:	9e a7       	std	Y+46, r25	; 0x2e
    714c:	8d a7       	std	Y+45, r24	; 0x2d
    714e:	8d a5       	ldd	r24, Y+45	; 0x2d
    7150:	9e a5       	ldd	r25, Y+46	; 0x2e
    7152:	01 97       	sbiw	r24, 0x01	; 1
    7154:	f1 f7       	brne	.-4      	; 0x7152 <main+0x2ee8>
    7156:	9e a7       	std	Y+46, r25	; 0x2e
    7158:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    715a:	8f a5       	ldd	r24, Y+47	; 0x2f
    715c:	98 a9       	ldd	r25, Y+48	; 0x30
    715e:	01 97       	sbiw	r24, 0x01	; 1
    7160:	98 ab       	std	Y+48, r25	; 0x30
    7162:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7164:	8f a5       	ldd	r24, Y+47	; 0x2f
    7166:	98 a9       	ldd	r25, Y+48	; 0x30
    7168:	00 97       	sbiw	r24, 0x00	; 0
    716a:	69 f7       	brne	.-38     	; 0x7146 <main+0x2edc>
    716c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7170:	69 a9       	ldd	r22, Y+49	; 0x31
    7172:	7a a9       	ldd	r23, Y+50	; 0x32
    7174:	8b a9       	ldd	r24, Y+51	; 0x33
    7176:	9c a9       	ldd	r25, Y+52	; 0x34
    7178:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    717c:	dc 01       	movw	r26, r24
    717e:	cb 01       	movw	r24, r22
    7180:	98 ab       	std	Y+48, r25	; 0x30
    7182:	8f a7       	std	Y+47, r24	; 0x2f
    7184:	8f a5       	ldd	r24, Y+47	; 0x2f
    7186:	98 a9       	ldd	r25, Y+48	; 0x30
    7188:	9c a7       	std	Y+44, r25	; 0x2c
    718a:	8b a7       	std	Y+43, r24	; 0x2b
    718c:	8b a5       	ldd	r24, Y+43	; 0x2b
    718e:	9c a5       	ldd	r25, Y+44	; 0x2c
    7190:	01 97       	sbiw	r24, 0x01	; 1
    7192:	f1 f7       	brne	.-4      	; 0x7190 <main+0x2f26>
    7194:	9c a7       	std	Y+44, r25	; 0x2c
    7196:	8b a7       	std	Y+43, r24	; 0x2b
    7198:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					_delay_ms(200);
					break;
				}
			}
			else if(key=='='){
    719c:	80 91 2a 01 	lds	r24, 0x012A
    71a0:	8d 33       	cpi	r24, 0x3D	; 61
    71a2:	11 f0       	breq	.+4      	; 0x71a8 <main+0x2f3e>
    71a4:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>

				flag=0;
    71a8:	10 92 24 01 	sts	0x0124, r1
				Lcd_vidSendCommand(0xC0);
    71ac:	80 ec       	ldi	r24, 0xC0	; 192
    71ae:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
				for(i=0; i<16; i++){
    71b2:	10 92 28 01 	sts	0x0128, r1
    71b6:	08 c0       	rjmp	.+16     	; 0x71c8 <main+0x2f5e>
					Lcd_vidWriteChar(' ');
    71b8:	80 e2       	ldi	r24, 0x20	; 32
    71ba:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
			}
			else if(key=='='){

				flag=0;
				Lcd_vidSendCommand(0xC0);
				for(i=0; i<16; i++){
    71be:	80 91 28 01 	lds	r24, 0x0128
    71c2:	8f 5f       	subi	r24, 0xFF	; 255
    71c4:	80 93 28 01 	sts	0x0128, r24
    71c8:	80 91 28 01 	lds	r24, 0x0128
    71cc:	80 31       	cpi	r24, 0x10	; 16
    71ce:	a0 f3       	brcs	.-24     	; 0x71b8 <main+0x2f4e>
					Lcd_vidWriteChar(' ');
				}
				switch(passflag){
    71d0:	80 91 2b 01 	lds	r24, 0x012B
    71d4:	28 2f       	mov	r18, r24
    71d6:	30 e0       	ldi	r19, 0x00	; 0
    71d8:	cb 55       	subi	r28, 0x5B	; 91
    71da:	de 4f       	sbci	r29, 0xFE	; 254
    71dc:	39 83       	std	Y+1, r19	; 0x01
    71de:	28 83       	st	Y, r18
    71e0:	c5 5a       	subi	r28, 0xA5	; 165
    71e2:	d1 40       	sbci	r29, 0x01	; 1
    71e4:	cb 55       	subi	r28, 0x5B	; 91
    71e6:	de 4f       	sbci	r29, 0xFE	; 254
    71e8:	88 81       	ld	r24, Y
    71ea:	99 81       	ldd	r25, Y+1	; 0x01
    71ec:	c5 5a       	subi	r28, 0xA5	; 165
    71ee:	d1 40       	sbci	r29, 0x01	; 1
    71f0:	82 30       	cpi	r24, 0x02	; 2
    71f2:	91 05       	cpc	r25, r1
    71f4:	09 f4       	brne	.+2      	; 0x71f8 <main+0x2f8e>
    71f6:	c4 c0       	rjmp	.+392    	; 0x7380 <main+0x3116>
    71f8:	cb 55       	subi	r28, 0x5B	; 91
    71fa:	de 4f       	sbci	r29, 0xFE	; 254
    71fc:	e8 81       	ld	r30, Y
    71fe:	f9 81       	ldd	r31, Y+1	; 0x01
    7200:	c5 5a       	subi	r28, 0xA5	; 165
    7202:	d1 40       	sbci	r29, 0x01	; 1
    7204:	e3 30       	cpi	r30, 0x03	; 3
    7206:	f1 05       	cpc	r31, r1
    7208:	09 f4       	brne	.+2      	; 0x720c <main+0x2fa2>
    720a:	4c c1       	rjmp	.+664    	; 0x74a4 <main+0x323a>
    720c:	cb 55       	subi	r28, 0x5B	; 91
    720e:	de 4f       	sbci	r29, 0xFE	; 254
    7210:	28 81       	ld	r18, Y
    7212:	39 81       	ldd	r19, Y+1	; 0x01
    7214:	c5 5a       	subi	r28, 0xA5	; 165
    7216:	d1 40       	sbci	r29, 0x01	; 1
    7218:	21 30       	cpi	r18, 0x01	; 1
    721a:	31 05       	cpc	r19, r1
    721c:	11 f0       	breq	.+4      	; 0x7222 <main+0x2fb8>
    721e:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
				case 1:
					jj=PassCheck(pass,pass1);
    7222:	8f e1       	ldi	r24, 0x1F	; 31
    7224:	91 e0       	ldi	r25, 0x01	; 1
    7226:	2d e0       	ldi	r18, 0x0D	; 13
    7228:	31 e0       	ldi	r19, 0x01	; 1
    722a:	b9 01       	movw	r22, r18
    722c:	0e 94 29 3b 	call	0x7652	; 0x7652 <PassCheck>
    7230:	80 93 1d 01 	sts	0x011D, r24
					if(jj==1){
    7234:	80 91 1d 01 	lds	r24, 0x011D
    7238:	81 30       	cpi	r24, 0x01	; 1
    723a:	09 f0       	breq	.+2      	; 0x723e <main+0x2fd4>
    723c:	7f c0       	rjmp	.+254    	; 0x733c <main+0x30d2>
						//do something
						Lcd_vidSendCommand(0x01);
    723e:	81 e0       	ldi	r24, 0x01	; 1
    7240:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidSendCommand(0x80);
    7244:	80 e8       	ldi	r24, 0x80	; 128
    7246:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Welcome User 1");
    724a:	84 e8       	ldi	r24, 0x84	; 132
    724c:	90 e0       	ldi	r25, 0x00	; 0
    724e:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    7252:	80 e0       	ldi	r24, 0x00	; 0
    7254:	90 e8       	ldi	r25, 0x80	; 128
    7256:	ab e3       	ldi	r26, 0x3B	; 59
    7258:	b5 e4       	ldi	r27, 0x45	; 69
    725a:	8f a3       	std	Y+39, r24	; 0x27
    725c:	98 a7       	std	Y+40, r25	; 0x28
    725e:	a9 a7       	std	Y+41, r26	; 0x29
    7260:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7262:	6f a1       	ldd	r22, Y+39	; 0x27
    7264:	78 a5       	ldd	r23, Y+40	; 0x28
    7266:	89 a5       	ldd	r24, Y+41	; 0x29
    7268:	9a a5       	ldd	r25, Y+42	; 0x2a
    726a:	20 e0       	ldi	r18, 0x00	; 0
    726c:	30 e0       	ldi	r19, 0x00	; 0
    726e:	4a ef       	ldi	r20, 0xFA	; 250
    7270:	54 e4       	ldi	r21, 0x44	; 68
    7272:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7276:	dc 01       	movw	r26, r24
    7278:	cb 01       	movw	r24, r22
    727a:	8b a3       	std	Y+35, r24	; 0x23
    727c:	9c a3       	std	Y+36, r25	; 0x24
    727e:	ad a3       	std	Y+37, r26	; 0x25
    7280:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    7282:	6b a1       	ldd	r22, Y+35	; 0x23
    7284:	7c a1       	ldd	r23, Y+36	; 0x24
    7286:	8d a1       	ldd	r24, Y+37	; 0x25
    7288:	9e a1       	ldd	r25, Y+38	; 0x26
    728a:	20 e0       	ldi	r18, 0x00	; 0
    728c:	30 e0       	ldi	r19, 0x00	; 0
    728e:	40 e8       	ldi	r20, 0x80	; 128
    7290:	5f e3       	ldi	r21, 0x3F	; 63
    7292:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    7296:	88 23       	and	r24, r24
    7298:	2c f4       	brge	.+10     	; 0x72a4 <main+0x303a>
		__ticks = 1;
    729a:	81 e0       	ldi	r24, 0x01	; 1
    729c:	90 e0       	ldi	r25, 0x00	; 0
    729e:	9a a3       	std	Y+34, r25	; 0x22
    72a0:	89 a3       	std	Y+33, r24	; 0x21
    72a2:	40 c0       	rjmp	.+128    	; 0x7324 <main+0x30ba>
	else if (__tmp > 65535)
    72a4:	6b a1       	ldd	r22, Y+35	; 0x23
    72a6:	7c a1       	ldd	r23, Y+36	; 0x24
    72a8:	8d a1       	ldd	r24, Y+37	; 0x25
    72aa:	9e a1       	ldd	r25, Y+38	; 0x26
    72ac:	20 e0       	ldi	r18, 0x00	; 0
    72ae:	3f ef       	ldi	r19, 0xFF	; 255
    72b0:	4f e7       	ldi	r20, 0x7F	; 127
    72b2:	57 e4       	ldi	r21, 0x47	; 71
    72b4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    72b8:	18 16       	cp	r1, r24
    72ba:	54 f5       	brge	.+84     	; 0x7310 <main+0x30a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    72bc:	6f a1       	ldd	r22, Y+39	; 0x27
    72be:	78 a5       	ldd	r23, Y+40	; 0x28
    72c0:	89 a5       	ldd	r24, Y+41	; 0x29
    72c2:	9a a5       	ldd	r25, Y+42	; 0x2a
    72c4:	20 e0       	ldi	r18, 0x00	; 0
    72c6:	30 e0       	ldi	r19, 0x00	; 0
    72c8:	40 e2       	ldi	r20, 0x20	; 32
    72ca:	51 e4       	ldi	r21, 0x41	; 65
    72cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    72d0:	dc 01       	movw	r26, r24
    72d2:	cb 01       	movw	r24, r22
    72d4:	bc 01       	movw	r22, r24
    72d6:	cd 01       	movw	r24, r26
    72d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    72dc:	dc 01       	movw	r26, r24
    72de:	cb 01       	movw	r24, r22
    72e0:	9a a3       	std	Y+34, r25	; 0x22
    72e2:	89 a3       	std	Y+33, r24	; 0x21
    72e4:	0f c0       	rjmp	.+30     	; 0x7304 <main+0x309a>
    72e6:	88 ec       	ldi	r24, 0xC8	; 200
    72e8:	90 e0       	ldi	r25, 0x00	; 0
    72ea:	98 a3       	std	Y+32, r25	; 0x20
    72ec:	8f 8f       	std	Y+31, r24	; 0x1f
    72ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    72f0:	98 a1       	ldd	r25, Y+32	; 0x20
    72f2:	01 97       	sbiw	r24, 0x01	; 1
    72f4:	f1 f7       	brne	.-4      	; 0x72f2 <main+0x3088>
    72f6:	98 a3       	std	Y+32, r25	; 0x20
    72f8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    72fa:	89 a1       	ldd	r24, Y+33	; 0x21
    72fc:	9a a1       	ldd	r25, Y+34	; 0x22
    72fe:	01 97       	sbiw	r24, 0x01	; 1
    7300:	9a a3       	std	Y+34, r25	; 0x22
    7302:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7304:	89 a1       	ldd	r24, Y+33	; 0x21
    7306:	9a a1       	ldd	r25, Y+34	; 0x22
    7308:	00 97       	sbiw	r24, 0x00	; 0
    730a:	69 f7       	brne	.-38     	; 0x72e6 <main+0x307c>
    730c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7310:	6b a1       	ldd	r22, Y+35	; 0x23
    7312:	7c a1       	ldd	r23, Y+36	; 0x24
    7314:	8d a1       	ldd	r24, Y+37	; 0x25
    7316:	9e a1       	ldd	r25, Y+38	; 0x26
    7318:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    731c:	dc 01       	movw	r26, r24
    731e:	cb 01       	movw	r24, r22
    7320:	9a a3       	std	Y+34, r25	; 0x22
    7322:	89 a3       	std	Y+33, r24	; 0x21
    7324:	89 a1       	ldd	r24, Y+33	; 0x21
    7326:	9a a1       	ldd	r25, Y+34	; 0x22
    7328:	9e 8f       	std	Y+30, r25	; 0x1e
    732a:	8d 8f       	std	Y+29, r24	; 0x1d
    732c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    732e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7330:	01 97       	sbiw	r24, 0x01	; 1
    7332:	f1 f7       	brne	.-4      	; 0x7330 <main+0x30c6>
    7334:	9e 8f       	std	Y+30, r25	; 0x1e
    7336:	8d 8f       	std	Y+29, r24	; 0x1d
    7338:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
						_delay_ms(3000);
					}
					else if(jj==0){
    733c:	80 91 1d 01 	lds	r24, 0x011D
    7340:	88 23       	and	r24, r24
    7342:	61 f4       	brne	.+24     	; 0x735c <main+0x30f2>
						//do something
						Lcd_vidSendCommand(0x01);
    7344:	81 e0       	ldi	r24, 0x01	; 1
    7346:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidSendCommand(0xC0);
    734a:	80 ec       	ldi	r24, 0xC0	; 192
    734c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Wrong Password1");
    7350:	83 e9       	ldi	r24, 0x93	; 147
    7352:	90 e0       	ldi	r25, 0x00	; 0
    7354:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    7358:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					}
					else if(jj==2){
    735c:	80 91 1d 01 	lds	r24, 0x011D
    7360:	82 30       	cpi	r24, 0x02	; 2
    7362:	11 f0       	breq	.+4      	; 0x7368 <main+0x30fe>
    7364:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
						Lcd_vidSendCommand(0x01);
    7368:	81 e0       	ldi	r24, 0x01	; 1
    736a:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidSendCommand(0x80);
    736e:	80 e8       	ldi	r24, 0x80	; 128
    7370:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("No pass");
    7374:	83 ea       	ldi	r24, 0xA3	; 163
    7376:	90 e0       	ldi	r25, 0x00	; 0
    7378:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    737c:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					}
					break;
				case 2:
					if(PassCheck(pass,pass2)==1){
    7380:	8f e1       	ldi	r24, 0x1F	; 31
    7382:	91 e0       	ldi	r25, 0x01	; 1
    7384:	21 e1       	ldi	r18, 0x11	; 17
    7386:	31 e0       	ldi	r19, 0x01	; 1
    7388:	b9 01       	movw	r22, r18
    738a:	0e 94 29 3b 	call	0x7652	; 0x7652 <PassCheck>
    738e:	81 30       	cpi	r24, 0x01	; 1
    7390:	09 f0       	breq	.+2      	; 0x7394 <main+0x312a>
    7392:	7f c0       	rjmp	.+254    	; 0x7492 <main+0x3228>
						//do something
						Lcd_vidSendCommand(0x01);
    7394:	81 e0       	ldi	r24, 0x01	; 1
    7396:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidSendCommand(0x80);
    739a:	80 e8       	ldi	r24, 0x80	; 128
    739c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Welcome User 2");
    73a0:	8b ea       	ldi	r24, 0xAB	; 171
    73a2:	90 e0       	ldi	r25, 0x00	; 0
    73a4:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    73a8:	80 e0       	ldi	r24, 0x00	; 0
    73aa:	90 e8       	ldi	r25, 0x80	; 128
    73ac:	ab e3       	ldi	r26, 0x3B	; 59
    73ae:	b5 e4       	ldi	r27, 0x45	; 69
    73b0:	89 8f       	std	Y+25, r24	; 0x19
    73b2:	9a 8f       	std	Y+26, r25	; 0x1a
    73b4:	ab 8f       	std	Y+27, r26	; 0x1b
    73b6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    73b8:	69 8d       	ldd	r22, Y+25	; 0x19
    73ba:	7a 8d       	ldd	r23, Y+26	; 0x1a
    73bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    73be:	9c 8d       	ldd	r25, Y+28	; 0x1c
    73c0:	20 e0       	ldi	r18, 0x00	; 0
    73c2:	30 e0       	ldi	r19, 0x00	; 0
    73c4:	4a ef       	ldi	r20, 0xFA	; 250
    73c6:	54 e4       	ldi	r21, 0x44	; 68
    73c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    73cc:	dc 01       	movw	r26, r24
    73ce:	cb 01       	movw	r24, r22
    73d0:	8d 8b       	std	Y+21, r24	; 0x15
    73d2:	9e 8b       	std	Y+22, r25	; 0x16
    73d4:	af 8b       	std	Y+23, r26	; 0x17
    73d6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    73d8:	6d 89       	ldd	r22, Y+21	; 0x15
    73da:	7e 89       	ldd	r23, Y+22	; 0x16
    73dc:	8f 89       	ldd	r24, Y+23	; 0x17
    73de:	98 8d       	ldd	r25, Y+24	; 0x18
    73e0:	20 e0       	ldi	r18, 0x00	; 0
    73e2:	30 e0       	ldi	r19, 0x00	; 0
    73e4:	40 e8       	ldi	r20, 0x80	; 128
    73e6:	5f e3       	ldi	r21, 0x3F	; 63
    73e8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    73ec:	88 23       	and	r24, r24
    73ee:	2c f4       	brge	.+10     	; 0x73fa <main+0x3190>
		__ticks = 1;
    73f0:	81 e0       	ldi	r24, 0x01	; 1
    73f2:	90 e0       	ldi	r25, 0x00	; 0
    73f4:	9c 8b       	std	Y+20, r25	; 0x14
    73f6:	8b 8b       	std	Y+19, r24	; 0x13
    73f8:	40 c0       	rjmp	.+128    	; 0x747a <main+0x3210>
	else if (__tmp > 65535)
    73fa:	6d 89       	ldd	r22, Y+21	; 0x15
    73fc:	7e 89       	ldd	r23, Y+22	; 0x16
    73fe:	8f 89       	ldd	r24, Y+23	; 0x17
    7400:	98 8d       	ldd	r25, Y+24	; 0x18
    7402:	20 e0       	ldi	r18, 0x00	; 0
    7404:	3f ef       	ldi	r19, 0xFF	; 255
    7406:	4f e7       	ldi	r20, 0x7F	; 127
    7408:	57 e4       	ldi	r21, 0x47	; 71
    740a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    740e:	18 16       	cp	r1, r24
    7410:	54 f5       	brge	.+84     	; 0x7466 <main+0x31fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7412:	69 8d       	ldd	r22, Y+25	; 0x19
    7414:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7416:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7418:	9c 8d       	ldd	r25, Y+28	; 0x1c
    741a:	20 e0       	ldi	r18, 0x00	; 0
    741c:	30 e0       	ldi	r19, 0x00	; 0
    741e:	40 e2       	ldi	r20, 0x20	; 32
    7420:	51 e4       	ldi	r21, 0x41	; 65
    7422:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7426:	dc 01       	movw	r26, r24
    7428:	cb 01       	movw	r24, r22
    742a:	bc 01       	movw	r22, r24
    742c:	cd 01       	movw	r24, r26
    742e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7432:	dc 01       	movw	r26, r24
    7434:	cb 01       	movw	r24, r22
    7436:	9c 8b       	std	Y+20, r25	; 0x14
    7438:	8b 8b       	std	Y+19, r24	; 0x13
    743a:	0f c0       	rjmp	.+30     	; 0x745a <main+0x31f0>
    743c:	88 ec       	ldi	r24, 0xC8	; 200
    743e:	90 e0       	ldi	r25, 0x00	; 0
    7440:	9a 8b       	std	Y+18, r25	; 0x12
    7442:	89 8b       	std	Y+17, r24	; 0x11
    7444:	89 89       	ldd	r24, Y+17	; 0x11
    7446:	9a 89       	ldd	r25, Y+18	; 0x12
    7448:	01 97       	sbiw	r24, 0x01	; 1
    744a:	f1 f7       	brne	.-4      	; 0x7448 <main+0x31de>
    744c:	9a 8b       	std	Y+18, r25	; 0x12
    744e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7450:	8b 89       	ldd	r24, Y+19	; 0x13
    7452:	9c 89       	ldd	r25, Y+20	; 0x14
    7454:	01 97       	sbiw	r24, 0x01	; 1
    7456:	9c 8b       	std	Y+20, r25	; 0x14
    7458:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    745a:	8b 89       	ldd	r24, Y+19	; 0x13
    745c:	9c 89       	ldd	r25, Y+20	; 0x14
    745e:	00 97       	sbiw	r24, 0x00	; 0
    7460:	69 f7       	brne	.-38     	; 0x743c <main+0x31d2>
    7462:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7466:	6d 89       	ldd	r22, Y+21	; 0x15
    7468:	7e 89       	ldd	r23, Y+22	; 0x16
    746a:	8f 89       	ldd	r24, Y+23	; 0x17
    746c:	98 8d       	ldd	r25, Y+24	; 0x18
    746e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7472:	dc 01       	movw	r26, r24
    7474:	cb 01       	movw	r24, r22
    7476:	9c 8b       	std	Y+20, r25	; 0x14
    7478:	8b 8b       	std	Y+19, r24	; 0x13
    747a:	8b 89       	ldd	r24, Y+19	; 0x13
    747c:	9c 89       	ldd	r25, Y+20	; 0x14
    747e:	98 8b       	std	Y+16, r25	; 0x10
    7480:	8f 87       	std	Y+15, r24	; 0x0f
    7482:	8f 85       	ldd	r24, Y+15	; 0x0f
    7484:	98 89       	ldd	r25, Y+16	; 0x10
    7486:	01 97       	sbiw	r24, 0x01	; 1
    7488:	f1 f7       	brne	.-4      	; 0x7486 <main+0x321c>
    748a:	98 8b       	std	Y+16, r25	; 0x10
    748c:	8f 87       	std	Y+15, r24	; 0x0f
    748e:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
						_delay_ms(3000);
					}
					else {
						//do something
						Lcd_vidSendCommand(0xC0);
    7492:	80 ec       	ldi	r24, 0xC0	; 192
    7494:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Wrong Password2");
    7498:	8a eb       	ldi	r24, 0xBA	; 186
    749a:	90 e0       	ldi	r25, 0x00	; 0
    749c:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    74a0:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
					}
					break;
				case 3:

					if(PassCheck(pass,pass3)==1){
    74a4:	8f e1       	ldi	r24, 0x1F	; 31
    74a6:	91 e0       	ldi	r25, 0x01	; 1
    74a8:	25 e1       	ldi	r18, 0x15	; 21
    74aa:	31 e0       	ldi	r19, 0x01	; 1
    74ac:	b9 01       	movw	r22, r18
    74ae:	0e 94 29 3b 	call	0x7652	; 0x7652 <PassCheck>
    74b2:	81 30       	cpi	r24, 0x01	; 1
    74b4:	09 f0       	breq	.+2      	; 0x74b8 <main+0x324e>
    74b6:	7f c0       	rjmp	.+254    	; 0x75b6 <main+0x334c>
						//do something
						Lcd_vidSendCommand(0x01);
    74b8:	81 e0       	ldi	r24, 0x01	; 1
    74ba:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						//for(i=0; i<7; i++){
						//Lcd_vidWriteChar(welcome[i]);
						//}
						Lcd_vidSendCommand(0x80);
    74be:	80 e8       	ldi	r24, 0x80	; 128
    74c0:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Welcome User 3!");
    74c4:	8a ec       	ldi	r24, 0xCA	; 202
    74c6:	90 e0       	ldi	r25, 0x00	; 0
    74c8:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    74cc:	80 e0       	ldi	r24, 0x00	; 0
    74ce:	90 e8       	ldi	r25, 0x80	; 128
    74d0:	ab e3       	ldi	r26, 0x3B	; 59
    74d2:	b5 e4       	ldi	r27, 0x45	; 69
    74d4:	8b 87       	std	Y+11, r24	; 0x0b
    74d6:	9c 87       	std	Y+12, r25	; 0x0c
    74d8:	ad 87       	std	Y+13, r26	; 0x0d
    74da:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    74dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    74de:	7c 85       	ldd	r23, Y+12	; 0x0c
    74e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    74e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    74e4:	20 e0       	ldi	r18, 0x00	; 0
    74e6:	30 e0       	ldi	r19, 0x00	; 0
    74e8:	4a ef       	ldi	r20, 0xFA	; 250
    74ea:	54 e4       	ldi	r21, 0x44	; 68
    74ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    74f0:	dc 01       	movw	r26, r24
    74f2:	cb 01       	movw	r24, r22
    74f4:	8f 83       	std	Y+7, r24	; 0x07
    74f6:	98 87       	std	Y+8, r25	; 0x08
    74f8:	a9 87       	std	Y+9, r26	; 0x09
    74fa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    74fc:	6f 81       	ldd	r22, Y+7	; 0x07
    74fe:	78 85       	ldd	r23, Y+8	; 0x08
    7500:	89 85       	ldd	r24, Y+9	; 0x09
    7502:	9a 85       	ldd	r25, Y+10	; 0x0a
    7504:	20 e0       	ldi	r18, 0x00	; 0
    7506:	30 e0       	ldi	r19, 0x00	; 0
    7508:	40 e8       	ldi	r20, 0x80	; 128
    750a:	5f e3       	ldi	r21, 0x3F	; 63
    750c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    7510:	88 23       	and	r24, r24
    7512:	2c f4       	brge	.+10     	; 0x751e <main+0x32b4>
		__ticks = 1;
    7514:	81 e0       	ldi	r24, 0x01	; 1
    7516:	90 e0       	ldi	r25, 0x00	; 0
    7518:	9e 83       	std	Y+6, r25	; 0x06
    751a:	8d 83       	std	Y+5, r24	; 0x05
    751c:	40 c0       	rjmp	.+128    	; 0x759e <main+0x3334>
	else if (__tmp > 65535)
    751e:	6f 81       	ldd	r22, Y+7	; 0x07
    7520:	78 85       	ldd	r23, Y+8	; 0x08
    7522:	89 85       	ldd	r24, Y+9	; 0x09
    7524:	9a 85       	ldd	r25, Y+10	; 0x0a
    7526:	20 e0       	ldi	r18, 0x00	; 0
    7528:	3f ef       	ldi	r19, 0xFF	; 255
    752a:	4f e7       	ldi	r20, 0x7F	; 127
    752c:	57 e4       	ldi	r21, 0x47	; 71
    752e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    7532:	18 16       	cp	r1, r24
    7534:	54 f5       	brge	.+84     	; 0x758a <main+0x3320>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7536:	6b 85       	ldd	r22, Y+11	; 0x0b
    7538:	7c 85       	ldd	r23, Y+12	; 0x0c
    753a:	8d 85       	ldd	r24, Y+13	; 0x0d
    753c:	9e 85       	ldd	r25, Y+14	; 0x0e
    753e:	20 e0       	ldi	r18, 0x00	; 0
    7540:	30 e0       	ldi	r19, 0x00	; 0
    7542:	40 e2       	ldi	r20, 0x20	; 32
    7544:	51 e4       	ldi	r21, 0x41	; 65
    7546:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    754a:	dc 01       	movw	r26, r24
    754c:	cb 01       	movw	r24, r22
    754e:	bc 01       	movw	r22, r24
    7550:	cd 01       	movw	r24, r26
    7552:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7556:	dc 01       	movw	r26, r24
    7558:	cb 01       	movw	r24, r22
    755a:	9e 83       	std	Y+6, r25	; 0x06
    755c:	8d 83       	std	Y+5, r24	; 0x05
    755e:	0f c0       	rjmp	.+30     	; 0x757e <main+0x3314>
    7560:	88 ec       	ldi	r24, 0xC8	; 200
    7562:	90 e0       	ldi	r25, 0x00	; 0
    7564:	9c 83       	std	Y+4, r25	; 0x04
    7566:	8b 83       	std	Y+3, r24	; 0x03
    7568:	8b 81       	ldd	r24, Y+3	; 0x03
    756a:	9c 81       	ldd	r25, Y+4	; 0x04
    756c:	01 97       	sbiw	r24, 0x01	; 1
    756e:	f1 f7       	brne	.-4      	; 0x756c <main+0x3302>
    7570:	9c 83       	std	Y+4, r25	; 0x04
    7572:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7574:	8d 81       	ldd	r24, Y+5	; 0x05
    7576:	9e 81       	ldd	r25, Y+6	; 0x06
    7578:	01 97       	sbiw	r24, 0x01	; 1
    757a:	9e 83       	std	Y+6, r25	; 0x06
    757c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    757e:	8d 81       	ldd	r24, Y+5	; 0x05
    7580:	9e 81       	ldd	r25, Y+6	; 0x06
    7582:	00 97       	sbiw	r24, 0x00	; 0
    7584:	69 f7       	brne	.-38     	; 0x7560 <main+0x32f6>
    7586:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    758a:	6f 81       	ldd	r22, Y+7	; 0x07
    758c:	78 85       	ldd	r23, Y+8	; 0x08
    758e:	89 85       	ldd	r24, Y+9	; 0x09
    7590:	9a 85       	ldd	r25, Y+10	; 0x0a
    7592:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7596:	dc 01       	movw	r26, r24
    7598:	cb 01       	movw	r24, r22
    759a:	9e 83       	std	Y+6, r25	; 0x06
    759c:	8d 83       	std	Y+5, r24	; 0x05
    759e:	8d 81       	ldd	r24, Y+5	; 0x05
    75a0:	9e 81       	ldd	r25, Y+6	; 0x06
    75a2:	9a 83       	std	Y+2, r25	; 0x02
    75a4:	89 83       	std	Y+1, r24	; 0x01
    75a6:	89 81       	ldd	r24, Y+1	; 0x01
    75a8:	9a 81       	ldd	r25, Y+2	; 0x02
    75aa:	01 97       	sbiw	r24, 0x01	; 1
    75ac:	f1 f7       	brne	.-4      	; 0x75aa <main+0x3340>
    75ae:	9a 83       	std	Y+2, r25	; 0x02
    75b0:	89 83       	std	Y+1, r24	; 0x01
    75b2:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>
						//Lcd_vidWriteChar('3');
						_delay_ms(3000);
					}
					else {
						//do something
						Lcd_vidSendCommand(0xC0);
    75b6:	80 ec       	ldi	r24, 0xC0	; 192
    75b8:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
						Lcd_vidPrintStr("Wrong Password3");
    75bc:	8a ed       	ldi	r24, 0xDA	; 218
    75be:	90 e0       	ldi	r25, 0x00	; 0
    75c0:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    75c4:	0c 94 52 21 	jmp	0x42a4	; 0x42a4 <main+0x3a>

000075c8 <UserCheck>:
	}

	return 0;
}

u8 UserCheck(char *user1, char *user2){//function to check user and another function to check pass
    75c8:	df 93       	push	r29
    75ca:	cf 93       	push	r28
    75cc:	00 d0       	rcall	.+0      	; 0x75ce <UserCheck+0x6>
    75ce:	00 d0       	rcall	.+0      	; 0x75d0 <UserCheck+0x8>
    75d0:	0f 92       	push	r0
    75d2:	cd b7       	in	r28, 0x3d	; 61
    75d4:	de b7       	in	r29, 0x3e	; 62
    75d6:	9a 83       	std	Y+2, r25	; 0x02
    75d8:	89 83       	std	Y+1, r24	; 0x01
    75da:	7c 83       	std	Y+4, r23	; 0x04
    75dc:	6b 83       	std	Y+3, r22	; 0x03
	flag=0;
    75de:	10 92 24 01 	sts	0x0124, r1
	//Lcd_vidSendCommand(0x80);
	//for(i=0; i<16; i++){
	//Lcd_vidWriteChar(' ');
	//}
	for(i=0; i<3; i++){
    75e2:	10 92 28 01 	sts	0x0128, r1
    75e6:	20 c0       	rjmp	.+64     	; 0x7628 <UserCheck+0x60>
		if(user1[i]==user2[i]){
    75e8:	80 91 28 01 	lds	r24, 0x0128
    75ec:	28 2f       	mov	r18, r24
    75ee:	30 e0       	ldi	r19, 0x00	; 0
    75f0:	89 81       	ldd	r24, Y+1	; 0x01
    75f2:	9a 81       	ldd	r25, Y+2	; 0x02
    75f4:	fc 01       	movw	r30, r24
    75f6:	e2 0f       	add	r30, r18
    75f8:	f3 1f       	adc	r31, r19
    75fa:	40 81       	ld	r20, Z
    75fc:	80 91 28 01 	lds	r24, 0x0128
    7600:	28 2f       	mov	r18, r24
    7602:	30 e0       	ldi	r19, 0x00	; 0
    7604:	8b 81       	ldd	r24, Y+3	; 0x03
    7606:	9c 81       	ldd	r25, Y+4	; 0x04
    7608:	fc 01       	movw	r30, r24
    760a:	e2 0f       	add	r30, r18
    760c:	f3 1f       	adc	r31, r19
    760e:	80 81       	ld	r24, Z
    7610:	48 17       	cp	r20, r24
    7612:	71 f4       	brne	.+28     	; 0x7630 <UserCheck+0x68>
			flag++;
    7614:	80 91 24 01 	lds	r24, 0x0124
    7618:	8f 5f       	subi	r24, 0xFF	; 255
    761a:	80 93 24 01 	sts	0x0124, r24
	flag=0;
	//Lcd_vidSendCommand(0x80);
	//for(i=0; i<16; i++){
	//Lcd_vidWriteChar(' ');
	//}
	for(i=0; i<3; i++){
    761e:	80 91 28 01 	lds	r24, 0x0128
    7622:	8f 5f       	subi	r24, 0xFF	; 255
    7624:	80 93 28 01 	sts	0x0128, r24
    7628:	80 91 28 01 	lds	r24, 0x0128
    762c:	83 30       	cpi	r24, 0x03	; 3
    762e:	e0 f2       	brcs	.-72     	; 0x75e8 <UserCheck+0x20>
		else {
			break;
		}

	}
	if(flag==3){
    7630:	80 91 24 01 	lds	r24, 0x0124
    7634:	83 30       	cpi	r24, 0x03	; 3
    7636:	19 f4       	brne	.+6      	; 0x763e <UserCheck+0x76>
		return 1;//for matching user
    7638:	81 e0       	ldi	r24, 0x01	; 1
    763a:	8d 83       	std	Y+5, r24	; 0x05
    763c:	01 c0       	rjmp	.+2      	; 0x7640 <UserCheck+0x78>
	}
	else {
		return 0;//for non-matching user
    763e:	1d 82       	std	Y+5, r1	; 0x05
    7640:	8d 81       	ldd	r24, Y+5	; 0x05
	}
}
    7642:	0f 90       	pop	r0
    7644:	0f 90       	pop	r0
    7646:	0f 90       	pop	r0
    7648:	0f 90       	pop	r0
    764a:	0f 90       	pop	r0
    764c:	cf 91       	pop	r28
    764e:	df 91       	pop	r29
    7650:	08 95       	ret

00007652 <PassCheck>:





u8 PassCheck(char *pass1, char *pass2){
    7652:	df 93       	push	r29
    7654:	cf 93       	push	r28
    7656:	00 d0       	rcall	.+0      	; 0x7658 <PassCheck+0x6>
    7658:	00 d0       	rcall	.+0      	; 0x765a <PassCheck+0x8>
    765a:	0f 92       	push	r0
    765c:	cd b7       	in	r28, 0x3d	; 61
    765e:	de b7       	in	r29, 0x3e	; 62
    7660:	9a 83       	std	Y+2, r25	; 0x02
    7662:	89 83       	std	Y+1, r24	; 0x01
    7664:	7c 83       	std	Y+4, r23	; 0x04
    7666:	6b 83       	std	Y+3, r22	; 0x03
	flag=0;
    7668:	10 92 24 01 	sts	0x0124, r1
	for(i=0; i<3; i++){
    766c:	10 92 28 01 	sts	0x0128, r1
    7670:	20 c0       	rjmp	.+64     	; 0x76b2 <PassCheck+0x60>
		if(pass1[i]==pass2[i]){
    7672:	80 91 28 01 	lds	r24, 0x0128
    7676:	28 2f       	mov	r18, r24
    7678:	30 e0       	ldi	r19, 0x00	; 0
    767a:	89 81       	ldd	r24, Y+1	; 0x01
    767c:	9a 81       	ldd	r25, Y+2	; 0x02
    767e:	fc 01       	movw	r30, r24
    7680:	e2 0f       	add	r30, r18
    7682:	f3 1f       	adc	r31, r19
    7684:	40 81       	ld	r20, Z
    7686:	80 91 28 01 	lds	r24, 0x0128
    768a:	28 2f       	mov	r18, r24
    768c:	30 e0       	ldi	r19, 0x00	; 0
    768e:	8b 81       	ldd	r24, Y+3	; 0x03
    7690:	9c 81       	ldd	r25, Y+4	; 0x04
    7692:	fc 01       	movw	r30, r24
    7694:	e2 0f       	add	r30, r18
    7696:	f3 1f       	adc	r31, r19
    7698:	80 81       	ld	r24, Z
    769a:	48 17       	cp	r20, r24
    769c:	71 f4       	brne	.+28     	; 0x76ba <PassCheck+0x68>
			flag++;
    769e:	80 91 24 01 	lds	r24, 0x0124
    76a2:	8f 5f       	subi	r24, 0xFF	; 255
    76a4:	80 93 24 01 	sts	0x0124, r24



u8 PassCheck(char *pass1, char *pass2){
	flag=0;
	for(i=0; i<3; i++){
    76a8:	80 91 28 01 	lds	r24, 0x0128
    76ac:	8f 5f       	subi	r24, 0xFF	; 255
    76ae:	80 93 28 01 	sts	0x0128, r24
    76b2:	80 91 28 01 	lds	r24, 0x0128
    76b6:	83 30       	cpi	r24, 0x03	; 3
    76b8:	e0 f2       	brcs	.-72     	; 0x7672 <PassCheck+0x20>
		}
		else {
			break;
		}
	}
	if(flag==3){
    76ba:	80 91 24 01 	lds	r24, 0x0124
    76be:	83 30       	cpi	r24, 0x03	; 3
    76c0:	19 f4       	brne	.+6      	; 0x76c8 <PassCheck+0x76>

		return 1;//for matching password
    76c2:	81 e0       	ldi	r24, 0x01	; 1
    76c4:	8d 83       	std	Y+5, r24	; 0x05
    76c6:	08 c0       	rjmp	.+16     	; 0x76d8 <PassCheck+0x86>
	}
	else if(flag<3){
    76c8:	80 91 24 01 	lds	r24, 0x0124
    76cc:	83 30       	cpi	r24, 0x03	; 3
    76ce:	10 f4       	brcc	.+4      	; 0x76d4 <PassCheck+0x82>

		return 0;//for non-matching password
    76d0:	1d 82       	std	Y+5, r1	; 0x05
    76d2:	02 c0       	rjmp	.+4      	; 0x76d8 <PassCheck+0x86>
	}
	else {
		return 2;//indicating password is not entered
    76d4:	82 e0       	ldi	r24, 0x02	; 2
    76d6:	8d 83       	std	Y+5, r24	; 0x05
    76d8:	8d 81       	ldd	r24, Y+5	; 0x05
	}
}
    76da:	0f 90       	pop	r0
    76dc:	0f 90       	pop	r0
    76de:	0f 90       	pop	r0
    76e0:	0f 90       	pop	r0
    76e2:	0f 90       	pop	r0
    76e4:	cf 91       	pop	r28
    76e6:	df 91       	pop	r29
    76e8:	08 95       	ret

000076ea <NumCheck>:

void NumCheck(void){
    76ea:	df 93       	push	r29
    76ec:	cf 93       	push	r28
    76ee:	cd b7       	in	r28, 0x3d	; 61
    76f0:	de b7       	in	r29, 0x3e	; 62
    76f2:	2e 97       	sbiw	r28, 0x0e	; 14
    76f4:	0f b6       	in	r0, 0x3f	; 63
    76f6:	f8 94       	cli
    76f8:	de bf       	out	0x3e, r29	; 62
    76fa:	0f be       	out	0x3f, r0	; 63
    76fc:	cd bf       	out	0x3d, r28	; 61
	if(j==2){
    76fe:	80 91 1c 01 	lds	r24, 0x011C
    7702:	82 30       	cpi	r24, 0x02	; 2
    7704:	11 f4       	brne	.+4      	; 0x770a <NumCheck+0x20>
		j=0;
    7706:	10 92 1c 01 	sts	0x011C, r1
	}
	else {

	}
	Lcd_vidSendCommand(loc2);
    770a:	80 91 1a 01 	lds	r24, 0x011A
    770e:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
	Lcd_vidWriteChar(key+'0');
    7712:	80 91 2a 01 	lds	r24, 0x012A
    7716:	80 5d       	subi	r24, 0xD0	; 208
    7718:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
	loc2++;
    771c:	80 91 1a 01 	lds	r24, 0x011A
    7720:	8f 5f       	subi	r24, 0xFF	; 255
    7722:	80 93 1a 01 	sts	0x011A, r24
	pass[j]=key;
    7726:	80 91 1c 01 	lds	r24, 0x011C
    772a:	88 2f       	mov	r24, r24
    772c:	90 e0       	ldi	r25, 0x00	; 0
    772e:	20 91 2a 01 	lds	r18, 0x012A
    7732:	fc 01       	movw	r30, r24
    7734:	e1 5e       	subi	r30, 0xE1	; 225
    7736:	fe 4f       	sbci	r31, 0xFE	; 254
    7738:	20 83       	st	Z, r18
	j++;
    773a:	80 91 1c 01 	lds	r24, 0x011C
    773e:	8f 5f       	subi	r24, 0xFF	; 255
    7740:	80 93 1c 01 	sts	0x011C, r24
    7744:	80 e0       	ldi	r24, 0x00	; 0
    7746:	90 e0       	ldi	r25, 0x00	; 0
    7748:	a8 e4       	ldi	r26, 0x48	; 72
    774a:	b3 e4       	ldi	r27, 0x43	; 67
    774c:	8b 87       	std	Y+11, r24	; 0x0b
    774e:	9c 87       	std	Y+12, r25	; 0x0c
    7750:	ad 87       	std	Y+13, r26	; 0x0d
    7752:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7754:	6b 85       	ldd	r22, Y+11	; 0x0b
    7756:	7c 85       	ldd	r23, Y+12	; 0x0c
    7758:	8d 85       	ldd	r24, Y+13	; 0x0d
    775a:	9e 85       	ldd	r25, Y+14	; 0x0e
    775c:	20 e0       	ldi	r18, 0x00	; 0
    775e:	30 e0       	ldi	r19, 0x00	; 0
    7760:	4a ef       	ldi	r20, 0xFA	; 250
    7762:	54 e4       	ldi	r21, 0x44	; 68
    7764:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7768:	dc 01       	movw	r26, r24
    776a:	cb 01       	movw	r24, r22
    776c:	8f 83       	std	Y+7, r24	; 0x07
    776e:	98 87       	std	Y+8, r25	; 0x08
    7770:	a9 87       	std	Y+9, r26	; 0x09
    7772:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7774:	6f 81       	ldd	r22, Y+7	; 0x07
    7776:	78 85       	ldd	r23, Y+8	; 0x08
    7778:	89 85       	ldd	r24, Y+9	; 0x09
    777a:	9a 85       	ldd	r25, Y+10	; 0x0a
    777c:	20 e0       	ldi	r18, 0x00	; 0
    777e:	30 e0       	ldi	r19, 0x00	; 0
    7780:	40 e8       	ldi	r20, 0x80	; 128
    7782:	5f e3       	ldi	r21, 0x3F	; 63
    7784:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    7788:	88 23       	and	r24, r24
    778a:	2c f4       	brge	.+10     	; 0x7796 <NumCheck+0xac>
		__ticks = 1;
    778c:	81 e0       	ldi	r24, 0x01	; 1
    778e:	90 e0       	ldi	r25, 0x00	; 0
    7790:	9e 83       	std	Y+6, r25	; 0x06
    7792:	8d 83       	std	Y+5, r24	; 0x05
    7794:	3f c0       	rjmp	.+126    	; 0x7814 <NumCheck+0x12a>
	else if (__tmp > 65535)
    7796:	6f 81       	ldd	r22, Y+7	; 0x07
    7798:	78 85       	ldd	r23, Y+8	; 0x08
    779a:	89 85       	ldd	r24, Y+9	; 0x09
    779c:	9a 85       	ldd	r25, Y+10	; 0x0a
    779e:	20 e0       	ldi	r18, 0x00	; 0
    77a0:	3f ef       	ldi	r19, 0xFF	; 255
    77a2:	4f e7       	ldi	r20, 0x7F	; 127
    77a4:	57 e4       	ldi	r21, 0x47	; 71
    77a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    77aa:	18 16       	cp	r1, r24
    77ac:	4c f5       	brge	.+82     	; 0x7800 <NumCheck+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    77ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    77b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    77b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    77b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    77b6:	20 e0       	ldi	r18, 0x00	; 0
    77b8:	30 e0       	ldi	r19, 0x00	; 0
    77ba:	40 e2       	ldi	r20, 0x20	; 32
    77bc:	51 e4       	ldi	r21, 0x41	; 65
    77be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    77c2:	dc 01       	movw	r26, r24
    77c4:	cb 01       	movw	r24, r22
    77c6:	bc 01       	movw	r22, r24
    77c8:	cd 01       	movw	r24, r26
    77ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    77ce:	dc 01       	movw	r26, r24
    77d0:	cb 01       	movw	r24, r22
    77d2:	9e 83       	std	Y+6, r25	; 0x06
    77d4:	8d 83       	std	Y+5, r24	; 0x05
    77d6:	0f c0       	rjmp	.+30     	; 0x77f6 <NumCheck+0x10c>
    77d8:	88 ec       	ldi	r24, 0xC8	; 200
    77da:	90 e0       	ldi	r25, 0x00	; 0
    77dc:	9c 83       	std	Y+4, r25	; 0x04
    77de:	8b 83       	std	Y+3, r24	; 0x03
    77e0:	8b 81       	ldd	r24, Y+3	; 0x03
    77e2:	9c 81       	ldd	r25, Y+4	; 0x04
    77e4:	01 97       	sbiw	r24, 0x01	; 1
    77e6:	f1 f7       	brne	.-4      	; 0x77e4 <NumCheck+0xfa>
    77e8:	9c 83       	std	Y+4, r25	; 0x04
    77ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    77ec:	8d 81       	ldd	r24, Y+5	; 0x05
    77ee:	9e 81       	ldd	r25, Y+6	; 0x06
    77f0:	01 97       	sbiw	r24, 0x01	; 1
    77f2:	9e 83       	std	Y+6, r25	; 0x06
    77f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    77f6:	8d 81       	ldd	r24, Y+5	; 0x05
    77f8:	9e 81       	ldd	r25, Y+6	; 0x06
    77fa:	00 97       	sbiw	r24, 0x00	; 0
    77fc:	69 f7       	brne	.-38     	; 0x77d8 <NumCheck+0xee>
    77fe:	14 c0       	rjmp	.+40     	; 0x7828 <NumCheck+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7800:	6f 81       	ldd	r22, Y+7	; 0x07
    7802:	78 85       	ldd	r23, Y+8	; 0x08
    7804:	89 85       	ldd	r24, Y+9	; 0x09
    7806:	9a 85       	ldd	r25, Y+10	; 0x0a
    7808:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    780c:	dc 01       	movw	r26, r24
    780e:	cb 01       	movw	r24, r22
    7810:	9e 83       	std	Y+6, r25	; 0x06
    7812:	8d 83       	std	Y+5, r24	; 0x05
    7814:	8d 81       	ldd	r24, Y+5	; 0x05
    7816:	9e 81       	ldd	r25, Y+6	; 0x06
    7818:	9a 83       	std	Y+2, r25	; 0x02
    781a:	89 83       	std	Y+1, r24	; 0x01
    781c:	89 81       	ldd	r24, Y+1	; 0x01
    781e:	9a 81       	ldd	r25, Y+2	; 0x02
    7820:	01 97       	sbiw	r24, 0x01	; 1
    7822:	f1 f7       	brne	.-4      	; 0x7820 <NumCheck+0x136>
    7824:	9a 83       	std	Y+2, r25	; 0x02
    7826:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(200);
}
    7828:	2e 96       	adiw	r28, 0x0e	; 14
    782a:	0f b6       	in	r0, 0x3f	; 63
    782c:	f8 94       	cli
    782e:	de bf       	out	0x3e, r29	; 62
    7830:	0f be       	out	0x3f, r0	; 63
    7832:	cd bf       	out	0x3d, r28	; 61
    7834:	cf 91       	pop	r28
    7836:	df 91       	pop	r29
    7838:	08 95       	ret

0000783a <VerifiedUser>:
void VerifiedUser(void){
    783a:	df 93       	push	r29
    783c:	cf 93       	push	r28
    783e:	cd b7       	in	r28, 0x3d	; 61
    7840:	de b7       	in	r29, 0x3e	; 62
    7842:	6c 97       	sbiw	r28, 0x1c	; 28
    7844:	0f b6       	in	r0, 0x3f	; 63
    7846:	f8 94       	cli
    7848:	de bf       	out	0x3e, r29	; 62
    784a:	0f be       	out	0x3f, r0	; 63
    784c:	cd bf       	out	0x3d, r28	; 61
    784e:	80 e0       	ldi	r24, 0x00	; 0
    7850:	90 e0       	ldi	r25, 0x00	; 0
    7852:	aa e7       	ldi	r26, 0x7A	; 122
    7854:	b5 e4       	ldi	r27, 0x45	; 69
    7856:	89 8f       	std	Y+25, r24	; 0x19
    7858:	9a 8f       	std	Y+26, r25	; 0x1a
    785a:	ab 8f       	std	Y+27, r26	; 0x1b
    785c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    785e:	69 8d       	ldd	r22, Y+25	; 0x19
    7860:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7862:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7864:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7866:	20 e0       	ldi	r18, 0x00	; 0
    7868:	30 e0       	ldi	r19, 0x00	; 0
    786a:	4a ef       	ldi	r20, 0xFA	; 250
    786c:	54 e4       	ldi	r21, 0x44	; 68
    786e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7872:	dc 01       	movw	r26, r24
    7874:	cb 01       	movw	r24, r22
    7876:	8d 8b       	std	Y+21, r24	; 0x15
    7878:	9e 8b       	std	Y+22, r25	; 0x16
    787a:	af 8b       	std	Y+23, r26	; 0x17
    787c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    787e:	6d 89       	ldd	r22, Y+21	; 0x15
    7880:	7e 89       	ldd	r23, Y+22	; 0x16
    7882:	8f 89       	ldd	r24, Y+23	; 0x17
    7884:	98 8d       	ldd	r25, Y+24	; 0x18
    7886:	20 e0       	ldi	r18, 0x00	; 0
    7888:	30 e0       	ldi	r19, 0x00	; 0
    788a:	40 e8       	ldi	r20, 0x80	; 128
    788c:	5f e3       	ldi	r21, 0x3F	; 63
    788e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    7892:	88 23       	and	r24, r24
    7894:	2c f4       	brge	.+10     	; 0x78a0 <VerifiedUser+0x66>
		__ticks = 1;
    7896:	81 e0       	ldi	r24, 0x01	; 1
    7898:	90 e0       	ldi	r25, 0x00	; 0
    789a:	9c 8b       	std	Y+20, r25	; 0x14
    789c:	8b 8b       	std	Y+19, r24	; 0x13
    789e:	3f c0       	rjmp	.+126    	; 0x791e <VerifiedUser+0xe4>
	else if (__tmp > 65535)
    78a0:	6d 89       	ldd	r22, Y+21	; 0x15
    78a2:	7e 89       	ldd	r23, Y+22	; 0x16
    78a4:	8f 89       	ldd	r24, Y+23	; 0x17
    78a6:	98 8d       	ldd	r25, Y+24	; 0x18
    78a8:	20 e0       	ldi	r18, 0x00	; 0
    78aa:	3f ef       	ldi	r19, 0xFF	; 255
    78ac:	4f e7       	ldi	r20, 0x7F	; 127
    78ae:	57 e4       	ldi	r21, 0x47	; 71
    78b0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    78b4:	18 16       	cp	r1, r24
    78b6:	4c f5       	brge	.+82     	; 0x790a <VerifiedUser+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    78b8:	69 8d       	ldd	r22, Y+25	; 0x19
    78ba:	7a 8d       	ldd	r23, Y+26	; 0x1a
    78bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    78be:	9c 8d       	ldd	r25, Y+28	; 0x1c
    78c0:	20 e0       	ldi	r18, 0x00	; 0
    78c2:	30 e0       	ldi	r19, 0x00	; 0
    78c4:	40 e2       	ldi	r20, 0x20	; 32
    78c6:	51 e4       	ldi	r21, 0x41	; 65
    78c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    78cc:	dc 01       	movw	r26, r24
    78ce:	cb 01       	movw	r24, r22
    78d0:	bc 01       	movw	r22, r24
    78d2:	cd 01       	movw	r24, r26
    78d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    78d8:	dc 01       	movw	r26, r24
    78da:	cb 01       	movw	r24, r22
    78dc:	9c 8b       	std	Y+20, r25	; 0x14
    78de:	8b 8b       	std	Y+19, r24	; 0x13
    78e0:	0f c0       	rjmp	.+30     	; 0x7900 <VerifiedUser+0xc6>
    78e2:	88 ec       	ldi	r24, 0xC8	; 200
    78e4:	90 e0       	ldi	r25, 0x00	; 0
    78e6:	9a 8b       	std	Y+18, r25	; 0x12
    78e8:	89 8b       	std	Y+17, r24	; 0x11
    78ea:	89 89       	ldd	r24, Y+17	; 0x11
    78ec:	9a 89       	ldd	r25, Y+18	; 0x12
    78ee:	01 97       	sbiw	r24, 0x01	; 1
    78f0:	f1 f7       	brne	.-4      	; 0x78ee <VerifiedUser+0xb4>
    78f2:	9a 8b       	std	Y+18, r25	; 0x12
    78f4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    78f6:	8b 89       	ldd	r24, Y+19	; 0x13
    78f8:	9c 89       	ldd	r25, Y+20	; 0x14
    78fa:	01 97       	sbiw	r24, 0x01	; 1
    78fc:	9c 8b       	std	Y+20, r25	; 0x14
    78fe:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7900:	8b 89       	ldd	r24, Y+19	; 0x13
    7902:	9c 89       	ldd	r25, Y+20	; 0x14
    7904:	00 97       	sbiw	r24, 0x00	; 0
    7906:	69 f7       	brne	.-38     	; 0x78e2 <VerifiedUser+0xa8>
    7908:	14 c0       	rjmp	.+40     	; 0x7932 <VerifiedUser+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    790a:	6d 89       	ldd	r22, Y+21	; 0x15
    790c:	7e 89       	ldd	r23, Y+22	; 0x16
    790e:	8f 89       	ldd	r24, Y+23	; 0x17
    7910:	98 8d       	ldd	r25, Y+24	; 0x18
    7912:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7916:	dc 01       	movw	r26, r24
    7918:	cb 01       	movw	r24, r22
    791a:	9c 8b       	std	Y+20, r25	; 0x14
    791c:	8b 8b       	std	Y+19, r24	; 0x13
    791e:	8b 89       	ldd	r24, Y+19	; 0x13
    7920:	9c 89       	ldd	r25, Y+20	; 0x14
    7922:	98 8b       	std	Y+16, r25	; 0x10
    7924:	8f 87       	std	Y+15, r24	; 0x0f
    7926:	8f 85       	ldd	r24, Y+15	; 0x0f
    7928:	98 89       	ldd	r25, Y+16	; 0x10
    792a:	01 97       	sbiw	r24, 0x01	; 1
    792c:	f1 f7       	brne	.-4      	; 0x792a <VerifiedUser+0xf0>
    792e:	98 8b       	std	Y+16, r25	; 0x10
    7930:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(4000);
	Lcd_vidSendCommand(0xC0);
    7932:	80 ec       	ldi	r24, 0xC0	; 192
    7934:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
	Lcd_vidPrintStr("Enter password");
    7938:	8a ee       	ldi	r24, 0xEA	; 234
    793a:	90 e0       	ldi	r25, 0x00	; 0
    793c:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <Lcd_vidPrintStr>
    7940:	80 e0       	ldi	r24, 0x00	; 0
    7942:	90 e0       	ldi	r25, 0x00	; 0
    7944:	aa ef       	ldi	r26, 0xFA	; 250
    7946:	b4 e4       	ldi	r27, 0x44	; 68
    7948:	8b 87       	std	Y+11, r24	; 0x0b
    794a:	9c 87       	std	Y+12, r25	; 0x0c
    794c:	ad 87       	std	Y+13, r26	; 0x0d
    794e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7950:	6b 85       	ldd	r22, Y+11	; 0x0b
    7952:	7c 85       	ldd	r23, Y+12	; 0x0c
    7954:	8d 85       	ldd	r24, Y+13	; 0x0d
    7956:	9e 85       	ldd	r25, Y+14	; 0x0e
    7958:	20 e0       	ldi	r18, 0x00	; 0
    795a:	30 e0       	ldi	r19, 0x00	; 0
    795c:	4a ef       	ldi	r20, 0xFA	; 250
    795e:	54 e4       	ldi	r21, 0x44	; 68
    7960:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7964:	dc 01       	movw	r26, r24
    7966:	cb 01       	movw	r24, r22
    7968:	8f 83       	std	Y+7, r24	; 0x07
    796a:	98 87       	std	Y+8, r25	; 0x08
    796c:	a9 87       	std	Y+9, r26	; 0x09
    796e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7970:	6f 81       	ldd	r22, Y+7	; 0x07
    7972:	78 85       	ldd	r23, Y+8	; 0x08
    7974:	89 85       	ldd	r24, Y+9	; 0x09
    7976:	9a 85       	ldd	r25, Y+10	; 0x0a
    7978:	20 e0       	ldi	r18, 0x00	; 0
    797a:	30 e0       	ldi	r19, 0x00	; 0
    797c:	40 e8       	ldi	r20, 0x80	; 128
    797e:	5f e3       	ldi	r21, 0x3F	; 63
    7980:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    7984:	88 23       	and	r24, r24
    7986:	2c f4       	brge	.+10     	; 0x7992 <VerifiedUser+0x158>
		__ticks = 1;
    7988:	81 e0       	ldi	r24, 0x01	; 1
    798a:	90 e0       	ldi	r25, 0x00	; 0
    798c:	9e 83       	std	Y+6, r25	; 0x06
    798e:	8d 83       	std	Y+5, r24	; 0x05
    7990:	3f c0       	rjmp	.+126    	; 0x7a10 <VerifiedUser+0x1d6>
	else if (__tmp > 65535)
    7992:	6f 81       	ldd	r22, Y+7	; 0x07
    7994:	78 85       	ldd	r23, Y+8	; 0x08
    7996:	89 85       	ldd	r24, Y+9	; 0x09
    7998:	9a 85       	ldd	r25, Y+10	; 0x0a
    799a:	20 e0       	ldi	r18, 0x00	; 0
    799c:	3f ef       	ldi	r19, 0xFF	; 255
    799e:	4f e7       	ldi	r20, 0x7F	; 127
    79a0:	57 e4       	ldi	r21, 0x47	; 71
    79a2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    79a6:	18 16       	cp	r1, r24
    79a8:	4c f5       	brge	.+82     	; 0x79fc <VerifiedUser+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    79aa:	6b 85       	ldd	r22, Y+11	; 0x0b
    79ac:	7c 85       	ldd	r23, Y+12	; 0x0c
    79ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    79b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    79b2:	20 e0       	ldi	r18, 0x00	; 0
    79b4:	30 e0       	ldi	r19, 0x00	; 0
    79b6:	40 e2       	ldi	r20, 0x20	; 32
    79b8:	51 e4       	ldi	r21, 0x41	; 65
    79ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    79be:	dc 01       	movw	r26, r24
    79c0:	cb 01       	movw	r24, r22
    79c2:	bc 01       	movw	r22, r24
    79c4:	cd 01       	movw	r24, r26
    79c6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    79ca:	dc 01       	movw	r26, r24
    79cc:	cb 01       	movw	r24, r22
    79ce:	9e 83       	std	Y+6, r25	; 0x06
    79d0:	8d 83       	std	Y+5, r24	; 0x05
    79d2:	0f c0       	rjmp	.+30     	; 0x79f2 <VerifiedUser+0x1b8>
    79d4:	88 ec       	ldi	r24, 0xC8	; 200
    79d6:	90 e0       	ldi	r25, 0x00	; 0
    79d8:	9c 83       	std	Y+4, r25	; 0x04
    79da:	8b 83       	std	Y+3, r24	; 0x03
    79dc:	8b 81       	ldd	r24, Y+3	; 0x03
    79de:	9c 81       	ldd	r25, Y+4	; 0x04
    79e0:	01 97       	sbiw	r24, 0x01	; 1
    79e2:	f1 f7       	brne	.-4      	; 0x79e0 <VerifiedUser+0x1a6>
    79e4:	9c 83       	std	Y+4, r25	; 0x04
    79e6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    79e8:	8d 81       	ldd	r24, Y+5	; 0x05
    79ea:	9e 81       	ldd	r25, Y+6	; 0x06
    79ec:	01 97       	sbiw	r24, 0x01	; 1
    79ee:	9e 83       	std	Y+6, r25	; 0x06
    79f0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    79f2:	8d 81       	ldd	r24, Y+5	; 0x05
    79f4:	9e 81       	ldd	r25, Y+6	; 0x06
    79f6:	00 97       	sbiw	r24, 0x00	; 0
    79f8:	69 f7       	brne	.-38     	; 0x79d4 <VerifiedUser+0x19a>
    79fa:	14 c0       	rjmp	.+40     	; 0x7a24 <VerifiedUser+0x1ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    79fc:	6f 81       	ldd	r22, Y+7	; 0x07
    79fe:	78 85       	ldd	r23, Y+8	; 0x08
    7a00:	89 85       	ldd	r24, Y+9	; 0x09
    7a02:	9a 85       	ldd	r25, Y+10	; 0x0a
    7a04:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7a08:	dc 01       	movw	r26, r24
    7a0a:	cb 01       	movw	r24, r22
    7a0c:	9e 83       	std	Y+6, r25	; 0x06
    7a0e:	8d 83       	std	Y+5, r24	; 0x05
    7a10:	8d 81       	ldd	r24, Y+5	; 0x05
    7a12:	9e 81       	ldd	r25, Y+6	; 0x06
    7a14:	9a 83       	std	Y+2, r25	; 0x02
    7a16:	89 83       	std	Y+1, r24	; 0x01
    7a18:	89 81       	ldd	r24, Y+1	; 0x01
    7a1a:	9a 81       	ldd	r25, Y+2	; 0x02
    7a1c:	01 97       	sbiw	r24, 0x01	; 1
    7a1e:	f1 f7       	brne	.-4      	; 0x7a1c <VerifiedUser+0x1e2>
    7a20:	9a 83       	std	Y+2, r25	; 0x02
    7a22:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2000);
	Lcd_vidSendCommand(0xC0);
    7a24:	80 ec       	ldi	r24, 0xC0	; 192
    7a26:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
	for(i=0; i<16; i++){
    7a2a:	10 92 28 01 	sts	0x0128, r1
    7a2e:	08 c0       	rjmp	.+16     	; 0x7a40 <VerifiedUser+0x206>
		Lcd_vidWriteChar(' ');
    7a30:	80 e2       	ldi	r24, 0x20	; 32
    7a32:	0e 94 1f 0b 	call	0x163e	; 0x163e <Lcd_vidWriteChar>
	_delay_ms(4000);
	Lcd_vidSendCommand(0xC0);
	Lcd_vidPrintStr("Enter password");
	_delay_ms(2000);
	Lcd_vidSendCommand(0xC0);
	for(i=0; i<16; i++){
    7a36:	80 91 28 01 	lds	r24, 0x0128
    7a3a:	8f 5f       	subi	r24, 0xFF	; 255
    7a3c:	80 93 28 01 	sts	0x0128, r24
    7a40:	80 91 28 01 	lds	r24, 0x0128
    7a44:	80 31       	cpi	r24, 0x10	; 16
    7a46:	a0 f3       	brcs	.-24     	; 0x7a30 <VerifiedUser+0x1f6>
		Lcd_vidWriteChar(' ');
	}
	Lcd_vidSendCommand(loc2);
    7a48:	80 91 1a 01 	lds	r24, 0x011A
    7a4c:	0e 94 40 0a 	call	0x1480	; 0x1480 <Lcd_vidSendCommand>
}
    7a50:	6c 96       	adiw	r28, 0x1c	; 28
    7a52:	0f b6       	in	r0, 0x3f	; 63
    7a54:	f8 94       	cli
    7a56:	de bf       	out	0x3e, r29	; 62
    7a58:	0f be       	out	0x3f, r0	; 63
    7a5a:	cd bf       	out	0x3d, r28	; 61
    7a5c:	cf 91       	pop	r28
    7a5e:	df 91       	pop	r29
    7a60:	08 95       	ret

00007a62 <__prologue_saves__>:
    7a62:	2f 92       	push	r2
    7a64:	3f 92       	push	r3
    7a66:	4f 92       	push	r4
    7a68:	5f 92       	push	r5
    7a6a:	6f 92       	push	r6
    7a6c:	7f 92       	push	r7
    7a6e:	8f 92       	push	r8
    7a70:	9f 92       	push	r9
    7a72:	af 92       	push	r10
    7a74:	bf 92       	push	r11
    7a76:	cf 92       	push	r12
    7a78:	df 92       	push	r13
    7a7a:	ef 92       	push	r14
    7a7c:	ff 92       	push	r15
    7a7e:	0f 93       	push	r16
    7a80:	1f 93       	push	r17
    7a82:	cf 93       	push	r28
    7a84:	df 93       	push	r29
    7a86:	cd b7       	in	r28, 0x3d	; 61
    7a88:	de b7       	in	r29, 0x3e	; 62
    7a8a:	ca 1b       	sub	r28, r26
    7a8c:	db 0b       	sbc	r29, r27
    7a8e:	0f b6       	in	r0, 0x3f	; 63
    7a90:	f8 94       	cli
    7a92:	de bf       	out	0x3e, r29	; 62
    7a94:	0f be       	out	0x3f, r0	; 63
    7a96:	cd bf       	out	0x3d, r28	; 61
    7a98:	09 94       	ijmp

00007a9a <__epilogue_restores__>:
    7a9a:	2a 88       	ldd	r2, Y+18	; 0x12
    7a9c:	39 88       	ldd	r3, Y+17	; 0x11
    7a9e:	48 88       	ldd	r4, Y+16	; 0x10
    7aa0:	5f 84       	ldd	r5, Y+15	; 0x0f
    7aa2:	6e 84       	ldd	r6, Y+14	; 0x0e
    7aa4:	7d 84       	ldd	r7, Y+13	; 0x0d
    7aa6:	8c 84       	ldd	r8, Y+12	; 0x0c
    7aa8:	9b 84       	ldd	r9, Y+11	; 0x0b
    7aaa:	aa 84       	ldd	r10, Y+10	; 0x0a
    7aac:	b9 84       	ldd	r11, Y+9	; 0x09
    7aae:	c8 84       	ldd	r12, Y+8	; 0x08
    7ab0:	df 80       	ldd	r13, Y+7	; 0x07
    7ab2:	ee 80       	ldd	r14, Y+6	; 0x06
    7ab4:	fd 80       	ldd	r15, Y+5	; 0x05
    7ab6:	0c 81       	ldd	r16, Y+4	; 0x04
    7ab8:	1b 81       	ldd	r17, Y+3	; 0x03
    7aba:	aa 81       	ldd	r26, Y+2	; 0x02
    7abc:	b9 81       	ldd	r27, Y+1	; 0x01
    7abe:	ce 0f       	add	r28, r30
    7ac0:	d1 1d       	adc	r29, r1
    7ac2:	0f b6       	in	r0, 0x3f	; 63
    7ac4:	f8 94       	cli
    7ac6:	de bf       	out	0x3e, r29	; 62
    7ac8:	0f be       	out	0x3f, r0	; 63
    7aca:	cd bf       	out	0x3d, r28	; 61
    7acc:	ed 01       	movw	r28, r26
    7ace:	08 95       	ret

00007ad0 <_exit>:
    7ad0:	f8 94       	cli

00007ad2 <__stop_program>:
    7ad2:	ff cf       	rjmp	.-2      	; 0x7ad2 <__stop_program>
